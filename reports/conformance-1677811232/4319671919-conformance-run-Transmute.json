{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5906d97e-29a1-4e08-9ba5-bce88ba88f7f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "48c56f29-e18d-4494-b9cf-289b6d34d2b7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "61194350-6607-4fa6-b8f0-a8895cc22b27",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1c2232fc-ce3d-42b9-9107-f3e46b538b92"
                }
              }
            ]
          },
          {
            "id": "9c6dfd6d-b90c-4d55-a4fe-e949bbd1a281",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c323bf6e-485f-407d-af80-b70261ef349b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f0dd6e0c-5719-4d3f-9796-237dccf327ad"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "990f82e9-c7f2-4450-bfed-ec488764d50d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "078264ac-f6e9-4a1d-aa26-c190ea7af052",
            "name": "Positive Testing",
            "item": [
              {
                "id": "428b9e16-23ea-430e-8c32-4309c64c718f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6629f96d-fe40-4218-85b2-5eea1f466bb1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2339c042-7567-4862-a1c0-22412591a678"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cfdcc36f-e5c8-44a2-8808-0f8d50d58322",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1d27e237-d67b-4c67-b590-1d3e378026f4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "95b51ec4-3865-477d-867b-daf2e899ae5d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c0c88324-2d2a-48b3-99e1-8f73340b05bf"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "92fef3fb-e5f3-4274-bf20-3a3d3418804c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4f780537-2a0a-420d-b4ab-836b5902892c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "abfabd35-89a1-4ed0-abd4-af5bc901f93b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "39a4bd4b-295d-41cc-84ef-8a4daeaf636f"
            }
          }
        ]
      },
      {
        "id": "7e64897f-8e86-4f10-8881-8b23e1e6e839",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "458a91e2-3e70-42eb-99b2-56043e76aa4d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ca0cd6d5-2e65-4f26-ad1e-04a01aaa4e3e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2e2c3a4b-93a6-4021-847b-f5b750a53977",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1bee8a-2aa4-44e9-818a-4d2b2ed54503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "979570db-f6df-46e3-8d8b-5636652842fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4b9909-fe68-4c40-89e2-26c4a2f7dfe2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68bf8dc6-c0af-433e-b565-3e30f612d281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c1927ef-b182-4357-a11c-412400b60931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e58810f-b200-4eea-b183-3159db2fca41",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28310451-830f-4bef-846b-05817b4bc0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63c84fdc-9ad2-4f81-af70-256f85f8b665"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5990a4e7-1067-4caa-a727-2dff44d31794",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b255d67b-0119-410b-af98-6b6995b8a7ec",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1ef510-ca1d-45ab-92b1-f6fe198f8169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a52aa49e-c93a-46da-9306-3717dc9a50ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0d21b8-64d1-4814-8f26-b78ab3055b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a8f01ff-6c35-4625-bbb3-5d71a740dcd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b92c48-1d2b-4c42-aa80-29c09af32a73",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce768137-1dba-4484-9eba-e2ad1fc59035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c50558d5-aca4-426e-b391-56d3954c6ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924f3bc1-799e-44ed-a354-dd8393245ce2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "7aa00eb3-4aec-44a9-90e7-d6c6c95e6faa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "615d4dc1-741d-4003-81a4-e9e717da374b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b03f6544-67a3-427a-b4f1-a47683dde4e8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ca343d7-0453-4a98-8bb2-99c1fffb61b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "37c685e9-a14f-4820-b021-143e305af34b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f87263f3-49af-4c3b-b2bd-0b35e0ee85e5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "8893af79-be3a-493f-9fd7-48c6888c943a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad7440a9-9541-482b-974e-9b02692737e9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "75b68f84-50a4-47b3-813f-32dfc386e683"
            }
          }
        ]
      },
      {
        "id": "78900329-036a-4d53-b950-5a5c6a3202fe",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "839a8ac7-2950-44be-a98a-5fb98c2ab2cb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bcd35842-a588-4fdf-91e4-7660382c3952",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1af2e668-a6e2-43cc-ac8d-ff83490f6713",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b0e6b9-c834-4977-8650-fcfd1f87c626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37ac9a35-691b-4e91-adb9-bff58b772f27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6008d932-4061-40f5-b0e3-9c2324f7f2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ebbf91b5-1446-4856-a77d-60a28f1cb5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb7d9a8-e69d-4df4-9a81-61eeff3fb695",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4197105d-8d9a-4355-89a4-14ad2a045bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea4224da-2151-4e8e-95bb-a88b99b940b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a32df09e-2d61-4d06-bff6-25266c94a544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "768fa254-033c-438d-bdf0-4f3be632ccbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2d31f5-ab39-4f80-9d03-edc3bdb00da8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57517dfd-5a42-487c-ab54-7d6a75c323cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "047f1427-255f-411b-a06d-3a27c319a31e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70041697-03ba-4db3-bcfb-14fe24d89df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3be4e89f-9c8f-4758-ad7d-73a20a1b7359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc361e49-9338-478b-bdcb-717d03a3dc38",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f56eb5e-89bf-4735-9c6a-a5c423e9be81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "065fb5a3-cb08-4173-b586-b6cae00b0667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a42418-3bd1-4447-99c3-d03d8e563652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e5ddcd3-fdfd-4b84-8a2f-0cec852ce4fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1f147f-aaa9-4dc0-9e6e-b1d9ad8fffd7",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "726a60a8-f560-49ca-a2b9-2a7d1c7e3b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "933cdbb9-9d9c-4486-aa4e-8e3a766480bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c2f343-09a6-4f67-af6a-37e6683b2e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60bb7295-156e-4808-ae39-d78f3c70b01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4fd3e78-19f4-43c1-ac0f-0468fc7bbf8e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1133c67f-61d3-4e1a-ae2f-d3badadc590e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fada1573-ff38-474f-b4f6-8765984135b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f71e8c-f3ef-4e79-aac9-27f84b83ce3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "299e772f-3eec-4557-a809-f4729a5428db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a0dae7-7c31-4310-b79c-b3840abc06f1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3edc537-fa4c-4a76-855a-20789902b1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27430b90-d81e-4bb6-89d8-36cabc185f37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2201a67-ffe1-48f3-8921-adcf11cb6a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aff01974-1827-43ec-9e70-9df30531a84f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233e6cee-d028-4319-98dd-efc2527f8ba6",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e4596f-7dc1-4ffd-91eb-1f32029602b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc44d18-0884-48b8-835e-32732ee8f618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61aab9c1-8af7-429f-89ee-4cfc9ba5cf1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b27314a-db14-4a20-a8ed-0b63ba1ab6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02eb6da-4bc5-465a-8228-d0a202de3c3e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0371b90-84da-4e8c-aa16-396e4112533c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ed6a2d3-d283-4177-99a7-fb8688909794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f82cc2c-98a5-4506-bdda-85536516c80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8634a3ff-3b7c-49d8-aaef-ac7df323b0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5b62e5-b617-40b5-907c-d02705668f49",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dfc7454-802c-4876-881b-c2f783b5b665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aabe282b-0704-4efd-8431-4c82005d93e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f305d1-7aec-4cfb-9fd2-946e6203ae2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1767080-a7a0-486f-af17-c6bb0c4c904f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79165519-af64-4c61-83fe-fac35e3888bd",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7614ac8b-de47-4cee-b7d5-23acd5ae85a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4ab3b59-8c13-448d-8486-00e60f803b9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205b5dbc-f808-4a28-9aa8-8424abec9e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "228fdb9d-247d-4c8b-8cd0-4521931bb2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c77ea78-e7ee-41cb-baac-51f2f9c55389",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "911ba00e-ee9a-4244-ac96-6f3f5960dea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b404ebb1-9abe-40a0-8aa8-3fc839cdd04b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e6c7ce-fb01-47df-a952-a7b6083de59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb721c4d-2373-4c5f-b2ca-42e0f30b6985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6693da87-93da-4251-b41a-16d200197179",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "985eefbf-4648-4357-a450-d2e293b54201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a6d9672-8d16-4627-9dd2-97346e075558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea8d1d1-16d6-4829-af35-b4bed63a530f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd19542e-cde2-45ae-8bcf-be4d30f2a06a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89032d3-17c0-42d0-a8e6-926c76063594",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ce363c-68a3-4d4e-8592-5bca935e29ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69321470-98dc-455e-9988-7145e1ee1023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9040800b-3d92-466b-950a-9660b09c8a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bd73327-6690-443a-96e2-d520c5b2b4db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a545efd1-e6be-4564-811b-de76c1a5eeda",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78efa64-f8e7-416c-9497-10e66c8ed202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6567dae5-a3bd-4adb-99e7-1e930f3c659f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a227a7fa-2d1d-46ae-92a5-4e49cbe784de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6a97e25-10bb-4220-a38c-0f3ad68905b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276082a9-4ac9-4c46-b38a-ca60b757f613",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "375e4579-e954-4624-a498-9069a97f8851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c37d498-3c38-4a22-a55b-2e8e6ec3fd81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b615e5-92e2-4048-9099-eab18833dc65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6c593ad-1ca5-4b66-bf9b-a1263dcfb734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b494947-365b-4317-9fec-15e0da9ee860",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f704b359-3136-4c51-8eff-a0d9832af795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "252f7170-6807-4fd2-a75e-66e90edfe62a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e93316-5052-4b68-adad-1bda8a913f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71c01807-4c2b-4839-ba69-a0421232bc01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533f68c9-0c64-49be-a20f-c7d8cb1f0402",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f2e763-d2f6-41bf-8383-3f5e8fb570fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ef622a-3aa7-454d-a96e-54d861f51755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9688d703-aa30-4245-add1-35e6b8491982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "427cc6a0-05e4-48dd-aa14-c59c15987a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f520fbf3-343d-4e07-8290-23742d45da0e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a661a584-cad1-46f8-a680-62f1c5c92e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee5734b-931d-4c07-b13b-4bb1933369a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8def777-7a68-4f77-9166-5ea918f55b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64c7b0bf-8a36-4649-b754-fd4880485dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802f612c-a5e2-4f92-b6bd-c7aadb34a818",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa5fe51-7207-4f8e-8443-094164374499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45dd553c-61af-4cd3-8578-962770c1aa4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91277ae-9dc6-45d7-aaca-fa5d51e6cc1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c026b818-f211-4709-afc3-7703e8e2bef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab0da0e-76bb-432f-9057-2303f8f4f355",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d28f06-f0a2-494c-b2c2-16d428b81fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "521d97fc-2152-41d9-bd0e-b681b5aecac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcce0efd-cd98-4b8d-905a-edb4cbc22090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9996149d-bcc8-44ea-a403-0c92883eaf8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da2e621-1c5c-442c-887d-0c030db3c229",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b71ceaf-c4ba-4eae-8dac-b43c6449d16a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "094f372c-6946-465e-b42a-5f06c846a6ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411bafc9-3017-4eeb-8cdc-53384ee510c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a57d94e5-3651-4aa6-bb02-779621105d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8afc3d-2425-48ca-95ad-eecdf1069ab0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "204b3140-1d96-4022-a89f-942587efb1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4b07c7c-c8e1-4e74-a087-056cbe6844d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a65f17f-be77-4fc3-9331-79effff791b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7f3763f-7a81-40d4-9523-9ec58d912d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bfd4734-4b11-423a-a797-e93670bf5751",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6766d9bd-aa15-453d-8fb4-ec2db3a16360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fd74884-e200-4829-8011-860cc6a49cf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf6cdc7e-01ac-477e-bf0a-443e2df887cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "76ddee9c-7cb8-445d-9d6c-d36c1d10dfa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee06fe8-4206-4a61-8ce8-c3c70016f4fc",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb821c11-b074-4dd8-be49-1b974f84848b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a9fda1b-c418-4fb7-81fb-79b7d1a09b5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77cd5640-aa1f-420e-9262-600ba3febbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "33eb3a33-1332-477e-8f4c-00087f48f56e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5298e06e-798b-4ce7-95bc-65eb31a828ef",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b0b5d0-fcb3-42f8-9e2a-c64335a322d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7bc97fc-f963-43ea-948a-3cf8f2c434fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0521e94-5001-49a7-bdaa-89ed146c412c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e74c0c40-3c8c-4de0-a7e9-c78b0c5a7692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0411fe7-812f-4820-870d-30afcc2870f1",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30ced97-21a8-4556-8600-e4a0451b6d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be7c1406-d51d-4555-94a7-cfc791bcf23b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2160217-3db9-4f2a-94cc-0fda723975a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "df1b544c-cc55-4e42-9650-cf73d2348164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317d21e1-9935-496e-b845-49d6159a0d4e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be3044d-ae51-460f-ba8e-85a7dd0cb5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5f56ebe-4e69-431b-be9f-8995612130d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870e4e89-ea85-4fec-a6d0-6165ceda1c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc0face8-def1-49b3-b963-7251e1a57b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ffa7aed-664f-4c34-8666-03a5633339a8",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49735f20-807e-4b6c-a451-f6a94f435e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5fdfc52-b347-4f2f-a572-ced85b49877f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3466372f-f428-417a-8ca0-db113c23224e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "29a2fd91-0065-4a5d-a951-30f3e9700741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282445b4-a7f7-4926-8f68-5a66a4b1537e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1931d81d-82fc-4d3f-93a1-f080d9abe019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6f916ff-6e54-49c8-b6ef-05b531a0a94c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff3b06b-1dd6-4c48-8e30-1c4016c3a61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "47b5e0a7-b279-497d-aaf4-e5d7973462db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56a7e13-e956-478e-8fbd-2df18d79773e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6bbc027-5142-4b66-b235-71dcdaaed998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a737a5e5-4286-4f44-ba8d-129ed3b9eda9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61e44ee-ca50-4f35-9a24-e6dfd79263f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a8187dd-e436-4c39-ade8-d4f99ee4b23d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3985b12f-1d6e-40b6-8704-1916fc44775d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab839d45-70a5-4f32-8473-33ad4b5bfc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e4f4f4-08cf-4c30-86dd-9c4cbfd2e063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597b0f9d-7520-4e51-b54a-c01f6665a8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b9b8c31-bac7-4eec-be20-49a20ced00b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f67aa2c-1827-4192-b26f-7df2d40dbe07",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "377da3de-b4df-4694-ba63-38fda9e54595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e52fcb06-1349-4f36-9a85-dc4c1aeeda3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba0f2ea-b7e3-4de8-a370-85647d1fa94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "36eb3ff1-9f65-48a8-b0bf-00dafe2c343d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56a8a75-aee1-40bd-ba55-b412bad9d7b7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01f7339-22eb-4d16-9909-140f7a71e667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f13ec23b-891a-415e-866e-c0171258258b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a735638c-d92d-497c-a6ee-58a1844473d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a52345cb-35aa-4fe8-a191-5ff0dd5f8f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a55cd2f-040c-4715-a7b1-0973e1941c31",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a32825d-977b-4dc7-9bc0-0aeef0483f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44a3b2d2-5a12-4823-be5b-3992f6195f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75fb25e8-222c-4a71-88d8-4ec0c83441fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3d9e2eb0-2d55-48a5-96b7-3a56fedaec82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b71620-0883-419f-805d-ab063370e4e4",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a335f73c-b1b2-44b9-a087-f7ed33c1dc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3c30294-6112-4deb-b615-4a8af325ea33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b74d44-c590-40f6-92d5-acbf9b71ebc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dac585e0-c585-4acf-8f66-91b382eadc2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "092b8309-8063-4e48-a6a9-f4f1fbe9a54a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce346ec3-63ad-4c91-87d6-1f7f211299f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f11d03-353b-4424-bbc2-e677fb265be8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052cc1cf-9350-4817-a715-4c8ef7fb3a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e86c8fc-2caa-46a8-ad4c-c9c869c9f5fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f7e9d4-0daa-4211-86a4-437471e41c11",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c3f58a-fb41-4dd8-83fa-ba6102a8afa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc725dd1-464f-4bba-9449-aa66596cc4a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1175cf4a-a971-4234-b879-3fb375f76942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b87cab0d-634b-40fd-bf39-38d949621348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4543a12f-3717-426c-b221-8b9e706ff44c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5e32c7-7a59-439f-be56-49f1cd738c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3fcdce9-8cb2-4c78-921a-acaf23b01ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f1f365-8c76-4925-afb4-bac0640d4f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2975faeb-06e7-4cc3-9e13-64c22864eefd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a16e488-2cf8-494e-8341-8b6015799384",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1556481e-f5f8-4638-84c0-ae2d0069ab96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceb5aff6-121d-4529-9d74-2acd3f6c6954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f72bee-f335-4e90-93ee-53febcc4e2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "06e20857-af8d-4506-9faa-9d6f8492752e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0cc875d-638b-472b-b880-9ff094e23de6",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "797bfb16-9d39-409d-8d8f-50b1328809fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40e5847c-c2b8-483e-a909-315f4a75f3d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de49979-7aec-4261-9759-7120890808a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e440095-4402-4dd0-a16d-3f627e8da5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76610daf-af73-44aa-9f3f-cd259ce72944",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e34600-bfed-4085-a821-23409316bdf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0188f5c5-c296-4b58-adf1-2ca558fed63b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120be6c9-1547-473a-b05a-2fbe86934d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "919e5dc9-a003-4a9c-a2a1-a7d6a557ce17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24ebc94-2e1a-4f60-8e84-e60096d44e90",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae540fe-0bb4-48c1-b1c6-4d45e77bea70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d407f877-9652-468e-a8fa-7455a4abab65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1b0300-4926-4081-ae73-a8ef60aa74dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "99327e5c-37cc-42f9-a216-da54f1632313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7df56bb-e051-457b-88eb-852259a84ce0",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1901e571-632c-41cc-a08c-e4fbcde18cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bffc2cfe-a451-498e-9b9d-3ab44dedac21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca69fdf4-c4fa-4d01-8ecd-ea1e20ac2ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "32861f49-d786-48aa-9677-3f78f33be255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c7a1e5-bca7-49cc-925e-ad016e54177c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c812ca33-ee20-4963-b3a5-9900e93dc1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a355eb0-f029-48ec-bf9b-d7fd84efbfe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d298f46-08b1-4ece-9919-0a2354a62a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d15073d3-727e-48d4-9230-1c20db0cf592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b772032-892f-4324-90b7-0730ecae3d3c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "296d234b-35dd-4ad3-86d4-e5019c0ee314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef1d00f-8d49-4549-a684-9afaebdc61c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28dbdef9-7d3c-4c4d-aab3-73b4d1551cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f66fb315-f71a-484d-b983-dfb842737c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b07280-11b3-44d3-8bcc-fa4ffa093e31",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb438cb9-67fc-4b1a-b305-bafa9efbaa49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8283dd06-3e3a-46de-9b8a-684b1b17d5f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d426e7-a8b6-445d-9dc7-5009b2e540dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc55307c-cd80-48ac-a2f8-c73c01252e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f4849a-9b86-4a8c-b38b-8b12d12fcb29",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db304061-273d-46fb-a6a4-5ec3c6cc394f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c8bbaf6-5ab5-466d-88be-d05014ac3eba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc23e42-2f75-4710-96aa-cfb808c1ee72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db15c441-7075-4d80-bf9f-3ed1171a5430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6acac990-0b25-4c3b-98de-7b8a0fb7b4a6",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4fb618-77bc-408c-9da9-bf79aca52110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "164a08f9-f4d6-4dbb-8e78-47a3645fea2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634bf625-8015-4fb8-b5cd-cae13b735318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "76c84488-95be-4c92-b553-86575ed1da61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5649f9-5b93-4f55-bec6-f3735b92c064",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d091f7-aa4a-445a-9c94-323451efb7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edf3a2f2-7820-4fad-ba28-d3c0fc366851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d704451-b128-41e8-b2c3-1369cfe834b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "30f27dc1-6f86-4c3e-adb9-7483bdb1522d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f113d79-d990-403d-9008-2f58d85adcc9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3edf8b2-59f2-4add-a997-eeb2c935aa9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f6d38ff-d9e7-47bc-863f-cdc2dc2e4b80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d29f71a-6f35-434b-a7f6-d2b66475b71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "441dc5f5-9502-4708-9e72-0796908a7138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c295c8-6f0d-4091-ae66-28bcb3e407c8",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b3378e3-ef56-49a3-8563-7d1fae3611df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f11449c7-6fde-42c7-ac55-c1a2b06f77f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7489de42-974f-4b77-8c10-727eaac9f0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee14cf1f-e9fe-4e1a-b259-296f12910b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2b6d8c-c700-4d1d-a30e-8f90067ff8d7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0922fedc-d414-49aa-a27a-ac97e735b389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e13d509-8b3c-411d-a26f-bff62b257397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934f1ca2-6516-4b7e-b38f-15e2c9a599b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "98954a78-dc72-432d-a0a2-3b9eaa82ecb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8865d5-de04-4f56-841a-3e1349cb984c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34991ad-03f0-4a5e-b107-be9697f2f817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f28441-2ef6-4d8b-8087-277b034c7259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab96766-bad1-4d50-b02f-63d5931dba05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82f4e8f3-3d46-407c-8215-538bd0a87e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd017b7-37c8-4300-90de-ff5ec50d39b0",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71f37c7-14b0-4bb5-9fb6-7c885f0b7936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9def360-bded-430b-b543-db28b725b99d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d4a609-5e5a-4c7f-bbb4-637a3556d7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c53dab5-6300-4416-8dde-cf4c8ab8d2a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74896f5b-e6ac-49c8-b45a-8713c779ef59",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "740b2ed7-f2da-4ca4-8c5f-4690ff55e3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11e80703-b478-45e0-9299-17837b26a439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeffb24e-3901-4fd6-a039-6e95193d6b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8cbbfb9a-e3e0-4390-b320-8c090b401351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a7522f-1e9d-40c9-9561-5dd55c409d11",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47fa6e24-bb1a-4aa9-a7b2-2678147e7d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce2e31cd-d591-4c72-aa47-8e58422b7705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73063864-2824-4223-be8b-1a8e0011a79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "95dbcce0-2ad7-48ec-9baa-3ac978572583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad28609d-07c9-45b4-bf7e-3e13ecfba53a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15f07a1-c838-4014-8512-03effa8c80a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d316f9c-0b87-4cd1-9af7-36f653fa36ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a737e0-d7ff-43df-b6e4-6e8c5807c411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "22877220-dc28-4a5f-9410-6510cb2ce2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbfc6e3-b44a-4e12-9f7e-a8e71aa7fbc0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb27b87-3f80-4b39-9476-1a8a7ecde91d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5993818a-9216-42f5-9f78-56a0f0dd147e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfab5ebe-c516-4941-9cbe-235be4a37bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbe5394d-804d-45de-b8e0-53430f5def7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753b60ff-17cf-4db7-be73-373f5b90a90b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f86b60-1670-4904-a0e6-64a3d2012a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c613179-7e87-4b61-8f6d-1a9721995be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f29ea3d-66ab-4bd4-98d2-3790982dd909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2949531-f3c3-48d0-b2d7-7942d49a9a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c5dfe1-0d0f-4f99-9e51-4f62994af634",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94993974-7ba9-4531-a1cf-71cfbad8c6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7099aca1-c174-4860-adfe-ff89620723ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651c70f9-c211-4e85-9f2c-8ecc07baabfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a6b5551-3527-44c5-9286-d55854190f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22394ee8-9f12-49fa-ad1b-0b56c2e23a7e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c965d8b4-40cc-45b3-ad17-beacbf324b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "900334c8-e76c-4c16-85fb-bd9861047a94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c0484a-8d82-4886-b345-61034c64084f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f2c1e0f-b8e2-44b0-8d71-76c8e1c88e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0de9b1-4eea-4f5a-b12f-5c6806ad7b3c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c53e258-c48d-4871-a725-36ddfc527451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d9f6145-b8ac-4600-9f80-e16ee5d73e1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f5951d-3257-440b-ad9b-f15738102b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "614bcb78-8812-49b2-8fe0-1b2c5e653b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08880b84-6a6a-45a0-8131-f59bf5c3231f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6953f7f-d616-4983-9b77-32e267ab6414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "758a3779-d2d8-4e9d-ab10-93ff9e807813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0ae586-77b7-4f16-9821-7f73efdf713e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bc93acb-9bc6-4823-83c5-2a5fbd8491f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e00a5a2-4a7f-4dae-b17f-2e6a97960db4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0f77e7-3be9-47a7-a5f1-d7fdb8ff6373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f9995e7-f0f8-4dae-a7ae-0aec7b186e92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52d1c4a-50a3-4746-bd62-76be1212c2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb71c5a5-20d9-48a8-b68f-deec1fbb1ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770c8ce1-820a-4b31-aa8b-5408e73e79d9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca120ca-23da-4177-bdad-b975bdff0380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "807e413f-0356-4e49-8813-0a79e437e7d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4236c1f5-7ff1-4fb5-9095-b00dda8591e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "07d5059b-ef50-4ef5-8ac0-24cd11d9f5cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed59ac6-5ece-4669-954c-2afd34d119bb",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3edce5-ef18-45f0-953b-a107fdc30ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb53190-6849-400e-9daf-d0cbec73335d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aaa01b2-dd75-453e-a87a-9aa857034be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d9e2a45a-020e-4983-90ed-d47313b1f121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73bfb438-53ec-4c71-815e-46495c1b8eb8",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea34307-0ae4-4a6e-b9d6-cba067243a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d70d6b70-082f-4405-8834-35f50f795dd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a0fda0-c514-4273-9a18-eaaf15a4c0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "59446330-2183-45b2-8e4a-a8ff6c07d4f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f7aa2f-516f-4470-8bce-65843e5c1159",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ad8d89-fcf8-457a-ae6e-8ad95682718e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abd8fa73-79d7-4d75-b2de-5bb0035573f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55566ae5-4173-4d86-a3d9-2267b256b8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0d1a81b-ff73-41b5-b106-af84ecaecc31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67a5f4f-a12e-4804-b0aa-ede4f4734a63",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39944e45-e2c2-4c80-8f7d-b9c46c68bb99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "097ceb2e-4959-4aec-9389-73275eeee562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c41342b-88d1-450d-8223-2d0751aa69a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3137245b-f030-4954-bc71-7801e3ca92ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b49584-dd45-4c3f-ad99-5c25d72387ce",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e293d7-d890-4a49-9d6c-4e1e97e96e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddab10a2-d0f9-4253-b988-9876ecb747d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92dcfd3-a60e-497f-9f9a-6716e50b5b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf763c20-57c5-404b-993b-5c8371490e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae925a3e-7e4d-431c-a281-6aa84b360d1b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78cce465-1900-45bb-83ce-45d271d0b4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20a6825c-6dd8-4967-9ee1-7bc6297b96d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "088ef4ca-768b-42b6-8560-03003b439954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35444995-bffc-4bed-bec5-30f16aa44bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0569376b-2d48-4773-b044-7342142a9b32",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29be5e8c-a23f-4a1c-a4b2-c0064ae903d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ebd456f-30e0-4303-870b-5045467b6129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82cf3290-baff-45a1-9006-05d020737087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eac11984-391c-4f38-9b78-e463906f88ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585342e1-9e03-4015-887d-7a4417d5bb6c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a507420a-841f-40a7-bd52-9d072df0727a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2713e519-fa89-447d-b496-02c24e4da599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3231c608-6dc0-4ea6-a7ca-05edfb25d463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "719eb0f0-52ce-4bf0-af30-c9e52be7300f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e059cd82-c63c-4817-800a-6cef0903a086",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc0ed82-f3e0-4dbb-b87d-5e43bc0dc660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a94bb4a-3312-44ff-8382-8d2b50fba3ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65541807-003f-4970-9bbe-d82db6686529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5657640b-cfa2-4d31-b8ee-151213413011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d4e1bf-038b-4cdc-a5f2-08d5a2fe7683",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6f69fd-c036-4849-95bd-3520b0d175f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c83d66d-85f4-4aff-bbe9-bf8d5c337853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ddc4dbc-0eb6-4f09-86f0-0996a074568d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc91fd74-1914-47ae-bb5d-07d6a0aecde6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1562836-d293-4eef-9b30-d5a1e91a994c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9eed4a-6d4f-4ab4-b363-59f49c607c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e1d7461-319b-43bb-ade5-fe2d63a025b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd116790-ed9f-4ef3-83e7-ba00b754324f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3650a2c6-e772-4dea-ba4f-f116b9319d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "165d4119-1a13-496b-b56d-859b28b986f5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaee7fb6-ea94-4fa5-902c-ee8d201926d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "303b6b81-8e23-4c12-a4de-a9d021e07b23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c047ce-d1f2-4600-9619-f959cd7a8231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de67bea2-6719-46a3-a904-ee859660f6b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23936b2-fa44-42a3-9b06-2c2a21b88724",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24580beb-e511-427a-aba5-c8ea47e73ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75be3946-9ce8-4ed3-8293-85d56219fea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d28da5-483d-4244-bbdc-6ae18032fa88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b956458c-5875-40a0-b3f1-e40cbb9bbcf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029cac96-e98c-4a91-a3fa-cbab55299837",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a571e6-fd2c-4ef2-b604-26a8d949922b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92e16e4a-e007-4091-a0ce-052579faae4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593f209d-5a57-49c7-8687-e4ad2fd96aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "27dadc86-df83-4aa4-a1bd-21ac485f812c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45ee7e4-b25d-48f1-b324-504b761c5fa0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef917e68-6b60-4ee6-aa5c-e6b2b43727de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6725d97d-0276-45d4-bde2-412fef62f989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f0da10-346b-4964-bc9b-c45e5a2812ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1b56031-3638-4744-a993-c07534e3475f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8686dd5-67d0-4125-aff9-d4f7710efd01",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c356c5-eb99-42f0-b47a-292923e1be5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "895be693-0877-4c42-9a9f-1d80c544d0f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816d6ea6-39b7-4a63-9082-27613ed8b4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a9eb23a-ecd5-4281-9a61-db80490cc9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b157cb36-71a9-411c-95a8-6d21148058b9",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02ee891-f903-461a-acfd-b08d9807a4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c82fe3d-af34-4b5c-8a5d-65b22dbcb78f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aed155a-66a1-4a9f-b079-e3f5cf6106b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4220e00c-b7bc-49dc-b6a4-5c22f4eb1288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b21696-8f7c-4ba9-8029-d7de9969fed1",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc9048d-e68e-46ab-bc45-53b0394f9c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc0d719a-866f-4b68-9ff4-ab31c49039c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8baf8d5-5723-489a-be87-11402097b0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc124b32-327e-4cb4-ba81-da70355ee04c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc38f23-bb86-48de-865d-567120f4aa7c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da6bbd1-5764-49b9-9d8d-25c3147a7901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f57528e9-9bc0-4dab-9fca-2d93ee2af0c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7907edea-d5d6-4f8a-98df-27c5acd7b38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3df35b48-5453-4a13-be10-2af8f3e05fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2937a01-580b-41dd-b1c9-9d5eefc0105f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3008f4-9b41-41a7-9856-11ad2b395475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b19ca288-7b53-4ff9-b91b-e5bded887041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36bd855b-c436-4102-b192-9bf7de3640e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dbe7ec56-2822-46d6-bc09-4e9552bbe023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b11b42-f526-4471-853d-b799e95f5f03",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "651b8746-c754-46eb-842b-618a64584081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a953ba-dc9b-4aed-ba2f-01809429bcb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5764859-d3ec-4963-92f5-f52aa75b2f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f02c338b-d7c9-445d-a7bc-5098aec620b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a35ab7c-f8d2-422e-9a38-e6b96716d9c4",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f948e79-4221-4438-bb6f-bc5533d3771d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8886642a-d870-4622-a545-c5772b18f936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a353ef-f3ab-48a2-aef3-0b674c9cfe9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f80cc02c-e871-461c-ad5f-8770f0d20167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4eae58b-5c03-41ae-bbd5-951a70981fe1",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "864dcac9-fc8f-4e20-bb1e-2cebe2334689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4546609d-a878-4255-af96-718f3aff5768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5966ea-0dbb-42ab-a92c-88f3d3a9e75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfddf516-cf0f-4e25-b89e-5195e69c2500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04aa149-293b-4c92-8810-bd10cd15de39",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d62676-392a-4906-886a-fd5f78df8389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26429e6b-f252-4eb0-b6ea-b3ce37045433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87656fe4-d318-465a-a9af-216f9b12ace5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d24aae9-e911-4588-a0b1-351f15b0ceb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556950bd-b3aa-43f2-a9bb-a24de1484dd8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "846cec40-e1dc-4205-8b08-292585d37a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85edc2cc-0851-4315-8680-20959016b9b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c6dcb0-af13-4da7-b563-af46cb001e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "733b5d71-e097-438f-aba5-3cbfd783feb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265b63ce-28d3-4235-95fb-8e87f23a342b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33546fc3-abaa-4d9b-9af5-51751176d19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "445fab19-2a1b-4391-9992-387b0d14e9ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971704e9-72bc-4961-a38f-2415c05e5567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "44e00da5-e43c-4402-aa2f-97a04ff00161"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "76ccede0-a342-487a-ad22-c5b1a8c5fa32",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c21d9054-b7cc-4dc4-99b2-33b95de2be20",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9f39e2-50a0-4c17-8037-16ae05cb36b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac3d86d0-1eb4-4dcd-b364-613c57e4686b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc492b4-5b0b-4240-b622-7763fd8d92b8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7ca401a-d831-4947-85e9-4db4743ee1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478896d0-ee3c-4c25-a40e-097920167a6b",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f74828-be9b-408b-a441-f1589408e9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "119bd6c3-7e85-49c5-9883-56e40e8c9fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67401588-09ef-4624-ad38-0f0253ccc05a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffbbe99b-532a-413f-a5ac-fd1c9786c4ab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e430708e-262c-44aa-9238-cfab56ac0638",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3878c6cc-2549-4b63-846e-1161ac346df5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1edf48cc-cb43-4e07-b0d9-73771bc3d60c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44389dbc-f239-4541-b65e-1b556555727b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0cf587df-7d0b-45dd-b07b-fb8070da42aa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eafd9000-8f94-442f-9274-73ce4374ac1c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "64fbe50e-03a8-49be-8281-6fa78e0aa5b7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "55260fce-f8bf-431f-b1b1-11ff066e8008"
                }
              }
            ]
          },
          {
            "id": "b47a6a4f-d8a9-4821-86d1-4845d4aad62f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c90d878f-1670-473a-ac2b-fe7e8a711c19",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd0141dd-47c1-4f9a-956f-fa37a7d55548",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "573150a1-b129-4105-ae7e-2b9962f032bb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46a5f743-0d87-43ba-970c-f587527eb188",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "58c6da8d-fd61-48f4-8d0c-236a31119b08"
                    }
                  }
                ]
              },
              {
                "id": "b426a4cb-9bce-4f42-ace5-fbab0c38c85a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac622107-116b-49ab-b31e-1ba54cb08d93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ce74b12e-544c-425a-ab8b-c2c4685479f5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c977855b-e658-4aee-893f-ef93eb6c9cfd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f5234b3a-0379-4f8a-b25c-9ab09124aad1"
                    }
                  }
                ]
              },
              {
                "id": "49066deb-8730-4ccf-aa38-ea4774b365d4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eeda0cd4-025c-4319-9a58-e40f16b75ce5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4897e6d6-579e-4e05-96d9-f0c7a4eef2ea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26af0d8e-ce4d-4952-9305-629ec7f737fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0a77826c-1a99-4e71-b25c-b9979e19e99d"
                    }
                  }
                ]
              },
              {
                "id": "919247df-1c54-4df5-bbbd-c16179a7ee94",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6db47c71-c22f-458f-b008-e5bbe3e86286",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5b265fac-9f8f-4af1-89b8-1a2ba3f8daaa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39e10877-81d6-4591-83ba-92e9edcf6279",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "66f2055c-53ec-41b0-b70c-da7bea8e5720"
                    }
                  }
                ]
              },
              {
                "id": "d314747a-9443-4666-8b54-f4b087801fbe",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "def2b223-eacf-464c-8d12-6f89ef951a54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ae9415a1-9a9f-4357-a90b-208ffa105ff6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c7cc478-f124-482b-b52a-5dc9c2f366ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c1ccf85d-34ce-42a7-b8e8-afc11783ecf0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8ab07f4e-686e-4882-b647-2b1ca0215607",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3e25530f-6579-4475-9ec1-b7fb37ce2b67"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2a834fce-1a88-403e-93e2-5bd1801b3847",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "10eedf67-1898-4a8b-adf2-aa06d6c643a3"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fd2eb35a-5b78-4515-b2b7-e8f653bfbba1",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "00becdd7-2292-4e00-a0f3-08ccfdd7a5e1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1f9950b7-d899-43df-b0c7-1799eb63c542",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b955609c-663b-481b-9681-4dbd0b8a76b8"
            }
          }
        ]
      },
      {
        "id": "f08b44a3-5963-4619-95a5-709e438fe386",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e561f660-3f8d-463b-be48-4525346af4f2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d63995dc-3407-48c8-a271-96a6d5b22ea8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "657d8f7e-8d6d-470e-a45b-fa3f8eeb27fa",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70812984-3ffd-4d2e-907d-05446ab5d229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7d75f3d-abcf-42ab-bb4d-1bbdb822d83b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce704c18-4b97-472c-b7b2-46404668cb89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d10f156-fc55-47cf-b1fa-6d53f2ee9030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5a071a-365f-4b5b-8c88-f33487bb9f8f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20856540-7bc1-4b10-8e7c-1020ff1583ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "707634f9-2edd-4ed9-a1f3-e87c20675547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9492f0-46b7-4eb1-9864-038e61dc32e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "45ebaab5-6893-415a-b181-fbc84c74a6e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69616a01-98a8-498d-946c-6b2f7a2c3ff6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "659002fa-c8fb-4d22-b27b-d62db837f53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d44b33bd-8353-4b71-bae1-551d7a17143c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e129ffc-adad-4453-8661-8ed4aeb33da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7530f1b-ab93-416c-99d0-b8d9895c49bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b3e87d7-86a9-43a8-a4f7-abc3c102cff6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d580488c-7675-4ae1-8872-72dbed4bc24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39eeab22-579f-4b62-9256-d7bf4ee372d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7769758-4256-41f5-8078-8ac703ab59b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8d837a4-f59d-4852-82c5-eb789b81d5b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c2490c-5a82-472f-a428-07872ebef6f9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f203c9ad-4e50-4d5d-a1bb-2a5f2ad5d220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69764404-0928-49dc-958a-7520d4b4320e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664a5b48-c36f-453e-b9cc-c46a451782c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29b46f8e-2d2a-4a09-bd82-69851e7be19d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e7e3280-7c27-4c40-a76e-020f08af8912",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4c1edd-ffab-41b3-87c3-7aaf4d50952a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "968ca6f5-fd27-426a-bc91-d4d50c0d559a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ea7600-f911-476e-9b44-da110d408cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e897c91-273c-409c-b4ef-d63e39d43293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a042d3f6-22a8-4a3d-b80c-120ab4c3b3a7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac79f23-e7d6-4be0-9296-65c2b765ec92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19849f09-02ac-4a5b-998a-1c0cdb1f6b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0e3f6d-de79-44f4-9924-0d01e6adf1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "84297315-88d2-4af8-b9d8-6a0fbcc98396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb38ba2f-4987-4a8b-b0f9-c9c31d29b285",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db75e9ca-fb21-4df6-9714-698ca17130fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72f5f2e3-f305-48a8-b5ca-c9146c2053d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac51f6f-76cb-40ff-8a6c-3bd223b2a23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d0cddac-a0a9-4b0e-ac63-ecbeda05676d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4dc9d32-dc92-45b2-8520-cbc75e02af3f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9b46c6-1eb8-4383-acc0-d61d6aacca7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d752f9ca-8675-4182-b3a6-265199210165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd4abcd-dee1-4636-8db4-8f2c2678669e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2da86545-8fae-4610-961f-259cf768db8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0720016-ad4a-4b0d-9073-13507c86d069",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdcae1fa-edc4-44fd-b723-0a8107722519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be926b3-846d-492e-8a67-df6c72005830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e810d1-cc5c-46ad-a5c1-d0893a1aa463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0acf2980-1c83-4ee3-a2f8-675f7221b1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338afe3c-ea2c-4943-919d-5dea031c8488",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "086a0137-1034-4b8f-b545-172e3a1f4f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "698ccec6-6fda-4a9b-a563-a60b40db5d4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d661b68-2dba-429c-b4f6-ffa953b5864c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4e4e52a8-4614-4cd0-8027-aae88fa7eca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861f0637-6b2d-449c-ae16-fc1e4e2f6ae9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2e7521-17bb-4b23-aef2-e1afa03c5c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f26da30-ba8e-41c0-872f-1d4b08df145d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bcaa101-4e84-429d-818e-e196fe6b95d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f5ff40-5393-49dc-af22-a6eceeba33ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e7dcea-07b4-41a4-b8c3-68360cb36b58",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ab3729-5d82-4a1e-aa8c-ba27e97e4c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2a76337-5390-4682-962f-14b1a36d1684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c18c316-967b-4fc1-b369-9fa7d68b9b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "84c496a7-2125-47b9-8e4e-c79f12210a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494f6b5e-6765-4f27-aef0-b249789daf5b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b87eb6-3786-467d-8cc2-4d1a60375a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05cd3db0-d45c-4e83-90b5-11ff620abba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57fb318-ff2b-4d16-8cbd-dc8c6007274b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8427eee-3113-4a50-a40c-cdfc73c0b142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d898da35-0fd2-4525-97c6-e569ea90efb4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08468efd-f0f9-4dea-9126-55c9b3117746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea1ddcc-b24d-4ff7-8143-9128c7f5a8cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bbcacbf-b86f-43e9-89b4-44c73a94c1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2eb91245-3043-4047-8ef7-676aa23aebc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eab7b6b-30fd-4b75-b435-a918042baae6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3905b3f2-75c3-4a83-96ff-b3306f9bbdc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b3a630a-92b0-47a7-a11f-02f976d3b948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4277fc7-58e8-4698-b00b-931bbe3b3ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3adb2d25-6132-4039-9bac-cbab7d197d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82769e0-0713-434f-a115-84bd3b55c5c7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7112c92-5a71-4471-a6dc-62f0a573acf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34b86b46-1fd4-4d54-8510-873e7841ebce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ccef08a-0d73-4e6e-b505-a3d2e5c8f84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9852f21-0b47-43e7-b208-32e745b5a468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "515e80a7-e070-44b9-9efa-7c04d4764dc1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0b2cb7-4358-4379-900f-e643fc00c3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c448db3-cda9-46bc-a8e8-e5027019e8aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6339d9ff-8700-4c8e-aed6-12e725847fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4265d94-d012-4e49-9877-54005c2dc4c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3882c7c-3bdf-4913-b954-0bd246776cb3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e5cd88-f000-47bf-8a67-b8dd9dd272f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d474a4a-62a5-43dc-a6b6-acb44784ec53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125ac991-a6e6-4255-aaed-d970c3a72049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b9bb9d-ccbd-4eab-a4f1-dffe96f91172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bfae7da-3f6f-49d9-acd4-2d62daddd144",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04346da2-fca8-4233-b5e1-9208fa316d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e8fe5aa-82c5-4b38-9044-bba3d55bd362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d2190e-94ec-4e83-a9db-81c54a96c7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa30e7ea-3bcd-4f30-9634-36fa96a83ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25bfe0b-4c23-40c1-bccb-868e62cd2ce1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e6e763-0105-4432-b8db-d3a909a441be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a93aafb-30b0-4e84-95b0-baccd37ea9bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d357f11e-5ccd-409a-b290-3638e0faee59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94469c14-38c4-4434-a298-7d2ab52fdd6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10173790-02fb-44d2-9c63-4b8dfad76327",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8e8c7d-52d5-4d79-ae56-955eeeb75b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc545fc-4b52-44ea-baa6-31bf400e0ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f2d58a-2f1e-4a56-8c8d-9a616fbbd087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d03894e0-8a2f-41d5-b263-396d1e192d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080441e9-95d6-4ff0-b3f0-f0df05ab947c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c6716c-bf99-4c8b-bced-2bf3c1a5ab5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90fa1491-9a7d-4c49-aa3a-050e8a80e98c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d67a882-1417-4f1a-9c42-312a90433532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8d51a70-7f30-4e9a-b964-70609b2324b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d238a4f-67c9-4336-acad-4c64803cb3d2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a955bfb5-3339-497e-a96a-7a17f617da34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee8b294-719c-4a0a-8e4f-aedf7195c2e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56701ddd-b2c6-477b-b9c8-4707ae72996b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4242746-12b3-4262-97ef-510bbad16ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49a1ce5-72c0-4569-be01-525276be5fdd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "767aa5f2-b8ce-4626-a112-cf1d42fe535e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a516c03-406a-4472-9807-266038b5655b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98da938d-1efb-4edb-a55e-b11cb33317dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1abecdd0-6312-4896-b3e8-7c2df29f0576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7239e470-be78-426b-80d7-f17cd0997443",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c658eb-05c3-4bc9-b866-260407e4d2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52999d06-a0db-4dad-af14-4dbef0fd1225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4649a6e-ec32-492b-b5cb-9ea2c607a512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cd86122-8708-4459-a9bf-e82e0ad69088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7bfb984-8b60-4e4a-a378-dcc9505aeb06",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a699d3-dbb4-4281-9707-da47273116e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0be51632-3df9-4142-98fa-2aaa1ce5a70b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ac3100-bb0a-4431-8907-e7f4537f19bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee0a802e-55eb-41ff-aff5-cd131f0a2e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e529b7b0-6e7d-4d61-99ed-8e3e8c737b6d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b98fe47-2eeb-4db4-997f-159b6391d831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02092f68-5112-4572-b033-bcfbf8058522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c192e9-3294-4ce2-872c-bce8f0649070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27b1e4b2-94c4-428a-ac3a-c1b777652731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2040478-950d-4148-868d-924e9783c9fd",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c5e6a5-c07a-47c3-be7b-dad933f7e9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f918832a-8519-440e-9c7c-ca5c5165dad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1812d2ee-1b8f-4bd6-bb9b-d02022f7c875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa74d6ab-65cd-4f92-8ea4-767a1f986ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ef3895-522c-4709-bd9b-ff3688e79bb0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00fd119e-450b-44a3-ac51-ab3733509a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "705ac0c8-68c5-44d5-a7c4-13828564c610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bcfcbe3-b983-4585-8980-0e456419d542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0202df3a-859e-4985-b265-9697d6e1bbd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28ae4d3-3e51-44ad-8ff0-581a8df37a83",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f4405b-5316-4cc3-bd39-36b953d61f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96765ea8-99cd-461e-b769-869cce11da1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ba4ac6-5d1e-4d46-b3a7-c07490b09922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0133651a-07a7-49f0-aaea-c3977580eabd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3cc364-44f2-498f-800a-300bb15fabfa",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "444667c4-21d3-4cd1-b425-3532db8b7dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f72e6b-80d2-42d3-b535-42bcbb631700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4cb18a-37d0-4d32-abe1-367ddbec1460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91f0b966-973a-457e-9fad-fa01f8f98a2c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a4ac9e42-ce3f-4c36-a25d-5e27bdaf918a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "421805bd-1b6d-4bdb-b933-0ac7a4a1b9a1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85921f11-626c-432c-b0e7-a55bb623d1d4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4723a666-2d63-44f0-8fcf-9fef9527c308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35dd2212-dbb1-41ba-b56e-6aacf94226f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52ae65ad-ee3f-4950-babc-0b2ba53bf612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6127a49-5b39-4df5-a082-15e1cf3da935",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0231166c-a04c-4eef-bc1d-b558c4fbf4ed",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6702c81c-65ff-47b9-b711-3b927be7be63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38131550-05ca-4bf9-9a14-c656c35b157e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b309a25-09c3-45a4-a632-285614e82884"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ed090a1-7535-4d5a-81cf-74121abe3c25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ed42b06-940f-42dd-a996-24cd7cb1483c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "66ea7604-4d4c-4e84-81a2-3b40e7d0f9d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66fb56b3-74cf-4a2a-a71f-c1784b1b69a5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "474ffd5f-a3ab-446c-a847-c5cf0e11b8c2",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e8ae5892-815c-40fa-941f-6daf8fe8df40"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98964c6e-eb59-401c-9285-afd93ff38f66",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "303387eb-c402-4ec2-b3ab-22b32a5ae0c6"
            }
          }
        ]
      },
      {
        "id": "2d543e70-e914-4104-a14e-1107b0884a34",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a379092c-457d-4ced-ae50-8408e8310807",
            "name": "Negative Testing",
            "item": [
              {
                "id": "67aaaff6-a7ae-4f17-8a4e-e4174d8a5640",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9e4da5ad-e51a-41af-afad-747a6184f535",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcdddbe-b4e7-46f8-9e97-ab3497ba7304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2219bbbc-f463-4f53-98c7-a10b80dc225a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ccb81a-1f1f-4138-be23-1342f1c57a88",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37212c1f-fe6f-4a74-a5f3-7e102ffb0808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d6fea73-ea0f-4e66-9969-e5a7cc758d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97d44f5-813b-4b47-9540-2c4b08cc9f0c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f52bbf-f382-494d-8e99-30f309b695db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9c25c2f-8405-49b1-84f9-be04bb5c823b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732bdd32-234f-47a6-b945-4242c2b97b85",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013c5430-0e02-4099-8a59-52f01eaa66d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4de7c3b2-c775-48e1-b036-581ef917ae74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2440ad-49c4-433b-b4f7-919cce262626",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56958f25-def8-4e00-b9db-a5855bc7d136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a62086f5-f1b9-4d39-aaaa-b997bddc689d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ca0ef8-2ad3-4024-b952-cb4d1de7d4fd",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da44ecb6-71e6-4c8e-8663-47802305fc8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3458d369-79d1-48b1-8b54-545d6bff5974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2062e919-232e-434a-8096-9478db9907c5",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73efa229-9000-466d-80f5-346b1d95da4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84d21eab-0421-4c02-84f4-044eab311d6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7a9f41-102f-4afe-8225-4c9b0cf43d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfe158a8-17fe-44bb-87bc-2f4e67d55b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8041de5a-935d-4695-90c3-25981d2f318d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5c841b-ddd3-41fd-8f84-99dadcd050f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a215afab-e656-488c-aef6-edad4a061df6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf45453b-cb70-4bf9-9d1a-e43c75e9bbc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72cec759-1b0b-4e2f-9767-74b2ccb85ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e83f18b5-ec03-46d3-b688-6cd8179f30a3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea7fbf8-0e69-4d5d-96c2-c77171f35110",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3122cc2-6349-43da-b716-53db1853bd90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f24ed29-b25e-46f4-8a53-d0f4197e398a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29f9737b-7b3d-41bd-98b0-4df0f8a72230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4599414d-565a-44e1-81ad-34b7c0260298",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4979b71-28e4-491b-b953-088080730a24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1253f92e-bfe9-4777-b2ef-102958af3880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87fc803-24ad-47ca-8685-dd828ecb9ac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1503fb30-2034-427d-9d10-684052889174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e144ec-33d9-4d3c-9d33-c94eb0f34f5b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5403f851-b8fa-48b5-8982-c68ef9e83842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "823dc6ee-bb6a-43a0-ab35-d96a3fa5b39e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "969abcd5-4f35-47a6-92fe-eb93dca80e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c49e31e-3eb4-40c4-8e06-f9821197d293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b51e8e1-3d1f-464a-8eda-01bbe9fb8414",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285cae62-8688-4b30-b49c-3abd04164a7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00582881-490c-4e91-8001-a421ff3a7696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e422a88b-5210-4c53-b181-9c28386dcdf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bda0749-2442-4806-ba45-e5d64a4cd335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3719ca-a884-40ea-afcd-9eb0fb9e5523",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e88e0f-38d8-4334-bb2f-418011c86826",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a779e05-2f03-4894-83e7-12993f4833aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c745f08-cded-4cf0-9133-3ba2a7c2d878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e259d126-968a-42df-ab12-ddde8134f0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ada2d1-6ef2-46c5-9ab9-acb38271f8cd",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140b830d-0dfa-47f6-90bf-3e3a4d8643c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c365eb62-134b-4ec8-adf5-709fc4ddccb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5668c88-7ce1-42e1-aaf9-a1ad8c5368b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0294fb2-9e06-49fa-9b01-e9c7ac7958a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda9cfa5-04e5-44f7-9d85-c9c6f741d6d2",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfcdc163-839c-4b55-91ff-29e7e74ac3ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bade2c2c-2e86-47eb-b8ce-6326d373e2a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b30eec-5a38-471c-8eba-44f18b0a26ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "389db07e-5bf4-4cab-8158-c25c178dda59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a159e814-7b41-4285-8cb6-b07c654194d1",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adfef2a9-1376-4aed-a336-defb48790fc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a51e6e85-a847-4754-a04d-b0283bf9f8bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b9f2168-f0b2-4444-963f-3936c2977338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8f52016-5f56-461b-a754-4f9d3d0a9f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00befe5f-cd5c-43da-9e3e-e26bc0a4e2a2",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f41603a-09b6-4516-b3b0-db8c914c1b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b766cb92-f80c-4705-99f6-2747df39be15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5a7517-115d-44dc-a6d3-156b0438ced6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9781ca0-304e-448e-9e0d-01cf7492db70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae4224d-98f6-471b-8231-342d8d88b473",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c580594b-65ac-4257-a09a-07e109181ebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "251a831b-8637-48b3-8ee4-926e28ee5976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86941c22-95b0-4be4-a732-c493d7819e21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4632184c-086a-44f4-8644-f2236f2ab623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38e1a61-773d-40d8-8a01-7d22cd20a146",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0081365c-ab19-4cf8-a207-fcc2c8c60e14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e80fea37-5939-4f77-9d89-482b0cbc99dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac44b40a-0614-46c5-a09b-ce8577392074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39f0fbab-ee87-4831-818c-07888086b5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "579bdaab-f5ed-435b-9039-1d9e1b193df4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f007edf-cd2b-4a1a-8c7d-f2a0eda10c6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "932fe5cd-d0be-4ff8-8321-70e4c746ef95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee185a3-0753-4ef5-bab8-45f930e36c54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "154dcea1-0b8d-4909-abd5-a1a036e9e2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90e0ff7-2ca0-4944-9562-3bf7fd68ec0a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def4cdd5-c882-4cf8-a910-7e1347ce4a8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aa33715-f42e-409c-8bf3-e1e9278f9a24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57136061-405e-4581-837e-fb241958393e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d5476de-647b-4331-8daa-763c7cbed1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a28928-284e-4ed3-a3d2-4305a9649e75",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e40724-b256-40cb-8f92-fd0dafb4cad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65d2e37e-a195-4820-8f5b-0a50976445db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "582f4e9a-1b5b-4049-8737-fbcf7cbba634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29a6f5b5-e6d0-49d5-8c46-977538a15b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592b61fa-709e-4621-95e7-c90a47d976be",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47543a60-42e4-4025-ac2a-393f674d9606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89db0fd1-98ff-41ee-b3b9-fee28da74b60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3060af38-bf8a-41b8-b31c-f65789a10f5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c042b9f-4f5a-4008-a6fd-b12ac820d4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25f6117-06c2-4c67-aa10-0530510b9382",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39dd2ef0-600b-4c6f-b711-71d0229c1766",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e862b7b1-1ff9-4858-b4e8-8dcf4bd8f991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2563d5-8d69-450b-b3e5-7942b042ee7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d759345-38b6-4041-aff2-12ef80588582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe71b4c-107c-425a-b52d-e4a1fffeb3e2",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ae88ab-65a2-4d12-a30d-a6cd55bea25c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d64fccae-3948-4b3c-af7f-3d6b7be6f994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "917553d5-b3d8-45e0-8f87-7de51c775f1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d4956cb-0028-45d2-af46-0c71b111e75e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf11cbe-2bc7-4823-bec1-a7fab99a2e8d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3be140-8d80-4d6d-aede-eb860bf7770b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fdb90bf-c047-46e0-8c34-08611b73fa75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dabc829-51eb-4209-a18a-efb1c91173e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19eade38-0d0c-4393-b8fd-5416ad8fc1b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98de2e01-cbbf-40fc-b8d6-a483f3610d8b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e658f716-09bb-4c83-877c-3b4a8665d2db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f123f63-73ce-4b57-b521-93e65857af41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0817299f-dc65-4443-8644-a247f9558d91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ab77b4b-ace6-49e1-875b-f897d38b77c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62425221-8bbe-432c-b804-902d32723820",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d942ee5b-d8ba-4867-b1e2-aaad7cd17b2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84e98f90-70b2-4723-8a07-4d3dae8ac66d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64a59b6-2c4e-481a-a5a9-0dbb854aa190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "089e1eb3-9889-4e01-9763-04c4fd9e95fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c864cad-3855-44a2-be67-0c379820956f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610aa7f2-dfd0-4d9e-a7af-9fa829e9e543",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e41db16-ac0e-432c-b14a-7e95b92dbe26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5396f2-8184-4dcb-8a86-d6c05db3337c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ba5164-6ffe-47a7-a59d-9763cc5b9d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbb56ce-6943-445a-9ee4-8f6f8a6b86d2",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fafb0b7-174b-4188-9f09-1562c1c7a408",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c2b0a4e-4290-430e-83f9-e42e81330b92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1cad7f-3f95-40e2-9b44-06f3a57449dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8795b061-44de-4302-bf25-4f4a2352b010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e59bd53-1491-463c-8bf8-97d38c5a8103",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68eb1e6-a0e1-4e42-b1e8-6379142c901d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c26e114-aeae-4ea1-b310-798ee89c5c5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1be36f-2318-4437-a23b-3a76e9fe3ee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e3014ff-11f9-4646-b8dd-3c37d07289af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fbf06b5-57fc-407b-8706-469d4aad5fcf",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ceb8b5-cbd3-431b-8197-e7cafe33a2fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4547e215-6434-4ef0-a4c9-385eaaac8dc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5a2ec2-c1b3-45d0-86c3-ee72638111ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a167ba7-472f-4dde-86b6-6b46a119eea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a20747-1244-47f4-a2b6-393de92f20d1",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d76b97e-598b-42a9-b4b4-cf8d20e34d22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5deb7100-1c32-4e9c-b86b-85841e5e2adc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44c5711-39e3-4b43-ac5a-307486f306f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba68fbc6-0f9e-4584-a9a4-1ce7123f4118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faac6de8-f319-49fc-a247-c51405fe1949",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297f52fd-c6bd-47d7-9bad-c58935197fb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4c11b3c-fc7a-4c9e-8744-671338c79c4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8c2513-ff93-48ea-9715-0d03cf90a3b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28bec7ec-2b42-49dd-ba54-d92a1fd6413b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c18f793-c6f3-4e5f-a87e-1b7f1c25c978",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a0dca4-bd40-4ffe-ae99-7fec35a2ad45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86be7220-72dd-40b1-bdda-ec83a20096c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "068b6690-c789-489d-bd2a-50cf2e737d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8359af0c-ee63-4203-987f-7eedb0506359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "702dfa70-22ce-4e9e-be3a-0d06411cba06",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78cfe992-afb0-4224-9334-2ba05fe3be94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4a1ee29-7c8d-4141-8025-293660c52702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "509460b7-e606-4444-81ff-97244c02ac32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad3221bd-fa55-4252-b87a-4f42fd2df8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950cda03-8d3a-4a81-a386-e82699ff1d0d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89dac361-47f6-4488-832c-f204912065da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a99593e-2c2e-47e3-b17a-cffffb5b8fc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff781c37-3eed-440c-a03b-64d61ca3b53f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bae8bdec-cbc8-40ab-99d5-4d56a0a21339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807044a3-6a3c-4bd5-8c44-dbe371cd3caf",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1274ff8f-18b7-4dea-ab74-2bc116f1d20c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c31ba3e8-0aca-4fc6-8eb1-d9353b8244a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd1574a4-e886-4e34-be6d-1f84865ccc91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57a2a208-dbc4-4aea-90d5-0220ea2ed08c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c41211-1365-43de-9b70-ee8a5f0612e8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c998a0-3616-4e5d-8b3d-1ddf262576e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95eecc52-a214-4d73-bd73-4ad95c91d4c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc676d76-7c24-4874-a52f-6cf2c76baab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "230f6b20-cbf9-42e2-8fc7-9834ee267f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c774e8e-11cc-4dcc-87af-aa32dcf42c8a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115e7b7b-7a26-4203-8473-e327c63f35bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58a5fcb7-2d3b-4f97-9f1a-cead2d1e95dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e05c16-7222-4ffd-8c6b-abd7218a7d26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0304f2b-4f3a-499f-9a66-c9222fbda768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4029cad1-70db-4f67-8d23-8b57d6490ae0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6422fe01-07f6-46c8-8fee-12ceb9b4a655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28379d9e-c7be-49e6-9b6a-237e64e18d8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2aebcf7-ad96-48d4-863a-6b15134b290a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1caa4241-aae1-4c13-ad80-237793e3f661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64f0cc9-518a-46c2-8285-193f8621ab54",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4512e306-15ab-4cc2-b75b-f8997969a9bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c97421e-0c85-49fa-a68c-f4495465b1b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "852a07b4-a117-41d7-b85a-4e92cbdedef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "663d0ea3-e7e3-424b-bc81-8a2a85b749f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df52a36-ff65-415f-8866-5bb6d0e07c1c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb7966b-4e8f-4b2a-bc6e-f9f902dd48d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87bfdb20-96e5-45fb-884a-413d3b3eef6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc6324d-0cc8-489a-9aeb-ea1e35b3dd35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dd9b2e9-999b-4497-8a8b-15786ee618a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f4db50-3ed6-40bb-a4e9-4ad42b2ce894",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "811cdf23-c563-4496-a3b8-3e2e58f93f56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a932b66-3408-4f39-9ee1-f0aebb5127ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "267e4489-4523-4943-a3d2-902404dbfc54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d855989-5a21-48f4-9ae9-ccd9f6ae566f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6629b924-80cd-4481-afc1-cd115f65b258",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee2504b7-62a9-4ab7-9e15-160424a6528a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff563c6-8ee8-4d46-b854-0b19c8d4fdbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a10cd09-2c4d-4a26-89f3-53727a65200d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "965d0d2a-8a01-4779-8adf-e554e86ee2b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18aa3c7a-4523-4570-95fc-fe6d05321392",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3852e0cd-4871-4b3d-83a2-8f29541297f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "311111b2-614e-4b94-970f-dafb647736d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3dad84-b487-4d52-993b-35851042c582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab9e744b-4cb6-48e7-b28a-bbceaae638ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd42761-7df5-41bd-a46f-26b9e2b35918",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed07f77-f516-4fc0-ad88-58864e113c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeb27d06-bc65-4075-a579-552558890403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce77323-d7a6-4d6b-9411-863b3c455f81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db9ce80b-c1f3-4c35-a08c-c2cb58f924ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c987d91-8cc6-43e6-9e07-9db7b46cae1f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6c8389-869a-43e7-befe-fbe8d39cf5c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edd697df-d2d6-4289-91ea-6e9c913d154c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c5231f-6911-46e2-a59a-dc356fd0f77d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba0dc49e-9561-4b1b-8194-000987cc3632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c83c3d4-9ed5-41e4-b1a4-a5830680f2f2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640588d9-3471-4a95-9e76-194583df2218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87af12d6-b4bd-490b-ae33-d0d53d297543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4174c97-1199-4ac7-aa83-761664affc2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aa2e9d1-2193-4b1c-a53c-ee5c6317dc4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4306ce39-2c28-4b8f-9f9c-f9973ecf3cb7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac65076-9cc4-48f7-bcde-7103b8db1b42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "496b7f4d-c659-4ef0-b592-85798696deb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3198e01-bf83-4490-9d53-16065449c50d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f445d715-1620-4e5e-920b-2b0dbd56ff74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aad21bd-94a6-4a1e-8775-46b1e415298a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8468ccfe-b95b-4645-8361-b5efab90dc4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04e06219-0d39-4b2e-a0e2-59ed4c62e662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab63e270-7fac-49cb-9415-308001a36948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "820e5133-114e-4fb5-9c55-dbac93632403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47b2b30-fa28-4fdc-b7fa-9b6cb557394a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe09c245-5208-46b9-9148-877240c7ed84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d734324-5e57-4bfd-8df5-bfde3807c70e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f20934-b50f-4aa2-9edc-0ea38933d705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95d02e04-a2b0-45fe-9562-342f5055d20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009c8a28-e1ee-4909-af14-728698b48a55",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1a2440-f9ad-40dc-9d45-edfd6a0266a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6ec518b-e922-481b-9621-1a8e2f0432dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92022724-39f7-4773-8405-3e10090ea01a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a86401-58ef-436b-937e-001071d7dee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1910af6f-0973-44b3-9f7f-6ec11070329e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52267f78-2a96-4c9e-b037-21d562b1fc36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2239f9b-8ae9-473c-b747-c905b55dca60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2f202e-ceff-44e0-998c-8830be4e73e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8476f82a-f903-47a7-8657-d9508b69ea60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53514706-fd23-4e02-afe7-16a3ccd70610",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4eb583d-36b5-44a0-938f-d51a5e623acb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b809304-cb3a-4dd9-b16b-cf9af17af0d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a6eedb-b320-4d68-8e7a-851af98475d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d366f33-b4ec-422f-ad89-edc7cea558b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb095135-1ae5-4298-be55-d3a8a8a7dc1d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878efa17-d321-4818-b25b-c003d9d41ada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c25ea84d-f093-401d-aa57-452f4f5993f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e3f4b8-e3d2-423d-a9b5-ed6fd323167e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b7df4ee-59d0-42ff-a38c-80d4f13afac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2fb289a-a686-4ab7-b8e4-9ea8eb455f3d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6c8554-3e99-4e03-9055-9f9fd63a8345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d239979a-f6a0-4472-b9c1-71d169587aef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ca90da-c422-46a9-92af-bbe3fd0ad2e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3773bc24-375a-45b8-8b3a-cf71bf386a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac30fe5-5685-413c-acab-e750a9b2090c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d8ed22-d36e-4cdc-8130-ea493559da30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c4413e-3fe7-46f0-b545-d04c0b47377b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "591c38ca-a9d0-4937-80f1-ec3d8f1609f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1016fb84-aacd-4478-8172-df21c5827797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "165b37ac-3ba8-4e6a-a2ad-b04ff1218ce8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2415faff-f631-4a9f-bcfd-4e66bbfbd112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5551fcbe-9a69-43f4-9257-d89ef31bf900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "282ac00b-6817-49ed-9de5-14f8bacb1a6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fffcfdde-0205-4b2a-9bf3-874e50a71883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5fe6d6-1819-4d2d-bb10-85431011568f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748df223-9a69-436b-8bc4-749aae3247a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24cdb22c-1761-487b-947d-ee69d036f07e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c2e801-c452-45ae-b92b-ee6235ef3aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9376259f-46ac-46ea-9df6-2a5eca382173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8247cc26-691a-4987-af17-a6f8123da079",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3fa8754-d8b4-4562-b841-bb514a2ca3cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0293c715-9ce7-401f-a3e6-43923ea987a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f73c08-1ef2-44d3-a466-f260f4fbea9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b516924-8b97-49d5-88bf-e3d136342d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea17c421-d9b6-468d-b901-97ead519c9eb",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2146c4ab-7125-48b6-a853-dfb469873c81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "895eb70a-d6a6-4d74-b1bb-a4a55b1da5d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "924a30e3-571e-4b73-a599-28d25ea38b53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec90954b-0acc-4000-9991-e3f2d43f7917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838c829a-172c-40bd-b1af-b004b627f930",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b21844f-7f15-4404-b602-97471872cf1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e289e7b9-96b4-4c09-ab7c-f0bc1b14cc39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d5d08f-3080-466c-91c6-2531af43f129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d868b58-de5c-428b-af48-166104fffe03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ceac5d-d9b8-407a-b6fd-a65883cbcddb",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "099d39cc-f048-4658-8c52-61a9fe3095fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43bc314e-9a36-41da-ba30-0917b006eed4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b331b2bc-d068-495d-bcbd-50b4e13b8376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c59cd4c1-7d90-488d-81b3-040316cd96e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0e10fb-56b7-4bb3-ab0d-fe7e3a3768b1",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a9630d7-6c4f-4e71-912c-50874ce1a389",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5605e612-349d-4396-8c76-76557660e26b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "699fea11-4ae3-4186-8698-e857beefec7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f39c9b3-91e6-47b4-9ae3-661dc0630fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87abc7a-d2a0-4903-a22f-3c82af1afe8f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca4fe37-25d8-4751-ac4a-045366f05e9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a772e51-6bb6-4263-87a3-207d555faf93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a715a5-d684-411e-bcd6-9659b4a4f1de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a3dd720-ec48-454c-b5ed-50b85bc16c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccbd3814-208e-4b12-9175-305d094f3c48",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cdab869-36e9-445f-8428-db5eb3f4b2d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dad1c292-3907-4945-972f-c490eda8e0be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83abb25d-ac2d-4c4c-914e-9ceb9a0fa25f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c941c6b-1fd6-4e66-bf7a-fc59a247d3af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1539d04d-1c84-4d15-b1b0-8ceeb4f39b52",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d78871c-893a-496b-bcb1-e4c3014d5dd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ece1b3e-08a0-41e1-b2a3-b4ce347811b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c1b782-77d1-4c55-94da-733e1e60cd05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f6d0e4b-64cc-4966-a8d3-006812672f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc3dc57-8a3e-4ac6-8ff2-d4be1ae9a76c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e088a72-f861-4636-a474-ef6d047adfae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07dccd3a-a70c-4545-9bab-d5cb9a35917a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e308e969-fd05-4195-bd4f-eac10a2681c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d40b28cb-22ee-4479-be20-8092881ed4f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f8fa72-36c0-47a0-8d5b-fda80390f604",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c66d5e5-cd95-40a8-8734-14e0c38e1783",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f03cea75-0be9-401b-b0fc-d6ed628c1ad8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e054de82-eab7-435d-a109-b8464c4600b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f21fcd4-6931-479f-a0b2-825384ce2785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255e8135-9fa7-4c5f-9f63-e554d3af9280",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea80cf4-ed9f-41d8-b1f5-79000d7cdf20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d05a6e3a-d054-4d19-a626-e0b756446889"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61d3729-6c23-4762-b361-e1bec7099afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d49e542-42ac-4b1d-a3f1-c2096fbe515b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f18fb73-0b8a-4942-9887-f21bfcfe3327",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fcd82ee-8c73-4f1c-9b40-5cb25255c0d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d61d6a27-c7a1-4b49-bed0-681f69655eab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "024cf813-24cb-4a37-9cc9-548878399c48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee3be711-44de-4171-b1a5-8e8b669dbfcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f702403-18c1-4488-b641-7535a31983a1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f5ab65-2a26-4d35-be09-b3650150f865",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ed2e6fe-e98b-47a2-ba81-aca11a49aab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1805bdf-3b2a-4054-8b83-4ee578acdc8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8549656-a854-48c7-b120-3839cd926385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194ae4a0-3753-42b5-872b-15811e9f2ebd",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1f2eea-549c-46a9-bcea-7be93dbf4273",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e314d48-e86e-49a6-82c0-c83b9c813db5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "312614bb-6783-400c-a37f-161454e121fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "987ca058-dbb6-4703-a5b9-3ab4833b2c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e803ec-56f2-4aad-9ed4-b6e2760bef49",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea19d420-dcc9-4e1f-975a-962a36a8f00b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83ead8e6-b6c5-45ba-9a73-4bf7be750eb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ee94a5-ba75-48b3-be15-ea70c9408abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "294b2acc-ee5d-4847-8251-a08fe52f341e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef82c79-8308-4e3c-9e5b-37870032578c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b0bb4a-2b0c-43bb-a48b-0c3e0068fc4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a23470fd-a10d-4a65-99e9-04c95316968f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb359b2-dc1f-4599-b495-fe5fe3419021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb8cb8b-fe1d-4d59-bb08-ef3a0defca13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3922e966-daf8-4704-a719-3177f2106cf8",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d90ca995-d6cd-4f69-ba49-b53c91af5e02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bac7267-8fda-4178-81d8-e355feca595c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f910bf-d25c-4ddc-89c6-c05dad19f5f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d397fa-bf71-43f0-8c5b-56c71783dd2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774da583-61d4-4cff-ae77-080e29b1e93f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3313278e-21e1-4f7e-a464-5a6a65217feb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19d0e14b-b27b-4ff5-8329-6911e1caa754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d01d3e-26f8-4b5e-b91b-00fc89621b65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c90914e-dc1b-4c25-b34a-aa10a32b3a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41285fe-f914-46d4-9463-654169265a1c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5d86ca-be06-4c5a-8e66-20e589bb425d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "880fc24d-e1ce-4e2d-9889-d204d934699d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b5a65fd-4602-4da2-b766-bb689ac2fd48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8953831-2e6f-4554-a9ca-f318f9f53d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0587a5b1-1ee4-4379-888c-c727d1afb34b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219c7f21-4e56-473a-8ddf-f044f312520a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "000967ef-799e-4371-a268-178de6f3f8c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09e79b9-447e-41be-ad67-59c9bd9a4d51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fc4ee2c-f23f-4144-a642-b901914404d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ac4bd7-5e4a-4e14-8a1f-552f4d1b1c25",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8b5f55-cb3e-41d6-883d-506badcec0ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c43090cb-f06f-4cf5-b1e8-3fd29e2f14b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5805c0-2d86-4989-9cd8-1ef7c7b3c86d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "965aa527-4170-4e33-b349-cfbe6573e98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a487ec-d3c8-4a0a-8979-e313513378f5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b5faa3-5a1c-4b98-b019-15b623c438c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73c9abfc-734d-4c41-a7ed-3da661d881f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff631f22-ed7d-428c-bfd5-cb2acc2111e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c98539b-3b34-4189-bec7-cabfe7592c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa41f679-2882-4682-a694-c44b39380d14",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d724b1f3-e689-448e-bef2-b95b7819766b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e01721a4-ad99-4927-ac6f-b8cf3360f814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55b617e-7822-4c42-8edd-2a513009f863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0910bd75-48c3-481e-bcfe-43b2d6c235f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4591fe5-36c4-4cfa-8c05-d18def370d6f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb9b83c-1d54-4927-b948-f7af0db948b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48dd91c3-bbc5-40e6-a36a-d6ca548e14ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4dfc10-7e2b-4e14-9fd9-c60b33d6a2ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59d88c72-4952-43c9-945b-6a897b7cfa2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad703a25-9eb9-4707-8d72-b8e0e59b4a32",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0018186d-014e-4e33-9cfa-5e39da0dc6aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5320f68b-62b3-43d5-80ed-0f226b68d3a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a389ed18-3334-49bc-ad25-f13d09206c33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "698ddfe0-a82e-43c4-b5b0-89c714c35b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5f8be3-364d-482b-beff-f64d459fe77d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aceb4d8-5668-44ca-85d5-d4ead5379443",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0919cec7-d780-4d5d-88e2-96b767616d90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b81c2c-8c8b-4d45-add1-fdd32f7b9c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4041ee50-e07e-489a-9d46-31acbaa7b12d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317e113e-6d9a-4b1a-a86d-b67eded21a56",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8d1f9c-af36-4e61-90e8-f15ce800bf26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c33e1776-91ad-4265-83e5-9a92a3922a12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91180177-abdd-43f0-a51f-3e71e6caa79b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b69ce89-0fc3-4f59-8dc6-28d1cc941a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1752707d-eac3-48b7-bb95-1f5fca3a3971",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150f09e0-8d93-4da7-8f24-5fa4a1a6799f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62e8db59-b382-4e29-8c4a-4807c5aba659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6467095f-a5a3-4b45-ab12-bfbcd10db62c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1dcd63e-abfa-444e-b502-5d1bc295cd38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e635a0-f3cc-459a-92d9-f3e3083709eb",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f2064f-55c9-4789-96b1-a0e1c34015b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a10f2759-cb92-4781-a628-4cedae4ff499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4f38cc-bf5b-44e8-9d63-b13ff14333d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cf99c72-733a-4179-a299-fe5278f9f20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c27856-0db6-43ca-9230-a9a0511de1bd",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e257a95f-162f-42cf-b952-6efce87baee9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "096ef9da-2e4a-467f-9027-5741de9288e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "350352f6-88b9-4787-b10a-987c763e461d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4452096e-e120-406f-97b4-a708b6b771ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d32dd3e-bca3-4290-8798-550740c76e80",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c40753-32b1-4be3-82b4-c2b5d0a6c0be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bde59386-abd1-453c-bdc2-42045f5131de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1ba35e-5c25-4d80-a23b-5b8bdea47577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26e6f316-ced2-4d57-b7eb-8b84e057227d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250430ae-056d-44c6-9276-b1fabdbf593e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b657f3-aae1-4cac-9657-a6a10a47dc96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c345f080-55da-4f20-af96-077cf993c53d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec3b2da-3392-496c-b3b3-253336866bff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72b77a74-77ea-420b-b667-d5c819b89046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0a09ed-00fa-4b72-9728-5181beaaf415",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd19cbca-10e3-40b6-8f32-f73f44d655e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ca891d7-4217-4396-9627-bd2883828043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "506f6af1-3e6f-4266-9a4b-456dd27551ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c645b49a-46b1-450b-a59f-36518f80b559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56541576-44d8-46ba-9afd-42a1aa72685e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dae39e0-9dad-4f01-86ba-52cb4ad66ddf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbcec398-a0e0-495a-b1d6-0a9b3751df04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1e1245-67be-4dc1-8ca4-9efa7c68035e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2a84614-6421-4318-b1d3-9fdd3292602e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520f84e0-da93-4657-9c7a-c3eeffc39d4a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015bc3e0-f0a1-4430-a404-148b39b3a802",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad02593a-005e-4aad-9207-c8cf3d1d3e95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a4d298-9eb5-47fc-af33-1f8d29245f02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8056913e-422a-4c60-b26e-2edb25ea680e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06af02e8-baf3-45ef-a9ef-9eae51377070",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd6e355-6335-4e4f-8aa4-ceb4070040a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12047d22-3fd4-4c43-9aba-aad97b24a01e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43924fc9-c8ef-42cd-ba87-890c44c318a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3c4550c-7b28-454a-a4cd-8bc182540f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5512dd5d-ac6b-4cd3-af8e-78e65ff1487e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb79dc4e-fd0f-40a9-b75c-7b46b31f1e7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea3b37b0-f742-4ef4-ae66-3c3279f00764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c912e93a-cddb-4a88-9429-2d86a1f3f67f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde34c07-2520-4ba2-8ddd-9cd4ded4e7dc"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f7330d1-e1a9-4475-8a8e-4c79a13a3bd2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cfd16cc4-9e5e-4267-83da-379555bc230d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0eb5b39-9993-45b1-bc05-d65cb637e7e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5323fa3a-afe8-4392-a16b-6947a1f99bc7"
                    }
                  }
                ]
              },
              {
                "id": "9d4aa726-7a64-45a5-900c-795a49973182",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a388a99-203b-4c7d-b65b-bb64d6ca67cb",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd476109-7a81-49bd-9687-fe0300fc8eba",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "07d34c41-b9c6-4cd8-8e34-16463da97946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23321e3e-1eab-4166-99e3-7262001b3b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac56b469-954e-4aea-bd60-f9d916cccaca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7184124a-776b-4bcc-88f8-59a1c462e7f4",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7bb5b6-087c-49d9-acea-bcd4c48cc496",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "145aecef-c5e4-4f49-9321-f4e5b83d91f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7832673-7ba7-4f69-b887-3999572fad89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f889c19-f521-4950-b435-4d33287f3fd3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c381c58a-2bcf-4fe8-8adf-2aecdab4cbe1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6c121ea-a10b-44a3-b443-2b0d58da981e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0910611a-8b56-4132-be25-1d6823f47e5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7273bef-8c73-4181-813b-8c69451bbfd0"
                    }
                  }
                ]
              },
              {
                "id": "0068d22c-0774-4ffa-a675-f141770cd082",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f73880b1-8cde-40ed-9092-838621b2e22c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "805f1932-872a-40ee-9b53-6bf1370e680f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0d56345f-d098-493f-97eb-4217188a4e1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cbea0ca-9afd-4781-a758-724cfe9887cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f06490c-6d83-4730-9d22-d98927441727"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a307c4f7-c054-429a-a89d-c62cbfcdd0ee",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2e99fe8f-b4f9-4306-8dd5-b5fb1cec1877",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e696721-1364-4768-913d-b2acdc62c0a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9683bd22-7126-4acc-b7fa-66dedce115ac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "332b61a8-cab0-4f44-828c-77074009e2ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c404a04-9189-4eb3-9856-b78a09d71833"
                    }
                  }
                ]
              },
              {
                "id": "74e88e0c-1d31-49f0-a2f5-4ae539aef33a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a01bac79-f247-4c7a-a908-8ed27bd06313",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "17b38c9d-74a5-46a8-8a11-8b296b1fc785"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92e431b8-3e3a-427b-9e96-69ee2a1baef3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3147cee3-8137-4957-8471-2c477d620949"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f7b10308-8a76-42f4-89e8-d31f04ef1672",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "14baeb3c-4820-4e48-ab83-a618af525a9c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8c16ab39-44a4-414a-9272-a240ba37b8b1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cec22755-35e9-4c40-91ca-ec765eb78fcd"
            }
          }
        ]
      },
      {
        "id": "db76b998-ff5d-4cf5-b103-00b0cd192fc3",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "dbe006f0-ab78-4fdc-93a6-522681f955b1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7a33aa8f-c85b-4f73-8620-a74664bb916f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e6cc8162-7465-4f60-a88c-369d94e5f5f3",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07cf02d0-8d30-40b1-95f3-8afddfcf71f7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a781b990-4fc6-469a-92fe-6412fab74c18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b46da9-c626-4da5-b76c-b47c1278c9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c710f4f4-2468-4596-a1c9-a061dccb1a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c7e030-6cf3-4202-980e-5c1406028e92",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17d31f7-b044-438d-91af-7c077a069132",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "adf0bdf3-4ca6-41e4-941b-70e955464935"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3387625-d6b7-4050-b808-6af5e1500182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f375dd3-2e7b-4aca-a09e-9dbd4d457009"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2031736c-c784-482c-8c08-2e55292a6eee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10b11a8e-4f0d-4dd5-b88a-c3f05c20b521"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "89672f0f-1ead-4bff-b5fe-49964edd5ab7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8065125a-f3b8-431a-bfe2-3b6af88b97cd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c2202d7d-1b12-4329-93a3-8776a61c4285",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9f6d28d8-7b7f-454b-a7d8-364749039713"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce0f50c3-c88e-4310-ae7d-873ccdeb560b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "26badc9b-085d-4c1d-bdca-5f13a9d76dc3"
            }
          }
        ]
      },
      {
        "id": "8cd12e0a-5826-44d5-bc5a-9013e1435578",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e892d739-c963-4d25-a042-369ffde697ac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "65e25eb9-77c1-410d-b686-2e22e766731e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f60be134-25a1-4503-b46b-021a7f24543c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dffc6f4-6b57-43f6-95db-579003eed473",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd23c5f1-3436-4d27-9c60-961ffe45816f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba70aa1-0846-44e6-8f23-fa553dd84052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "faaa8668-9e75-4115-a4e2-984fd4ec22f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee2d1b0-2ced-4073-9c2f-63e334629ec8",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8212d3-643e-4cc1-b44e-43329abeb66b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3af07f9d-9367-4e0f-ad81-8bc67890bd3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6eb0da-4754-416f-87dc-cba659cab5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de9de18f-7bca-40c8-88c7-3513a99e1628"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "047a19a6-f08e-45ca-966e-94404ba3addf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d40c60e8-adff-49b4-9f81-a352706577ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "af9e9ddb-1d94-458d-a5a0-01403083ab25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7fe90949-1a22-453a-81f1-e7bfb2bcfd34"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7aef4895-876a-4883-830c-acdb0ace770e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "905e0d5f-8e5b-40fd-ac50-c26dff615c79"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b655d71b-3a05-4858-8f0e-f69790641bd8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "efe4e5c0-2e72-4793-947c-a3ec5b75f48a"
            }
          }
        ]
      },
      {
        "id": "77b97049-7f1c-4f0d-899c-dd872fe957ac",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2517b81f-3520-4bac-a8cd-ff296d18afcc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2facd3c0-db49-4aea-b2d6-fb5aca1aa4df",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9cbe0a10-64db-4c79-992c-a34382dcfffd",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0bbc766-174f-459c-923e-fa610d2e9500",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1eab4858-f536-43aa-9196-e421ee93ebca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ed62a5-3c1f-4cd0-b162-7c9aff9bb906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d2e997e-e4c1-4d98-a35b-f55d42704241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ffdce50-cfd3-4480-88f4-ddf3ef483411",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb163580-ac8d-419d-90cd-ef95466507ce",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "862d7848-a9ab-46cd-a531-a159dd56870d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2197767d-7158-4e4c-a359-7af54c8d0f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b352f1bf-4077-48c5-80d0-7de6e1553fce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13bc9124-5ba5-45d9-9bd2-cba118a3a82f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7860a8b5-3f52-472b-af8d-dd5cfdb6d8de"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9fd7273-6bd4-4d58-9bc0-d427099de65f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "465132eb-0855-43d7-b77f-2e939d0fae74"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "729949f1-a1e8-4e9b-b4a2-a6647f37a449",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3b1f31ad-18a3-4d64-a856-b78424538bfe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fdf74096-2c52-4b16-95e7-23a0e264f1b3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "79ffe9d7-8f21-48c7-ad01-2ef17491b4dd"
            }
          }
        ]
      },
      {
        "id": "e1ce0776-30d0-4daf-8a35-7d412b32f2b3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a222b8e0-8978-492d-91f0-365d0ef07f2b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "112790b4-c01d-42b9-9a4b-a9038f44b5a1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6f7ae92b-c36c-4e24-838e-6466d175e4d5",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "df34bb2d-48de-40ef-a9aa-ea5f5d0a7257",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "83a0157c-1eb2-42a8-a96a-9f605bdfaad8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 650.8378378378378,
      "responseMin": 22,
      "responseMax": 4925,
      "responseSd": 599.3850168413102,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1677810854558,
      "completed": 1677811033875
    },
    "executions": [
      {
        "id": "48c56f29-e18d-4494-b9cf-289b6d34d2b7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "507b4f83-fe1b-477f-a024-8faa1397b9b2",
          "httpRequestId": "942e1b99-447c-4401-82b0-036f1c8cc6f9"
        },
        "item": {
          "id": "48c56f29-e18d-4494-b9cf-289b6d34d2b7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ba64716b-96b1-45dd-ae9c-5de69486c6c2",
          "status": "OK",
          "code": 200,
          "responseTime": 90,
          "responseSize": 0
        }
      },
      {
        "id": "9c6dfd6d-b90c-4d55-a4fe-e949bbd1a281",
        "cursor": {
          "ref": "420857c0-fdcb-4631-be37-abe21aae15d4",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "41d60911-a41a-4d0a-a67a-12a891d5ce5c"
        },
        "item": {
          "id": "9c6dfd6d-b90c-4d55-a4fe-e949bbd1a281",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0db723fb-a978-49da-96fd-d471445ec1b0",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 0
        }
      },
      {
        "id": "428b9e16-23ea-430e-8c32-4309c64c718f",
        "cursor": {
          "ref": "9184f5e6-77ef-432b-98cc-8931c37f035a",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "52fb5316-39b2-40e7-b36f-abf5b25d0503"
        },
        "item": {
          "id": "428b9e16-23ea-430e-8c32-4309c64c718f",
          "name": "did_json"
        },
        "response": {
          "id": "c7599f36-8600-4b25-ba1e-a0e3bae02dbe",
          "status": "OK",
          "code": 200,
          "responseTime": 1058,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2c3a4b-93a6-4021-847b-f5b750a53977",
        "cursor": {
          "ref": "25ad5020-13ff-439d-902a-0748c968040e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "465b66b7-e1ec-4f7c-91fe-15a36c8d5717"
        },
        "item": {
          "id": "2e2c3a4b-93a6-4021-847b-f5b750a53977",
          "name": "did:invalid"
        },
        "response": {
          "id": "4423a1ff-52fc-4bbe-aa24-f889ad74851d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2c3a4b-93a6-4021-847b-f5b750a53977",
        "cursor": {
          "ref": "25ad5020-13ff-439d-902a-0748c968040e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "465b66b7-e1ec-4f7c-91fe-15a36c8d5717"
        },
        "item": {
          "id": "2e2c3a4b-93a6-4021-847b-f5b750a53977",
          "name": "did:invalid"
        },
        "response": {
          "id": "4423a1ff-52fc-4bbe-aa24-f889ad74851d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4b9909-fe68-4c40-89e2-26c4a2f7dfe2",
        "cursor": {
          "ref": "1c873687-7f68-4a5a-adea-081ecde0276f",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c03a9661-43ce-4dcb-8f9c-0c130e8d4594"
        },
        "item": {
          "id": "ae4b9909-fe68-4c40-89e2-26c4a2f7dfe2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c02dd8d2-b52d-4ad0-be55-c80a5a48744e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 759,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e58810f-b200-4eea-b183-3159db2fca41",
        "cursor": {
          "ref": "9d5789bd-18df-449b-a0ec-c3ec4897492a",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e15e63da-1c07-468a-8390-bf703f681f42"
        },
        "item": {
          "id": "2e58810f-b200-4eea-b183-3159db2fca41",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9e1e5972-7a71-402c-bab7-0c0e043ab54d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 590,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b255d67b-0119-410b-af98-6b6995b8a7ec",
        "cursor": {
          "ref": "217d72c3-0388-49d1-81e1-e5011c0c651c",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "69d0c89d-10c7-4c0f-9e57-061bee7f45e6"
        },
        "item": {
          "id": "b255d67b-0119-410b-af98-6b6995b8a7ec",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1ad3d962-cf44-467e-834e-cffe108e9f59",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b92c48-1d2b-4c42-aa80-29c09af32a73",
        "cursor": {
          "ref": "7abdebcf-ca6c-4263-80af-e888cf6b2a3a",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "667ed6a9-5de0-4f98-bffd-008092c52f17"
        },
        "item": {
          "id": "91b92c48-1d2b-4c42-aa80-29c09af32a73",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "9b273028-756d-417a-af0d-ebae82a04149",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 580,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b92c48-1d2b-4c42-aa80-29c09af32a73",
        "cursor": {
          "ref": "7abdebcf-ca6c-4263-80af-e888cf6b2a3a",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "667ed6a9-5de0-4f98-bffd-008092c52f17"
        },
        "item": {
          "id": "91b92c48-1d2b-4c42-aa80-29c09af32a73",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "9b273028-756d-417a-af0d-ebae82a04149",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 580,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03f6544-67a3-427a-b4f1-a47683dde4e8",
        "cursor": {
          "ref": "61911e43-2d5a-4215-a110-8c9a322d08ce",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "aec90be3-3249-4eee-848d-d71658fe0329"
        },
        "item": {
          "id": "b03f6544-67a3-427a-b4f1-a47683dde4e8",
          "name": "identifiers"
        },
        "response": {
          "id": "dded651b-d5ae-4c3b-a799-74acccb93f8b",
          "status": "OK",
          "code": 200,
          "responseTime": 982,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af2e668-a6e2-43cc-ac8d-ff83490f6713",
        "cursor": {
          "ref": "fc50dc91-5af2-47b7-af9f-4ad2a25714c0",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6056c117-2b27-45a8-a089-54e3c94f296c"
        },
        "item": {
          "id": "1af2e668-a6e2-43cc-ac8d-ff83490f6713",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2538787a-6c26-42b5-8f1a-84b805dda580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af2e668-a6e2-43cc-ac8d-ff83490f6713",
        "cursor": {
          "ref": "fc50dc91-5af2-47b7-af9f-4ad2a25714c0",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6056c117-2b27-45a8-a089-54e3c94f296c"
        },
        "item": {
          "id": "1af2e668-a6e2-43cc-ac8d-ff83490f6713",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2538787a-6c26-42b5-8f1a-84b805dda580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb7d9a8-e69d-4df4-9a81-61eeff3fb695",
        "cursor": {
          "ref": "5b018c0a-0da3-45b7-b025-c7f2609edb1e",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c32588c0-5e45-4786-b588-e8349f49ec21"
        },
        "item": {
          "id": "7eb7d9a8-e69d-4df4-9a81-61eeff3fb695",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a8a64439-af06-41a2-bb6f-eba7d68c07c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2d31f5-ab39-4f80-9d03-edc3bdb00da8",
        "cursor": {
          "ref": "b8f797ca-7bb7-47ed-8f41-0d4697074173",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f14718d0-34af-4209-80b7-0f2867db77d0"
        },
        "item": {
          "id": "8f2d31f5-ab39-4f80-9d03-edc3bdb00da8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "cf257b33-fda2-475d-9860-90b2ca58950c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc361e49-9338-478b-bdcb-717d03a3dc38",
        "cursor": {
          "ref": "cafa5c01-34ef-43a4-9564-48944e0aafcf",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "fad9877f-bdce-4bdc-b6a9-1f0a7f6155f3"
        },
        "item": {
          "id": "dc361e49-9338-478b-bdcb-717d03a3dc38",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c3041208-a5c9-4a14-a975-ac472a028f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1f147f-aaa9-4dc0-9e6e-b1d9ad8fffd7",
        "cursor": {
          "ref": "1634cd16-dd3e-49c5-8718-37692f0bbf38",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6d17d081-3a45-4570-be77-61149dcaee4a"
        },
        "item": {
          "id": "ac1f147f-aaa9-4dc0-9e6e-b1d9ad8fffd7",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "dec8925b-b72a-493e-9db2-1085839a6d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4fd3e78-19f4-43c1-ac0f-0468fc7bbf8e",
        "cursor": {
          "ref": "d5cecf49-f4cc-4241-9620-eb80bb6a660a",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "88de4b41-8d7e-4791-a3fc-05a66d6565f5"
        },
        "item": {
          "id": "d4fd3e78-19f4-43c1-ac0f-0468fc7bbf8e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "70673d23-3f77-43fb-8b6e-afdc7f5fd15b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a0dae7-7c31-4310-b79c-b3840abc06f1",
        "cursor": {
          "ref": "aab31b20-4794-4940-bd79-3c4b916e7762",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2e090873-0e88-459e-8d31-ae534c090439"
        },
        "item": {
          "id": "52a0dae7-7c31-4310-b79c-b3840abc06f1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e2c32c55-1b66-4961-9c40-063d8c5a140e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233e6cee-d028-4319-98dd-efc2527f8ba6",
        "cursor": {
          "ref": "e0af9277-7278-4801-ae4a-1de64ea37f27",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "41d98856-c966-40de-a083-e559cd3a65e7"
        },
        "item": {
          "id": "233e6cee-d028-4319-98dd-efc2527f8ba6",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f62b6700-28bb-46b9-8d95-3c9961ff742b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02eb6da-4bc5-465a-8228-d0a202de3c3e",
        "cursor": {
          "ref": "c73431b7-65fd-44fa-aa23-bc78942780ba",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3d23d27f-9171-49d7-ada5-aefc40b02ce3"
        },
        "item": {
          "id": "c02eb6da-4bc5-465a-8228-d0a202de3c3e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "93276d04-4e2b-4c17-924b-79262464de42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5b62e5-b617-40b5-907c-d02705668f49",
        "cursor": {
          "ref": "0bf812f6-2350-4904-b529-93886b11da88",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4a91a55c-29b2-4459-a979-cd76fc400b4b"
        },
        "item": {
          "id": "ac5b62e5-b617-40b5-907c-d02705668f49",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ba6738e3-dadf-4aa5-b501-952d4d6afa6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79165519-af64-4c61-83fe-fac35e3888bd",
        "cursor": {
          "ref": "4b6019b9-71a2-472d-b8c4-f68d09b8a7f7",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "461f584d-dd01-4df4-8326-d2a5f77e95d5"
        },
        "item": {
          "id": "79165519-af64-4c61-83fe-fac35e3888bd",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b73c49a4-8d1f-4828-a0b1-10fcb3885835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c77ea78-e7ee-41cb-baac-51f2f9c55389",
        "cursor": {
          "ref": "8ef4bdbd-c0f9-42c3-a734-2865d49f392c",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4d4b9c62-884d-49e9-be60-7ab8c7093b48"
        },
        "item": {
          "id": "6c77ea78-e7ee-41cb-baac-51f2f9c55389",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c75f94fd-b6f2-408f-930e-f4d07bc62397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 699
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6693da87-93da-4251-b41a-16d200197179",
        "cursor": {
          "ref": "b132f6c7-460f-402f-b1d2-14e87ecf75f8",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0b59872c-821f-41c7-a223-9af15463d68b"
        },
        "item": {
          "id": "6693da87-93da-4251-b41a-16d200197179",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e0d90b58-9e56-4790-bf9c-a4f493d2aa35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89032d3-17c0-42d0-a8e6-926c76063594",
        "cursor": {
          "ref": "9708c24d-ac03-47c5-a82f-1360d178bb97",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1f0a5ff1-3fe6-4041-8260-5c6e402b6fe8"
        },
        "item": {
          "id": "b89032d3-17c0-42d0-a8e6-926c76063594",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b7f2c9b9-2c96-4d3a-848f-8c57ac1959e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a545efd1-e6be-4564-811b-de76c1a5eeda",
        "cursor": {
          "ref": "daea1ab6-810f-47bc-9904-a0838ee279fd",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a2e145e8-2ccb-4719-a076-5a79e0f1e3f7"
        },
        "item": {
          "id": "a545efd1-e6be-4564-811b-de76c1a5eeda",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d9e49952-2aac-4a95-8ebb-447b2ff6125d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276082a9-4ac9-4c46-b38a-ca60b757f613",
        "cursor": {
          "ref": "20d7b989-c6d2-4c22-8bf4-12286af273df",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1a3554e2-6739-4962-8c5f-f6f613bfc7ea"
        },
        "item": {
          "id": "276082a9-4ac9-4c46-b38a-ca60b757f613",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6f33d61d-2888-4dd4-9af4-f4c66e0fea00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b494947-365b-4317-9fec-15e0da9ee860",
        "cursor": {
          "ref": "9fc93478-8be0-4d21-88fb-524a8613b653",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3477cf3f-3767-4224-81ec-7b7c41e24bd6"
        },
        "item": {
          "id": "5b494947-365b-4317-9fec-15e0da9ee860",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b6c88e30-163f-4670-8454-b62a3bd1e243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533f68c9-0c64-49be-a20f-c7d8cb1f0402",
        "cursor": {
          "ref": "16f9f54f-4e9e-43c5-8d90-15eb3be65d1a",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "bd4e62d7-7a8c-4f06-b02a-f1d8bf1b33f0"
        },
        "item": {
          "id": "533f68c9-0c64-49be-a20f-c7d8cb1f0402",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a678f42c-8861-45e1-9846-0d977dfcaf67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f520fbf3-343d-4e07-8290-23742d45da0e",
        "cursor": {
          "ref": "afd8fe60-d9ca-40fb-9c29-f9418bfba2fe",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b1d851cf-b485-4e1a-985e-ca5e8903a73f"
        },
        "item": {
          "id": "f520fbf3-343d-4e07-8290-23742d45da0e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c36450d9-434a-45b8-b5e5-943588e23569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802f612c-a5e2-4f92-b6bd-c7aadb34a818",
        "cursor": {
          "ref": "d2ca74f7-1dcf-470a-b7a5-f175efd2d069",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "bc9bbdce-4afe-4004-bce8-247c543886dd"
        },
        "item": {
          "id": "802f612c-a5e2-4f92-b6bd-c7aadb34a818",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "bfb73f87-0af9-4919-8b91-53c213cd20f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab0da0e-76bb-432f-9057-2303f8f4f355",
        "cursor": {
          "ref": "f97420b6-06c0-4ae2-9be8-e8060f627152",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "018dfd0e-22f1-452b-b272-ac32fdaa3580"
        },
        "item": {
          "id": "7ab0da0e-76bb-432f-9057-2303f8f4f355",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6653a357-760e-4b72-822a-6630c8ec60ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da2e621-1c5c-442c-887d-0c030db3c229",
        "cursor": {
          "ref": "cc656755-f764-484d-8f83-bd0786405c37",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e1432a39-3ee6-49e6-8826-ef21557ee566"
        },
        "item": {
          "id": "7da2e621-1c5c-442c-887d-0c030db3c229",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2ae05d36-016a-496d-9f58-148218b79eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8afc3d-2425-48ca-95ad-eecdf1069ab0",
        "cursor": {
          "ref": "2e263f4b-e545-4b8c-ad54-52c2aedd3a95",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4baa3210-3403-46d6-9c7c-12cadcb003a7"
        },
        "item": {
          "id": "ad8afc3d-2425-48ca-95ad-eecdf1069ab0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a6cdb3bc-b747-40a8-a36a-d5a44a6db199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bfd4734-4b11-423a-a797-e93670bf5751",
        "cursor": {
          "ref": "a90db61e-d519-416c-8b3e-3ed0e2685d31",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "268e9ac5-2674-4162-9cd2-36d63c514990"
        },
        "item": {
          "id": "4bfd4734-4b11-423a-a797-e93670bf5751",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "58cb2fc9-1e01-4d57-9dac-755e489cf337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee06fe8-4206-4a61-8ce8-c3c70016f4fc",
        "cursor": {
          "ref": "5f79bc5d-69a3-43a1-b328-69c4f0a9cc65",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "37c8e578-a386-40c7-8e12-2cbd80181307"
        },
        "item": {
          "id": "eee06fe8-4206-4a61-8ce8-c3c70016f4fc",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e75404f2-92cd-4ee4-b3d4-68c4b42f6b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5298e06e-798b-4ce7-95bc-65eb31a828ef",
        "cursor": {
          "ref": "75a0a59f-5de7-497d-8ddb-ae201763c1fc",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "66a0a8c2-76e1-4751-97fb-f19db41cde9d"
        },
        "item": {
          "id": "5298e06e-798b-4ce7-95bc-65eb31a828ef",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "911677d3-f94a-45fe-860d-b74c5605275d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0411fe7-812f-4820-870d-30afcc2870f1",
        "cursor": {
          "ref": "e2e4b7ee-9b78-47a5-a6c9-b8599d8d11a2",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6087e0bb-17a5-4cbc-bd44-7ef77f951092"
        },
        "item": {
          "id": "a0411fe7-812f-4820-870d-30afcc2870f1",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "57e269de-077a-4d7f-8e90-c840eccdc0df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317d21e1-9935-496e-b845-49d6159a0d4e",
        "cursor": {
          "ref": "0189f14a-cc54-4f1e-a879-315da4f26431",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "371451e8-94ce-44be-ae76-5e4ce32a9dc4"
        },
        "item": {
          "id": "317d21e1-9935-496e-b845-49d6159a0d4e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7fb3a52b-fac7-42cf-b9df-e41f25f130ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ffa7aed-664f-4c34-8666-03a5633339a8",
        "cursor": {
          "ref": "8bb5b5f4-83ec-41eb-994f-729df9ee5492",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "908ad323-4d77-4009-9fdb-0e927ece8d25"
        },
        "item": {
          "id": "2ffa7aed-664f-4c34-8666-03a5633339a8",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "314da444-0cb7-4885-b33e-bdf8e991a740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282445b4-a7f7-4926-8f68-5a66a4b1537e",
        "cursor": {
          "ref": "22eb3a81-6752-40c8-ad25-b7de680c0acb",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5f2fa5a7-5421-4b68-86d0-55d40dfcc938"
        },
        "item": {
          "id": "282445b4-a7f7-4926-8f68-5a66a4b1537e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b059e34b-fffe-4d93-964d-7ab160cd6bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56a7e13-e956-478e-8fbd-2df18d79773e",
        "cursor": {
          "ref": "f31c0839-2128-4e4c-ac90-eae9c3b71740",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "08fb7b7d-c6c6-46a5-a79f-c4b2ae5c7275"
        },
        "item": {
          "id": "e56a7e13-e956-478e-8fbd-2df18d79773e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "02305646-fc9a-44ff-b391-43aa64938d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3985b12f-1d6e-40b6-8704-1916fc44775d",
        "cursor": {
          "ref": "a099c130-183f-423f-a52e-a7e7d79c5b26",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "663714e5-95f8-4bfa-b7e2-6cae619f5cd2"
        },
        "item": {
          "id": "3985b12f-1d6e-40b6-8704-1916fc44775d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3d4e16d7-9d41-4c5b-a742-60a4cfa05646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f67aa2c-1827-4192-b26f-7df2d40dbe07",
        "cursor": {
          "ref": "2c8ccfca-5d64-4a39-bc45-4607256d3b5d",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "744ab6b6-250e-48f4-ba82-03f9ed305e44"
        },
        "item": {
          "id": "3f67aa2c-1827-4192-b26f-7df2d40dbe07",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a40db051-2c76-4018-8bbf-6a75c8e6510a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56a8a75-aee1-40bd-ba55-b412bad9d7b7",
        "cursor": {
          "ref": "dfa95094-1ea0-471e-bcaa-986339ae0d83",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "26b7f1bf-4216-40c9-a072-fe746d506db8"
        },
        "item": {
          "id": "b56a8a75-aee1-40bd-ba55-b412bad9d7b7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0989520f-4382-4afa-9309-4e3d97193a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a55cd2f-040c-4715-a7b1-0973e1941c31",
        "cursor": {
          "ref": "7e3c1eb0-ea4b-43f0-a311-a0a075d6b34b",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3854db25-7b37-4fea-a7aa-5da6656f25cf"
        },
        "item": {
          "id": "0a55cd2f-040c-4715-a7b1-0973e1941c31",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a8414cf2-a633-4a12-81eb-3d5194227185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b71620-0883-419f-805d-ab063370e4e4",
        "cursor": {
          "ref": "d3db5448-cc77-4aea-870e-0464be1de9ea",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ef023874-d074-46f4-8892-5c35c75fd642"
        },
        "item": {
          "id": "91b71620-0883-419f-805d-ab063370e4e4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e747b2e4-f26a-48ed-aa5a-7117d0bc22f7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 650,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "092b8309-8063-4e48-a6a9-f4f1fbe9a54a",
        "cursor": {
          "ref": "8bf4aa18-22da-4af4-b6c8-28f6466ddf7a",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "03b63ed8-e453-4095-90fd-e71bbf55d3c9"
        },
        "item": {
          "id": "092b8309-8063-4e48-a6a9-f4f1fbe9a54a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b64a0afc-2054-443b-b0dc-e7222e56fd0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1058
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f7e9d4-0daa-4211-86a4-437471e41c11",
        "cursor": {
          "ref": "cfddc6d5-905b-49fa-8cff-f9cfe9b4b673",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e0cf5ea3-d34a-4aab-a878-b189fbaba14a"
        },
        "item": {
          "id": "26f7e9d4-0daa-4211-86a4-437471e41c11",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "033bf0a9-ad59-49da-942b-5dc49bc92137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4543a12f-3717-426c-b221-8b9e706ff44c",
        "cursor": {
          "ref": "fcedd82d-1ef5-425b-93ff-f061ee50f8c6",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8dda91f3-e447-404f-8c6a-17e54d5dc6f3"
        },
        "item": {
          "id": "4543a12f-3717-426c-b221-8b9e706ff44c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c6df2f16-6ac3-4bb2-b2c6-73c4aad1d01f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a16e488-2cf8-494e-8341-8b6015799384",
        "cursor": {
          "ref": "02f9a7ac-2db5-42a9-bcbf-5d104017fb0a",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f387eb8b-b88a-4f7f-bf48-cb2379dc96c7"
        },
        "item": {
          "id": "4a16e488-2cf8-494e-8341-8b6015799384",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b15fb0c0-fc6b-49f3-8b74-2a99ca678b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0cc875d-638b-472b-b880-9ff094e23de6",
        "cursor": {
          "ref": "e983e8a0-4132-4035-9f43-9232240b16be",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "796ffea0-e009-4486-8455-20e12575000f"
        },
        "item": {
          "id": "d0cc875d-638b-472b-b880-9ff094e23de6",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a1bc17e0-3ede-4045-9dad-3d7d1ce84b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76610daf-af73-44aa-9f3f-cd259ce72944",
        "cursor": {
          "ref": "337b94d8-80cd-4602-a499-0cc8ee3e92a3",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "87fde10d-ea22-447e-a0e0-862480051237"
        },
        "item": {
          "id": "76610daf-af73-44aa-9f3f-cd259ce72944",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e4372be4-caa9-47c4-b49b-1e9fdaa1438e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24ebc94-2e1a-4f60-8e84-e60096d44e90",
        "cursor": {
          "ref": "557572c2-76d2-45d6-979b-a6161cb5125d",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "45b2b758-72d0-4080-a509-2af8dcac30e3"
        },
        "item": {
          "id": "d24ebc94-2e1a-4f60-8e84-e60096d44e90",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d0c7bb15-3e4d-444c-b6b9-7dbadd825f25",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 640,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7df56bb-e051-457b-88eb-852259a84ce0",
        "cursor": {
          "ref": "fe535e96-f413-4a38-922e-f60b2e1b3b9e",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6f8ec989-ece4-4492-a6ca-a2b83100db03"
        },
        "item": {
          "id": "d7df56bb-e051-457b-88eb-852259a84ce0",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "fc34b907-a1ad-4a31-90a8-cd6ef04cca44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c7a1e5-bca7-49cc-925e-ad016e54177c",
        "cursor": {
          "ref": "ccac9d53-a0ae-4fc4-a798-bc80bd5a9a6d",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "36e44eeb-41e5-4ada-8db5-5db7de193dce"
        },
        "item": {
          "id": "34c7a1e5-bca7-49cc-925e-ad016e54177c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1fbbf973-b5bd-47eb-b205-c03d3f2a8cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b772032-892f-4324-90b7-0730ecae3d3c",
        "cursor": {
          "ref": "5dfb8153-c243-47dd-ad5a-a9c3f801b3bf",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d3fcb592-6526-4508-bf3e-db64b121b906"
        },
        "item": {
          "id": "1b772032-892f-4324-90b7-0730ecae3d3c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "57efcb3d-1da5-4313-a2d7-2d1900490f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b07280-11b3-44d3-8bcc-fa4ffa093e31",
        "cursor": {
          "ref": "e21d4f45-dfc7-4df8-9060-85df9ab09a90",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "33d581c4-5f93-4022-8e52-a4537595945f"
        },
        "item": {
          "id": "a1b07280-11b3-44d3-8bcc-fa4ffa093e31",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8a088f33-fe40-4403-8294-1ece1b42be96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f4849a-9b86-4a8c-b38b-8b12d12fcb29",
        "cursor": {
          "ref": "7d9c0e15-22dd-4d8b-8e0e-1c66b13ab132",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c23dc915-72e4-4bb8-9739-8db2909bca79"
        },
        "item": {
          "id": "79f4849a-9b86-4a8c-b38b-8b12d12fcb29",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ed2f06d4-5022-426e-839e-5e960f2cef7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6acac990-0b25-4c3b-98de-7b8a0fb7b4a6",
        "cursor": {
          "ref": "6746631c-27ba-4efb-9f2f-2c58dd973780",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a3b78d42-3206-4c93-bd2e-c9585ea4b3b9"
        },
        "item": {
          "id": "6acac990-0b25-4c3b-98de-7b8a0fb7b4a6",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "fbda02f1-4542-4c44-a26c-5f1fbaa4f492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5649f9-5b93-4f55-bec6-f3735b92c064",
        "cursor": {
          "ref": "8c221eb2-c452-4fff-82ce-9f5120ba912f",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c4566088-c148-4812-9e9a-fbe73b14f6e2"
        },
        "item": {
          "id": "3d5649f9-5b93-4f55-bec6-f3735b92c064",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "8b6d9b09-e1df-4b66-8b96-4ef6ff82e2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f113d79-d990-403d-9008-2f58d85adcc9",
        "cursor": {
          "ref": "af4cd97d-be31-429f-84ac-70a07017dfd8",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c8c17272-36d0-4259-a55b-03951f65eb9c"
        },
        "item": {
          "id": "3f113d79-d990-403d-9008-2f58d85adcc9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7d0104f0-a3ae-46b5-a11a-132a479e2ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c295c8-6f0d-4091-ae66-28bcb3e407c8",
        "cursor": {
          "ref": "28246e29-47ed-4dbf-89d1-34542d6fdfe8",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "df627255-7f4f-4d60-bafb-20bad1cecc79"
        },
        "item": {
          "id": "54c295c8-6f0d-4091-ae66-28bcb3e407c8",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d48324f9-2129-47f1-bceb-24b72c8e1d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2b6d8c-c700-4d1d-a30e-8f90067ff8d7",
        "cursor": {
          "ref": "32e70ea9-dcb1-4d5f-a7f3-8b06c73e64fc",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "dcac40f9-0288-4931-bd66-aedd58ebe3b2"
        },
        "item": {
          "id": "eb2b6d8c-c700-4d1d-a30e-8f90067ff8d7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2b303980-fb86-4931-a10d-f418ad326e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8865d5-de04-4f56-841a-3e1349cb984c",
        "cursor": {
          "ref": "fe12e10e-107e-4740-8a4c-c54460ee1eeb",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "18eec29b-94b6-45ce-9aa9-aeedc25448c8"
        },
        "item": {
          "id": "1d8865d5-de04-4f56-841a-3e1349cb984c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6f3e9055-8c1a-446c-bad9-69d36fcea291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd017b7-37c8-4300-90de-ff5ec50d39b0",
        "cursor": {
          "ref": "92e82db9-63bf-4365-88b1-0db0165563e2",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0974e898-e773-43f1-81d3-1c7568ff5f13"
        },
        "item": {
          "id": "0bd017b7-37c8-4300-90de-ff5ec50d39b0",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "5d5088fe-5294-4ac8-820f-a291427457c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74896f5b-e6ac-49c8-b45a-8713c779ef59",
        "cursor": {
          "ref": "e1790dc4-6589-47f1-9dac-a11d05ee175a",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ed06e010-47c1-41a2-9ab3-0c9cd81a0924"
        },
        "item": {
          "id": "74896f5b-e6ac-49c8-b45a-8713c779ef59",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9556f75d-bbad-4097-9377-231dccd0c373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a7522f-1e9d-40c9-9561-5dd55c409d11",
        "cursor": {
          "ref": "f0b4b53e-b664-443a-b5c6-09629251053c",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6c532c08-d932-450b-ae74-e64bc3be2363"
        },
        "item": {
          "id": "b9a7522f-1e9d-40c9-9561-5dd55c409d11",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8bb71b42-681e-4246-9f68-1f81fd269c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 842,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad28609d-07c9-45b4-bf7e-3e13ecfba53a",
        "cursor": {
          "ref": "eb3daf3c-3677-4172-858f-3606361dab80",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "92c0a3d0-6f21-42bc-b75e-eb9111cecefe"
        },
        "item": {
          "id": "ad28609d-07c9-45b4-bf7e-3e13ecfba53a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "43d15836-b5f5-4355-8dd5-723f1c27d26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 873,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbfc6e3-b44a-4e12-9f7e-a8e71aa7fbc0",
        "cursor": {
          "ref": "f37d24de-4903-437a-9cc7-636ff4db1e32",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2a83581e-a99f-4521-b6e5-8a0aee06759f"
        },
        "item": {
          "id": "2bbfc6e3-b44a-4e12-9f7e-a8e71aa7fbc0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "fce2d957-5654-40da-98c1-1ff1d2254f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 973,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753b60ff-17cf-4db7-be73-373f5b90a90b",
        "cursor": {
          "ref": "bee622cc-944d-4f19-800a-d5d0f2c2e6a5",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e3708d10-9dda-47fa-8742-faa62a1fd45e"
        },
        "item": {
          "id": "753b60ff-17cf-4db7-be73-373f5b90a90b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9968fcfb-5935-46d1-8be1-6565e38e539f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1044,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c5dfe1-0d0f-4f99-9e51-4f62994af634",
        "cursor": {
          "ref": "b815ce1d-d624-4397-9481-1bb6d7534b42",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ccb3cb07-964d-4b86-98ef-daae729cfc8d"
        },
        "item": {
          "id": "45c5dfe1-0d0f-4f99-9e51-4f62994af634",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9749815e-0347-4280-b22e-c7ec82911f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1082,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22394ee8-9f12-49fa-ad1b-0b56c2e23a7e",
        "cursor": {
          "ref": "14f3b0f7-5792-4063-90b2-6668e45bb13b",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d6707414-89b2-417f-955e-925a366759c7"
        },
        "item": {
          "id": "22394ee8-9f12-49fa-ad1b-0b56c2e23a7e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "dbf71a4a-0699-4f2a-8e4d-6acc040f86af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1258,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0de9b1-4eea-4f5a-b12f-5c6806ad7b3c",
        "cursor": {
          "ref": "275db670-2858-41a2-8f0e-4dce125dc08c",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f072bf14-534a-475a-acdf-5b86f6bbad21"
        },
        "item": {
          "id": "0a0de9b1-4eea-4f5a-b12f-5c6806ad7b3c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f6efdfb9-b2a8-4f3b-b6b8-c864ea64e690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 982,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08880b84-6a6a-45a0-8131-f59bf5c3231f",
        "cursor": {
          "ref": "b1b71d74-31e7-4b9b-ad3d-2cd79106a561",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4332b770-d7d5-49b4-abd1-e526c6595717"
        },
        "item": {
          "id": "08880b84-6a6a-45a0-8131-f59bf5c3231f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5d3bd876-cef0-47a5-bf34-2ee4ef13c62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1074,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e00a5a2-4a7f-4dae-b17f-2e6a97960db4",
        "cursor": {
          "ref": "1fc7b68c-afba-44d1-bf10-67e118d483b8",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1c18ee52-1f14-4da2-a485-8a890be85785"
        },
        "item": {
          "id": "6e00a5a2-4a7f-4dae-b17f-2e6a97960db4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6e40f0fe-bc51-4660-908a-20c25dd6b2e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770c8ce1-820a-4b31-aa8b-5408e73e79d9",
        "cursor": {
          "ref": "23d20d22-7daa-4ac9-9b15-ac7bb81d2d6c",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "fe5552d0-2a24-4d44-8f53-21190abc6ccf"
        },
        "item": {
          "id": "770c8ce1-820a-4b31-aa8b-5408e73e79d9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9c15929c-094b-46ca-98c3-2819ec728791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 967,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed59ac6-5ece-4669-954c-2afd34d119bb",
        "cursor": {
          "ref": "9b3cbb2a-da16-4505-a56a-c7e7dd63b9c1",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "928959ac-3ca1-4ea7-923b-86e2057859f3"
        },
        "item": {
          "id": "bed59ac6-5ece-4669-954c-2afd34d119bb",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "9af0fb23-1829-473f-af62-0af8a2083b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 931,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73bfb438-53ec-4c71-815e-46495c1b8eb8",
        "cursor": {
          "ref": "8bc033e2-7ba1-4706-b616-f18531690fb9",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "eb416e27-67c2-4f50-853c-932c4894c2ef"
        },
        "item": {
          "id": "73bfb438-53ec-4c71-815e-46495c1b8eb8",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c60363f9-6c7a-4262-acb1-a28179cff957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 980,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f7aa2f-516f-4470-8bce-65843e5c1159",
        "cursor": {
          "ref": "d375d4d0-9eb2-48c7-b67f-2fe51cc7c930",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d4a68816-a269-4bdd-91f4-c34ad5b2276a"
        },
        "item": {
          "id": "04f7aa2f-516f-4470-8bce-65843e5c1159",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9d197bbf-f089-4909-84e2-800f11a0bb95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67a5f4f-a12e-4804-b0aa-ede4f4734a63",
        "cursor": {
          "ref": "a132b55c-bee4-482f-8b2e-17e685b7038a",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "67034560-a428-432f-856f-2cea8bf9b8b4"
        },
        "item": {
          "id": "f67a5f4f-a12e-4804-b0aa-ede4f4734a63",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8db5890f-eb42-4533-831a-dff510fb5c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b49584-dd45-4c3f-ad99-5c25d72387ce",
        "cursor": {
          "ref": "f7d18dfb-fbe6-4303-983c-b30f7f19d22b",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "88110475-e014-4248-8e50-fe2ebef04aa4"
        },
        "item": {
          "id": "37b49584-dd45-4c3f-ad99-5c25d72387ce",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "40a59c12-c973-4c34-9303-fb9e1f51a215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae925a3e-7e4d-431c-a281-6aa84b360d1b",
        "cursor": {
          "ref": "85f98b3b-ed7c-42e1-90c8-17a30e2d103f",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d85247e5-a397-42f2-af8d-00677f265a7c"
        },
        "item": {
          "id": "ae925a3e-7e4d-431c-a281-6aa84b360d1b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "38d93b99-85e4-4027-b90a-1868e001fd73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0569376b-2d48-4773-b044-7342142a9b32",
        "cursor": {
          "ref": "11be695a-08e1-42c2-b866-5ee8fa24db07",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8f0b8a9d-fca7-4373-8309-77bf22058d2a"
        },
        "item": {
          "id": "0569376b-2d48-4773-b044-7342142a9b32",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a2377497-1eb3-4f36-aeb6-6c264486d255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585342e1-9e03-4015-887d-7a4417d5bb6c",
        "cursor": {
          "ref": "6fe5dc2b-e0bf-4e02-b3e2-850ba997bf47",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "46a9d193-afb6-46d1-87a2-d6f98c6f6527"
        },
        "item": {
          "id": "585342e1-9e03-4015-887d-7a4417d5bb6c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3950c963-79e6-46a2-95fc-1c775e5a0fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e059cd82-c63c-4817-800a-6cef0903a086",
        "cursor": {
          "ref": "def92b3c-cfd7-4a35-a664-970632d978e6",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e628a612-21da-4df3-8ac4-229cd6be68cc"
        },
        "item": {
          "id": "e059cd82-c63c-4817-800a-6cef0903a086",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9d88c0cc-33cf-4eb8-a958-65e787d60476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 970,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d4e1bf-038b-4cdc-a5f2-08d5a2fe7683",
        "cursor": {
          "ref": "d6a93a34-e41f-4ded-9ed2-38a98b9b498b",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8d173589-d838-4ec4-97b2-e40ec38d7354"
        },
        "item": {
          "id": "51d4e1bf-038b-4cdc-a5f2-08d5a2fe7683",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "08a7766e-d329-41c6-bb64-100b1472cb5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 993,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1562836-d293-4eef-9b30-d5a1e91a994c",
        "cursor": {
          "ref": "bd4f3649-ac07-4a5f-b8f0-2db918da911f",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "54c2e0ca-86b9-447f-99f2-d4a3ef10577d"
        },
        "item": {
          "id": "e1562836-d293-4eef-9b30-d5a1e91a994c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b531d99f-2b16-4e3b-8164-b8af51e7ab7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1093,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165d4119-1a13-496b-b56d-859b28b986f5",
        "cursor": {
          "ref": "1b4f48dd-1986-4574-bbae-166e780a9590",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "dc16bd14-27a9-4cc3-b7a3-d4f287000785"
        },
        "item": {
          "id": "165d4119-1a13-496b-b56d-859b28b986f5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c535d721-549c-469b-9b5e-e2ed8707f2de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23936b2-fa44-42a3-9b06-2c2a21b88724",
        "cursor": {
          "ref": "b97e2860-2533-4cf0-98bb-e890beea2bed",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "880f1923-a8ff-49a9-a128-5e057d1f9a59"
        },
        "item": {
          "id": "b23936b2-fa44-42a3-9b06-2c2a21b88724",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "573f6edb-acd2-476b-8b13-c50fca185e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029cac96-e98c-4a91-a3fa-cbab55299837",
        "cursor": {
          "ref": "fd945567-ed70-418f-9534-84c615587ded",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c208ddc3-e9df-4486-9d8a-762df5fdd132"
        },
        "item": {
          "id": "029cac96-e98c-4a91-a3fa-cbab55299837",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "125df2dd-f051-4cbb-8590-5cf9ea482278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45ee7e4-b25d-48f1-b324-504b761c5fa0",
        "cursor": {
          "ref": "946145e6-bd8c-43ef-aa6a-ba20d1d25375",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8995e0f4-0959-4e12-a7f5-8b47b5ef4036"
        },
        "item": {
          "id": "f45ee7e4-b25d-48f1-b324-504b761c5fa0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "81799cb5-d070-4a4e-a030-8d8ae29a8ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1206,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8686dd5-67d0-4125-aff9-d4f7710efd01",
        "cursor": {
          "ref": "075fdfcb-de7e-4586-b80f-1e78d8df9908",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f1cb5056-60f5-4cfd-918d-be459b22fe2f"
        },
        "item": {
          "id": "f8686dd5-67d0-4125-aff9-d4f7710efd01",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b76b6aae-8412-43ef-a3dd-45bca65fbc8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1162,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b157cb36-71a9-411c-95a8-6d21148058b9",
        "cursor": {
          "ref": "21acb4fd-fea5-444d-afe0-288f7c0d928b",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b8697aff-698b-409e-b4c5-cc045717c688"
        },
        "item": {
          "id": "b157cb36-71a9-411c-95a8-6d21148058b9",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "860ee382-8168-48d2-8bd0-dc7211338408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 940,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b21696-8f7c-4ba9-8029-d7de9969fed1",
        "cursor": {
          "ref": "826aa941-542b-4dc0-8d1b-e3860e86a1fa",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4374a711-b581-4807-addd-2e413f036944"
        },
        "item": {
          "id": "f1b21696-8f7c-4ba9-8029-d7de9969fed1",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f0c302b0-14d2-4a13-91b6-293072929b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc38f23-bb86-48de-865d-567120f4aa7c",
        "cursor": {
          "ref": "a68f1b28-b84a-48f1-aba7-430add4cbbd9",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d26ade2d-2fb3-4eed-838d-5c5584565c53"
        },
        "item": {
          "id": "bdc38f23-bb86-48de-865d-567120f4aa7c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4ff01d2d-0a0c-4d1a-93ec-82a7f101c805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2937a01-580b-41dd-b1c9-9d5eefc0105f",
        "cursor": {
          "ref": "29a476e8-1b23-4c38-aa02-9a4a5287ed36",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e960b791-775d-4ea0-9769-bf227086b5a7"
        },
        "item": {
          "id": "b2937a01-580b-41dd-b1c9-9d5eefc0105f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b5172d71-399d-4f1e-b704-6656789efd0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b11b42-f526-4471-853d-b799e95f5f03",
        "cursor": {
          "ref": "85857550-9552-4a53-abd5-b5a22146367e",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ac066c66-e279-4122-b738-7f75fe102384"
        },
        "item": {
          "id": "d4b11b42-f526-4471-853d-b799e95f5f03",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "58d694a2-4a67-464f-b657-2ec3870cc27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a35ab7c-f8d2-422e-9a38-e6b96716d9c4",
        "cursor": {
          "ref": "58db3bf2-7d44-4e72-baca-9bd950a8941e",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b0da33c7-5f8d-46ec-b381-623089c4d183"
        },
        "item": {
          "id": "5a35ab7c-f8d2-422e-9a38-e6b96716d9c4",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "fdf22699-5d43-41da-9a90-b1214e7487f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4eae58b-5c03-41ae-bbd5-951a70981fe1",
        "cursor": {
          "ref": "90f301ce-076f-459a-97d0-4241cadc0c74",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "bb579ec5-a14d-4dce-8edc-0dba90e7a25d"
        },
        "item": {
          "id": "f4eae58b-5c03-41ae-bbd5-951a70981fe1",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e9c06460-3243-42b2-a5c0-313b4b742328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04aa149-293b-4c92-8810-bd10cd15de39",
        "cursor": {
          "ref": "56e59e57-d911-4f63-b2fd-00a3e9afc901",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "595df247-dab9-408e-86f1-03809ac666d2"
        },
        "item": {
          "id": "b04aa149-293b-4c92-8810-bd10cd15de39",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9c8f02e0-07f8-4900-ab1f-ddecfbcc9908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556950bd-b3aa-43f2-a9bb-a24de1484dd8",
        "cursor": {
          "ref": "8bbda256-e1ce-4ac4-b7f5-cb817724104b",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d871fbd8-aa38-47bb-a7f3-64a15717fe8a"
        },
        "item": {
          "id": "556950bd-b3aa-43f2-a9bb-a24de1484dd8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a05c53e9-d4f1-425e-9dc6-d5220c7b849a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265b63ce-28d3-4235-95fb-8e87f23a342b",
        "cursor": {
          "ref": "210239f7-7b91-4527-b958-769d3fd93d85",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1e559268-6db2-4787-9e28-f9b2c66576d9"
        },
        "item": {
          "id": "265b63ce-28d3-4235-95fb-8e87f23a342b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ba65964d-deb9-4daf-aebd-f52bedbae944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21d9054-b7cc-4dc4-99b2-33b95de2be20",
        "cursor": {
          "ref": "c86b1169-3e18-4cf5-8211-4b53d3e06f8a",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ad0c7c4e-341a-4463-9330-59b381abd0a5"
        },
        "item": {
          "id": "c21d9054-b7cc-4dc4-99b2-33b95de2be20",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "433f897c-6303-48cd-bfa8-3514e71aa385",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478896d0-ee3c-4c25-a40e-097920167a6b",
        "cursor": {
          "ref": "8c0669ee-6d29-493c-99cd-fe5df49d2306",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c444ec19-2e7d-4349-923e-5f0a78478ae7"
        },
        "item": {
          "id": "478896d0-ee3c-4c25-a40e-097920167a6b",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "3bcb0d82-3b10-4013-b410-5384f3ff925b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 580,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90d878f-1670-473a-ac2b-fe7e8a711c19",
        "cursor": {
          "ref": "6387c2f8-aa11-47e7-827f-0945222b4c34",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a77d9d3b-c28b-447e-9380-bf0f2c37071a"
        },
        "item": {
          "id": "c90d878f-1670-473a-ac2b-fe7e8a711c19",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f92f759f-2c7b-4fd2-8756-34354a848b30",
          "status": "Created",
          "code": 201,
          "responseTime": 4745,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b426a4cb-9bce-4f42-ace5-fbab0c38c85a",
        "cursor": {
          "ref": "130b1909-b818-47b8-b2e8-901d77ecf326",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f19b93b0-e03e-4ae4-bdce-b54fc5b132ff"
        },
        "item": {
          "id": "b426a4cb-9bce-4f42-ace5-fbab0c38c85a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "71789878-a0d0-40f5-b329-69137cc4b32d",
          "status": "Created",
          "code": 201,
          "responseTime": 4060,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "49066deb-8730-4ccf-aa38-ea4774b365d4",
        "cursor": {
          "ref": "007bef93-5e05-48b2-b6d6-1b4b0190b2c8",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "af9f649c-8a0d-43ac-a7d9-d4396660561e"
        },
        "item": {
          "id": "49066deb-8730-4ccf-aa38-ea4774b365d4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e8004fa4-61b6-4d26-b501-0a8e749cfdd5",
          "status": "Created",
          "code": 201,
          "responseTime": 4182,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "919247df-1c54-4df5-bbbd-c16179a7ee94",
        "cursor": {
          "ref": "a641556a-78f9-40d0-bc7d-9f9d08905bcd",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "37eed5ca-e007-4b74-a9d6-b98821d46dcf"
        },
        "item": {
          "id": "919247df-1c54-4df5-bbbd-c16179a7ee94",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "41dbb4be-01be-4cdc-9814-483a429fed1d",
          "status": "Created",
          "code": 201,
          "responseTime": 4413,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "d314747a-9443-4666-8b54-f4b087801fbe",
        "cursor": {
          "ref": "27fc6d11-248d-4736-bdd5-231b02ac1d95",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ef44f5d4-378c-4c3e-bad0-46a68ed692ee"
        },
        "item": {
          "id": "d314747a-9443-4666-8b54-f4b087801fbe",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0a47bd0d-7c4e-4010-af42-c39382d7a727",
          "status": "Created",
          "code": 201,
          "responseTime": 4925,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "657d8f7e-8d6d-470e-a45b-fa3f8eeb27fa",
        "cursor": {
          "ref": "2eaa51d5-caba-4bc0-bf9c-589787030ab3",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0cd2cacf-dc0a-4992-82a4-a0b4a0de748c"
        },
        "item": {
          "id": "657d8f7e-8d6d-470e-a45b-fa3f8eeb27fa",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "acf591b5-3c87-4bee-a0c4-65f9c14089e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657d8f7e-8d6d-470e-a45b-fa3f8eeb27fa",
        "cursor": {
          "ref": "2eaa51d5-caba-4bc0-bf9c-589787030ab3",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0cd2cacf-dc0a-4992-82a4-a0b4a0de748c"
        },
        "item": {
          "id": "657d8f7e-8d6d-470e-a45b-fa3f8eeb27fa",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "acf591b5-3c87-4bee-a0c4-65f9c14089e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5a071a-365f-4b5b-8c88-f33487bb9f8f",
        "cursor": {
          "ref": "296957e7-eb60-4572-a981-d3fbdd987adc",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a6577362-b91e-4482-9b70-79ca71b63128"
        },
        "item": {
          "id": "5f5a071a-365f-4b5b-8c88-f33487bb9f8f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7ac31fa1-ae69-4c8c-852b-f2a6a01f4a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69616a01-98a8-498d-946c-6b2f7a2c3ff6",
        "cursor": {
          "ref": "1f2a420a-8b39-4076-8b15-41f57d7bd098",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "065f0b67-9a47-4553-81a2-9c81b4040955"
        },
        "item": {
          "id": "69616a01-98a8-498d-946c-6b2f7a2c3ff6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3dcf72e6-4d3d-418d-88f9-447fa36330f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b3e87d7-86a9-43a8-a4f7-abc3c102cff6",
        "cursor": {
          "ref": "642558f3-76c5-4679-becb-ccb5e0861a23",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7b4ee8da-3893-4192-8532-f907770cf486"
        },
        "item": {
          "id": "9b3e87d7-86a9-43a8-a4f7-abc3c102cff6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4302beea-8e61-4ac9-aff4-561072a8c341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c2490c-5a82-472f-a428-07872ebef6f9",
        "cursor": {
          "ref": "b7dd49cd-3ee7-4acc-b847-aa4fecf9d62a",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "44f187b5-6de8-4c08-9e8b-02917aef2fb4"
        },
        "item": {
          "id": "89c2490c-5a82-472f-a428-07872ebef6f9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "05da5030-6c6a-4c8a-a307-6050397fd533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e7e3280-7c27-4c40-a76e-020f08af8912",
        "cursor": {
          "ref": "07d7dad0-5734-45b6-94a9-02ddd577081e",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "acdacb0f-29cb-4734-b96f-18ab0d1ef617"
        },
        "item": {
          "id": "9e7e3280-7c27-4c40-a76e-020f08af8912",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e670fa50-0df0-44a8-85ef-94fc2372f8e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a042d3f6-22a8-4a3d-b80c-120ab4c3b3a7",
        "cursor": {
          "ref": "6d5c4423-45d5-4530-a572-b9519bba7749",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "db996341-3d2e-4d05-a029-ba6aa69daebc"
        },
        "item": {
          "id": "a042d3f6-22a8-4a3d-b80c-120ab4c3b3a7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c52fdde7-7c24-4e7a-9103-8ed8cfa10f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb38ba2f-4987-4a8b-b0f9-c9c31d29b285",
        "cursor": {
          "ref": "dfc35b98-bf41-4bf4-8590-18a5d4a6db8c",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b2f743d2-f83c-48ec-aebe-1f7d44c8e460"
        },
        "item": {
          "id": "bb38ba2f-4987-4a8b-b0f9-c9c31d29b285",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d266e3c6-f119-4f53-b0ed-8839f0df7276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4dc9d32-dc92-45b2-8520-cbc75e02af3f",
        "cursor": {
          "ref": "4727fa69-0cf3-469c-9539-a97902a4e26a",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "fc250c3a-5e63-4f0a-96b0-8f434c891ca9"
        },
        "item": {
          "id": "b4dc9d32-dc92-45b2-8520-cbc75e02af3f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "66e04a29-bde9-4e50-81e7-a28b1af60bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0720016-ad4a-4b0d-9073-13507c86d069",
        "cursor": {
          "ref": "3ad7814c-a98d-4337-bd85-e2b827c74bd8",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "69d99c35-17ca-45fd-a7eb-9a3bdfd4df9c"
        },
        "item": {
          "id": "a0720016-ad4a-4b0d-9073-13507c86d069",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "153b7b29-4d52-446b-8e7b-c6a2356df2ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338afe3c-ea2c-4943-919d-5dea031c8488",
        "cursor": {
          "ref": "de64a598-41bd-49db-8fbb-58c2fbb719e9",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "41adb639-cdb8-4cca-8511-e5d00a441894"
        },
        "item": {
          "id": "338afe3c-ea2c-4943-919d-5dea031c8488",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a3baac43-fff4-4ef7-8474-55e6f5c417d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861f0637-6b2d-449c-ae16-fc1e4e2f6ae9",
        "cursor": {
          "ref": "980c8d0d-7155-4663-9f86-d5dbc94b0efd",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3260338e-e77e-4a89-930e-129076790e02"
        },
        "item": {
          "id": "861f0637-6b2d-449c-ae16-fc1e4e2f6ae9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3d3f810d-66b4-4d5b-be6c-d008257c8555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e7dcea-07b4-41a4-b8c3-68360cb36b58",
        "cursor": {
          "ref": "f699503f-2990-4923-9e4b-ca9e9873f91e",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "11e3cc2f-153f-4f84-b622-4a2c3b57486d"
        },
        "item": {
          "id": "e0e7dcea-07b4-41a4-b8c3-68360cb36b58",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "212c90cb-cf80-4c4a-b015-9ff59c0f7bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494f6b5e-6765-4f27-aef0-b249789daf5b",
        "cursor": {
          "ref": "c72467eb-ecae-448f-91b8-74e917c3d947",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "440e4b06-0439-46a6-bb85-513aae179ea3"
        },
        "item": {
          "id": "494f6b5e-6765-4f27-aef0-b249789daf5b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "928cb43b-6fcb-4dee-96e4-65154a52cd52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d898da35-0fd2-4525-97c6-e569ea90efb4",
        "cursor": {
          "ref": "f2db418a-8367-43af-952f-e825b3d31033",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9b24f249-ccd6-491f-b7be-526417c341ce"
        },
        "item": {
          "id": "d898da35-0fd2-4525-97c6-e569ea90efb4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4de72c65-7f71-4299-9662-d04ee497859b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eab7b6b-30fd-4b75-b435-a918042baae6",
        "cursor": {
          "ref": "2c7598fa-623d-4a0e-8080-9ea88458b774",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2c46fa38-af36-47f2-aca6-116351e1cf6c"
        },
        "item": {
          "id": "6eab7b6b-30fd-4b75-b435-a918042baae6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c695588b-a1fa-4ae6-af7e-3ea0fc5225e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82769e0-0713-434f-a115-84bd3b55c5c7",
        "cursor": {
          "ref": "9b986be7-6d6e-4c81-8453-80f055a3746a",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "130b06b4-e39f-4ea3-baec-619559d423ad"
        },
        "item": {
          "id": "a82769e0-0713-434f-a115-84bd3b55c5c7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6d9655cb-0c68-4dad-a624-6c00335b7668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "515e80a7-e070-44b9-9efa-7c04d4764dc1",
        "cursor": {
          "ref": "54b25e26-c375-4963-b5a4-771acc4ffc3f",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "fcd86ab6-9220-4b41-b6f6-4c3c7acf2421"
        },
        "item": {
          "id": "515e80a7-e070-44b9-9efa-7c04d4764dc1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "25d1e830-a4dc-4c78-9eca-4bc627f29067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3882c7c-3bdf-4913-b954-0bd246776cb3",
        "cursor": {
          "ref": "db8948e1-8012-481e-819b-c60449f8038a",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "648e1f2d-515e-4ce2-af24-0c8be43f5761"
        },
        "item": {
          "id": "f3882c7c-3bdf-4913-b954-0bd246776cb3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b41a8bfa-5cbf-48b8-801a-e5d7af75a29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bfae7da-3f6f-49d9-acd4-2d62daddd144",
        "cursor": {
          "ref": "7f9854de-4173-4864-be36-9b44c1e93e68",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "60db48df-2775-4ce5-a2ca-dc5666d90c5b"
        },
        "item": {
          "id": "2bfae7da-3f6f-49d9-acd4-2d62daddd144",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "dfe78642-748c-4d33-953c-dfe250fb8e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25bfe0b-4c23-40c1-bccb-868e62cd2ce1",
        "cursor": {
          "ref": "2d15da76-2ed9-45b9-b520-73c862bdc345",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8bd52a14-1368-4142-be51-a111600c31b1"
        },
        "item": {
          "id": "d25bfe0b-4c23-40c1-bccb-868e62cd2ce1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "566d8b44-bc1b-4cfa-8c7e-64c2f46a1ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10173790-02fb-44d2-9c63-4b8dfad76327",
        "cursor": {
          "ref": "53aef198-d831-4472-bf26-ac49b4b9a168",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8fcfec9b-1f1f-412f-abf1-45b0005b2b3e"
        },
        "item": {
          "id": "10173790-02fb-44d2-9c63-4b8dfad76327",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e549ebaf-3d47-4573-8b2c-4d3b2f8a4161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080441e9-95d6-4ff0-b3f0-f0df05ab947c",
        "cursor": {
          "ref": "9ea2aed4-ddef-4816-9046-00f98c6638c1",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b829b646-7a89-4e80-918f-f575cad4ec27"
        },
        "item": {
          "id": "080441e9-95d6-4ff0-b3f0-f0df05ab947c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "71ce7096-c1ab-4a0d-a323-28cc49b23b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 966,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d238a4f-67c9-4336-acad-4c64803cb3d2",
        "cursor": {
          "ref": "789e5952-b8c3-468d-b130-1f60bd0e7040",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "10dd17ca-1faa-4acb-9304-f7a962c5c038"
        },
        "item": {
          "id": "2d238a4f-67c9-4336-acad-4c64803cb3d2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0b988ace-633d-4061-901f-9499ccf2f01d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 990,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49a1ce5-72c0-4569-be01-525276be5fdd",
        "cursor": {
          "ref": "a307cc6a-7e5b-4fdf-a79e-23823f66a19a",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f78195aa-3d96-4c2a-9f13-0c6ac0f4158c"
        },
        "item": {
          "id": "b49a1ce5-72c0-4569-be01-525276be5fdd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0724d496-3c36-4a7d-8e9b-27bc5d7fdddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1557,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7239e470-be78-426b-80d7-f17cd0997443",
        "cursor": {
          "ref": "4214feed-dccb-4088-a795-ed06c858be1d",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "53d8b3b1-a902-4b85-a238-30884ebdb5a2"
        },
        "item": {
          "id": "7239e470-be78-426b-80d7-f17cd0997443",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b6aa2952-6b10-4a60-bc71-d68b8004bd6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1182,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7bfb984-8b60-4e4a-a378-dcc9505aeb06",
        "cursor": {
          "ref": "ab6a2479-98ad-4105-b4a9-1c057e964a08",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "97600d84-d7ec-4d2a-9ce4-be5fd7155102"
        },
        "item": {
          "id": "e7bfb984-8b60-4e4a-a378-dcc9505aeb06",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "033bf64e-264b-4a15-b5e1-61fe118012d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 905,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e529b7b0-6e7d-4d61-99ed-8e3e8c737b6d",
        "cursor": {
          "ref": "85844da3-67d9-47e0-8183-9f53437dca35",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "bbab80a7-1776-4abb-987d-e606e67a3757"
        },
        "item": {
          "id": "e529b7b0-6e7d-4d61-99ed-8e3e8c737b6d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e504d9f2-7067-4b54-93e2-9f69c6d3db5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 899,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2040478-950d-4148-868d-924e9783c9fd",
        "cursor": {
          "ref": "54c39764-7e32-4de5-a6b5-953a8a4506c4",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0b034f2c-6a92-43e0-8484-1d37a25fa980"
        },
        "item": {
          "id": "e2040478-950d-4148-868d-924e9783c9fd",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9c625062-15b9-477b-aa58-bc4971fdb87c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 862,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ef3895-522c-4709-bd9b-ff3688e79bb0",
        "cursor": {
          "ref": "42437ca8-7e02-410e-a8ff-ee7c92184b32",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1a7f7728-f5b0-4a22-a232-e84cac3fcf32"
        },
        "item": {
          "id": "c0ef3895-522c-4709-bd9b-ff3688e79bb0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ecde9842-a480-4646-b8f4-40f32f86bc13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28ae4d3-3e51-44ad-8ff0-581a8df37a83",
        "cursor": {
          "ref": "cbed2018-6659-45b0-9cc0-72513ee06edd",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "96372b30-f12f-4e25-a96d-610f51d51e18"
        },
        "item": {
          "id": "d28ae4d3-3e51-44ad-8ff0-581a8df37a83",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a2a88f00-a36e-47ce-b1d4-22ca7ea3c08b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3cc364-44f2-498f-800a-300bb15fabfa",
        "cursor": {
          "ref": "924a5a79-ba24-43a0-b0f6-e1f63b3f3d0e",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c67c6bc9-b108-4bc2-b5f1-479271299a59"
        },
        "item": {
          "id": "0b3cc364-44f2-498f-800a-300bb15fabfa",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b21bff92-2ab0-4cc1-a860-607c07151627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421805bd-1b6d-4bdb-b933-0ac7a4a1b9a1",
        "cursor": {
          "ref": "1d6875fa-c648-45db-adcc-039d8b97c411",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0344e98a-3341-4171-8b0f-2b10b3727d08"
        },
        "item": {
          "id": "421805bd-1b6d-4bdb-b933-0ac7a4a1b9a1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c2024b93-437d-49cc-829e-c59a0c4478d7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6127a49-5b39-4df5-a082-15e1cf3da935",
        "cursor": {
          "ref": "4f8bbab6-24ec-46c3-98b3-93dc81a64c73",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b94428d5-2040-486d-8885-7a1c534b2071"
        },
        "item": {
          "id": "c6127a49-5b39-4df5-a082-15e1cf3da935",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "72c1fb9a-a98f-43bc-8775-645cd34dbeba",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 585,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4da5ad-e51a-41af-afad-747a6184f535",
        "cursor": {
          "ref": "55f3a4b8-8bdd-407c-971b-dfa8e3284be5",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d5ce6f5b-63ba-45a3-a6d3-31703b164c9c"
        },
        "item": {
          "id": "9e4da5ad-e51a-41af-afad-747a6184f535",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ea8b715b-d6df-4152-b754-4aae9ae1a82b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4da5ad-e51a-41af-afad-747a6184f535",
        "cursor": {
          "ref": "55f3a4b8-8bdd-407c-971b-dfa8e3284be5",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d5ce6f5b-63ba-45a3-a6d3-31703b164c9c"
        },
        "item": {
          "id": "9e4da5ad-e51a-41af-afad-747a6184f535",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ea8b715b-d6df-4152-b754-4aae9ae1a82b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ccb81a-1f1f-4138-be23-1342f1c57a88",
        "cursor": {
          "ref": "7e3d960f-c1fc-4f65-81cd-9f15c917c6c7",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "acc7736f-4d01-4727-8156-3360c79fd65e"
        },
        "item": {
          "id": "53ccb81a-1f1f-4138-be23-1342f1c57a88",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "bc6811ad-13da-4bca-954f-d3bbd31408b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97d44f5-813b-4b47-9540-2c4b08cc9f0c",
        "cursor": {
          "ref": "469e080d-c8b6-437b-8aa0-cfd5b6802ae3",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7fcc113f-090e-4f47-8df4-fe8c0513c620"
        },
        "item": {
          "id": "e97d44f5-813b-4b47-9540-2c4b08cc9f0c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e52a1d74-2399-4b4d-9511-62936a221e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732bdd32-234f-47a6-b945-4242c2b97b85",
        "cursor": {
          "ref": "39f35a33-d096-499a-8390-e3a265a0689b",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a0578c8f-0c57-40b5-9c70-4515fb6c0dfd"
        },
        "item": {
          "id": "732bdd32-234f-47a6-b945-4242c2b97b85",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "389ad132-4a3a-4ba9-a4fc-36d6e952043e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2440ad-49c4-433b-b4f7-919cce262626",
        "cursor": {
          "ref": "f5d879bc-365d-4714-a0e2-f732d7acb50b",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5a9a0aef-15d2-4127-8398-1fd0e6227014"
        },
        "item": {
          "id": "1e2440ad-49c4-433b-b4f7-919cce262626",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3a9a89c8-7f53-4c50-9700-ae279576a090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ca0ef8-2ad3-4024-b952-cb4d1de7d4fd",
        "cursor": {
          "ref": "13f6a250-7b3e-4647-9ed8-a0fd04961ddf",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8ff87338-f9a0-481c-9b27-5c4495168bb1"
        },
        "item": {
          "id": "35ca0ef8-2ad3-4024-b952-cb4d1de7d4fd",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1ffbff31-71de-4387-aa3e-b7988ce17a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2062e919-232e-434a-8096-9478db9907c5",
        "cursor": {
          "ref": "e8a02057-a166-4ce4-9468-532b8ac364d4",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e5bcc331-7e32-4ae9-8223-43cf700bfeea"
        },
        "item": {
          "id": "2062e919-232e-434a-8096-9478db9907c5",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "dd666914-a436-4f9f-86a7-578a1a290383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8041de5a-935d-4695-90c3-25981d2f318d",
        "cursor": {
          "ref": "905cffa4-76a3-4a5f-b52e-640c25391a1b",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6a479136-db9a-4969-a089-3c7056a28035"
        },
        "item": {
          "id": "8041de5a-935d-4695-90c3-25981d2f318d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "138be105-cf70-471a-81d8-8203ff674a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e83f18b5-ec03-46d3-b688-6cd8179f30a3",
        "cursor": {
          "ref": "0ae8b96e-7131-4875-aa9d-9934b38a53a1",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8965c027-d658-4726-a51d-9db115906033"
        },
        "item": {
          "id": "e83f18b5-ec03-46d3-b688-6cd8179f30a3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8d411a4c-2e25-4370-8bdd-12d8f691fd14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4599414d-565a-44e1-81ad-34b7c0260298",
        "cursor": {
          "ref": "29e62c31-7299-42b9-91c9-d573bfadcbb7",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3e2024ea-7b34-451c-bc49-a79cad9a6a1e"
        },
        "item": {
          "id": "4599414d-565a-44e1-81ad-34b7c0260298",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f31ef1a7-6742-4640-b4e9-30488082e40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e144ec-33d9-4d3c-9d33-c94eb0f34f5b",
        "cursor": {
          "ref": "342ba460-e240-4500-a1eb-1a1c88674f3f",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8b34f15f-afbe-4c19-a6e3-a5898c532e37"
        },
        "item": {
          "id": "14e144ec-33d9-4d3c-9d33-c94eb0f34f5b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "62bdc451-a566-4ff2-b7ca-92c039732c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b51e8e1-3d1f-464a-8eda-01bbe9fb8414",
        "cursor": {
          "ref": "33e686bb-0a5a-4142-8744-c2f7fde2e4b8",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "48744f68-3b16-4b58-bd93-dcaa8c2e98cc"
        },
        "item": {
          "id": "4b51e8e1-3d1f-464a-8eda-01bbe9fb8414",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d4338134-8544-4a84-84d3-b1fd68ebf36a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3719ca-a884-40ea-afcd-9eb0fb9e5523",
        "cursor": {
          "ref": "d5333332-9844-4981-952d-24da339f6155",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3d27582e-f4cc-432d-897c-8a4f47accc17"
        },
        "item": {
          "id": "bd3719ca-a884-40ea-afcd-9eb0fb9e5523",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d6d5c75f-9245-46af-86cc-3fe09a5f0006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ada2d1-6ef2-46c5-9ab9-acb38271f8cd",
        "cursor": {
          "ref": "8ed0f655-d6f1-4475-a7ac-7be561c60cc3",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ab778dec-c7ae-42a5-9f6d-b4ccd95fc3c5"
        },
        "item": {
          "id": "e4ada2d1-6ef2-46c5-9ab9-acb38271f8cd",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "06030d0e-1d04-4b1e-ae97-f0e7c3790769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda9cfa5-04e5-44f7-9d85-c9c6f741d6d2",
        "cursor": {
          "ref": "9054a590-212e-4cf1-af5e-e9e0fb2fb416",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "bd104b6b-6890-4da9-bd41-b815c041d96c"
        },
        "item": {
          "id": "dda9cfa5-04e5-44f7-9d85-c9c6f741d6d2",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e31d0fa2-4018-41a2-9366-c1d8925b44b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a159e814-7b41-4285-8cb6-b07c654194d1",
        "cursor": {
          "ref": "be7aab13-db0b-4eb1-9d2f-7a034b99281c",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ee6bd9b1-3e09-4574-9e11-7ea7cc1dea94"
        },
        "item": {
          "id": "a159e814-7b41-4285-8cb6-b07c654194d1",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "381a7e93-034b-4ca6-be90-7cc05ed085db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00befe5f-cd5c-43da-9e3e-e26bc0a4e2a2",
        "cursor": {
          "ref": "14e02134-ebe5-4888-8498-09f80bf413b3",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1cdb695f-8b2f-41f1-8457-8ad86ad522fc"
        },
        "item": {
          "id": "00befe5f-cd5c-43da-9e3e-e26bc0a4e2a2",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "04a92db1-dae6-49f9-8d06-59ff9522cd8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae4224d-98f6-471b-8231-342d8d88b473",
        "cursor": {
          "ref": "96622d44-be50-4e3d-bdf5-d5ee16006455",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "74ce63a9-5bf1-45dd-97fb-a3bc714944d1"
        },
        "item": {
          "id": "cae4224d-98f6-471b-8231-342d8d88b473",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "54b8b687-6ba0-4b33-8dc4-fafc6fde44b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38e1a61-773d-40d8-8a01-7d22cd20a146",
        "cursor": {
          "ref": "8c0af62c-8e8c-40a9-9ef7-fe24f7ecfea6",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e3c7c26f-b4e6-467b-b270-fd974643ce9a"
        },
        "item": {
          "id": "e38e1a61-773d-40d8-8a01-7d22cd20a146",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "90ce07b6-ca41-4334-8408-db20f979b79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "579bdaab-f5ed-435b-9039-1d9e1b193df4",
        "cursor": {
          "ref": "ad9f0dbe-b3b7-4fec-b4ba-99c01270d241",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a4d590c4-e8ef-498d-bd59-19908a96a165"
        },
        "item": {
          "id": "579bdaab-f5ed-435b-9039-1d9e1b193df4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7bf98af5-c59c-440f-bcdb-4909bd33f3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90e0ff7-2ca0-4944-9562-3bf7fd68ec0a",
        "cursor": {
          "ref": "062a4fe5-18bf-4cc0-8569-d77fdbc40b39",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d4efb73d-0c0e-4c7c-b10c-b822a8eca5dd"
        },
        "item": {
          "id": "b90e0ff7-2ca0-4944-9562-3bf7fd68ec0a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "54187f58-751a-4bdd-93fa-fae1f63f9544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a28928-284e-4ed3-a3d2-4305a9649e75",
        "cursor": {
          "ref": "13ad447b-1bf9-42d6-928c-733e50fddf36",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "bb042893-8eec-4794-8ee1-22763b945f98"
        },
        "item": {
          "id": "59a28928-284e-4ed3-a3d2-4305a9649e75",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "12f0765b-8018-44eb-91f3-73b0f909e791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592b61fa-709e-4621-95e7-c90a47d976be",
        "cursor": {
          "ref": "76ebfbf9-99d7-4967-b5e9-6ce1f86e0251",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ee9aaaac-a6ac-427e-8186-1dea3224bab4"
        },
        "item": {
          "id": "592b61fa-709e-4621-95e7-c90a47d976be",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0e4b3c9a-4217-4af3-b829-c5a98daccb7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25f6117-06c2-4c67-aa10-0530510b9382",
        "cursor": {
          "ref": "c3ce9c5f-75fe-4ed2-87fe-3577727798cd",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d9e72ccf-cd24-4951-ab8a-741c995d1622"
        },
        "item": {
          "id": "e25f6117-06c2-4c67-aa10-0530510b9382",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a9af7ada-037c-422b-91cc-08458ff91b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe71b4c-107c-425a-b52d-e4a1fffeb3e2",
        "cursor": {
          "ref": "ce22b861-7426-45c4-8173-486ca1ad76a4",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e9f75542-77dd-4429-bf6c-23d480262d2c"
        },
        "item": {
          "id": "ebe71b4c-107c-425a-b52d-e4a1fffeb3e2",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c794bd7f-df20-48f7-b1d8-c04859ccd9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf11cbe-2bc7-4823-bec1-a7fab99a2e8d",
        "cursor": {
          "ref": "0c81b571-679d-4386-bbe2-b5222dd45cc2",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "bfdddacf-6d90-46d2-a62b-1a3464fd1d23"
        },
        "item": {
          "id": "daf11cbe-2bc7-4823-bec1-a7fab99a2e8d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d0d56b84-de66-4747-ab16-30e27e4a3be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98de2e01-cbbf-40fc-b8d6-a483f3610d8b",
        "cursor": {
          "ref": "2555d171-a5a1-48be-ad05-f9ba3e81d6b0",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3a164f4e-e530-4a86-ae34-f911d7e573ef"
        },
        "item": {
          "id": "98de2e01-cbbf-40fc-b8d6-a483f3610d8b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1615ea5b-f51b-41d7-be1d-7cc5307ecf0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62425221-8bbe-432c-b804-902d32723820",
        "cursor": {
          "ref": "7a83a80d-74ec-4e73-83c0-a83b5f9935dd",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2713c21b-ce77-4c89-bfba-26c40f659db0"
        },
        "item": {
          "id": "62425221-8bbe-432c-b804-902d32723820",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7e197fbc-7d90-4e79-a017-6f1787f63d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c864cad-3855-44a2-be67-0c379820956f",
        "cursor": {
          "ref": "8c793f1c-edaf-4089-86fa-3944c9e2c7f0",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ff8f4d47-8c66-44a0-bba1-927dd7a5b0ac"
        },
        "item": {
          "id": "1c864cad-3855-44a2-be67-0c379820956f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "38950cc8-c0f9-433c-8179-10714d24fdfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbb56ce-6943-445a-9ee4-8f6f8a6b86d2",
        "cursor": {
          "ref": "8a29578c-7075-4e22-8432-412fc9f500f1",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "797ccf8a-2f14-4554-98b9-1cc64113afd9"
        },
        "item": {
          "id": "7bbb56ce-6943-445a-9ee4-8f6f8a6b86d2",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "39a30058-de27-423b-873c-2494f486440c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e59bd53-1491-463c-8bf8-97d38c5a8103",
        "cursor": {
          "ref": "f95bb567-9ad6-407c-941c-0c5637c545eb",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "857f6913-1665-4b0a-a428-bf2f60ab3793"
        },
        "item": {
          "id": "7e59bd53-1491-463c-8bf8-97d38c5a8103",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8e148b2e-8be3-44b2-bbf6-6a6540f3160f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fbf06b5-57fc-407b-8706-469d4aad5fcf",
        "cursor": {
          "ref": "9c8ef488-f8ea-48cc-989c-887c3cddb32e",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "88801ae8-af42-4aab-97b1-5cd1ff393343"
        },
        "item": {
          "id": "9fbf06b5-57fc-407b-8706-469d4aad5fcf",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "cec1fd36-b1d5-488f-8366-d23d68f546d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a20747-1244-47f4-a2b6-393de92f20d1",
        "cursor": {
          "ref": "8bcc2dd9-29aa-42ac-88fc-f7285beef3b6",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5201e3e0-42ce-44e7-b84f-837cb9e7e69b"
        },
        "item": {
          "id": "e7a20747-1244-47f4-a2b6-393de92f20d1",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "46513350-031c-4fbb-80f9-965708b577be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faac6de8-f319-49fc-a247-c51405fe1949",
        "cursor": {
          "ref": "33e117c5-786a-475f-8d0b-8ad0039f66ac",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5eaab76d-e0a1-4eb7-af85-044b0fd80f80"
        },
        "item": {
          "id": "faac6de8-f319-49fc-a247-c51405fe1949",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5fc4c432-f956-4ac3-bc06-4b223cbba7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c18f793-c6f3-4e5f-a87e-1b7f1c25c978",
        "cursor": {
          "ref": "bedcf041-8785-4eb8-9e8f-b854db8b5b07",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7d915ebb-9600-43cd-961a-cfc1fd7b8a28"
        },
        "item": {
          "id": "8c18f793-c6f3-4e5f-a87e-1b7f1c25c978",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d739c8ec-b86b-44af-9d40-301e6301a317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "702dfa70-22ce-4e9e-be3a-0d06411cba06",
        "cursor": {
          "ref": "987742a5-7a2b-4d57-987e-e82213a4fc32",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "55a5882d-44fb-4b4d-8919-712a9ff69265"
        },
        "item": {
          "id": "702dfa70-22ce-4e9e-be3a-0d06411cba06",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "808f8ac9-24f0-426b-9ec2-65a08a5e53a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950cda03-8d3a-4a81-a386-e82699ff1d0d",
        "cursor": {
          "ref": "e1d82e99-7d7b-47b4-b79b-05dc9700dde1",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2a7be743-d408-4180-8334-90ba10712ab5"
        },
        "item": {
          "id": "950cda03-8d3a-4a81-a386-e82699ff1d0d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "74da7625-d38b-420e-b7ad-b6eca9800970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807044a3-6a3c-4bd5-8c44-dbe371cd3caf",
        "cursor": {
          "ref": "3fe4dfef-fb78-42d4-9d01-772ccf3edf90",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "09a59694-2faf-4fc6-9fb4-b2b2a5881501"
        },
        "item": {
          "id": "807044a3-6a3c-4bd5-8c44-dbe371cd3caf",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "039c130d-99db-4f25-9386-087afb1749f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c41211-1365-43de-9b70-ee8a5f0612e8",
        "cursor": {
          "ref": "d98d36a5-3525-4a30-b9cf-834b877439b6",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "49a99380-38e8-4cb8-baa0-25682bbf8096"
        },
        "item": {
          "id": "80c41211-1365-43de-9b70-ee8a5f0612e8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "904c2eac-1674-4843-becd-b22dc1ee7959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c774e8e-11cc-4dcc-87af-aa32dcf42c8a",
        "cursor": {
          "ref": "019b3f54-06c8-4565-90d8-e14fac723789",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8faa0009-44ba-4683-a663-eddd34660813"
        },
        "item": {
          "id": "2c774e8e-11cc-4dcc-87af-aa32dcf42c8a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "057f301e-8eff-4eda-bb44-5f1a2bd81b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4029cad1-70db-4f67-8d23-8b57d6490ae0",
        "cursor": {
          "ref": "b7c78277-1d21-4994-92eb-fbcb6007d34d",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5b26d545-a4c1-45ba-ade3-b9471b0d33c3"
        },
        "item": {
          "id": "4029cad1-70db-4f67-8d23-8b57d6490ae0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "833370d8-07a7-4516-bf70-24be286c8332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64f0cc9-518a-46c2-8285-193f8621ab54",
        "cursor": {
          "ref": "42a3d58f-b184-43eb-ba73-bce7c27b0d79",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3da2b9af-9253-4d3d-9c30-38c29939bf78"
        },
        "item": {
          "id": "b64f0cc9-518a-46c2-8285-193f8621ab54",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2fbddeb9-ffb0-4331-af19-7d2394fae935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df52a36-ff65-415f-8866-5bb6d0e07c1c",
        "cursor": {
          "ref": "759250c7-c895-4fb6-ba30-54fb25cbc1eb",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "991755de-4e48-414f-89c3-2b66572ea9d0"
        },
        "item": {
          "id": "5df52a36-ff65-415f-8866-5bb6d0e07c1c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "44967d6a-e82b-449a-b392-463a4888ca1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f4db50-3ed6-40bb-a4e9-4ad42b2ce894",
        "cursor": {
          "ref": "9172adfd-0c08-4e38-801d-68c24df4b2c1",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1387eb5e-3c89-405f-9638-25ab0b05266b"
        },
        "item": {
          "id": "d7f4db50-3ed6-40bb-a4e9-4ad42b2ce894",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "67033931-179a-4d65-80df-3ce78ebb77ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6629b924-80cd-4481-afc1-cd115f65b258",
        "cursor": {
          "ref": "01659947-f5a3-412c-83be-d697e455d32e",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "018f0d5d-2d39-44da-a0ab-a72b6471e875"
        },
        "item": {
          "id": "6629b924-80cd-4481-afc1-cd115f65b258",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e39089f4-58e1-4d27-ae2b-1da8dc9608c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18aa3c7a-4523-4570-95fc-fe6d05321392",
        "cursor": {
          "ref": "0a2f7c59-f4a3-4227-9b30-f6ce6cf574ac",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "409cf44d-f344-406f-a719-ba43e1f55407"
        },
        "item": {
          "id": "18aa3c7a-4523-4570-95fc-fe6d05321392",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a5748a16-5689-4758-b4d9-03f681d13224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd42761-7df5-41bd-a46f-26b9e2b35918",
        "cursor": {
          "ref": "651b5a7b-3d44-433a-9a0f-1c5729284ffc",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "24160e27-beca-4fc8-8aae-0c59670ad99f"
        },
        "item": {
          "id": "edd42761-7df5-41bd-a46f-26b9e2b35918",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e1f7b803-dcf3-46f5-8f37-8ae8d651d1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c987d91-8cc6-43e6-9e07-9db7b46cae1f",
        "cursor": {
          "ref": "b5edbf60-fc60-431f-aafe-3edae6905052",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8a531e88-be28-4261-982c-87e2c7684a67"
        },
        "item": {
          "id": "3c987d91-8cc6-43e6-9e07-9db7b46cae1f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "813c95ed-8118-4588-8ae1-d52f8b24e223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c83c3d4-9ed5-41e4-b1a4-a5830680f2f2",
        "cursor": {
          "ref": "1f63e59b-942b-44c1-b217-9e30aa870e57",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a3a6402f-bc2e-426e-895c-be16cbec1e9a"
        },
        "item": {
          "id": "8c83c3d4-9ed5-41e4-b1a4-a5830680f2f2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "cc646af5-ce0b-4768-8800-bee287cee53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4306ce39-2c28-4b8f-9f9c-f9973ecf3cb7",
        "cursor": {
          "ref": "2b58b28d-2218-417f-bdd7-39bb67575b50",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "72696fc9-b117-4ce2-9755-bdb808701796"
        },
        "item": {
          "id": "4306ce39-2c28-4b8f-9f9c-f9973ecf3cb7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "cc3d4826-4d55-4b7d-a7de-6855445a9c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aad21bd-94a6-4a1e-8775-46b1e415298a",
        "cursor": {
          "ref": "f061bba5-e3a8-4ae9-89cc-0d437df2b844",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6bcebe24-2cbe-4679-a02e-350dc807b144"
        },
        "item": {
          "id": "2aad21bd-94a6-4a1e-8775-46b1e415298a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e46f94f5-48e8-480a-8e74-4cbc5b63d59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47b2b30-fa28-4fdc-b7fa-9b6cb557394a",
        "cursor": {
          "ref": "7acde777-e252-44d1-90b7-c0c43f84a64d",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8efc57de-7226-4430-ac5e-c2457a6646a4"
        },
        "item": {
          "id": "c47b2b30-fa28-4fdc-b7fa-9b6cb557394a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8bd19be6-eebb-4a73-bfc5-97144f371550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009c8a28-e1ee-4909-af14-728698b48a55",
        "cursor": {
          "ref": "9549d49c-54c5-46a3-86c8-c2e748cdc9b8",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0f051f16-27ad-46cc-a27f-feed471ae773"
        },
        "item": {
          "id": "009c8a28-e1ee-4909-af14-728698b48a55",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "878bcc05-6a57-4365-991d-4f25a726d954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1910af6f-0973-44b3-9f7f-6ec11070329e",
        "cursor": {
          "ref": "003f5617-04e4-4f36-bffb-a139c5a6c1e4",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c6e91d83-9cea-4ac9-8396-c64db6938899"
        },
        "item": {
          "id": "1910af6f-0973-44b3-9f7f-6ec11070329e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "93331053-e745-499d-b18f-5095a0ecbc99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53514706-fd23-4e02-afe7-16a3ccd70610",
        "cursor": {
          "ref": "1f26dd8e-beda-43ec-8a64-f9c9db486c06",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c4b2561f-9ccf-4ad9-a92c-d7516019addc"
        },
        "item": {
          "id": "53514706-fd23-4e02-afe7-16a3ccd70610",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "098efe9f-0c9e-46fa-bd80-a2cff1b15076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb095135-1ae5-4298-be55-d3a8a8a7dc1d",
        "cursor": {
          "ref": "332aa1fa-e91a-40f3-b87f-b42c919651d5",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e2fce5f4-6f0c-4d82-bc22-8481864142ab"
        },
        "item": {
          "id": "cb095135-1ae5-4298-be55-d3a8a8a7dc1d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f9427bad-faa5-4928-97d4-54d89e02748c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2fb289a-a686-4ab7-b8e4-9ea8eb455f3d",
        "cursor": {
          "ref": "5564ff39-5ad8-4f40-b11b-676b4951935f",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "06897542-a14d-4998-a31c-425f93c4463d"
        },
        "item": {
          "id": "f2fb289a-a686-4ab7-b8e4-9ea8eb455f3d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0917a90a-15ac-4af0-8b95-2464e7b99b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac30fe5-5685-413c-acab-e750a9b2090c",
        "cursor": {
          "ref": "dab23bbe-ba36-46da-b6d9-3b6501fc2b88",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "40b8f193-b3bc-43c8-b7b8-85c81be5031c"
        },
        "item": {
          "id": "dac30fe5-5685-413c-acab-e750a9b2090c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "55d83221-05f5-493a-a37a-15f312b7ce98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165b37ac-3ba8-4e6a-a2ad-b04ff1218ce8",
        "cursor": {
          "ref": "94e9f04e-8ea1-4a39-8e40-174260023d81",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1e9032fe-5656-455c-8651-7681e4f727c2"
        },
        "item": {
          "id": "165b37ac-3ba8-4e6a-a2ad-b04ff1218ce8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8d8c98b3-9236-49cb-a5f1-508807f12b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5fe6d6-1819-4d2d-bb10-85431011568f",
        "cursor": {
          "ref": "0d412695-6bc5-4866-a055-83079f08de0a",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2dae8843-f83e-43e7-ae88-2c2205b351af"
        },
        "item": {
          "id": "be5fe6d6-1819-4d2d-bb10-85431011568f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "115ae015-fea7-4b60-946f-fc3934e78710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8247cc26-691a-4987-af17-a6f8123da079",
        "cursor": {
          "ref": "ec797c92-bb7b-42ea-b23f-317dc778b34d",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "be507e5f-db01-4efc-a6b8-ef331a26989a"
        },
        "item": {
          "id": "8247cc26-691a-4987-af17-a6f8123da079",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c1ec0587-1378-4cbe-b5bf-9418c0a40c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea17c421-d9b6-468d-b901-97ead519c9eb",
        "cursor": {
          "ref": "5ddbaee4-3c41-4332-a3b5-6a39011ca5fd",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8118804c-6492-42ab-82b1-131b8bd9c236"
        },
        "item": {
          "id": "ea17c421-d9b6-468d-b901-97ead519c9eb",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3237c08d-c416-42fd-80b0-acc39ae9c03f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838c829a-172c-40bd-b1af-b004b627f930",
        "cursor": {
          "ref": "92808681-aebb-472b-921d-e3cb5b3a5437",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "971edba1-a0fa-4b57-b86a-55c7860f40ac"
        },
        "item": {
          "id": "838c829a-172c-40bd-b1af-b004b627f930",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3b425a22-991b-41dc-8886-6099f3c77405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ceac5d-d9b8-407a-b6fd-a65883cbcddb",
        "cursor": {
          "ref": "c4b2ff0b-4e82-407b-a20a-2fa62df5686a",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ab5b3b7d-3d7e-4d66-ae20-155a6a9f731a"
        },
        "item": {
          "id": "59ceac5d-d9b8-407a-b6fd-a65883cbcddb",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ba4911f4-df55-4f3f-b209-e96cd7539548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0e10fb-56b7-4bb3-ab0d-fe7e3a3768b1",
        "cursor": {
          "ref": "7c450e91-d051-4cf5-ad4b-857738617c4c",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c68e0800-1b13-426c-83a2-d4feb2f2c002"
        },
        "item": {
          "id": "0a0e10fb-56b7-4bb3-ab0d-fe7e3a3768b1",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "eac6b411-2304-4ac4-9ee5-a13f5451bbfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87abc7a-d2a0-4903-a22f-3c82af1afe8f",
        "cursor": {
          "ref": "05759b80-6c5c-4ceb-bdeb-a497dceb7670",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "65f7cf21-2f6a-4543-8726-dd9c0557c6d2"
        },
        "item": {
          "id": "a87abc7a-d2a0-4903-a22f-3c82af1afe8f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "346fe643-28c9-4cb8-b87c-259e699927a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccbd3814-208e-4b12-9175-305d094f3c48",
        "cursor": {
          "ref": "351bfd21-e552-48ab-81a5-5253d9470773",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2d5c1df8-d1db-43ce-88c5-6c4ea86a1e89"
        },
        "item": {
          "id": "ccbd3814-208e-4b12-9175-305d094f3c48",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "646dbb13-1612-4f9c-a37e-55d54075cd5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1539d04d-1c84-4d15-b1b0-8ceeb4f39b52",
        "cursor": {
          "ref": "13eb44e6-6896-434c-bfe1-f608eef58f8c",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f72e63ed-c58e-45ce-b634-2618afdb6cc1"
        },
        "item": {
          "id": "1539d04d-1c84-4d15-b1b0-8ceeb4f39b52",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8a18864d-b9cf-491c-9820-ef32c8eab4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc3dc57-8a3e-4ac6-8ff2-d4be1ae9a76c",
        "cursor": {
          "ref": "730a7294-9120-41f2-877e-aa499b652a82",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "486e6830-1f99-4f9c-a861-b751f880d261"
        },
        "item": {
          "id": "ebc3dc57-8a3e-4ac6-8ff2-d4be1ae9a76c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "528ba89e-8d65-4036-9183-d8a1818ae26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f8fa72-36c0-47a0-8d5b-fda80390f604",
        "cursor": {
          "ref": "bb07bbad-2413-42b4-a573-7a8470b43e29",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ebe10e8e-1633-42cd-ac9e-aafd58fe76e8"
        },
        "item": {
          "id": "c3f8fa72-36c0-47a0-8d5b-fda80390f604",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0a5b638a-0bbc-4858-95d5-967d96260d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255e8135-9fa7-4c5f-9f63-e554d3af9280",
        "cursor": {
          "ref": "0e8d2dac-5b43-4cad-a5a1-39b17094cd7c",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9e26e488-3c33-4ca8-acea-53467344fbea"
        },
        "item": {
          "id": "255e8135-9fa7-4c5f-9f63-e554d3af9280",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e6792d1b-1827-42a0-877a-8e18395c8386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f18fb73-0b8a-4942-9887-f21bfcfe3327",
        "cursor": {
          "ref": "2cf92bf4-919d-49e6-a21a-d3b586e8ad0f",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "804e950a-1024-42c4-b2c3-5bafe0770d16"
        },
        "item": {
          "id": "5f18fb73-0b8a-4942-9887-f21bfcfe3327",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4b4b102f-9ad5-4378-83ed-a4a74dd0135b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f702403-18c1-4488-b641-7535a31983a1",
        "cursor": {
          "ref": "b02d3d71-35ef-44ff-a902-e1ff546fa96c",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3e6ace28-cf07-4d3a-bb62-9ea5a1db047f"
        },
        "item": {
          "id": "4f702403-18c1-4488-b641-7535a31983a1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "00420409-42ed-4faf-8d1d-fdeb7597c3a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194ae4a0-3753-42b5-872b-15811e9f2ebd",
        "cursor": {
          "ref": "4a3cf955-0f41-4f0c-942d-57d35fbfabd4",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "10e34412-8133-4d28-9a3b-51266cfb33b6"
        },
        "item": {
          "id": "194ae4a0-3753-42b5-872b-15811e9f2ebd",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ca49d1b3-5752-425a-a97f-7ba00c6ce82e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e803ec-56f2-4aad-9ed4-b6e2760bef49",
        "cursor": {
          "ref": "ca181437-a34d-421a-a85f-e40fdd1a66a5",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "094f7fef-647e-43bf-8d45-7a10793a3f83"
        },
        "item": {
          "id": "52e803ec-56f2-4aad-9ed4-b6e2760bef49",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1463b951-bf6c-468c-851f-dede61dcc1a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef82c79-8308-4e3c-9e5b-37870032578c",
        "cursor": {
          "ref": "2f443718-490c-47ef-8554-ed46ea59698f",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a5eb4368-6bd3-40d7-b1b7-8249d2fecc62"
        },
        "item": {
          "id": "fef82c79-8308-4e3c-9e5b-37870032578c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4df018fe-5a10-4a11-be3d-f6f4de566f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3922e966-daf8-4704-a719-3177f2106cf8",
        "cursor": {
          "ref": "e8a9c831-d733-4414-8715-066b4c90bc96",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "95ebe9a0-6125-4973-8fcf-e88212243ad7"
        },
        "item": {
          "id": "3922e966-daf8-4704-a719-3177f2106cf8",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6227d707-9c57-4a7d-8e48-ddbfaf81131e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774da583-61d4-4cff-ae77-080e29b1e93f",
        "cursor": {
          "ref": "0a244fd3-c23d-4d70-9a75-89770e1c725a",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "870e81fe-2146-433c-9607-83b34c2b99b2"
        },
        "item": {
          "id": "774da583-61d4-4cff-ae77-080e29b1e93f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "faafc76f-9920-490e-9f76-c2eaf0926e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41285fe-f914-46d4-9463-654169265a1c",
        "cursor": {
          "ref": "e55207b9-6117-4865-b13d-3941a39a3d1e",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0309baec-5f34-4292-a845-d9f37b7dd9ab"
        },
        "item": {
          "id": "e41285fe-f914-46d4-9463-654169265a1c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "306040de-9e36-4c44-b3ab-1a5b26cd7d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0587a5b1-1ee4-4379-888c-c727d1afb34b",
        "cursor": {
          "ref": "bfbb199b-95e6-4d62-b3cb-d245d519454c",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2355771a-c508-48f6-99b2-1ce0f8205e79"
        },
        "item": {
          "id": "0587a5b1-1ee4-4379-888c-c727d1afb34b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "27d8898e-5e37-46dc-b931-a46038e5d075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ac4bd7-5e4a-4e14-8a1f-552f4d1b1c25",
        "cursor": {
          "ref": "26cb95d7-12de-4d5b-ab14-eb1bb7bd1ff0",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2db7d937-46af-4022-a017-5a39caeb4cc2"
        },
        "item": {
          "id": "a7ac4bd7-5e4a-4e14-8a1f-552f4d1b1c25",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3fd3a10e-2ee0-44e9-bb7b-12c57a12e048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a487ec-d3c8-4a0a-8979-e313513378f5",
        "cursor": {
          "ref": "49989389-0e2d-46d6-84fa-0012e78fa34a",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5ac23c31-497f-4ae9-a7f7-7ea1116b351f"
        },
        "item": {
          "id": "a5a487ec-d3c8-4a0a-8979-e313513378f5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "90808936-3164-4dd0-bfa9-d5ed49101b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa41f679-2882-4682-a694-c44b39380d14",
        "cursor": {
          "ref": "f4aca624-5fa2-4a55-8899-faf1eefa7b90",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "75bd23d4-2a18-4b7c-94da-1b875932a680"
        },
        "item": {
          "id": "fa41f679-2882-4682-a694-c44b39380d14",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1744318b-366f-46bb-a4c2-b2493dbe5e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4591fe5-36c4-4cfa-8c05-d18def370d6f",
        "cursor": {
          "ref": "d9cbcb4b-9549-40d8-9ac3-10bea4e6ae42",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5fd94901-2f4f-41f4-a2b9-fb51e24096a8"
        },
        "item": {
          "id": "e4591fe5-36c4-4cfa-8c05-d18def370d6f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b6917158-575a-44df-9b31-b6df965f846f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad703a25-9eb9-4707-8d72-b8e0e59b4a32",
        "cursor": {
          "ref": "ee7acde8-3740-46d1-ad0a-f8d2c4d06620",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ec5a8abd-31ab-46e7-bf67-5fd2475e7d89"
        },
        "item": {
          "id": "ad703a25-9eb9-4707-8d72-b8e0e59b4a32",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "77acc074-cfda-4e50-8386-267ed665aca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5f8be3-364d-482b-beff-f64d459fe77d",
        "cursor": {
          "ref": "32318be2-5b34-4a39-a4e7-13a229eee636",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9855e47f-db6c-4b36-b8d9-5bc77ed79982"
        },
        "item": {
          "id": "1a5f8be3-364d-482b-beff-f64d459fe77d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "218aedb4-eaed-448e-b773-7619eff4709a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317e113e-6d9a-4b1a-a86d-b67eded21a56",
        "cursor": {
          "ref": "1417ff99-57c3-460d-ba28-8d953509186e",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e21594aa-67fd-40a3-8f6c-7922304ac840"
        },
        "item": {
          "id": "317e113e-6d9a-4b1a-a86d-b67eded21a56",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c4128ea0-e82c-4320-81b9-c3989ca10e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1752707d-eac3-48b7-bb95-1f5fca3a3971",
        "cursor": {
          "ref": "55b99183-44b6-4a8f-a89c-0840ecf1bebd",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1e4cb02c-34c3-4380-a2a2-a4b3f62a3c27"
        },
        "item": {
          "id": "1752707d-eac3-48b7-bb95-1f5fca3a3971",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "90cde542-9373-4451-9480-8292f000d318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e635a0-f3cc-459a-92d9-f3e3083709eb",
        "cursor": {
          "ref": "537a0192-d2ad-4185-b8b9-ff5a00939b88",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1a4eaed3-c36a-47e4-8c77-4f0e789dd8f1"
        },
        "item": {
          "id": "f0e635a0-f3cc-459a-92d9-f3e3083709eb",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "862583a0-8648-42dd-81d0-2fbc48c3a0c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c27856-0db6-43ca-9230-a9a0511de1bd",
        "cursor": {
          "ref": "c4260a64-1dba-4257-8735-6e679fd6c582",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "78dd356e-2baf-4f10-9d3b-adb0dbcb8068"
        },
        "item": {
          "id": "47c27856-0db6-43ca-9230-a9a0511de1bd",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "51d81898-34e5-4148-8c61-a119f22bd668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d32dd3e-bca3-4290-8798-550740c76e80",
        "cursor": {
          "ref": "646c9a5c-ecf4-496d-9a3a-85ad89756808",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ca177761-3699-4c8d-8eaf-90e4cbc61983"
        },
        "item": {
          "id": "8d32dd3e-bca3-4290-8798-550740c76e80",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "19a6b3d2-afbd-45b6-93cf-970add091915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250430ae-056d-44c6-9276-b1fabdbf593e",
        "cursor": {
          "ref": "659df2b0-09fe-407e-ae5b-9e57f1784eb9",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "62c446fc-03f0-42bd-beb5-51ccd87a68af"
        },
        "item": {
          "id": "250430ae-056d-44c6-9276-b1fabdbf593e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1d1793cc-d4e4-4e71-8bb4-962be3b32f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0a09ed-00fa-4b72-9728-5181beaaf415",
        "cursor": {
          "ref": "6d57546a-2c5d-46c6-b34b-89ff2dcd226d",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4c53fe60-133b-4728-ae94-c415a6b05948"
        },
        "item": {
          "id": "2b0a09ed-00fa-4b72-9728-5181beaaf415",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2400cc1b-ed27-4a4d-8966-b1876623746e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56541576-44d8-46ba-9afd-42a1aa72685e",
        "cursor": {
          "ref": "4e206c54-07ac-4689-aeba-23403ad56422",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1a64dc88-364d-43f2-a5c0-8f7a5ec75e82"
        },
        "item": {
          "id": "56541576-44d8-46ba-9afd-42a1aa72685e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7ee7a703-1283-4119-b33c-6659afca715e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520f84e0-da93-4657-9c7a-c3eeffc39d4a",
        "cursor": {
          "ref": "772efa4e-f192-46f0-8e56-5a8c89adeff8",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "cd81cd26-aa62-4d72-9375-33d1dd845c54"
        },
        "item": {
          "id": "520f84e0-da93-4657-9c7a-c3eeffc39d4a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "87c9a1db-ff11-45a2-b105-dfc4e6c0d300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06af02e8-baf3-45ef-a9ef-9eae51377070",
        "cursor": {
          "ref": "018bfd21-78c3-4212-8c4f-f807c11895ff",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7fbcbeb0-b535-4494-b2ef-f473aacbe11a"
        },
        "item": {
          "id": "06af02e8-baf3-45ef-a9ef-9eae51377070",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "388d4b88-70ba-4adb-a0ff-28b8e0b36ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5512dd5d-ac6b-4cd3-af8e-78e65ff1487e",
        "cursor": {
          "ref": "70478b0b-2366-4ac8-94f0-5d75a2f19f67",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "06d08f8a-297f-4ef7-9dc2-1daadaea9216"
        },
        "item": {
          "id": "5512dd5d-ac6b-4cd3-af8e-78e65ff1487e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6a768135-ece2-4486-a6c0-73e024096287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a388a99-203b-4c7d-b65b-bb64d6ca67cb",
        "cursor": {
          "ref": "2cc65b69-ecf4-46e9-973a-38ccf7335199",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5def32bc-d733-4016-b716-7831a38dc4e7"
        },
        "item": {
          "id": "4a388a99-203b-4c7d-b65b-bb64d6ca67cb",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "58a240a6-6787-464c-a0dd-f8372fbc7431",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7184124a-776b-4bcc-88f8-59a1c462e7f4",
        "cursor": {
          "ref": "220c99d5-6ca5-4755-9bbc-28a91335bbeb",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1199ca40-a7af-4e9b-ae77-743d026cf8e0"
        },
        "item": {
          "id": "7184124a-776b-4bcc-88f8-59a1c462e7f4",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "caa2bb63-21b6-4d41-ac59-9d9b4e7f0bb6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 805,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73880b1-8cde-40ed-9092-838621b2e22c",
        "cursor": {
          "ref": "dd3e2728-9586-421a-8837-905b4b9fde11",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ee1f2bc2-52d3-4e27-af35-bbb48509542e"
        },
        "item": {
          "id": "f73880b1-8cde-40ed-9092-838621b2e22c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "143573cb-7a4a-45a9-981b-fb52816cf30d",
          "status": "OK",
          "code": 200,
          "responseTime": 921,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e99fe8f-b4f9-4306-8dd5-b5fb1cec1877",
        "cursor": {
          "ref": "db959f98-ee8b-449d-a5ef-86949e4cc150",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6bf0dd72-4a3b-4c07-8fc0-4650fd2d3e32"
        },
        "item": {
          "id": "2e99fe8f-b4f9-4306-8dd5-b5fb1cec1877",
          "name": "credentials_verify"
        },
        "response": {
          "id": "5df09158-8af5-415a-89d6-da62a90350ce",
          "status": "OK",
          "code": 200,
          "responseTime": 2699,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e88e0c-1d31-49f0-a2f5-4ae539aef33a",
        "cursor": {
          "ref": "e324f375-1602-4736-9eb0-71d74e53796f",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "456764af-1053-4980-bac4-3dbee6301522"
        },
        "item": {
          "id": "74e88e0c-1d31-49f0-a2f5-4ae539aef33a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9a1a3761-ce19-404d-a043-2ec682e4264e",
          "status": "OK",
          "code": 200,
          "responseTime": 1996,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6cc8162-7465-4f60-a88c-369d94e5f5f3",
        "cursor": {
          "ref": "f40023b5-5a78-4596-8da6-aa8d2aa957bb",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c4a3e054-daba-496a-a626-f14a8fea2609"
        },
        "item": {
          "id": "e6cc8162-7465-4f60-a88c-369d94e5f5f3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4cbae961-e7b7-414b-8d48-15e9543d5832",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6cc8162-7465-4f60-a88c-369d94e5f5f3",
        "cursor": {
          "ref": "f40023b5-5a78-4596-8da6-aa8d2aa957bb",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c4a3e054-daba-496a-a626-f14a8fea2609"
        },
        "item": {
          "id": "e6cc8162-7465-4f60-a88c-369d94e5f5f3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4cbae961-e7b7-414b-8d48-15e9543d5832",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6cc8162-7465-4f60-a88c-369d94e5f5f3",
        "cursor": {
          "ref": "f40023b5-5a78-4596-8da6-aa8d2aa957bb",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c4a3e054-daba-496a-a626-f14a8fea2609"
        },
        "item": {
          "id": "e6cc8162-7465-4f60-a88c-369d94e5f5f3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4cbae961-e7b7-414b-8d48-15e9543d5832",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c7e030-6cf3-4202-980e-5c1406028e92",
        "cursor": {
          "ref": "aa49cee1-0d30-45ac-9b06-9ca7b79c3ae3",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "75a9e381-5990-445e-96e0-22203c92a5f5"
        },
        "item": {
          "id": "e1c7e030-6cf3-4202-980e-5c1406028e92",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "2450119f-cfd6-496d-8dc6-b70b2920460f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 403,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60be134-25a1-4503-b46b-021a7f24543c",
        "cursor": {
          "ref": "f7fa37c6-65be-433a-bac3-949effd676f1",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8f8d09a0-806b-49d2-ae7f-518f7a6919a8"
        },
        "item": {
          "id": "f60be134-25a1-4503-b46b-021a7f24543c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c2b5fe00-bd41-4f3a-9a6b-bbdd40f6d82d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60be134-25a1-4503-b46b-021a7f24543c",
        "cursor": {
          "ref": "f7fa37c6-65be-433a-bac3-949effd676f1",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8f8d09a0-806b-49d2-ae7f-518f7a6919a8"
        },
        "item": {
          "id": "f60be134-25a1-4503-b46b-021a7f24543c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c2b5fe00-bd41-4f3a-9a6b-bbdd40f6d82d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee2d1b0-2ced-4073-9c2f-63e334629ec8",
        "cursor": {
          "ref": "efa12581-c834-4ef3-92aa-1b4d97c08de6",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "eeece45c-a679-4a79-9838-3310cac1d39b"
        },
        "item": {
          "id": "aee2d1b0-2ced-4073-9c2f-63e334629ec8",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "a7ad509f-87a4-4c8d-be6f-e1cfdc44b733",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 620,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbe0a10-64db-4c79-992c-a34382dcfffd",
        "cursor": {
          "ref": "3288bdd6-168a-4390-8919-0009be82a93d",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9a0e4730-c837-4496-84af-53622b0d9500"
        },
        "item": {
          "id": "9cbe0a10-64db-4c79-992c-a34382dcfffd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "cee77e4c-9e5f-4922-bb36-24b8619ee12a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbe0a10-64db-4c79-992c-a34382dcfffd",
        "cursor": {
          "ref": "3288bdd6-168a-4390-8919-0009be82a93d",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9a0e4730-c837-4496-84af-53622b0d9500"
        },
        "item": {
          "id": "9cbe0a10-64db-4c79-992c-a34382dcfffd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "cee77e4c-9e5f-4922-bb36-24b8619ee12a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ffdce50-cfd3-4480-88f4-ddf3ef483411",
        "cursor": {
          "ref": "72bc62a6-0571-4a7c-bf27-915c373b47c3",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "53cfef8b-c00e-4b47-af6c-9e526ed4a72b"
        },
        "item": {
          "id": "9ffdce50-cfd3-4480-88f4-ddf3ef483411",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "b4bf1ab6-9d69-483f-a095-846bd5f6394d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 615,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}