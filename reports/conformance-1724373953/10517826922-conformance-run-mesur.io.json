{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e99a2fd6-2b39-489c-ba69-3c86084c38c1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "53a7a367-1b79-48eb-89e9-ed150e09766d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "58e3ffa4-6c6d-4738-ac0d-b00b01b155fe",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4dc54962-aab5-4946-a9f1-48c747d12b8b"
                }
              }
            ]
          },
          {
            "id": "576363df-1042-45fc-af69-e4c0fea597a8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c367aaa5-488e-4bd1-9d0a-eb2a2ef76494",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "63068b01-80ae-4237-a278-11676854783c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "74fdccc4-73c8-4d44-8b33-f17cca8c0d5f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "edee3e1c-b7ea-4672-be6a-5a37beba11b6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ba591391-1b4a-4723-b3da-c426dbb89a51",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "60cf48e8-7ec0-497a-b13e-4522af0c860b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7f4475a9-c070-4e45-98b2-01195b8a7f5e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e1d11a3b-5827-4d52-8aa1-cb00d1fb0d31",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a10daa3e-c374-414e-bdb0-3a5711cb9cde"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5daf3dd7-e383-4fb8-8dff-2737463d967f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7196a2fe-d931-4db5-b22e-5efa595d2cf9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87388065-7d81-43ea-870b-c2289319ba08",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "dfd55327-ef89-4ea7-9648-90ec8410de10"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1335d445-e9f8-4449-b727-5494e9965832",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3b7d7bbf-80aa-4896-bff5-c059d3e0c425"
            }
          }
        ]
      },
      {
        "id": "23e249bf-b174-4629-a465-e67de3e329ac",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6d95f8fb-89b5-4ba2-beb3-b330424f31df",
            "name": "Negative Testing",
            "item": [
              {
                "id": "97ddb415-bdb7-4f31-b8e3-bf956f679565",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "26c3abba-0984-4200-83d2-fb300c3b1e80",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86319c32-b175-4935-98a9-4cce687a4586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15eddf76-89b4-4e96-a2ca-95f0c01a332e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3dd58b0-898d-4d62-837f-50af3bf584bd",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ea6b0a-dcd1-4218-9eed-de709fbc09df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01acfc4e-c6c3-4bff-8165-35d61886ea58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc12a22-3946-4806-ae84-36c153f242be",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9308c75c-4b1e-4941-9589-8214aa0dfac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e09afa5-1173-4d5c-8d02-627ff4c41195"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b4ede67c-e510-4b1d-a778-7813d7ccec5d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a37f79a-ca24-4dad-b11e-64955c172d7d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1cfeeb-48c2-4c02-8dda-267ca3468abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "178ff19c-4772-4f7d-8e3e-cef69b973407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f2c945-5fb1-4af8-af01-b47ec958ef2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "326d8ac9-fd7f-4acd-8fe3-858fc892dbc6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c71d3c32-0aee-4c48-b871-ce05af9bc3f8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3e6023f2-23fb-4654-b663-0aa369aea806",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "642af5ad-4a84-476e-bb95-2ce13e65d75e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "498e1c10-c3b1-4eea-a2ef-4173c00a2dba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7eb7dab5-df34-4f40-b307-85ee9bb91c45",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b9c46e6b-706c-42af-a3cb-dc2b543a44d8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98737bd4-a421-4176-9fcc-b301dbae308b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ef332431-c528-43f2-bbd3-124b11b168c6"
            }
          }
        ]
      },
      {
        "id": "03366963-4d85-453f-9a49-b35a23b9793b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4e4906ba-903f-462b-8b01-ee18b2f322a8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7a968715-b461-45eb-bf44-e0133e617c2d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "fe048221-4c3e-41aa-b427-a23b7d069b9f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0bc4d40-596b-4399-a97a-32e55fe05fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee1cfaad-e4a5-464f-82cd-7a8567e35398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991c2d4a-bcf3-47ce-a2dc-f71564d0d7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5cc9ef8b-828e-46e6-9373-81d7d77ecc65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ba930a-509a-4f8d-831a-e452d0934593",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4aef53b-9485-40c5-aff5-b653d4db6854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b8a6dd5-45bf-490e-b208-51b76d60135a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e384ec33-b227-4fdf-a157-c37ccf799f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a41cafef-7464-4449-9a58-81fc29b52f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c01706-1386-4f20-a86f-cce314c6317a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ab7fa0-fcda-4c5b-91eb-2f76a0b2d17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7775c2cd-bc14-477b-8f51-60c12a0222fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9a8d1a-8800-4216-9029-42118b4d4815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36106dde-6587-4d69-984c-8e9a3f4e77bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ada831b-1e5d-4460-884d-85f4445b76a5",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f16e93-9f3a-4150-af93-acb668a47ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66adf9f5-8121-487d-a9b5-3971908984d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87217e29-b4f4-4e52-8ec8-f42cb9a72e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad9d8c60-a35f-474a-b99b-3a751cd42cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af0dec8-15cf-474b-b380-5553e56862bd",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e9c15d-0190-4d48-9cd1-55a544ce0836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52dd08e7-6372-4e39-98d6-c1b5ab0be6f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81305f81-5838-4d75-862c-68776731bbfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5858ecd0-6985-4946-8882-59769c13af8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a9c899-b039-4f6c-9996-0627f334d478",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0d9af9-b16a-4dbb-8351-f46f131c071b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee46be3-5dc6-402a-9617-8c93bd529640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd06498-5eb7-41d8-9077-9ead2c96daa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92c58aa3-cebb-4151-ba15-a86cc105207a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b60667-44ec-4d0f-ba5c-e594b46665c0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f689cd61-38df-4f08-a287-5157cbb2d370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0852256-34a5-4318-9e73-63f2981ae735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828f1cf0-b24e-4514-b7e4-44a4b5122ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e468ab5-c8d4-4413-822f-c07962e80e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a0af34-4cb6-4139-ad25-d082c78cca26",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcdb750c-b262-4c42-bd91-b8e88871a0a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bbb1d67-ae3c-4a31-9545-13659e668a42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c7409f-18fd-43df-b6ee-eda5754cbebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a136940f-f5ea-43d5-b9c0-0f641d1eb3c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dec47fc-f27b-4268-a747-1b5da9b651a7",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c7cd8c-0652-4435-8027-78b974faceaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4a59ec0-319a-4c1a-8516-87f922467b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d951885-57ae-4406-99be-176c2703fa5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae1dfd3b-8592-4b46-b105-4e15083fc208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4afc7898-1982-4eaf-9d81-64f983b7eaa8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54fbb5b4-c3b5-4f56-af4c-3ebb2bd40e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44734fbb-888f-40f7-9aeb-3d9e03c8c966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027da160-9af3-4ba2-92df-f6359288c959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "764c9275-d9c5-48fc-920c-95372cf93220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3add1849-7e6f-4427-9d5d-5a7b754d3c26",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1722fd49-a0ae-4e23-9f8f-616909b01436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c03e4b6-5291-40f0-a521-4e61263fd5e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b84887e-7a52-42dd-b4f8-84a851a5601e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0c1090d-2a5c-488c-94f3-1d682358ca2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0193bedb-48f8-405f-9767-ca5d8eeafbbd",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c538c8-86c9-48c2-a872-d26c4ce39bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e1a17ef-8662-4a6d-8b62-1a6126cc502c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2881250-2d93-4634-b506-ed9d2db25490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "716f1455-d311-4b95-b3cc-6667f23fd8a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7570f79c-8606-48b4-8fa4-00f520efb15b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8078771f-6864-44f3-9dcd-c91b881f2324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe991dec-681e-4422-9803-ea845e039e48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980868a8-a99e-4318-98ef-15aa56d4f02d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12ace8ec-20c7-4eac-b295-38fc16c1c1f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa6ec9c-c6a4-4528-a6d5-634d6ae98779",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf62d92-6ed3-483f-b7ee-b1554b8adce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c628dac8-068f-448a-895f-4ee2ed17fff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675063a1-e41e-4f22-9ee5-b52edbe91427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b36dfa88-b26c-4f56-9738-c829d5aa5b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17bcc4e4-de0c-4504-8ab1-9b17829e49c7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce44c21-fd40-43a3-99e1-b9029114129e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0226d411-7e7d-4412-9d8e-2d9ff58d4bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e6860f-ab7a-433d-a145-831bd059d1b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9c3dd15-3730-40c6-83a0-fe6c4042cbcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e55ec2-221f-4e59-bdb7-4f880c5e1372",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de1585e-b35a-48a5-96c6-c9c0a36954ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f94fed05-8de6-4386-bec3-a4728cd56949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f727bf7f-a0c2-4e83-ae22-2ac4226fed1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ad61682-3bf6-4498-8557-326ca15efdba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb478e2-f0cb-4997-863b-f7c42fec3468",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07554b4a-1121-4b0e-b789-b8459dcefc51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91207906-5a8c-4eb7-a10c-8e297f1bcb28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ed31c8-b875-4834-a05c-f65b18159bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2700f099-8fa4-47eb-8544-31268f9f46b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14dd6926-8de5-4a80-a5b7-79809ebfbf82",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa30f97-b8e5-4327-b3e1-77905c836019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b38cf2d1-eead-42b2-be0c-b714c0afb271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87de8b5a-d2ef-49a8-a8cc-ffe9ef7abc45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bab0893-51ea-430b-ba37-4e4d4e4e2a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24719aae-ad90-42c9-959f-82da8909875b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95470cfb-56a3-49bd-a61d-7a7a2a99a167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17665e6d-39e4-4d1b-b29d-88ff355f0092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddba98ea-68ef-4acd-a272-be401426ff0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aadd9044-d732-4c36-b364-eef9f9016648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ca549f-84a6-4dc5-8661-5806b54fd11c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c80f3e3-8b56-4874-9203-5ad49c784ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87d85e46-d55c-47d4-9502-52f5558d1d68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0041163e-4d06-46fd-ba3e-a0eceb05fd3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f341b8bc-491a-4a14-ada2-1b63f84de810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8169d53-f2a4-4908-8c72-58e232a5eadf",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62e3889-b9dc-4671-b7e4-41e9900a783c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4229ecbe-9074-48bb-91c8-ea6588a1d989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe564771-33c3-49dd-b09a-f51117950a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "33bd655c-c30e-4488-b673-8ad6341b8b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38665bfd-c03c-4d7d-956a-bc79141eb278",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b0d0fc8-7c70-4dd8-8c2e-cdec6bfce8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ea5f76c-699d-416b-932a-c8114a42fac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6babb53b-2f36-476b-9ad5-73f4a4ad35c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "33b86ef5-d7d5-45fd-b6b9-e9dc76c9ebdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0bf9d90-91c0-44c9-9b9d-b9fb62717820",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c4770f-19f5-4429-90b1-5c80d65f94eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a42afc2d-0dc2-4137-8db9-601b898fc1f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5ff2bd-0657-4eb5-8dff-07cf94637e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aa3d2574-9af7-481c-b285-7c465475856c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6b7271-3caa-4c29-a3b4-2c87f50a6612",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15600b99-49a6-4092-a022-bc94bbb67a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6918172-09c1-4417-b933-12c70888c61a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44fc911-40ab-427f-bb9b-2b70b7a12a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "eed50dae-5007-4ad7-af3a-eee9f4c5a817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ff1e67-318f-473b-84c9-dda76b2fa4f2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5446fb39-c4ae-4fa6-936a-79ab004bfadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7442cde-615d-450b-82ec-49cbc4377bcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6c8c77-2356-49c1-84a4-bb7acc1a36db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "29d2f59a-dcaf-40dd-9642-15838df17e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba65fc5-a1cf-411a-95de-3268f30ada34",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f36a390-57b3-41e5-b822-cac1a9eca713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d427b06-ea63-4e1b-8bfc-2f79c1d88005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a98461-7106-4df4-b6ee-0473e7fab3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fac6108c-5bab-4be2-a28d-6b2476b3ae9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3cbf8c-94eb-4f3e-9786-8565ab62c1f5",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ce08ff-1706-4d31-941c-22d96d69c37c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6299b7ec-9f9c-4c2d-8a64-e3a95834e526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875f002e-22ec-4bee-a7fc-e07cf39fe91f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1dff3ec-8ab5-4ded-a6c9-e21c9a98dd9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe570968-98da-4927-944a-f612a71396a8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd07e6e-ceaf-4681-b2fc-325d9fb69dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44065580-8253-4edb-8ef4-d9774302438f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542d1cfd-c67b-4675-ad56-cbc817679414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "84532c61-ecab-4830-af0d-957f292a2e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add481cc-724d-440e-a949-370b25131fc8",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe7936c-3ca9-443f-8682-0e9e3a561496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9bdb165-1131-4413-941b-e900df21d30f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d161698c-c879-4790-9578-60f0e2e0f4a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fdceddf-b2f7-4cd4-89eb-688c5e15cae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b2e23c-7162-4e55-bcf4-dc3a7d7df815",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5f34fd7-5c00-48ad-9627-bc885cbd56f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6847d0cf-0b45-4ea5-a512-331861b88fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e2b213-f153-444e-b0a1-b48784db4f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "024c9c72-d5ee-412b-8df6-c4d4e93ece8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba13deba-7f65-4a09-8b34-a0aab4e3b836",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0ddb5f-226f-4c9f-950f-0dbbc867983e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29b27dfd-8594-45a9-a924-52cbd2c9f3e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3caebe-3249-4e26-84a7-2ea6e30a0986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "95ea8988-b9fa-416c-a04d-ace93835800d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39bc75f-ec06-4f6b-91c9-25115cde6f9a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20549e4a-aad7-4015-b85b-101ae2381a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "337662af-0505-4e9d-b4bf-493cf34ba91a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0e8477-441f-4bb7-a1e0-2263f514656f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f01d7e12-b8a4-4b3e-b177-b86c7b4ce33b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a491421-f4bb-438d-a0c6-4c5d68e0ebb2",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aafc8708-6f91-4619-abc7-f2376b08aeb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "832ab6c7-00fb-42ae-b469-e29f6577c837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3c8118-8b8f-4683-a683-d21082bddbcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1796999-d0d3-4a82-b327-a20ca0614a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eafa3ecc-a409-4906-ae0d-f571a29d797a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae0b9d7-c702-403d-9341-2b60138b0e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d1115d9-6f13-4838-bca2-8fa5d2421599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff4eae6-6acd-4c43-9d3e-076ee8f97b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5712eb00-abba-4399-bce6-a504c91bcb43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866932b6-805f-467e-ba0a-3abcb0f28397",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7472ea-8676-4f7d-bbc1-5429650e238a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b479d4f0-0bb4-4740-91f2-33f9c83085a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d130c080-2697-4510-ba64-c67a79ebfeb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "767ef4e5-164c-4b49-afc5-d53a30af1768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b59a963-48f4-4edc-9096-e70aec12a935",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "869ec99e-0aeb-4b86-a6a1-83600023dd23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96c80108-6b07-4d4b-998a-352f3e2fc360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e177d7-32ad-4a75-9e87-31d6ecfe6aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c4b4f9a5-a85e-4a20-ace9-5b50d38c5847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c442a02-61b8-4b28-ab93-90e5e68d799e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0edbc7-4677-4d9a-9204-904d1291d58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c08cf674-53da-41ae-b698-6ac7307283bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885b59ec-98d7-4ae7-9331-b9f41e10228b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e49b165-ac12-4686-84c2-5a6f6fe8c2fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66214260-7f9e-47fe-8e71-4fdc6261a6d2",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36891a61-e01c-446a-a5e5-c7fde47a1662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "582e8144-ef67-469d-ab04-73383ffc439e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4736bb40-14a8-4e4c-8135-16e8437a74f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe8fd5cb-e6e6-4d0a-adcf-46d2b138f1c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0f338f-379a-4b57-800a-8f22659ea7e8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05539080-636f-43b9-b79d-aac8a34be7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee23f20c-53ee-4398-ab27-7257aafd6684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25c93b2-3a4a-4fc3-b229-9edacb1ee5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "de608b55-756b-410b-8500-ad7c1b9c462b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a725277-6e48-422e-bd6e-f9f373149917",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a77622c-f436-4d24-8ec1-9ab81857a2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7d4b391-8397-4bd4-8b56-500debb8d33d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18cdfdba-6adc-48c2-9f02-53b89decd965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "252eeb5d-9b12-4c6b-88d6-462ba7b1db23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f31034-0317-46ce-8290-03a2807b29f4",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e26f2de-e846-48f4-81fa-e87fdeedb4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "025ef13e-d536-46ab-8c28-ae5755716311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7abe9df1-d0e7-4de3-a273-704914197d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "92ed0208-cb76-49df-b917-02b58b8353b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8df6bf-6106-4dec-8e42-f29cee3dbd9a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d7ec0cc-eec8-4348-ab0d-6f0ba2004b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88f0039f-c16d-4179-9ba8-a5ac557137da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e0ab37-bc6a-490f-8667-94289759cd8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9575dbe5-e806-4fc4-bda6-85a88e46387d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d368a4b-e495-4001-8b63-cb7a3b05963e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "425e22e0-57ce-45c5-a02e-39bdc5d7b3e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b95f54a4-28be-43cc-95da-f90be19880f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81bf3ef8-4e71-4d0e-8d56-42ba6ac8b839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "14bd57d8-f83d-4c50-852d-a134764976ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae31e7ce-b7ff-4f4e-b843-c1a9550f3f42",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de2745e-c0d4-4d8d-8110-5fce4d7dcec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8f4f6a4-3ccd-4f19-8458-b76187aad096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020cceaf-361e-480f-b7c6-3fe24ea89af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9482d764-00d6-4de7-b16f-17d9bcf0dfcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7aaf532-e3ee-4aa6-9fbc-663aba9a778d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7055c1bc-dd9a-4960-892e-32d92758e7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d191eaa0-6768-445f-96be-7af6a84906d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f03f22-a5cd-4d2f-be02-d1cc8e185f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e099bfb-e62b-4059-9a54-68c0c3bb6d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb5c78e-90c7-40ca-b406-8d4584c6c903",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "647a2d2c-d597-4a87-9813-ac17bc13cf84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1db4253-74cf-44db-b8b7-7bc106aa2e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2907d750-26b9-4df6-8952-22245b8334d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74cb9ce3-5f00-46be-8448-e24f3ce8a2b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9176bf64-5fba-42f6-aaf0-b13bd0cfed6a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc2a334-7a2c-40eb-85df-a3269282d3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94e8a7d9-5540-42c2-ae6e-ad656e3be426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9deb5f34-5562-45b5-bc2a-d43c23f5fd87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcd8fdbb-b929-4e72-83af-77de84289ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31082ad-3965-45e5-9f2c-9538e9eed732",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "084724fa-081c-4999-95c4-0c64efabe375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feeffed2-9014-438c-b0e5-876fcf8a38e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d167d06-ebfc-42ec-a0c3-76e0a8c49443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aef8f3b5-5b20-4b02-ac26-9ee5b0dc5d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba98e3e2-9db5-44b7-b389-7d0a41063fbf",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba0112e-2631-432c-8277-96d5997c0a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f498ea9-3dbc-43cf-ac97-8b2cec1770dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87cbfbd7-ed83-4432-b65f-715da284f900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6da165b4-452e-4e52-858a-3a08774bbde8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e643ad72-2b69-4749-99ae-9aeb1200e1f6",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc279bec-fbb8-4244-936f-dd57a442a00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcc5b272-3a97-4792-b338-27b0bbe9ca4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23046232-bae0-4601-972c-8dec530c6e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "608eee2f-48af-4a1d-9aa5-c44263198eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6fa074-8c44-4761-b9da-d3b20720a50a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052b2724-bddb-414b-84fc-d3df50868acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45aea2b2-a0cf-4e34-9395-c8070c984c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee8aeab-4dd6-4587-a6e4-1f2ce91daa11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d7a2800-f774-462d-b92a-40faeae44374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1912c823-16c6-4a84-94c2-4a90330a8a3d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43559ceb-0b4e-45e1-a7d3-8676da506957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7fae538-9257-4001-922a-8689bdf70bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7b0cf5-37c0-458d-a415-b8a86693fab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "567616e7-6198-40a1-b018-0e2327ca62c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c209bedb-da69-43b0-8929-0833044c237d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f291a4ac-06e9-456c-976b-5c867bfe06de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "805fa59f-58bb-46d7-a07f-450363ca2ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc3140f-f4ae-4b79-b568-6d5da97d97f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d3cd76e-59a1-41b8-9443-f16597aa4814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d38ef5a-013e-4c08-ac8d-6257a63ef804",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aeb5ae9-702d-4728-ae51-8183b4fda50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1af451e-84b3-42ce-a243-5fc768d08f4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b137f8df-8c74-420e-9cef-1dad74f201dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "79c26880-2638-4f9c-ab07-6670cf8459a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6225a5e-8092-47dd-86b8-d6f751a521aa",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4b4634-30ea-4518-8dd0-68ae9ec7e192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ef2723-5027-4f0b-9161-2b6750e50c2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de1e6d3b-1a41-45b6-9d0e-a14f5fea80e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eac2a3d7-2552-42a6-a3e7-dd6afedf0b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96220a25-6fbf-49ed-bc1f-e37398bec7c7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fcb411e-f6f4-42de-a35e-7e46f0a72359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "199254ae-3ae2-4a02-94b7-ed1b21cd62f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926d1db5-c79a-49e7-b7e8-727692b4f98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "023ccf69-a774-431a-aab6-87111754bb01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adee4ce0-9063-473e-ab17-830e9c2a11d0",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f621bcbf-d11a-4f3f-9799-6d3ed92fe7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eb0a3f1-82a8-4eb8-bd44-e90a41f0eef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2212a096-1285-4914-b9aa-b12e8b92e46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "37728028-4300-4742-9486-1cc627036b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dacb7295-b333-47c0-b24c-40457b3dd185",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46010ba9-d415-42bf-af95-ec9d2d93a316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2480fe04-f71a-41f6-8568-ea75fbb603f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae89dcf7-d3bc-484f-bdee-7fcc6d4f355b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f73027cd-cb75-493c-8a1a-36c7144b24f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607cdc93-3a4b-4363-a662-48c4ef7a623f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ee8004-125f-448a-9705-d40f80c1080c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b26a72cf-d29f-4d78-8633-33ec941e694e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a433df-b0b1-4c3d-8cda-6c33e57c3e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee741830-5bd6-4d1f-8968-88a8df33f1b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7594af8-3dc1-446b-b7a1-1f229906e22f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b423df-5ed4-4c68-a7d6-47c4d3bee24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "440bc0d6-420e-43d6-8262-2ab488a84786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52bac95-1bd2-4eb4-9832-6ed6a8b7726e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a28f4c2-78fe-494b-a4f1-b8552b9d6673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a16e91f9-8911-4635-8ed1-bdd25762de2b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd2b60d0-7805-49f9-b3d3-2fee15fb5638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c64f812-3175-4eea-b787-777d7ed84e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ad2def-3695-4c9e-827e-5d7422a75b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0442e3e-5fc2-4036-972d-5bf038b18f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf3173a-6557-4637-98c9-7c06274a07e2",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fba5aac-17c2-43a4-9fa0-2e028ca52baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad69c254-1550-482f-a090-7e49598c1e76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93357c8-8e9d-4595-b5b6-60f7cf204354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8185311-7e2a-4c14-8e63-b8d3d92c702e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a4dd4f3-f2e3-4fb6-a6ed-f8bca8c8590f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23944cff-613e-42be-8cc2-8341e052159f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "965f86b9-15d0-4547-be82-594e03bbd123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569d756c-1759-4a81-a340-cd4dadde5c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dcc41f1-95bd-445e-b818-0b23df1b912d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ffb2959-cc5c-4265-b144-ea4334b55043",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94dde3b7-1c24-473e-bb1a-49c5e54c63d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "191764ee-b8ad-4d8c-b9af-36f231434731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe54fd7e-839e-4140-a543-070f3c3c9f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "51be31b2-ec67-4fdc-b68f-6d845fc17c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace25ddf-782e-4468-9e95-5139d65f8ab8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c35081b-9326-4646-9e73-f983645b46df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f25dea9-7b8c-440e-961a-802dc5c188d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c57d671-3b1a-48b2-bf40-8299c4dc91bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d04f3e23-a18b-4a33-97ff-323dbcc0e46f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52754f9d-b339-4a87-8d8c-a831ca0ae7b9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34607d8f-9f81-45b6-b792-28a0f20cd56e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dfa5578-e4a7-4c29-95af-d07991a951d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f6a74c-84a5-4646-bc52-9cda4537bfdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f6e2b3b-ce08-472d-bd77-b894d1914cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c46ae12-9284-4246-b0cc-52ba98e96fb4",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e981ac-a273-49e4-b7ad-916cb70e3064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08304a7c-9790-45b6-908b-d7fa3b180747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b644b081-4e2b-4d0a-aa42-8c08d81ba7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed7e39c8-71e6-4112-aed9-84f3d71f202b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eec36bb-2e90-4964-9ebe-c07d6b69fd08",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d254b8-89f7-482e-a94a-2661c213e422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cadbc058-9762-4101-8619-743fe9f332ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "034f39e9-b7d4-448f-b86b-84d161cb5fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a158c10b-f798-4993-b90e-d4c2b7e07003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab613c6-b807-4627-99d4-b1a961be01c1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8debd87-578a-40ce-9af2-782821a68b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64648246-596b-46e8-9349-db1b94596476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9493a72-cc68-454f-9d22-a2e8a71fb04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "82020285-fc8f-45a1-90a3-743069bd56f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808c91d8-9dba-4fdb-a5d7-f93ffbc636ec",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1267df4c-feb1-48c5-b181-2c5723fd95d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e3f547d-c2f9-4e0e-bb13-9eeb3fd9bf86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98a75c6-e34c-4b00-8637-7d05f24de350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9143b21-1c38-45f7-bf6b-71724b54f667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b955564-b699-4ba9-92da-e9a9818dfe99",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5daa26-dfb9-4e0b-b1f5-ce5f0efe3270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32b3fbcd-cbcc-46e1-9070-b6476251c1a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "662f33c5-76a6-41af-b450-d2c48f37b9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d002030f-0d43-4f81-a8fd-8461c96177ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f06f73d-1129-46f3-bf69-601058689569",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0543339-d309-4d50-a635-4a13c12ff065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d46db766-6a95-4420-800d-61805733442c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed68095-0f8d-4549-9b93-2f1458dfb625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb850f1a-2e44-46c3-aa73-95269acdf5b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286585ae-5ada-4dac-9556-51ae188bdeb9",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02470d3-ea87-49e9-9ba5-0fe5dbc6c82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "889c5e6f-4c30-4f08-a916-861703577725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fadae09-ea88-4c61-a771-e30a160d910c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "06651919-7a89-4690-86eb-72aa7790f02a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea985f9-9bbc-486b-9878-8ed86ff8962c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e260e9-36fe-435a-a8dc-22f0d28695f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b0ca3d-370f-42de-a16e-a5d9f0e8e5e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97aec076-d38b-4b3e-9bd5-57a59cc62746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9f4556b6-6994-45bc-aad3-e68a25df0d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52064fb8-f899-4f20-90a9-3d246a406caf",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c159e772-05b8-4b45-98f0-e580f8e166df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c093c024-7fcb-4e40-81d3-5fad5333017d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319b2e57-ec0b-4a67-becd-9d78cfa362c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b8df7ed-8cbc-48cc-8bbd-5b1283aea945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380ede48-70fe-41d4-926a-d4a04ee81159",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed970eae-4ef7-4898-81a1-2167fc6faadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d596621-4393-44fa-8341-f7ba4ae15bd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c76c643-bd63-4a58-9f07-b5066c79f7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b16cf958-664f-406e-87de-303e8e72b7a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ebf46d-2c94-4de5-b0f0-2d5fa0fbff60",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47597fd4-b0b9-472c-a8a8-eb4db681b80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21e2bdf5-cb17-41b8-9b95-56abe1b4897b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "522cbc15-20ba-4065-82e6-9e5206b350a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "32d93fe9-2165-4294-bb62-6194241e912d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fdfa45c-43f2-4b6a-8932-ad504fd4cd74",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9610446-470b-499c-993f-a1e2fd6fde6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46a9cefe-d3df-4259-b606-d1bed0c86984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0f0b2f-7575-4540-bbea-6d926914e8a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e96c464f-b07d-4240-b636-81b60d2b2a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9d093b-4c16-45b3-bdae-5711bf93bd1b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79d53ab-b7c5-4f6b-9001-682200e9a2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "339de7c3-6d11-4c2b-a3ff-91b0d7f9e577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c6d39c-7c6d-4817-a5eb-c411b100df36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee72cb87-d1f1-4754-8a9c-9bf1411968f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7462eb1e-fad8-4b30-98ec-acdd7ef9544b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a616ca8-367a-4f3d-810c-58ad69cac5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f87d17b-41cd-4c65-bbdd-fb3d933ce3e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28326d3-5fa0-4c67-bca8-4780ef32ad82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "25d98a7b-6687-4d4e-84a2-aba7a6922e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad482fa-33d6-456d-a8e8-b143721f6d78",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79fea66-bae8-4c75-a4ed-4ad1bf655282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b3a2b69-f1cf-429f-88e5-fb2ecfd3d6c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2cffd27-c674-46fb-96e0-3f6fddf9e046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "05ea0c83-01de-4a56-93b2-e13114867bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad03d7b-fc63-432b-83b2-09cafe568a61",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "215d7d3d-8785-4866-8e00-7acc9e073762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c909785-e5e2-4590-aa1c-d3b1bab29b89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f48575-cfca-49f3-97a8-b952e14a7068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd661fbd-fc3f-4921-b5cd-5a45ab0f975a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7672fa91-18b2-4ce5-bd53-360b93f67e5c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "094a8daf-014c-4cff-b4ea-cef01f419f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b6fe0a3-8b49-4707-bf17-659e8716b517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08c3beb-ba37-4248-9df8-91695993564b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73b6a76e-7415-4e24-8ae5-a90bfe6e5482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512401de-11a6-4a25-9fb0-8979d7716994",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b756d0c6-b6fe-4c67-bb06-e2b4c32d40af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f988febd-6805-4896-8ae9-6c407b5038e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5513d0d-b428-4f2e-af5c-9a36f878b493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d44e3570-6de8-44bd-8bb7-e5fe3b3ea7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7fafc99-8d5f-422d-a42b-e5081a265573",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac0d116-ecd2-4d7e-a5eb-8973e261a44e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b77f4d3-d48f-4433-be2b-3d023040ab96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31d3576-8241-4919-b536-950aeba1b098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c42f7e8e-8b10-4ea0-ac9e-12cb2c90b79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40ef6cf-ae79-4a28-abea-d917e3396803",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd13400-3a9e-468f-8f1f-814bf7a9a3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffd0494a-c30a-4152-a964-08a49b464caf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ddc33d5-56be-446f-b1d8-72ada0da00c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0c3bd13-03de-4caa-9968-0944a65fa6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d307ac8-c309-4fc1-b61f-ea5b08c63d76",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b03598-f7b9-423f-b776-eeec4bc08e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64454bff-34c9-4ead-8e8d-3e2d15449357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4925be6a-342d-46ee-bdba-f1ba93d34c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3061ac94-ba65-466b-9efc-76095d780ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58780a28-d720-4ef4-af52-f47df0be4565",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4abc3090-a253-4beb-bc71-39b4a06a836a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61058a75-279d-4028-8f25-4d42484ecb74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95068fe8-4acf-4654-93e8-f77feb30cbac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6683853d-70d1-4dfe-8049-e0ee7ea0ed0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66811a10-f0d9-4195-b3a7-1d349c2ed4b0",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5850df-c192-4c2c-879d-9d3b4f258ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e17fbb82-2676-464d-be8d-0c91114060ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4fda9f5-df8c-4c25-80c1-0eb3877c4788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e0760b3-c50c-46bf-ae7f-1d8305b9b51a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62ba63d-1f36-4330-bccf-e42b8a00fc18",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff6af45-f0c9-4b17-a234-8e3d3ef6929f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c12b2f4-a1f1-40e2-b1d6-5f62b366a06b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b51dcd-5cfc-4f66-81b9-415a61d7887c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "afeed1a6-c619-4ded-8e27-9e906294f666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a4501b-efdb-4b6c-ab52-e1dac870b567",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "939f4486-861f-40cd-b997-71871c74965c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44cbeb60-5deb-46c5-a543-749ced90af1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce51de5a-f677-409e-a71b-9d082e558d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "17aac450-4b5a-4022-85e8-002db96f042c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f1abb2-6fd9-4f3b-9c7b-99257486fd3f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99093672-c222-42a9-a33d-391416f937e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4a3c835d-e35c-4701-91ab-3902dfbc5fe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a417ed0-e206-4021-bba3-826b449debfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d2e3270-3cc8-43b5-9326-e58ff84a1f97"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fd7e27a9-b768-4543-b2d6-9d910e8c715b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "24408255-33f0-400c-b48c-716a445dabcb",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60ab1a9-9814-415d-b092-5a3c625b4760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3553e999-1baf-49a8-b7cb-4972eafaf04e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "815815d2-64e3-4a65-b241-c064a17f2bd3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24372a31-763d-4750-9b04-2a35a8fa5a0c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b81717b5-ec2d-40db-b9c1-d01969cc7973",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a55b4643-981c-40de-8fcb-46954c2419d5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ad0b412-24a4-4476-ace8-fcd981fa1069",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8295d840-9ea1-4d0a-9c07-7a5570a54c39"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3842933d-2b7b-46d1-bc95-374a54afd5f3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d8b87df4-3995-4597-aa66-dae2954411d8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "84c2accc-0c9f-42ac-97f7-8a95e984dac1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eaf75a19-e594-4e43-9793-45a2c9a655a1"
                }
              }
            ]
          },
          {
            "id": "4eed3208-93b3-4217-bf82-39632c5a32ee",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c767d82a-8b0c-47da-bb7b-63f2df24b256",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "2d7a5263-9316-4b98-8e3e-d8e238bc1b15",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd053cd9-11da-472d-bbdf-d301c4934895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a6664ef0-f521-424b-a70e-fbd4274d6733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf54911d-6eee-4632-a972-3cb7afa4e765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33535560-e959-43e7-961b-e326d8fe50e9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "26198688-d9c0-4073-8d53-23a9d5f18a34",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "19d00e0c-5bf9-438c-a625-975a914b4287",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "45e7cf74-47fe-4441-808e-583b9925bb3c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03e5bdc4-01ca-43d0-acde-bc1fa83c474c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6fa3b4ab-aad7-4877-b97c-fc6fce74608e"
                    }
                  }
                ]
              },
              {
                "id": "c9bef79b-e412-4eef-9b65-a308ebad67aa",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44c1f72c-a0d4-431b-92fb-8c7d3d99efd6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0729ffec-7e6e-409b-8488-a5116fd80f3c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2eb29e2-54ef-4948-8704-bc860811d83f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "83985dc9-1797-49be-abcb-3e0edea7d969"
                    }
                  }
                ]
              },
              {
                "id": "a08c0bfd-7491-453e-8ed4-df348634cee2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eee4273d-4a27-4ef7-96e8-41b77bc6eebb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5fd022da-138f-44fa-91ec-5cadc2d4bfe2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62a5fd12-9ae9-49cf-82f5-8fda2962dbfb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2ca41ca1-312d-4e6e-aabc-6a750cce845b"
                    }
                  }
                ]
              },
              {
                "id": "e8a6996e-8efe-4c73-8e1b-0be619a8f6e5",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6d949ff-e7d9-4ad9-a39e-793525b65daf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "615a1f14-d14c-4f79-bebc-d19f54b516e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36c35cdc-fc92-4bae-ada9-33f9957d6b87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "33149ee5-f400-4b97-adc0-b6076c39bc9b"
                    }
                  }
                ]
              },
              {
                "id": "6220e0da-4f91-4fea-9929-f8d7cf768565",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "31c2ad01-298f-4346-888a-736ac1f05389",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a15d28d0-c680-4147-8307-b12f43780a0e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a446948f-e8a7-4b3c-b955-26abe9f21d43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1ae3e724-6281-4014-a534-69b2450dd294"
                    }
                  }
                ]
              },
              {
                "id": "0c72801d-dec8-4e26-afed-ee3c6e3ea29b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a29f9eb7-bb91-4a01-9aa3-458f8bb7c80f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "08ed2a54-df30-4c1e-9d3d-14528bfe1c44"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd03ed43-b452-415c-aa86-4d1303adb6f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4347a128-2f93-466f-8ac2-ef40b992b1dc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "729968a4-ed22-4404-9f5b-134109a48a3d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "000fcddc-b00a-4ab0-ae60-98e0c7292602"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b450f63e-7875-4610-ad98-b6fdfc9217cf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8c17c1f6-d1b5-4fca-a3b7-be0f299e844a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c9c4797f-934d-421e-9fe9-e9e5b5e39177",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "229a2c19-1df1-457b-904c-930d82f47905"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5eb48ac6-22b8-4359-a81a-ac0a6513b1d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "85df861b-74ac-4bc9-8c3b-1e91e9a83047"
            }
          }
        ]
      },
      {
        "id": "1958a4fe-d751-4f50-a0bb-39d60de486f2",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d4abd819-01df-43ee-82b6-534481e0b6a8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b9fa6cd6-00a2-4f40-a920-f794df6960ea",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dcbe05eb-7729-4077-9e77-dcceb455e87d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e85ed01-7905-49e3-9a67-702a82af0315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ae0c133-3208-4839-9006-825d8d5854c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed4ae6a-afe0-4662-8b7d-8621ce053c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "94cdf7bd-65e5-4bbd-85f7-79fb18550ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58925ee-12a0-400a-809c-ccb7b82dcee4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e10790-8da6-4c6f-b9ec-2995a51de672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fe7e7ff-4fb8-4cab-ab3e-54c2bc672a78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1fb332-109d-4e6e-bc29-27262d604517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "32ad76a2-1f2a-4015-8b32-72163cff407c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0b20b2-68bc-48ae-b2c8-4f364e60c13a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e273bae-587e-46da-a815-7780f3af98e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "159dbd34-169d-4503-a3c0-66f0f6c56128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06078c65-a874-4813-a7c6-ed2c30e83725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77fc0ff9-f09a-4344-a758-f769d60426c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09560c62-c55a-41ed-8dbf-c4ea970705e0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4697ee24-2b4b-4a71-a148-fe94a7b34122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a2ae162-0315-4f0b-80d2-c52a02d610c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297194fb-2a8c-4359-b237-8a01370c87cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "116ac19e-fb7f-4c38-9dac-7a31dc865832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfdce621-de57-46b5-a392-c1668e960723",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e0ecb2-27ff-428d-9e77-ce759e88b7a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a65dcfc-06cd-4009-98d6-409bd3b82cff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97420d17-4a50-4733-a3c8-019076bee66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4cf7172-a6c4-4523-9d9d-265d223ac2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b573303-d4e1-4eab-9535-5a383452e641",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58200ac7-e70e-40f5-b305-ad6d9523dc2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e551873-1fa8-4e27-9762-9ee267249829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a11dfc-e542-4c84-bcb1-78c264665b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f53a237b-d425-42e5-9fbf-e028aa50eb42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9708c9b-0b2b-4b8d-a3ba-eeeeb0675aec",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b0ac4c8-e498-4f54-a1c9-ebc50302809d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "113523c0-ca93-4055-8da7-182bb47ec6c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75446b9-9aca-4875-9aca-be496659286f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d12d81b-63a7-40d0-9e66-c9b6608aef0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c911dd2b-9adb-461f-b11b-90cc1316f4dc",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04620676-4441-4125-bfcd-67e00b5109b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0399fa8d-b323-4330-8c83-8e19ae0edd74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22bc6f17-ecc7-4ae7-9b01-8573728ef7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "564c4203-181c-46cf-8f25-de3ed91d03f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47eedccc-ad62-4fc8-b217-00fc0e42386c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1459ac93-d395-4b6b-93a2-a6e405acff5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce385a2c-6946-4e66-82cb-969b8f848070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71840c4f-15a4-4a0d-9da8-9677f3c56d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95b54203-45f5-4075-8213-9d57ebf5edf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e086c0-a7eb-4a02-b38e-1ddf2a0f852f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aee3c84-3aac-4f89-8ede-78e2bb2969ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77095c7f-ee2b-4327-a3d0-4ff529487caf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d9bb1d-fbd4-4bf6-b83d-3903f11e5048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa7fa0ed-a5ae-42c6-9f5c-0d228a0d9b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d29b07-31a5-4cf6-8d3b-952aa26cd939",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72b0dd8-b343-4740-ade9-558cb81c43ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc7b7373-34db-4e76-9849-51c00bc9cb29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2253cca6-5903-49cd-977d-13800483800e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fb7f8e19-1938-4888-b557-d0ba87c6f739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8c6b79-a2ea-468f-a8f7-f94663bdb64a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1eea29f-a492-4665-9335-c7ecf48b3240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd3af76-6212-4111-b9ea-6e743d1a9cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41dc33b1-4ecc-48f7-8c11-c894436c4966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "94cb876a-c452-4482-b5ae-3694ecff9220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "335df7dd-40cb-4d41-93bb-98815dc2e91b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd3c9d2-4204-4815-b152-d47d1fcc96de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54fbe1c5-5629-4a10-8125-5af8e6fce8e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac19476e-845a-4126-aa79-bc557965e0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4cf81ff-9303-4d62-aaab-06c5b630d0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b81da7b-4e1e-4730-b897-6799fce703ce",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3500f7-64cb-4a14-afd2-e99da198044d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ccb913d-fab9-4065-88cf-a5b9888b2343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab09ea1-1afa-4e0b-99a3-cf388783953a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d304600f-9a4d-41d6-a2a9-9c7fd1405275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ca9952-f181-42b8-a638-4556e7ebaa68",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0ad0fc-3974-430d-870c-a97074277184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da500634-60d3-476e-a0c7-856fb427a9a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9f7ad0-903e-4629-83b4-c64f18d2dc4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a4bd2e3-02cb-4934-bef1-b1d544fc6a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50cbfab8-9846-4635-b55b-952222570190",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef98e7f-8a0e-40f9-9f2a-128c6c34e25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa5b2e1f-bcac-431d-8dec-2fe19556f10e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d146b5e8-59bd-4a32-858a-0411ca56d353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec2f1019-2a7b-405c-b5a0-3d3e97435088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b04865-1d0c-4d24-b890-fe8840cfed70",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "513c5a97-94d6-4b0f-a066-04d55a29c1b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44d9a81d-e858-4098-b452-9e682eaf8862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4c7f6f-7d8d-434e-9d87-5e7fcd4e7ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "516f4fc7-8aa5-406b-bf3e-d81ef3a42d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a70dfe-4acc-4401-a233-852c5b5fbd77",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd2b27d-73cf-4a72-afba-020e3ddc36f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b764a395-41a6-4616-8453-b3df0b7212f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33df7cb2-55d2-447b-8464-87bbb29f70c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "af1a7422-8110-4c97-9494-e7de187ba1b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e83655-a38a-4e77-8c62-c3ff1a1c57d8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f6dab7-6a03-4d3b-a131-42460323acac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af05d4c6-4009-43d4-9dc8-ec73ecef4e97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90866c49-8235-4853-a0dd-6f8f212145f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a0e16c5-e3fc-4e6c-a70d-e39c36ee0f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6788adf9-b0a7-452d-a88d-592a96b6be37",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f794d7ed-746b-4b7c-964d-1f1ec054ad0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ba1602-1e1d-4aee-91d4-51a24ca62ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b49932-44be-45b0-9ae7-2e420acc5f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3fb2587-01a0-4cef-bf64-155b09f8ef15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae9a5c0-bdcb-40f1-b9be-fc626e96e2ae",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c65dc8-1370-4738-9c59-cac77eba2f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c26e1ec5-99f4-4236-af56-86dc4b3a22aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "affe28e7-74ee-4c18-8a01-29aedfb396e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e7ad098-03ea-404c-9fb7-681e30af1b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f1abfb-a235-4268-a0a9-1895835b4188",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd96208-4933-4929-908d-de185b1a0ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b488d969-1de4-44f4-8e64-b465ef1b4b71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8049f442-2605-49c6-8146-6de0251dfafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee0154f9-d268-4ee0-8f02-5c8dee814a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc91553-25bc-48e3-89b5-f13a6394f8ba",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3625c9c-da20-42e7-bccc-2c0b0cab7c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "144b32d0-e8a1-4c7a-932f-359dc48fca73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cedd2e1-c224-40d6-aa2e-725437e05149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf1a9c62-0539-4725-b358-e3a9fa150fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895f18e1-b63f-46df-9e17-ce20f55b165b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c4a415-f3b3-471d-93fd-727a4590e3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc745520-ce93-45ea-a7f9-c7b5df96e9a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65122ebf-a5d0-43f8-93a4-9e4fccc74b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3b837ee-be52-439c-96e6-000b03000f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a616d2-d234-4b31-8717-16f4d61d241d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f2c68d-14fc-4e8c-91ad-4b25b06e85a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "293c9020-1868-4ebd-968e-7629c5131518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dcc6fec-dd55-4a00-b3af-8e310cc6c28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c07eee01-6d64-4b09-ac2c-104a7f370c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830e0109-7a09-4695-a4a3-b8e15c746fc4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d41b13-f7b9-463f-b415-7f26f554eab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcb3d49f-53fc-42fb-aac7-0e1506d98bc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba793ee-7187-4a51-a200-2bdfb7a92b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f33393e0-7787-4c1c-bc96-5e76f7959589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980e7e87-02e1-43cb-a9ad-c763a86053d1",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22a4f13-2a47-44ef-a36c-9b685e614b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48ccbda9-9e8b-447e-b764-ba83daa048aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fcaa52a-605b-4bc5-b5de-520fe3f4ff6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "604cbdfb-dadd-49e1-90cb-cfcedf448f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c76845-59f7-4a1e-8439-d94568d2c972",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a609aa36-f8a3-4449-bae4-ebbb3e432286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a501944-2f99-4f8e-a787-22a29e69767e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48876ee-f49a-40f9-a100-89515ff94f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c9d4f3f-8cfe-45b5-92b2-290b8d456cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743eec0c-2201-499d-a158-9a210e3592a0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d796be1c-31fc-4abb-8a38-dc612dcbc11c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67cf01b9-5aba-4e7f-a35c-b7b55d14cd13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c9203f-de03-4b8f-8c5b-878a323c9f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "341ba2c8-233b-4d4e-ba65-ff51718c336d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0474e18-511e-4451-b3de-fd227f433bad",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00580772-c0a9-41a1-a9fa-f92a31531e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "748b6497-4509-4499-a385-30e689f8bf74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae2bea5-572e-46ac-a16f-8cdcc7919252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63ac0a65-74fa-412b-bfb6-92c772f463ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c2367f-975b-4df4-8b26-748b537715a9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffac1fd8-9d40-4658-94c7-8905736a57da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d82ae32-fed5-4eca-b31a-d4fdd7db0bca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7823d890-c407-40d0-80a5-8e74aad712f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90dd9a8c-866f-4354-bae2-fddd9a92f536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acec5421-ac77-4c14-b47c-8bb9cf0de44b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e1be69-1b40-4d46-8976-eedcef03de19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4230341f-7540-453d-8581-a1a6265b0616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99fac7fb-e12e-42a5-af4e-45a5ea23233b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1160cf10-01db-4a9c-9bd5-429b0f18b851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e61b04-fa1e-4b50-9506-71539e0d1dcb",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "586e16e1-277d-42cb-9872-6d900150e184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ea26a6f-4d3f-4265-96be-9566520b68fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4f808d-cc70-4613-952c-9392877ac729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a674d75e-7deb-4562-bf18-2a0292e2476e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73dc244b-dacc-4725-adef-9cbb3a5e66f7",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16357d0f-275f-4b7a-9209-6bbf66c27259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25807390-7c2f-4999-928c-48fafc757897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52983866-6fbb-4bac-ae82-cae0c1528171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "723308d4-c771-45c9-82f2-77950d5eb194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e734632-3c5b-4453-b085-78e44c8188d1",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55583cfa-bd74-495f-ab21-36e0b12ca130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfcffaa1-6d77-4697-9184-b6410f0cc893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5929c4-b16c-4b60-b1dc-b16fd1663024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f984bb9e-fc8d-414f-9412-56a7570123c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be1f8f5-a1c8-4de5-9836-6b23f5e50958",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba4ae16-c259-4c0b-84d6-e83877e6eeb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2b030e8-5c4b-4a10-b086-10efd391406d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d10eca3-12dc-4727-a217-bfe3afca9767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ee0246e-cda0-4e58-880d-9de7aca65eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d7c963-035f-4505-ad75-b8d3d878bf4b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8300f6-d646-477c-9930-674b957f8978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0666a7e0-e0a1-4f74-9c7f-f694da6aa349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600d6e06-825b-4da2-b5c6-d6f6d2e5b107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "105b63a0-a7ee-4811-b602-6572642bdaaf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2996ccbb-a392-40c0-85b8-6c84dcc2415c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f7c7cb24-27fb-4dab-9424-699aa3abd481",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9dc4e8-b695-4448-98af-0f9d61553c9e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "56ae6095-72e6-4d46-ae44-0b620a2f6cf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac851fe2-a17b-4d0a-98fa-11fa0a8a930d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d3c1f21-0b97-4dda-b4ad-2abea8aac47f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a282b57b-5b5e-4de2-9a27-caa989fba0c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca58b4bf-9cba-438e-ab46-daae07eaee47"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bec2083-fabd-4fd1-abf5-bf19f1adb13b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d53978a0-05c0-4972-8d9f-c5ad224f0ce4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ee6cbac-912e-4be6-8160-8bf69e606990",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9cccecaa-50b5-443f-b2c3-fe2e20e53102"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "93d6c1a9-56ec-4118-8bc0-ac1902a6cc46",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "16a1fa8d-ceb0-44b5-b0f2-6ba2327e3bdd"
            }
          }
        ]
      },
      {
        "id": "e2aa2615-4eb4-414b-8f96-86143c6dfe76",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "866c659d-f330-4af1-836b-9bbeb1741a84",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e1760cb1-a062-4ba1-8eca-0de5c3bc0545",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "750a7779-fcea-46d5-aad8-3e8bd200cd70",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7132ca-ed12-4c50-a33e-2a8653515fc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a11b0c3-e13a-48ad-a184-902218d27c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abcc38eb-93f0-4dab-acd8-7ecea7f90fb1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "427d9180-6a42-4b37-9295-9fc982ebcf09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "740302bc-0ce2-41f1-815e-bfd27d630bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86882fbe-3a9b-4665-af95-b3a9cee20905",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "454f145a-e5c6-4e56-a354-99fa198d7798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0954026f-d839-4c20-a940-f49a65a8ae3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b11e9d-cb68-4b6e-a1ad-206de490f3b0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1143bea7-cd19-4b03-a2fc-cdd853c9cbeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d05e20d6-913b-43ab-85fe-7e549b5e92a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7337b8-9c9c-4121-9b52-e3f740ef6884",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aeeaa48-c5e2-4627-96c5-e3992a489003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe655391-39fb-475b-a6ea-3123802c7270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c331de9-10ea-4e38-a5c9-b486cbb1ef4d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "769c8d79-5693-4530-b218-d714aed10f8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c898145-e005-419a-8a67-7ec4effc5c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4cef4b8-5e9d-473e-9044-d4ad28fcbee2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0713fa94-9dfc-4685-9ed0-ad611c8ffc12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cce9be1c-e459-4306-b694-4f20588476d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ae01d8-6d18-474c-8b7b-dee80165ad0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7b4e04f-2e76-41e7-96ca-c2ee15636f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d360f16-fecb-409f-a79c-a15856407dc6",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37199554-5d4f-4615-8707-841cf10c605d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5610b651-1a92-4bd5-93f2-b9fc49264d80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87263020-678d-4c7f-95c0-016157906740",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8117a76f-d1eb-4249-ba7e-edada5864d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39bdca30-1bf5-4d61-b904-01b99fb0c88e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f73404f-3c1e-4307-8c10-890a68e9366f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8852868f-831e-4ccb-afbf-58b14faedec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f719118-5548-40b4-be94-60e4e8b99e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9b82c65-fda0-4c7f-90e3-834e753edde1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45ff1ab-91d7-4735-a97a-ae94a141376c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c056d9c4-d396-4a1d-8ede-2348f6e3288d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ef4f917-4e55-4497-806a-e997a9c5c575"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f05d16e-050f-4050-8dd1-e410fbf65a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c033e4b-a1f6-4a05-be90-8727a05863c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee347119-3b5b-4445-9430-8b041753c1ea",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b31b2cb-b2b4-4367-b779-6099d08b1ac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c6fa9f5-2de8-40ac-a6ce-1f8673838769"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e5dac4-282e-41f5-bcc8-16df59e14972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63136efe-8080-42ca-af45-da044683ed11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8898bfe4-9d04-406c-8803-f85ff7976935",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747a8b28-9231-43ed-9667-e44e9d50a9af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b502b67-292d-42a6-99f3-aa9699a471b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9193c18-e8d2-4c0a-aa2d-0456a4734ccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b47f641e-af3e-493e-a2d1-7e5c2187198c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60cc9bb5-6e2d-49a0-b18d-bf60644572b2",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47eb47c9-d324-4077-a992-711fe64389d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ba33fd7-f88c-44a6-88ce-029a4372703c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a061414c-73d3-4e7e-8e28-4abff012eb31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e3f05b9-2c95-4e94-a6a4-c45b973582f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6077b691-8d82-45cd-9280-c2bb9309b892",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647ea12e-a428-4827-8ddb-5986487726ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4eff7cb8-f64b-4b79-a008-aca6f9116c1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1917f14-3b6c-4726-8af2-0f4b1131346a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "097bbd12-6f91-43d7-8108-4259d9bb8bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc147f89-3249-4322-92cf-3b395c61f5db",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d614045-1a34-4180-9954-86746cdf7fdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b853a0f-d045-41ec-b440-163e3c28b999"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "340987a8-590f-419a-a082-a2953d68ac70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a0b73ff-33ba-4bd2-9d57-cb3a178597f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac9495b7-9fdf-4343-9df0-89ae85b4835e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a93cab3-866f-4637-bcd6-9ac18a8d4dde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed22ce03-63ae-4c5b-ae4a-60685b77d8c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89535bd3-e413-45b9-ae3c-b00f9a53352d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f4ea8f7-ad06-468d-84ac-dd4706153a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4985c0ed-a57f-41d8-9a4b-6d7d5db5e19c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07251447-4321-4c54-83f3-0bb22843f30e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b59005b-88d8-4289-a022-85fd1b08df12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5df9db2-b0fa-472a-8448-f73a5eed24b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d718552e-f72e-466e-a6a8-ff185f6aea7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194d6507-dbc2-475f-8679-eb7a8fc4d544",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603149a9-262f-4d8e-9c9a-610eb55379ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b70022e6-4cfd-46f7-93b6-857e3c8ad98c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03c90b8-f5e8-474c-83e6-277a83caccc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede69a25-db81-4f85-b24d-ad7ebe77585b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb2991f5-db92-416c-b6f8-39fd24e14e14",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1305ef01-8f57-423f-8179-a5ce5e1501cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92666faa-38c5-4c25-b9cb-bb0656e5b4af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a53827-fe37-4ed8-80a9-6a405fe91799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0096de33-a5d4-418c-b089-a2f922aff8e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc8ebe8-9911-481d-8d35-f6020d742de3",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165045fe-7dbf-4a18-bd56-1188552eddff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "741fbf26-edc2-4b74-bee2-7dba4b55660e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f97108-35b6-4c68-bbf7-4b1deccd6709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e88049-0187-47b0-b368-32a18b992a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6425ea-dd0d-48ff-995a-2fa3ce4097de",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf47dfc5-6165-404f-ac55-4aee6f56f47d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "710bfb16-bc9a-49bd-b7d5-36ef55ebb267"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd422b6-9c52-4731-a173-f5841d0ec30a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ac1fd9-2e06-46cb-bb8c-96f2bb1c223f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557ba034-0e1e-41d5-9d39-f137b651d431",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0203d3f1-c738-46b6-b553-e3c0d287c14a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c38ccc4-81b2-4787-9a3b-cff18786e3c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ccb8af8-c19b-4193-a5fb-97484d3ef681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b649c17f-ad71-4ae0-9308-5704a07c5bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78708a27-ff89-4f6c-a251-18d4a749f2a3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82c7ebc-6085-444e-b2f4-cbcb8966edfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bd29cac-18fa-46e5-8074-7a9ee978e31c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ebabf71-9bae-4f10-a86e-fa12a2a720f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90d7492c-1909-45ce-bd12-352c3550cdb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b4501d-dee8-4967-9b23-05e1e3e021c3",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf5bbd6-bbd4-419c-a889-2ded99062a13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f957143-2a98-4a48-95ff-80a335192428"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cfb554d-a623-4ced-ae8f-416a3cba3c47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da250db2-3640-4932-8f53-1c194d3aa5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96294a65-eb57-4f7e-ae20-1baed6bf0999",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5efa58-7c60-473d-84bc-fb77a7c744f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c431e4c-a0ab-48d6-9baf-a2937ecd3b94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e675b6-3e79-46d1-bc33-15c55ab83766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cb9d411-3330-496c-b425-3499dadc7487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050e41c0-b4a1-4dbc-9d06-42d118f9b95c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "076ce672-2d76-491b-8282-f648a20ac133",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4732bdf-f79f-4b5e-87a9-fd189d24e315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0084ce1-3e00-4573-bb28-1def8fff676c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dd0ac4b-dc7e-4faa-ab1c-6b0438c9762b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9093279-0180-45b1-88ce-96d7cb39ffd7",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7ceece-8731-4c17-adda-828b4fa746af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d31cc5ce-224e-4b07-8daf-3df644747936"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dabd6c0-d31c-4e94-9f1b-e2981a96a6f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "147f7f74-dde9-4a15-aea5-a3caa3f62a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27880e0-f1cd-4ee9-9783-6f62db805d5f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea7ef92-bfbe-427e-a37b-48aa47c7f69d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18daeac3-3ac7-4369-b11c-31c3d8f729d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d5134f-b1dc-48df-a3d4-76d0498f52fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69cc8a2c-dcd9-4860-bcac-ec07b2500b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc4d0a2-ce3d-480a-9921-50781680cbf5",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9151f8-6070-4407-9871-6fbf93298168",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6ef4ec8-1314-4cbb-a54e-ea0bd55b1e88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "211f2aca-667c-4498-807b-510272b7c068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d931c165-acf1-46ca-9c30-f11a8e677866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "242253e1-aea8-4457-8739-380805c3f50f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf3e2de-f1fb-422a-a423-6ccfa7effc82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20ca37ce-4093-4e4c-b46f-dcd8a9f74942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d47f207-f7ed-4938-9460-f205cb251cfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b4d1992-d174-407e-948b-1dbe05324787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4136cbc-eda7-4c99-a9ae-03ea4b456520",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98371bc1-c303-4a8f-9896-6472deae11bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3c4c3d5-ed29-4599-ae42-213a6f8a3dfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d019f0-23fa-4ea9-8ba7-e14e022101c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51d1a916-d3e2-4f50-a5a2-c379ffc920fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca645777-c10c-4966-ac25-bb55a3d8e95f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e04682-baba-461f-b68c-0e3aa8ee0f8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ec38501-0d71-441a-b907-625cdfc262b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5b157c-4529-44eb-8e42-e8223a8cf6c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79198650-984b-4759-95a9-6bd27cb5783e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e541b432-0a46-48f0-a193-f9930f45ab53",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ed6917-add7-4567-b67c-235449a6a6a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5b492ba-e353-4237-a87e-e8be336be857"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec10f12-1fac-452a-ac94-5c17359c855e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4cf8333-2acd-48bc-8fc5-ddb9c65c12af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a35b34ca-eac1-4421-881b-666d79a59bd9",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3706ec98-c3f1-43ca-9d52-6d0c52eebe33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e077e5b4-5c00-4261-9eb5-d6ce550aa1c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6430cd93-966e-4f87-8c37-613a206c57d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fa2e768-1e23-4ff3-8fd2-99e004602ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c9d40c-f37c-410e-b698-145075b3c266",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2257149-0e81-461b-9ef2-329aafd8776d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfc487fa-f7e7-4cd9-b002-4c6a56fc7bb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed231af-b742-4818-802b-116a695e5f81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c196db6-03c3-46fc-8660-a6f62bacce8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0bdda0-9f00-4b0b-935d-48e03771ba44",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709e1a6f-6a38-4c89-91a0-59bb9ea4131e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d921f580-ba44-44c3-8c13-53ea47bd2e46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbaa3cb1-486e-4a24-8108-3ffc56b0f08a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "319779c0-f706-4a78-8a33-7a6d81653c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4358578b-551d-4231-b06d-7c4c29241244",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284106ab-cb35-470b-bbe6-ca7f1c0df576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdb8cc88-a6e4-4427-8444-e59464b9c96b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f02d83-7f4e-4a75-9d93-ffad1168e5af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce34187f-6b51-4214-ab62-9f691bbb916c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd32c47-1ca8-4ab5-bc65-4dcc898326a5",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e7c940-65c0-4426-af9f-43610f0409d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d185037-9d74-4793-b737-cb0451f4049f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "718d3539-32fd-4194-95d1-145c78553273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0769491b-4d1d-477f-8de9-71e6a612e990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55602090-7c68-4c2a-b309-657ededd1681",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d99e53c-c573-41c2-8794-7bf2be11ac1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cb11ad9-5f04-4281-be8a-3cea4b44cede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9647aaf7-f2be-41e1-9af5-99d7e191cc13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "836f6394-5237-4926-8151-4c4714fd7578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e2eba2-322d-45c9-ab81-63f3a13f6eb9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e11da8f-1c83-4d0a-b13f-2fa59433f749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccac6917-a912-401f-ab3c-cf2503abbbfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9715460d-6895-407b-9a0a-9298332562ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e919dcd-1d57-41d4-be9d-333af4cadd84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f7ad3c-96a0-4312-990f-68f082fba313",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88de7d1-0146-4e5a-8b9b-0ca152f86b58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7bdb7df-e23d-452e-b6eb-64f0e8bb9d4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2a1890-6080-4c85-9f1a-f02b0385f923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a0302a3-e2b1-4772-ad62-ab3ab15329de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861eba26-aac0-4cfc-83e7-115adc168881",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df8ee9d-8afd-4bbe-960b-cefe18dbd8fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c69b0e1-b019-4f0e-9b0a-7456f9906d1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1e53ed-257e-4b5d-b9ea-2becacf4d5b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccedfaf9-dba1-4bed-84c4-c99d073023a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c516f3f2-c944-475a-a1e1-17e1aa4b3142",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a99ed0f-17b8-4f4a-9903-a8161f2264fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bbf0319-c6d7-4321-9d15-77938b6150ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93e99a9-bedf-449b-b539-7c3980762308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "248d567a-ec55-4ae1-87d1-f2220b338255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fdb5945-dc77-4e2d-8cda-feb0a3e90233",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e59818-6560-46d4-8b6c-76bc04d23f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cbbc384-512a-4fa5-87b6-6342a3e466f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e245347f-ac2e-4d5a-9cfe-734330aed990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c8cca3-fe7f-4e31-b354-2735e53f0344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18482658-4b56-4e7e-a4e3-5ca7f0e55298",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff9af9b3-cb6f-452a-9d0e-164a4f259c79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a93e67a7-8895-431f-93b3-95e431550204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80bc7ff-47b5-42da-910d-651d78678e0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1aebce0-f5c4-4ee0-8e24-969088e928b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e57eca-e480-4ca1-920d-6a313afae7ad",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00c3e23-7cd3-4e8e-bde7-1fe7cfbc0036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c272a2ce-c167-420c-a84f-938ed41614da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f8fc78-7d26-4d3d-8131-2768a0854a13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea3ed09-05bd-4c25-af3f-f6c252a181c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d393d7b-1397-4074-9864-5fb3e48db3d6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34789d3-fb05-441c-870b-d920cdf3d965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a491c88f-2cd4-4d26-90f0-51321704cede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4d5731-b3a9-4ab8-9270-286928a34e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "454586df-1adb-470a-bc11-756359dd4f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60fc5c15-2ce1-45c8-88af-9b6044fbe0e1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d35d77-7ff8-4306-b5bb-1568303e389f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5173e66-f503-46ee-908e-c7861fcc3e02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62143e94-e8a9-425c-9195-55e179ba239c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41c9ecc5-d0b2-4230-93c3-9685bc6e9771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4141e7d9-63a2-41b5-bfcb-c30e3525b6ec",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e85d1d1-a7c4-4804-892c-dbbc5fd53e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a7ccebe-7956-488f-9431-57cf77fbd7b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ae415e-2570-4f29-8baf-4d7866aacc62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44561b70-d3ab-4160-9687-ba2b94b1024c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80c45aa-cedb-40ae-8fa8-d5dd79f04e20",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ccb9b5-c506-429b-869f-3f83b22bd848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "684321e0-616a-418d-b61e-98821af4cf3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f18d6b3-9392-406c-9681-0e9c2050b5ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c689dfb-6d20-4c4c-a59f-43e7209030a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050e562f-724e-4ded-9e1d-7a49b8251f5f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20704f8b-8b1a-48e8-a6f8-57f4e72adec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c56639a-194c-458a-9e5d-db4d240c4bd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe10f9a9-dff4-4aba-8cef-c7853ce68ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0eca53b-7def-4440-a16c-337de1562773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd522c6e-75df-4c8c-8cdc-4ecf0f560c4d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897ab18b-d4ac-42a3-bb05-f036b782db9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "251b2220-efed-4345-8543-de4cbcb25ee7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "474b4963-52eb-4f9f-9829-e15672b2c269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "884618ab-c004-4090-a9ef-ff45f1e74c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e3e7dd-646f-4b2a-bf50-b563d73b6a55",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba311c6-1c9e-4101-bf22-bda98cc887b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a3880f-4a61-4584-9c98-268a944bdf0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "211c64e8-e3f8-4985-8608-ffd5a59258ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aad953d5-3f5b-4a59-a4db-79c53f4bbed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7ad96d-78c2-4a01-a1fe-f6403f868eff",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e83c5a3-56db-4202-8f97-304cfc2ea24a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d52aafc7-81c0-4417-b288-d45462e72cc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2ae9af-e5c0-47a1-b417-5b93dbb5e772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "724a3b49-4614-484a-b4e3-e85cf5576926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39fc68b-01be-49ea-8bc0-76ad815ba76b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afbcc303-4871-421d-8584-021b1640b6a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "796c7cc9-52e7-461e-9acb-6cd0210f6828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4902167-dd6a-406e-94ea-b630e175e8fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37498637-cddb-4921-b7a1-326f49cc2ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b4d207-9654-46d4-bd8c-203c3f87c4c0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b17830-15e7-4758-8516-4d1bd3905cfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "337e3193-df3b-4b2e-baec-817499464d58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73ed25b-a529-4e84-8ae8-3f8fa377040c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eba067c0-f0f8-47ff-816d-80b3c19eeccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84426bb8-908b-489e-9d58-cb7b6b77f568",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b746d8b5-7caa-4469-bc25-1a44600270c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f0695b6-cca3-45ea-b4b2-8673c609c52e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20eba947-245f-4747-aee0-2326bc1b8124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75a01f04-f823-4190-88ac-72c2d58d2274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1c02f0-6f1a-4500-a3bb-d1c946561115",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb53a18d-8612-49d9-9955-aad119769591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8576d172-a21f-484c-b930-29c91f9457fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35bb22aa-671f-4a11-a0e4-8346fae595a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cb9aca1-5231-4076-93be-da5ea87bbfc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329009ec-7637-49e7-a8e5-751808559c86",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4610b34-8738-415c-8cd7-87a225393d05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f02a5c9f-9195-4017-b833-b17ff43db350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3b2573-70e5-4b3f-bd42-9a92069d5c70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc858841-cc10-43c0-9877-b39579d09a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4cb2ae-72d3-4124-a290-e566e0e577e1",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3044d7b4-51a0-477f-95b1-d8c81b184c92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d63769f3-baa0-44a2-878e-b547b683ab69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee334a40-654a-427e-80bb-aed5fb90f21e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd2bd304-cc8a-4bb1-802e-0d80bf18c073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e18bcdc-4736-4d7e-bca6-db392bef6bcb",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d07db26-8a7b-47d5-93f0-856a75ce4b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aacb8a8-1657-43aa-86d4-02efbcf9508e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d512260e-3255-46ec-b66e-7b751a5a75a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecd3aa81-5395-48f6-9ebe-13261b7e8d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e22d898-f5af-4bc4-a305-3503041d3ae4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16c1c7e-174e-45c0-b246-952a351103fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd4d6abc-28f6-4977-ab4a-276a5c5d3c36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3edc0734-6042-4d79-a5f7-2076f725363a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55b7bed3-fa62-4c73-8f52-6cc6e3a92e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd0bf03-bc8b-4f86-bb08-a860b246eb17",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1deb1bc5-2064-4ce6-9e8d-9a6df50e7551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a544224a-aff6-46a4-a92d-d7dedd52e4d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5b75be-aa07-43c1-9fe9-7b0cb3a52471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede84ca0-2488-4cd9-84e8-755b9117313e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da953e3-fc43-435a-a999-595ba080d91b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf132bd-f741-41ce-9fa6-3179d6bfa9fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a2a694c-53d1-44e9-a4b7-0e0965ee89a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "988e557e-db53-48f4-9bb9-40174bdbaf1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b10f27c-4ae0-49d7-9cf6-84a710b2c162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d057c9-a416-41c5-8688-2e7f54e3100a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80de9b0-c20e-45af-9908-eb5ec52fb3f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06b5ab20-3b2b-4fcb-bb3c-8001b3b9d61e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8857c79b-eb07-4481-9b94-f93b187ab14a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "571c299e-173d-4c5a-a5b3-f72e483a8a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2eb0ec8-9ebd-44c9-9788-970e15a22408",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa56dda-c962-4afc-8654-233ef71684bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee698aa2-b376-4a39-b5f4-58861e064d25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1e855a-b345-44fe-b0a3-7eda2bd41b5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4043e598-0b10-4f1d-bcc1-dd09177573dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfacbd85-4b1b-4bd4-8f00-86a3808258fb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e431c70f-5107-4876-8576-98e84905a5b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f75d909b-a976-4eb5-a6d1-40e445e1add5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f05f069-13a6-4055-9781-27b8f86af5a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43543cc7-f1b5-49e4-8148-939873646274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2b484e-fd93-425b-834c-43f09dd61568",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b171f6c6-546d-4a20-ac1d-834d32d457cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0aa055c-8833-451b-8a10-aead7864cc89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f27ccb-6d74-4758-b569-870fdb5097f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba0e9e2b-4ce7-4348-85c0-6ab9cc84e591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3252b0-a1bb-4d3f-9bb2-c27034d36119",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df3c4d5-99fe-4674-84f9-a489c40476cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4b568f1-7e93-41b1-b9d2-c3b43e82f2b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3f5619-9848-432d-9345-571cb155ee60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4692469-fc9f-46c7-9c4b-c2a5b590a54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46bce64d-7d0e-4189-bcc7-f356a0703518",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0029a8-1a74-47d0-9e23-c83f1604a9c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62c28baf-c18e-4312-9c2b-4db7dfbee17f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "119bb5de-875d-4ca1-bbee-89b00941af5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5db9a33-1532-4df1-bb19-74da1d94b416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe267544-56c3-4f0f-b7b6-6ddf6f1f7d28",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6f8637-c011-4804-b963-68761e37f840",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b682229-f905-4d0e-babd-498c70a57b70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88bec6de-9fa7-408c-8b3c-6ffa4dc2c3f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7032d61-1c53-4b9d-b0e4-714c9c4aba5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a53dbdda-60e6-4cbe-a46c-ddc212d92332",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd74ae84-ddc1-48e1-b4ee-522e8cce4bd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4aeb9fe7-eac7-4dc5-8eb1-169cd6d06052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be3e9eb-0906-4c9c-b94f-115855125133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b282d1cd-9497-4c70-a2b4-cc36b00c469b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11606541-a3e1-4990-91a6-2750a8ad8443",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f524aba-8c71-4e04-93a5-9f94425c3fc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c74c24b3-7ec5-400b-9d33-190a5798544c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81f3dae-1deb-4d55-bb54-4422e6103c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "605e0ccb-5458-4b8d-958e-fdd9b390c203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100a5f01-7329-4e42-b53e-3f846faaf34c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bbcbaf5-7a3a-4d69-a6a2-37bec06a3c1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b136d69d-71d4-48ac-bc70-25bdfa9bf865"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b3355f-4052-4608-9431-0a20749afe74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af05d976-952a-4fb5-a767-d8b80c20e35a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec6af621-d369-4ddf-b33d-d830a7e0e927",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9009104d-5432-43fa-acf8-ef8b444cef81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17d26529-2ff1-487f-abd1-74525f62c4f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42567100-ea45-4cb8-98f2-c946f131c271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0dc1511-1e58-41dc-8bd4-9e54809d91ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a9ec97-c555-48a9-bb5e-bfc129c17511",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd13246-c271-4c70-bba5-3e83df8bc402",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "619353be-6884-4dce-aeda-48bc6f7dbd02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b37b3d0-4d4e-4c61-9bef-e8c4bf2fc2f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc7db960-babd-4612-afbf-bf1dfd159e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813bfc3b-8776-4937-b1d2-2768dd378b6f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8703e8f6-e7d3-4167-8260-763a84a6f29c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dc519b9-6046-4273-ae26-1d7bb56820c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9bbe095-180f-49dd-8756-704b68810b98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1db21980-cc21-4bef-9a59-59e4ab0187fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692a2be0-cf49-4898-a8b5-476623df29fd",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f2bcf6-7515-4868-af8a-d5cfbd8f7cf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96cd31c1-73aa-4a8a-9e12-ea3a04810bde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0fdedb-21d9-4d4e-a8b9-c0f3bc998f15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecaa9e78-f80f-425f-b8c0-eff72cccf42d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23acd311-ebce-49ce-943e-5cf1b7732d82",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a147de4e-ec60-4e5a-b59f-e31320783ad0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4e316da-f691-4afd-9e24-f8b92bce4d6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6878ec1-7703-4ab1-97c2-bbb7b6d4afc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b5c93f-2aec-4959-b864-6f0cc157b718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4d664c-14e0-437e-813a-ab167439e794",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1011cbad-dc66-4395-bfbd-3016e497967d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b522c016-8061-4c10-8bec-57caa4575765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "509b14b0-3782-4a2c-8ee2-8552a4f38d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e5712c1-5067-4ece-92a8-6f7402904d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2ec0f0-4d23-4c35-9876-edb105e4c1af",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a999249-16bb-4aee-b007-1c08ae11b62c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9395c4df-2a7b-4e06-9e01-351039ba621a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1842ca3-8576-49b6-94b4-18e527fdc49a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "755ee8f8-0b9a-42ac-ab9d-bf195867e572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7d3b34-3ff4-4729-a253-adcef5aa5d70",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c361d2-570b-4cd0-8626-ca6f2f9ea7df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08bc0bad-a8e2-4422-885d-b07768b61cf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f061552-1717-4311-9704-98868b2b350b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a648e301-a5f5-4072-b7be-94fb5dce2c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a639964d-de2f-4b42-aec5-6bef995e36b5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a25936-5edb-4dca-b20c-101a25a6a92b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7143468e-b244-481b-84b2-cab295b29fc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "773ca0ee-2d1e-47aa-9dc2-ae1c194a27db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11ed1a0e-f83e-4193-81af-2b7643f555a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fac4ded-26fb-4ac1-ab58-a369b81e16d2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65fea960-0520-4159-b5c8-31fcc6935d18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f40fdd6-7216-49bc-9513-42f53bebb2e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6335f028-f9d6-468e-ad34-1ff886ab16e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a371698-29c7-4bdc-b170-5d46e6503002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0c5f2c-5e67-4990-b2be-f97066bfa32d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14db5f6c-1203-4b9e-850f-7cec37dd1ff9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95a6ef8e-a443-4743-9412-10651ad5354a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd88b9b6-4e65-43dd-b741-180cb3fd1a05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9b63202-9533-4a62-8baa-07b693cae571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5ece1f-a461-4d66-9949-11054c373655",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47cf8708-b7d0-4893-8b52-7cc6c4ddaec0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12862e91-4b6e-4e3c-9039-1289757812f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9790e9-5386-499f-9928-d1f42bd46558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8ea5481-c7d5-4a1c-a885-2cd46766c2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e0ed19-5439-4303-86a7-210489331cf0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a79c09-f7ca-445a-a8ea-9c58d3c416a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a30dba4e-495c-4496-b9f4-64b2e237daf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f87677-d8b4-4ec5-8836-95ca491f2c44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a2a6a70-6bd8-4a82-bd88-f25d68d07423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a13513-0412-4ae1-9b5e-29b998db1e87",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8002e14-5de1-47ff-bfd7-412c89a8ed33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59b09908-7277-49b7-a3ec-567cea4fe899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "907f2405-1d7b-4ed0-9746-849f33195e5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ff11c83-2543-498c-afb9-0608e6a2630b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445c237f-ae57-4149-a33e-357f061e3caf",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60f53a9-6145-457f-a131-6d2a205b85b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e2b8ecc-0e18-43af-8156-4c7ef8e33de5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23292069-828d-44ad-9373-dfa5be4869e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35d60f7b-d48a-44d1-aa2c-9610403a8eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a099b270-54e7-4224-ab3b-ff24f6f1610f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8264e93f-17d2-472d-921d-4d3a5fa494bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3aedde86-7790-4807-9ab4-73c6d971b530"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a82222-2e3c-40d2-b692-e76b1beb019e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5e857b4-beed-4535-9788-e22102472e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db00365c-69d9-4e60-b64c-4a50649fedf6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc0632b-1c48-47da-a094-9f5bcd78855b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4640ecf8-13bd-4cfe-97b1-f9aa9a48cc0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c538d4-e543-4278-9e47-34e1d574616a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a08cac8c-e4ec-452f-945b-337bba6dc4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90cab6c0-82c3-4f25-8d73-c2338fce0e98",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e5a639-3d55-499a-ae1f-bbb13316c9bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e93eb76-7178-40aa-b574-44e2938fc6b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "199d0548-72ac-485a-bbc4-36fb45a21c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90f34dff-6b40-4e3c-93fe-51a17529efc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a80966-6aa3-432f-b2f0-ddeb971e0cba",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05256fdd-e0d5-496f-a11e-c4ed3050ad8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4de4491b-d5e1-4bad-a3d1-f8a70b69ebc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9d4ad9-6b13-4f65-9dc8-e3c600e2e075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a434bbbe-5a7c-450f-8937-929f8b761b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e188da-3331-4c09-8f08-c6f0fa641fe6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d89e7eea-6af7-4547-9188-09bb604d4525",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce4abf9d-c516-4ebb-a17f-ec0d744d2fb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e860fc2f-e5d1-428d-aab5-f7bf13fc34bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c464f181-2c99-472f-95a0-f32e5494b46b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a4bbea-3d43-498b-9f4f-3ba9a0b7b1a1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39b62f1-0f3a-48a2-bf18-70591732b6ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d44035cf-7601-47b0-b649-e30408170b4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "706422b5-e31f-486e-b0d4-72cdf0ab1ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14874ba4-2675-4d11-b098-fccecb2b0467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3732f25e-0763-402f-aa78-b6ae8e8fdf23",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492667a2-0317-4300-bd01-dd1effc017f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d3cd457-75d7-4899-b8f9-9955afa07957"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "295c518d-877f-4782-aed1-df63a47bcfc7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d3198e2-72a5-4b53-859c-eaffb01f37b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb9172d-26a3-4e47-afe5-fdcec089efca",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d6979d-3f67-4b12-8592-dd2e02c493d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bd5a0df-d335-45a1-ba03-9c026563ef28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f2e7d3-1384-4d41-9c44-cc2d110473a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be5f7860-597c-46b9-b8b8-ee1ff456a557"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88645c70-7002-475b-bc72-4d7c828a79b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d70f2f0b-d4a3-402d-bd6b-bd3c94ed3a18"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "52fdf2a9-2855-4fda-8ff9-a01a23dfeafc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc741c6e-b6a5-4ef2-bc78-c5b4b5f7352d"
                    }
                  }
                ]
              },
              {
                "id": "33ee2c4f-d805-456d-a495-69be28687063",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5757307c-16ea-4b0e-b753-a19ceff25a51",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c4d553-8f63-4f28-8fc2-0644190af6ac",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0b2ec61c-48e9-4f66-9371-bf8c1443cf9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "913bdc51-7946-44ae-86a5-5d0d22318c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d480b52-dc7c-415c-b47c-65b047caa4c5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c79bac52-657c-48de-9f9a-eb433625e611",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0407fb7e-8cdf-422f-8dda-8662929f624c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3460865f-fcd0-42d7-8bd6-705850d39c90",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c272ef7b-2a94-419b-bffa-16023a120bad"
                    }
                  }
                ]
              },
              {
                "id": "c0ee9940-3fe9-450d-bf5b-b759755acfa3",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8192014f-23a9-4f6e-80ac-29d2b23329ed",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc2fe80-7e38-4960-aeaa-903804c62888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6f22408a-a8a0-4055-99aa-3bfbceb2ab70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "decc814d-a916-4570-9281-db8a17d1514c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d18ffed0-695f-46d0-b571-6a7093b87f4b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5fbaaf28-4b6b-46bd-b367-ddeee4e8f2d7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e89ba4ac-d7c4-447d-98c4-ead4bffa3b60",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc747edc-0aa5-4c8c-9e58-518b9fad6359",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "988c1c6e-822d-4512-971a-7090df8e1d3c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53b18883-c4fc-4ca1-ba95-266211907853",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8a1a5a1-e869-4f03-9ff4-62bcdb5faf17"
                    }
                  }
                ]
              },
              {
                "id": "cd6eb864-2d95-4404-822e-9e98d0576f59",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37d347b0-cb4b-4f61-9500-5d485db9045a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "928d93c1-97e4-49d9-b5f2-7354ea9a8056"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4348fb97-194e-4fbb-9c99-792d90c3e52e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36b2dba8-d79f-44a5-a694-0d71edc6a1c4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "62bb06dc-6e1d-4378-9313-4eb4c8de981b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a98898d4-5d17-47ac-8b85-84088c900407"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81ae339f-371d-4f38-9351-3daec8e10ce3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c175c3f0-2438-49ef-97f3-20c05d6c0d45"
            }
          }
        ]
      },
      {
        "id": "885c6e55-7bf3-4519-9917-4f192608a446",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "251abdea-4786-49a8-b4f6-5e8d83fd1435",
            "name": "Negative Testing",
            "item": [
              {
                "id": "343ca985-c73d-450b-a1a2-cea54b0d99b3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "85c748b4-722a-4d44-a4a0-44099b3477c1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c30752-412f-43cf-ae73-336e2d0a468d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4c72de00-3a12-4bec-8699-49b3a7c0b9b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6788858-348d-432c-9eac-f902afdeb4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c4ee6c6b-3dd7-4fef-9fe8-3903139cc4f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37d20a28-25c8-4d6e-9018-85bc23198022",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1dd7b1e-afde-476a-bdab-4214828d3d4a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d34dac91-e0e7-40c9-83c0-9fe7befb3e54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ee98db4-87da-4e66-b6ba-7cfa4004a8a4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fb2ff245-44c4-4c53-81a8-57f1c38e0809",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "396f2511-8e87-4a9a-b99d-40f2b6e7af0a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bff1d03e-f0e1-4098-9f17-9b8e17675a25",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e0d6a1a3-4f33-44dd-8a8d-24f6894052c4"
            }
          }
        ]
      },
      {
        "id": "2d2afba0-7155-4fc2-9c8c-f2e0841f1361",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "bf43e170-c54a-4e12-bc0b-e8f35bb46644",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8da2cf38-8ea6-49a9-a601-5cacb2b441a3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "77f78c3e-834d-4086-940c-ae37e54dd97a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15c8e8d-153b-41dd-a1e1-c9a23c181b81",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35edacec-4780-4e4c-9843-8621501cba48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4d95c5-b71e-4b29-a2ab-d08f3b16fe2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb458c02-c816-4837-99ee-c5decbfe9423"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb4b2a85-37dd-4cf0-afed-cc707b888625",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b803964f-1aa4-4221-a238-815800c94672"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f7dfb8e-30e6-4389-b201-b1e5f28aff1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85bc3c7e-e5c8-4dd9-afda-04be47d81892"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d9a1f003-0289-4fb5-904b-bf8a9465a315",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "68e532b5-4c35-468d-b117-6508040a3c78"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6407ff65-328d-400d-b0f0-46e5a1505d41",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c8dd1019-2c4c-4b47-8acf-3f5c1d3efbc1"
            }
          }
        ]
      },
      {
        "id": "55e24eb8-31a7-4cdf-ac50-1cf667d7e679",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d799847b-99ab-4e0a-8767-04574b3028e7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4a009758-0373-41d2-916c-7437bcdbe1cc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ecf40334-1e1b-4fcb-bff8-3bc8513afebd",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85c8065-a807-4449-8eb7-0fd012c2d4ef",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2a9cd22-fa0c-4342-9e47-50b41fa6dbd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4839deda-234e-46a4-906e-b3811c7cd952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "26c7220e-5d16-48c6-94c3-11b60ed63bf4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b5e1163-1cf0-41f1-bd72-15796d4b044c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c449cdd-1ba1-4882-af05-1e2d13c55ca8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "84572c37-815e-4205-85fd-3079676d37a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d2d3f0e-1b43-46c6-822c-fb12440f0aec"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3c5daeab-54fb-4da6-a725-1f6f058e62b5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e7851213-d77d-4317-9572-165c024a5f1b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "33af06aa-033b-486a-ad4d-1626d13368da",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "64318ccc-785c-4135-93b4-df15aa581e2f"
            }
          }
        ]
      },
      {
        "id": "ce18afc8-c21c-496e-8689-0e2d7d231d06",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "147afa1d-d57c-4f49-80e5-3ac8b33d5a1d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aaa8c5b6-021c-4e9e-b664-c6e6b464897a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "76156ba0-ce6f-4931-9f85-58782badb40d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "599ba6c9-631b-4bbc-bdb3-580ba50ff86d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7957593d-3629-4dc7-94c2-9f134359cfd0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 11.65079365079365,
      "responseMin": 7,
      "responseMax": 330,
      "responseSd": 25.972915520594903,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724373635853,
      "completed": 1724373646789
    },
    "executions": [
      {
        "id": "53a7a367-1b79-48eb-89e9-ed150e09766d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "899686b3-140b-4bfa-8905-d474e04ec2c6",
          "httpRequestId": "369e5701-ac04-4685-8bd4-553eb614f109"
        },
        "item": {
          "id": "53a7a367-1b79-48eb-89e9-ed150e09766d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f7e984ad-a20b-4aed-ba29-2d949028ef17",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 0
        }
      },
      {
        "id": "576363df-1042-45fc-af69-e4c0fea597a8",
        "cursor": {
          "ref": "dd446b77-dac3-4575-8609-4d3ab9a22262",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b55fca80-1362-4c8d-857b-c209126004dd"
        },
        "item": {
          "id": "576363df-1042-45fc-af69-e4c0fea597a8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e2ba5522-24ef-4544-a661-3e186b657790",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "ba591391-1b4a-4723-b3da-c426dbb89a51",
        "cursor": {
          "ref": "21c5c8e6-df5d-4c8a-817e-210ee4930759",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "cc765402-5276-45f1-8412-f03739dc17ce"
        },
        "item": {
          "id": "ba591391-1b4a-4723-b3da-c426dbb89a51",
          "name": "did_json"
        },
        "response": {
          "id": "9f4f6627-7084-439d-a422-aa510e60ba0a",
          "status": "OK",
          "code": 200,
          "responseTime": 171,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c3abba-0984-4200-83d2-fb300c3b1e80",
        "cursor": {
          "ref": "fcb12c4c-f018-4fdc-9a2a-6cede5187d36",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8647beac-1f0e-41f9-becb-acf4132d77c0"
        },
        "item": {
          "id": "26c3abba-0984-4200-83d2-fb300c3b1e80",
          "name": "did:invalid"
        },
        "response": {
          "id": "9082a3e2-3724-486e-b3b6-91c9ee9257a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c3abba-0984-4200-83d2-fb300c3b1e80",
        "cursor": {
          "ref": "fcb12c4c-f018-4fdc-9a2a-6cede5187d36",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8647beac-1f0e-41f9-becb-acf4132d77c0"
        },
        "item": {
          "id": "26c3abba-0984-4200-83d2-fb300c3b1e80",
          "name": "did:invalid"
        },
        "response": {
          "id": "9082a3e2-3724-486e-b3b6-91c9ee9257a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3dd58b0-898d-4d62-837f-50af3bf584bd",
        "cursor": {
          "ref": "f5cfe741-512c-4306-a91f-beb25475b474",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5775383d-13be-4b52-bca0-8329c947a761"
        },
        "item": {
          "id": "c3dd58b0-898d-4d62-837f-50af3bf584bd",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d8bd4366-f190-4b48-91a1-b7721b6eee88",
          "status": "Not Found",
          "code": 404,
          "responseTime": 51,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc12a22-3946-4806-ae84-36c153f242be",
        "cursor": {
          "ref": "24bc3221-3725-4260-925f-f18d9dd5dced",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e335302a-d411-4313-92e3-e8b7b1f4b14c"
        },
        "item": {
          "id": "8fc12a22-3946-4806-ae84-36c153f242be",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0beda12f-0bbc-4aac-96bd-520a081caef6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a37f79a-ca24-4dad-b11e-64955c172d7d",
        "cursor": {
          "ref": "de94c047-9c2b-470f-a136-a8d8cfed73da",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "42a1ecdf-e46b-472c-b266-6f2609db8eab"
        },
        "item": {
          "id": "4a37f79a-ca24-4dad-b11e-64955c172d7d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ea34f3a9-b57e-4b09-9dc4-751d6e770521",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6023f2-23fb-4654-b663-0aa369aea806",
        "cursor": {
          "ref": "483f3958-5c7c-42a6-a860-ec7aed5fe30f",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0b90abaf-062f-4d07-b664-99c246e7a123"
        },
        "item": {
          "id": "3e6023f2-23fb-4654-b663-0aa369aea806",
          "name": "identifiers"
        },
        "response": {
          "id": "c40fea10-7499-4bab-8e47-abbbedc5884c",
          "status": "OK",
          "code": 200,
          "responseTime": 172,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe048221-4c3e-41aa-b427-a23b7d069b9f",
        "cursor": {
          "ref": "bc3be581-48e8-4f86-b374-87ad9e1310fc",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e2e48e0c-b83c-4858-9053-a0ba4343cb3b"
        },
        "item": {
          "id": "fe048221-4c3e-41aa-b427-a23b7d069b9f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5d6d8cac-e954-4129-b9a7-9821e681ab9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ba930a-509a-4f8d-831a-e452d0934593",
        "cursor": {
          "ref": "ae0fa3e6-7b9e-4e1f-afba-b5ebc0b857ba",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d0871f35-5541-4464-8da6-30e9ddec09fd"
        },
        "item": {
          "id": "e9ba930a-509a-4f8d-831a-e452d0934593",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0cc215b3-e9a6-48c6-abdf-274e64c5cbb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c01706-1386-4f20-a86f-cce314c6317a",
        "cursor": {
          "ref": "6376b29a-5900-4995-bbd5-376b4c466cdd",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9eddece9-30d3-4cb3-b206-be338e545ffd"
        },
        "item": {
          "id": "30c01706-1386-4f20-a86f-cce314c6317a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "23a92205-462b-4c37-a998-fa4b9d377456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ada831b-1e5d-4460-884d-85f4445b76a5",
        "cursor": {
          "ref": "a4688cf5-104f-4e7a-a602-98908f7cf3b6",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f6d0aee5-50f7-44ea-855d-726183045ade"
        },
        "item": {
          "id": "2ada831b-1e5d-4460-884d-85f4445b76a5",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "40749522-4ae1-4afe-ac9f-d30bbf6b7cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af0dec8-15cf-474b-b380-5553e56862bd",
        "cursor": {
          "ref": "7149edda-5944-421b-b37c-146cdc3bf046",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8f4856b2-6ee8-4744-bf92-b23f3cca769a"
        },
        "item": {
          "id": "5af0dec8-15cf-474b-b380-5553e56862bd",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2abb6bc2-89d3-45eb-88a6-df41fca5acce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a9c899-b039-4f6c-9996-0627f334d478",
        "cursor": {
          "ref": "808dbb9f-a7df-439d-a2b0-1b49efaa75d4",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0e534653-d26e-4c60-a14b-b8583f39f715"
        },
        "item": {
          "id": "d0a9c899-b039-4f6c-9996-0627f334d478",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a2fd8cba-45e4-44e6-a2c0-63f7dab4e31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b60667-44ec-4d0f-ba5c-e594b46665c0",
        "cursor": {
          "ref": "606162e2-1112-457c-8b36-67ef799480c2",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0447d50c-8e2e-4468-86d7-1016d32dbe55"
        },
        "item": {
          "id": "06b60667-44ec-4d0f-ba5c-e594b46665c0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e55c861a-1644-4369-ac89-219caaa2b8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a0af34-4cb6-4139-ad25-d082c78cca26",
        "cursor": {
          "ref": "b583df16-dcb3-443b-aa9b-818e6f7d9236",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1bf40d0c-bf7f-43a6-a515-29ee4d9e4b35"
        },
        "item": {
          "id": "97a0af34-4cb6-4139-ad25-d082c78cca26",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "def568ca-f102-4ddb-8653-baacfaf6474b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dec47fc-f27b-4268-a747-1b5da9b651a7",
        "cursor": {
          "ref": "4fa577b4-9723-4974-8d38-66552e48574a",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "43baf47f-cf30-440a-b4d5-cdcbd5b0720b"
        },
        "item": {
          "id": "3dec47fc-f27b-4268-a747-1b5da9b651a7",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7a54ff23-a212-4aba-b70a-9b61d0b5ea67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4afc7898-1982-4eaf-9d81-64f983b7eaa8",
        "cursor": {
          "ref": "9707e269-e9c1-4b97-b6ca-b5fbc1acb064",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3e51c540-109f-4782-9a33-2d489c793e30"
        },
        "item": {
          "id": "4afc7898-1982-4eaf-9d81-64f983b7eaa8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "45bf22d5-ac42-4a98-8dff-95c323943b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3add1849-7e6f-4427-9d5d-5a7b754d3c26",
        "cursor": {
          "ref": "db52c7b3-dbbb-4610-8282-3a31040113c3",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1bbd1a6f-9ba3-47d9-ba73-e7b0ce6165eb"
        },
        "item": {
          "id": "3add1849-7e6f-4427-9d5d-5a7b754d3c26",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0ea1b23a-3660-4de6-a1c2-baed82f1ebaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0193bedb-48f8-405f-9767-ca5d8eeafbbd",
        "cursor": {
          "ref": "5c1aa6c3-280d-428c-b461-8dbdcc856446",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d58e27d7-7e13-4366-9b65-5f2e5e614356"
        },
        "item": {
          "id": "0193bedb-48f8-405f-9767-ca5d8eeafbbd",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8c3234ac-452d-4299-b567-ef8456ac16de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7570f79c-8606-48b4-8fa4-00f520efb15b",
        "cursor": {
          "ref": "a2187b10-d233-4546-b81e-c09c98310e6e",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5e879910-3419-4593-bcd6-5a41fb91f034"
        },
        "item": {
          "id": "7570f79c-8606-48b4-8fa4-00f520efb15b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "46938e76-0860-4602-8d4d-559259fc1da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa6ec9c-c6a4-4528-a6d5-634d6ae98779",
        "cursor": {
          "ref": "6650a9b9-3215-4ca5-a1fb-2b544af746d9",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8ccbf2b0-a76d-463e-a224-634bc166c742"
        },
        "item": {
          "id": "4aa6ec9c-c6a4-4528-a6d5-634d6ae98779",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2be81551-68f0-49aa-b099-36b42a9466a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17bcc4e4-de0c-4504-8ab1-9b17829e49c7",
        "cursor": {
          "ref": "7e5a7585-d215-46f5-becb-e8960eaab848",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6ef80295-3670-442d-961d-a4b21a58953a"
        },
        "item": {
          "id": "17bcc4e4-de0c-4504-8ab1-9b17829e49c7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d1961c09-d271-4665-a856-2e659d4b4c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e55ec2-221f-4e59-bdb7-4f880c5e1372",
        "cursor": {
          "ref": "a9ad4522-60d7-46f6-ae3b-25d25e76009e",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1555ae91-7bd9-4e6a-ab22-db922ca5195a"
        },
        "item": {
          "id": "09e55ec2-221f-4e59-bdb7-4f880c5e1372",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8f322a29-b56a-4092-8375-1aeb19069558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb478e2-f0cb-4997-863b-f7c42fec3468",
        "cursor": {
          "ref": "1bc53a3e-f098-47e5-8ab7-6d093acff1bc",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "90fb1c3a-046a-4cee-a2d6-0343234bfa6e"
        },
        "item": {
          "id": "bdb478e2-f0cb-4997-863b-f7c42fec3468",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "bd30a43f-c1bf-43c0-85cc-e14c5f13877e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14dd6926-8de5-4a80-a5b7-79809ebfbf82",
        "cursor": {
          "ref": "f0d2f723-25cc-490d-9453-a90a37823afa",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "34f5ef0c-07f8-4b98-92b5-059f19437891"
        },
        "item": {
          "id": "14dd6926-8de5-4a80-a5b7-79809ebfbf82",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "18482ac7-b833-4972-8f43-1f849238e115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24719aae-ad90-42c9-959f-82da8909875b",
        "cursor": {
          "ref": "8ab5c059-ccb7-4cf3-9735-4528771f17af",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "857d39e6-b2ae-40c5-bf7c-90c0934851ae"
        },
        "item": {
          "id": "24719aae-ad90-42c9-959f-82da8909875b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1adcdc1a-4341-4798-8981-690d6ff6a95f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ca549f-84a6-4dc5-8661-5806b54fd11c",
        "cursor": {
          "ref": "9fbe4e12-64a1-4c46-bb9f-1845934d66e4",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3b1b751a-ed37-4e09-aedc-86508b5559b5"
        },
        "item": {
          "id": "74ca549f-84a6-4dc5-8661-5806b54fd11c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "718c09ad-2b1f-4304-aaf6-74e95a783bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8169d53-f2a4-4908-8c72-58e232a5eadf",
        "cursor": {
          "ref": "d94ade26-384e-4c4a-86b1-0893131c0332",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "350889bc-b762-48e0-88db-ba49565e8f25"
        },
        "item": {
          "id": "a8169d53-f2a4-4908-8c72-58e232a5eadf",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5d9f318c-b42a-4a83-80d4-0fa7feb2d9db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38665bfd-c03c-4d7d-956a-bc79141eb278",
        "cursor": {
          "ref": "7f3be16d-59d1-4543-b13d-bf4b669e2723",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "aa49f92d-20d9-4826-9490-91bfcd1a1a08"
        },
        "item": {
          "id": "38665bfd-c03c-4d7d-956a-bc79141eb278",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8a0b8774-c1aa-4cdf-ae21-52972d8e0a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bf9d90-91c0-44c9-9b9d-b9fb62717820",
        "cursor": {
          "ref": "f9531838-54fe-40ea-8d59-7f50fa05aa47",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0af78e3e-edf8-479f-8af0-c391c979c6b3"
        },
        "item": {
          "id": "b0bf9d90-91c0-44c9-9b9d-b9fb62717820",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8836cb97-409f-429c-ac11-44270ace6dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6b7271-3caa-4c29-a3b4-2c87f50a6612",
        "cursor": {
          "ref": "010812ac-c500-4f44-a3f1-36157bd7ddfb",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "aa827e3f-c45b-49d6-9329-c1ed158ddbf4"
        },
        "item": {
          "id": "ca6b7271-3caa-4c29-a3b4-2c87f50a6612",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "62a22af5-be85-4728-bd94-262d3247edf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ff1e67-318f-473b-84c9-dda76b2fa4f2",
        "cursor": {
          "ref": "8c48becc-839c-40bd-b952-498f17c30fe3",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "22d25f76-85eb-4a79-a5db-ede037ddbece"
        },
        "item": {
          "id": "05ff1e67-318f-473b-84c9-dda76b2fa4f2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "33c1624a-e2ea-4ad6-8f54-7e57447fbc0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba65fc5-a1cf-411a-95de-3268f30ada34",
        "cursor": {
          "ref": "0c39d9b9-f555-4013-8f44-bd68708e2a52",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d7df9fcb-0b86-42f1-b202-1fc150358dee"
        },
        "item": {
          "id": "3ba65fc5-a1cf-411a-95de-3268f30ada34",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "781f9e2b-b1eb-4e3c-9f34-3d8dd13e7f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3cbf8c-94eb-4f3e-9786-8565ab62c1f5",
        "cursor": {
          "ref": "8dd6a882-8f7d-46db-a8d2-f6289c14b1ac",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "56af6f02-9a4a-456f-b12c-a44fa195d670"
        },
        "item": {
          "id": "0f3cbf8c-94eb-4f3e-9786-8565ab62c1f5",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4d901107-0ef1-443a-b257-d97e7295a8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe570968-98da-4927-944a-f612a71396a8",
        "cursor": {
          "ref": "344623a8-c034-472a-8069-c335f28704fa",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "aeae05b5-a224-4544-9214-ea09bc4ac001"
        },
        "item": {
          "id": "fe570968-98da-4927-944a-f612a71396a8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "aeb48cbb-8487-47a1-b1e5-e1b9854c8241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add481cc-724d-440e-a949-370b25131fc8",
        "cursor": {
          "ref": "d1ec8b3a-d042-4aca-b9d7-29c65574f9b7",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4813d34c-4500-4dcb-8c60-6aef56ddd1f1"
        },
        "item": {
          "id": "add481cc-724d-440e-a949-370b25131fc8",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "be4d8a73-529f-4c3d-93bb-3f97347fcc07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b2e23c-7162-4e55-bcf4-dc3a7d7df815",
        "cursor": {
          "ref": "1dbcd945-6ca7-4707-a81b-7e27a0de638c",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e22660e1-0ca7-4263-82e2-0052f99002e4"
        },
        "item": {
          "id": "52b2e23c-7162-4e55-bcf4-dc3a7d7df815",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ec9b9cdb-b0e4-4aa0-b20e-b7f964132dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba13deba-7f65-4a09-8b34-a0aab4e3b836",
        "cursor": {
          "ref": "1ee7b105-0868-44a9-b6ef-ef09f84660dc",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a777230b-b4d6-43e5-ab75-ae38aed8da87"
        },
        "item": {
          "id": "ba13deba-7f65-4a09-8b34-a0aab4e3b836",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b424f068-3bee-45a6-b8e2-af708fbeed7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39bc75f-ec06-4f6b-91c9-25115cde6f9a",
        "cursor": {
          "ref": "0d8953af-44b9-407a-9893-4cf1851dd61a",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5c057f1f-bdc6-4081-9136-a68e8c6038af"
        },
        "item": {
          "id": "e39bc75f-ec06-4f6b-91c9-25115cde6f9a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "63808b64-8578-435f-a8b8-035f754684a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a491421-f4bb-438d-a0c6-4c5d68e0ebb2",
        "cursor": {
          "ref": "c8db9379-e107-4c6a-8313-b5fe31e1d4a3",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "55dcadfb-3711-4609-84c3-ec510840d071"
        },
        "item": {
          "id": "5a491421-f4bb-438d-a0c6-4c5d68e0ebb2",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "12054bdb-22fe-46cb-9abb-5770b5cdeb98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eafa3ecc-a409-4906-ae0d-f571a29d797a",
        "cursor": {
          "ref": "d59b98a7-f109-4acd-8b50-80a8f1becb36",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e3ed5fe7-c493-45db-a8dc-b8955acdd18f"
        },
        "item": {
          "id": "eafa3ecc-a409-4906-ae0d-f571a29d797a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3c0b3335-1090-4cc5-95a4-f12c2a0c971a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866932b6-805f-467e-ba0a-3abcb0f28397",
        "cursor": {
          "ref": "4124226b-58b0-434f-af9a-b2c270031b8b",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fb74c9f1-9e4e-4c95-8515-f9134cf2f47c"
        },
        "item": {
          "id": "866932b6-805f-467e-ba0a-3abcb0f28397",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "001ed3a0-7561-454d-9817-f5b80abd1ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b59a963-48f4-4edc-9096-e70aec12a935",
        "cursor": {
          "ref": "5d775c74-dd9a-4ed6-8f5c-cacea07e1bb3",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "81a5775a-03da-407a-8cbe-0a1287983498"
        },
        "item": {
          "id": "6b59a963-48f4-4edc-9096-e70aec12a935",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "189816a3-5c88-4447-b8fc-a66bac5efccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c442a02-61b8-4b28-ab93-90e5e68d799e",
        "cursor": {
          "ref": "1b6270ef-b2c0-40f2-bd77-7f666e8acfb3",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "96d95740-c86f-43ba-b264-7d36a7dd2f1d"
        },
        "item": {
          "id": "4c442a02-61b8-4b28-ab93-90e5e68d799e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "44c128ba-a094-49ba-9143-079469f8354a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66214260-7f9e-47fe-8e71-4fdc6261a6d2",
        "cursor": {
          "ref": "570ebdea-77fd-4272-abff-7d9c000bd14c",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "636683b3-5f75-4872-9903-7f2f42b514a9"
        },
        "item": {
          "id": "66214260-7f9e-47fe-8e71-4fdc6261a6d2",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "bb8feb1f-5d83-4eb6-9444-fff1a9005456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0f338f-379a-4b57-800a-8f22659ea7e8",
        "cursor": {
          "ref": "b82a11b1-c899-47ee-bdbf-a7a7f5f3e08b",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c87c0342-1f34-46b1-bf0f-ef9c39d96430"
        },
        "item": {
          "id": "bd0f338f-379a-4b57-800a-8f22659ea7e8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8e3733a4-f0ec-4070-a4e2-2814d0ffb7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a725277-6e48-422e-bd6e-f9f373149917",
        "cursor": {
          "ref": "e4e8a415-d4d2-4f9b-bafb-b37d82feacf1",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e326821b-2b8c-4179-b7b9-1bf7d97e0010"
        },
        "item": {
          "id": "5a725277-6e48-422e-bd6e-f9f373149917",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9972e8bf-d3e3-490b-b8de-5bc3d3e11360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f31034-0317-46ce-8290-03a2807b29f4",
        "cursor": {
          "ref": "05865de6-b5c5-4671-a230-ecf6ccc69dfb",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f48879a5-b44b-4a01-a7d7-915f5ecc65d1"
        },
        "item": {
          "id": "73f31034-0317-46ce-8290-03a2807b29f4",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "68da017a-05cb-4d3a-a24b-23af7d7c0206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8df6bf-6106-4dec-8e42-f29cee3dbd9a",
        "cursor": {
          "ref": "fd8543a7-8143-4d60-938e-a1cae181e6a9",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "873a5cb2-e215-4cdb-942b-d68d3735290b"
        },
        "item": {
          "id": "2b8df6bf-6106-4dec-8e42-f29cee3dbd9a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "73360b7b-1743-41b8-b10e-7a6fc282ed1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d368a4b-e495-4001-8b63-cb7a3b05963e",
        "cursor": {
          "ref": "8a3cd4d3-2d6c-4583-bf64-3813da2843e4",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a04cb555-0373-4796-aa9d-9d63ca2742fc"
        },
        "item": {
          "id": "3d368a4b-e495-4001-8b63-cb7a3b05963e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ef780145-c188-4616-b5cc-88dc7d45c9c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae31e7ce-b7ff-4f4e-b843-c1a9550f3f42",
        "cursor": {
          "ref": "a8c1fdda-3588-4b2e-9fd3-aa90bbe9d47c",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "bb2cf444-2b96-4358-988f-a7c02dbb9647"
        },
        "item": {
          "id": "ae31e7ce-b7ff-4f4e-b843-c1a9550f3f42",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "28a68a1b-61a9-4530-82a5-939d3c281fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7aaf532-e3ee-4aa6-9fbc-663aba9a778d",
        "cursor": {
          "ref": "a59ecbd8-d1d7-422b-a376-09560faf380e",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "bed8d809-fcf5-4e6a-8694-81f830d54939"
        },
        "item": {
          "id": "b7aaf532-e3ee-4aa6-9fbc-663aba9a778d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a499e749-dd79-49fd-b5af-69261ed1b23a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb5c78e-90c7-40ca-b406-8d4584c6c903",
        "cursor": {
          "ref": "70fe6112-fab3-454d-9373-f8bcaaff5749",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "09173019-504d-44bb-9233-1409d4e01bdd"
        },
        "item": {
          "id": "2cb5c78e-90c7-40ca-b406-8d4584c6c903",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9ebd45e5-b57a-46f8-a835-6dbabec36c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9176bf64-5fba-42f6-aaf0-b13bd0cfed6a",
        "cursor": {
          "ref": "14ceca9d-d245-4e10-92c9-a55d71948eb5",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fb59b075-d8e1-4024-9e97-51618ffd57c9"
        },
        "item": {
          "id": "9176bf64-5fba-42f6-aaf0-b13bd0cfed6a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a2196ad8-49d5-4433-8ad9-ba697ade3c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31082ad-3965-45e5-9f2c-9538e9eed732",
        "cursor": {
          "ref": "5452e29c-e641-417e-8de6-bc0c2878864d",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6367ef5f-8045-4e46-9ce8-fca72e1d6bc6"
        },
        "item": {
          "id": "b31082ad-3965-45e5-9f2c-9538e9eed732",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e6dffbf9-3cb5-47b4-b349-e959ffc00046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba98e3e2-9db5-44b7-b389-7d0a41063fbf",
        "cursor": {
          "ref": "90ffb874-eaad-42e7-871a-488474bb79b2",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5ae9028f-562b-484f-ace4-7fa857f1af95"
        },
        "item": {
          "id": "ba98e3e2-9db5-44b7-b389-7d0a41063fbf",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "81c1f467-50ea-4a24-ab76-e91d545142ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e643ad72-2b69-4749-99ae-9aeb1200e1f6",
        "cursor": {
          "ref": "00776f6e-e91c-48ec-95c2-4976101f5ab2",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4d652883-154b-4320-9301-9057b6cd6261"
        },
        "item": {
          "id": "e643ad72-2b69-4749-99ae-9aeb1200e1f6",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "dc2e10d0-df18-472d-a6e1-cada7bce443b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6fa074-8c44-4761-b9da-d3b20720a50a",
        "cursor": {
          "ref": "fc275706-44a2-47c0-b97c-db420d21961e",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "23383eb0-bbbb-4b13-8282-e2e3829f31ff"
        },
        "item": {
          "id": "3f6fa074-8c44-4761-b9da-d3b20720a50a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a6ff9c78-3f04-472a-b7d5-38aab6c1f3bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1912c823-16c6-4a84-94c2-4a90330a8a3d",
        "cursor": {
          "ref": "6d812bbd-7036-4711-a0e0-17854602d2a6",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f579bb8b-716f-4719-89f9-be58f26ad432"
        },
        "item": {
          "id": "1912c823-16c6-4a84-94c2-4a90330a8a3d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "bad4eaac-9e26-43c7-b4f6-6b4c1a096e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c209bedb-da69-43b0-8929-0833044c237d",
        "cursor": {
          "ref": "eefa3cc7-c172-4263-9dcc-303c948cb76d",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d4a1d669-b2fa-4858-83fa-562b659ab115"
        },
        "item": {
          "id": "c209bedb-da69-43b0-8929-0833044c237d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "034ebb31-dd5c-4d65-b586-39299abe2c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d38ef5a-013e-4c08-ac8d-6257a63ef804",
        "cursor": {
          "ref": "a5d7c97d-c458-47a2-b7f7-ece0530b9c70",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "30fb699c-4459-40f1-95b4-a970be0a942b"
        },
        "item": {
          "id": "0d38ef5a-013e-4c08-ac8d-6257a63ef804",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9daa1f70-f109-439d-820f-88b2ed07c088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6225a5e-8092-47dd-86b8-d6f751a521aa",
        "cursor": {
          "ref": "ac8da5ce-0c6d-430e-a4ed-053f303ca56e",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "427e9a62-c767-4e37-b33b-4bf4b59deb34"
        },
        "item": {
          "id": "d6225a5e-8092-47dd-86b8-d6f751a521aa",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6f4ef95f-ad33-4417-ab56-0a69c9b4bf42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96220a25-6fbf-49ed-bc1f-e37398bec7c7",
        "cursor": {
          "ref": "749de2ed-eac1-480e-a3de-7a3696e3dcb4",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "04b21689-a745-4152-bd65-11218f705788"
        },
        "item": {
          "id": "96220a25-6fbf-49ed-bc1f-e37398bec7c7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "553fc088-bb07-4e49-a240-b89776e5ecad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adee4ce0-9063-473e-ab17-830e9c2a11d0",
        "cursor": {
          "ref": "196828a7-9c30-4209-b3a0-c64e476794ed",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1f9c03d4-6861-4cbc-a15d-2dea6ac6fc84"
        },
        "item": {
          "id": "adee4ce0-9063-473e-ab17-830e9c2a11d0",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e069ed4f-0827-4674-b34f-606aa941739c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dacb7295-b333-47c0-b24c-40457b3dd185",
        "cursor": {
          "ref": "cea73d8b-d2a5-4a0c-90ec-29a1ea697ba6",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b447fb06-f2b4-4614-9cfc-ee0c498c65c7"
        },
        "item": {
          "id": "dacb7295-b333-47c0-b24c-40457b3dd185",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0bc1598f-b973-4e40-b615-7913ada149b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607cdc93-3a4b-4363-a662-48c4ef7a623f",
        "cursor": {
          "ref": "d2cebf6c-69a4-4e03-a7f8-7ac74578179d",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1408585d-5580-4837-b445-ebdc65c663ad"
        },
        "item": {
          "id": "607cdc93-3a4b-4363-a662-48c4ef7a623f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "54203b12-b00d-4989-b77b-82b3391f68ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7594af8-3dc1-446b-b7a1-1f229906e22f",
        "cursor": {
          "ref": "3c036789-188b-4ba8-8995-b4aaffa26d11",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "03b16468-a431-42b8-b84b-f574b0999c56"
        },
        "item": {
          "id": "a7594af8-3dc1-446b-b7a1-1f229906e22f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7d1d7914-c40d-4133-8a58-8e6e78d5dcaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a16e91f9-8911-4635-8ed1-bdd25762de2b",
        "cursor": {
          "ref": "057aa35a-4da6-4be0-bb77-2736c64263d9",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "48ef12e8-d5ac-41a5-b279-018bf15e1d40"
        },
        "item": {
          "id": "a16e91f9-8911-4635-8ed1-bdd25762de2b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "fb910bba-956e-4986-a69e-b8ad5ab25c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf3173a-6557-4637-98c9-7c06274a07e2",
        "cursor": {
          "ref": "1407b0a1-5fbe-4007-b79b-8fa2a29aaf82",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3c00c270-3770-4c43-a59b-4f29f931ad09"
        },
        "item": {
          "id": "4cf3173a-6557-4637-98c9-7c06274a07e2",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b33f8f52-7a57-495b-b365-d8a1a0a65f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4dd4f3-f2e3-4fb6-a6ed-f8bca8c8590f",
        "cursor": {
          "ref": "d18ed5b9-ce8a-400b-a367-6ef5dad6a75d",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "bdf88a5d-2bb1-4722-b5ec-c3e292ade9b1"
        },
        "item": {
          "id": "2a4dd4f3-f2e3-4fb6-a6ed-f8bca8c8590f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "df77dc38-e28c-4279-b4e2-0a59cad25803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ffb2959-cc5c-4265-b144-ea4334b55043",
        "cursor": {
          "ref": "70d97567-d596-405e-9d67-359f09b34614",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f37de5db-1dd2-4ebb-b300-4986323116c3"
        },
        "item": {
          "id": "4ffb2959-cc5c-4265-b144-ea4334b55043",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0a90e68d-fea8-4e53-8bd0-16733fec306b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace25ddf-782e-4468-9e95-5139d65f8ab8",
        "cursor": {
          "ref": "3fd75f87-d7fa-4b0f-b6fc-1c64048babff",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3064c28c-34c9-4cf7-8b80-49e9d293da79"
        },
        "item": {
          "id": "ace25ddf-782e-4468-9e95-5139d65f8ab8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a4b2603b-3627-4896-9eb5-c638e49e0689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52754f9d-b339-4a87-8d8c-a831ca0ae7b9",
        "cursor": {
          "ref": "a306b776-6f8b-4cc3-bbbf-56fc348cb319",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "797cc4fc-8e1e-42da-a511-6d73fa6e9761"
        },
        "item": {
          "id": "52754f9d-b339-4a87-8d8c-a831ca0ae7b9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7c0a1607-47da-4653-a43e-599ba7dbb0cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c46ae12-9284-4246-b0cc-52ba98e96fb4",
        "cursor": {
          "ref": "d1e2ec3f-986a-458e-87f5-bbcb392ba57c",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1757d7bb-2be2-4deb-9dbe-5874f993b9a9"
        },
        "item": {
          "id": "1c46ae12-9284-4246-b0cc-52ba98e96fb4",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "da31325b-af32-460e-813f-277406e7bbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eec36bb-2e90-4964-9ebe-c07d6b69fd08",
        "cursor": {
          "ref": "0a611b84-25d8-4c5b-be80-c98a12fdc4ba",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d28ecbcf-5f18-491b-8c3e-424abc3cb95b"
        },
        "item": {
          "id": "8eec36bb-2e90-4964-9ebe-c07d6b69fd08",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "45d58db9-cb47-4eff-82df-a8b73f8b053d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab613c6-b807-4627-99d4-b1a961be01c1",
        "cursor": {
          "ref": "0e5bee5c-77ef-4761-a27d-6ee34c308ff4",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "bd4c13d6-2012-498e-a9b1-da928af7777a"
        },
        "item": {
          "id": "6ab613c6-b807-4627-99d4-b1a961be01c1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "cdb684fa-6fb8-421e-84dd-065978ed0d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808c91d8-9dba-4fdb-a5d7-f93ffbc636ec",
        "cursor": {
          "ref": "87b76d2f-6360-4dc8-aec4-270ed3b184a4",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8b1c9ca5-7a58-4931-925c-72d3c76cc66f"
        },
        "item": {
          "id": "808c91d8-9dba-4fdb-a5d7-f93ffbc636ec",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8edc9cc6-e141-43d1-9c43-b2a67ebd9cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b955564-b699-4ba9-92da-e9a9818dfe99",
        "cursor": {
          "ref": "0b205c93-7f40-4c22-8225-8261efd8f1e9",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0c025eda-9041-4d41-b9ae-5bc8c9b20ee4"
        },
        "item": {
          "id": "1b955564-b699-4ba9-92da-e9a9818dfe99",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "781c096f-254e-439f-97c1-2484d2ddcfe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f06f73d-1129-46f3-bf69-601058689569",
        "cursor": {
          "ref": "d20dda43-c008-41e7-ace7-747436ca8dad",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "82485669-1402-4280-8932-f6c4c196575a"
        },
        "item": {
          "id": "2f06f73d-1129-46f3-bf69-601058689569",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c8592be0-1b4a-4622-b221-698ed0c62f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286585ae-5ada-4dac-9556-51ae188bdeb9",
        "cursor": {
          "ref": "df923760-f594-4175-9fc7-c5e807c630e1",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a1f06032-46c6-4f0d-9de3-9420547d331b"
        },
        "item": {
          "id": "286585ae-5ada-4dac-9556-51ae188bdeb9",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "2d2bf51e-ce4e-43cc-894c-99db97595f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea985f9-9bbc-486b-9878-8ed86ff8962c",
        "cursor": {
          "ref": "386ba979-8343-4c05-a448-dec7677cb37e",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5c3712d7-641d-4c5b-a551-4c5730dc1ed6"
        },
        "item": {
          "id": "9ea985f9-9bbc-486b-9878-8ed86ff8962c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c446e54b-1a3b-48ed-b02e-98fb5392b4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52064fb8-f899-4f20-90a9-3d246a406caf",
        "cursor": {
          "ref": "ef1cd323-967e-4214-bf0a-536a82f3f1ed",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f9c499c8-33c3-4dee-aba9-9ff5a5b7be7f"
        },
        "item": {
          "id": "52064fb8-f899-4f20-90a9-3d246a406caf",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b40ddfaa-2b44-4abc-9f00-c1c2acfa7e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380ede48-70fe-41d4-926a-d4a04ee81159",
        "cursor": {
          "ref": "c6e5aa57-0f48-4ce1-9f0f-9aa860c96e8e",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "02ae5afd-b406-4256-a51a-7d125ca66e73"
        },
        "item": {
          "id": "380ede48-70fe-41d4-926a-d4a04ee81159",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "88344c94-550d-47a7-af27-5f96614737fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ebf46d-2c94-4de5-b0f0-2d5fa0fbff60",
        "cursor": {
          "ref": "4934915b-58c2-4b65-99df-894658ce53db",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6e9dccf7-07ed-46f4-bb5a-d5482fb8fb52"
        },
        "item": {
          "id": "93ebf46d-2c94-4de5-b0f0-2d5fa0fbff60",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1102a5a4-952d-4f2a-8583-54a59f0fba76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fdfa45c-43f2-4b6a-8932-ad504fd4cd74",
        "cursor": {
          "ref": "81d16b46-5395-4cff-938e-d210c080a051",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "94587e2c-11a9-4963-8b2a-a539221fb2c7"
        },
        "item": {
          "id": "1fdfa45c-43f2-4b6a-8932-ad504fd4cd74",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "97982169-4fb3-4a1f-a03d-9e8da002eeb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9d093b-4c16-45b3-bdae-5711bf93bd1b",
        "cursor": {
          "ref": "38202d52-f0d7-4c5b-89a8-12e48469b0a8",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "695c1c6e-de83-4b84-8280-79ec5579245f"
        },
        "item": {
          "id": "ce9d093b-4c16-45b3-bdae-5711bf93bd1b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5ea5ba0d-3c0b-4990-933d-f49ee1312356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7462eb1e-fad8-4b30-98ec-acdd7ef9544b",
        "cursor": {
          "ref": "bab1a021-6972-484c-a633-1923876370b8",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "fbe2653c-2020-47b0-aa39-3e7cb8c837f7"
        },
        "item": {
          "id": "7462eb1e-fad8-4b30-98ec-acdd7ef9544b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "505f556f-7e94-4e8f-8028-820c27f862a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad482fa-33d6-456d-a8e8-b143721f6d78",
        "cursor": {
          "ref": "57458020-1cde-4d68-aa3e-2f939b28c8bc",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c76d9ab0-318d-4b7d-8298-4af537ac98c2"
        },
        "item": {
          "id": "7ad482fa-33d6-456d-a8e8-b143721f6d78",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "722f6827-a8a4-4cb7-9f22-a28d4d9e246f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad03d7b-fc63-432b-83b2-09cafe568a61",
        "cursor": {
          "ref": "29a913b1-b510-460f-9989-a54207655d0f",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "de9e27d2-e128-4d14-895a-d1c8fefc69d8"
        },
        "item": {
          "id": "aad03d7b-fc63-432b-83b2-09cafe568a61",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "56c7af0f-e45c-4627-b692-27247e6d18d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7672fa91-18b2-4ce5-bd53-360b93f67e5c",
        "cursor": {
          "ref": "256e9b37-b838-451d-a0b6-2245b70161c0",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "061a28de-306c-49f6-91d8-b749683bc423"
        },
        "item": {
          "id": "7672fa91-18b2-4ce5-bd53-360b93f67e5c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "75bbec07-cc11-442d-b305-40a1c7ec62f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512401de-11a6-4a25-9fb0-8979d7716994",
        "cursor": {
          "ref": "cb425d73-89ae-4305-8326-e8fb3ee3cdda",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a86360dd-b4d2-4cec-9ba5-362c419c5b1a"
        },
        "item": {
          "id": "512401de-11a6-4a25-9fb0-8979d7716994",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9ce65ccb-8995-420c-b323-ccc192a2c83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7fafc99-8d5f-422d-a42b-e5081a265573",
        "cursor": {
          "ref": "5e462a77-d76b-4058-af05-c387dcb6a831",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0652c9e1-4ef5-4170-9e71-8866ae56cb4e"
        },
        "item": {
          "id": "e7fafc99-8d5f-422d-a42b-e5081a265573",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a687a6de-fa79-43c1-bb2c-f34dc5846700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40ef6cf-ae79-4a28-abea-d917e3396803",
        "cursor": {
          "ref": "7f3e2c84-fdea-48a7-82f8-81b5f5e3c32e",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5128f3e7-37dd-48a0-8b54-8597f6c077ff"
        },
        "item": {
          "id": "e40ef6cf-ae79-4a28-abea-d917e3396803",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "76e8900a-920a-403a-b60d-f9f18bfb003a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d307ac8-c309-4fc1-b61f-ea5b08c63d76",
        "cursor": {
          "ref": "6a4a916b-6b71-4c97-9f37-e4e78473e0c7",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d24f0603-6714-4171-81ca-8da0db614231"
        },
        "item": {
          "id": "2d307ac8-c309-4fc1-b61f-ea5b08c63d76",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4e72510f-08e5-4453-9c50-8945f71bcdb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58780a28-d720-4ef4-af52-f47df0be4565",
        "cursor": {
          "ref": "ca1547b2-1925-4302-ac38-3fd87e4871dc",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e7154eee-c8ff-4d08-8e37-5e298d98fbba"
        },
        "item": {
          "id": "58780a28-d720-4ef4-af52-f47df0be4565",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f60923ff-e3a0-47b6-bea4-33aad4259e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66811a10-f0d9-4195-b3a7-1d349c2ed4b0",
        "cursor": {
          "ref": "3c9dc1db-20e7-43a3-ba0a-9ed72ee27ec3",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "bf91a8e3-21f4-4a0f-a965-f9253992fc6e"
        },
        "item": {
          "id": "66811a10-f0d9-4195-b3a7-1d349c2ed4b0",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8bfec47c-0de6-4f50-99c9-044131b455ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62ba63d-1f36-4330-bccf-e42b8a00fc18",
        "cursor": {
          "ref": "548612f1-64fd-4538-b4f5-51e8a1066de3",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "55aa9093-df92-4c53-803b-dcb5b2572c6a"
        },
        "item": {
          "id": "e62ba63d-1f36-4330-bccf-e42b8a00fc18",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "999bbecb-5dbd-43d0-aafc-3c03f5d438c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a4501b-efdb-4b6c-ab52-e1dac870b567",
        "cursor": {
          "ref": "230fd3b1-a2f4-4d6e-85dd-dd3dcc231b6c",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0132e47c-3918-4301-a9e2-aa99687740dc"
        },
        "item": {
          "id": "a8a4501b-efdb-4b6c-ab52-e1dac870b567",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d2c72107-f350-48b2-a47b-874f892c26e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f1abb2-6fd9-4f3b-9c7b-99257486fd3f",
        "cursor": {
          "ref": "548eb76d-2d26-4b14-bbab-20b650a9363c",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8b969297-caf7-47e2-bb32-56bfe7fc47bd"
        },
        "item": {
          "id": "64f1abb2-6fd9-4f3b-9c7b-99257486fd3f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "09da9d48-d326-4ddb-a299-092db0f8d5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24408255-33f0-400c-b48c-716a445dabcb",
        "cursor": {
          "ref": "edf45619-e644-416b-86c0-4ba1c9927fcc",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "29af3274-5921-4e99-b06e-84006519a50f"
        },
        "item": {
          "id": "24408255-33f0-400c-b48c-716a445dabcb",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "717103fd-d19c-4bf3-845d-70c02b8c9a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7a5263-9316-4b98-8e3e-d8e238bc1b15",
        "cursor": {
          "ref": "2950869b-6840-4bf9-ab98-24922376a2c5",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "48dc1dc9-7283-42d1-ae68-5a4a6712e1b6"
        },
        "item": {
          "id": "2d7a5263-9316-4b98-8e3e-d8e238bc1b15",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "371c69a9-fc28-4c5e-b843-862247a7d786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "26198688-d9c0-4073-8d53-23a9d5f18a34",
        "cursor": {
          "ref": "abae1c63-404d-4edb-9ad0-3cb43b4c28c1",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "38c4c574-749e-4f28-9096-becf73add370"
        },
        "item": {
          "id": "26198688-d9c0-4073-8d53-23a9d5f18a34",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a60ec027-41ed-4f03-bc17-c91b1a5d7dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "c9bef79b-e412-4eef-9b65-a308ebad67aa",
        "cursor": {
          "ref": "c4f1de01-4690-4fb0-b351-65f24eb7c710",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b8942528-5de6-44fc-966a-5a75fe49ef66"
        },
        "item": {
          "id": "c9bef79b-e412-4eef-9b65-a308ebad67aa",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1343f8de-1407-4970-9fc2-439554ec4018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "a08c0bfd-7491-453e-8ed4-df348634cee2",
        "cursor": {
          "ref": "05845f79-d3c5-4522-b9de-e50d9d2c7c60",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "fb9f5a60-75e4-40d9-b4ac-40dca4d8b507"
        },
        "item": {
          "id": "a08c0bfd-7491-453e-8ed4-df348634cee2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7238fa8b-5fa6-4ae3-bc01-c0da5b81cd7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "e8a6996e-8efe-4c73-8e1b-0be619a8f6e5",
        "cursor": {
          "ref": "eed8cfd1-635b-4de3-98cb-828c2e14912b",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c5d31719-e86d-4380-b61f-30f668bddad2"
        },
        "item": {
          "id": "e8a6996e-8efe-4c73-8e1b-0be619a8f6e5",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9c00ad87-0be3-47b0-b346-82584810d43a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "6220e0da-4f91-4fea-9929-f8d7cf768565",
        "cursor": {
          "ref": "bb7455ea-fa65-4fd5-afef-4add6027845e",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6440732e-bb17-4f06-8093-6f1b658537fe"
        },
        "item": {
          "id": "6220e0da-4f91-4fea-9929-f8d7cf768565",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "65cf8470-adc5-452a-803a-c660f0fd19ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "0c72801d-dec8-4e26-afed-ee3c6e3ea29b",
        "cursor": {
          "ref": "b1461877-ddeb-4734-b08d-a8a4b4868fe9",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b99f90f7-5983-4a22-a3e7-eebe1787d328"
        },
        "item": {
          "id": "0c72801d-dec8-4e26-afed-ee3c6e3ea29b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "aba5a2ba-fb90-460d-994f-ef664a17101d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "dcbe05eb-7729-4077-9e77-dcceb455e87d",
        "cursor": {
          "ref": "c7f41bd3-ea12-4d02-abda-e70194bcc1ae",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1c6a920b-2e91-4128-a59b-1ad4e1227ef2"
        },
        "item": {
          "id": "dcbe05eb-7729-4077-9e77-dcceb455e87d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "326d9f70-601b-4a0d-9a91-d93585112eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58925ee-12a0-400a-809c-ccb7b82dcee4",
        "cursor": {
          "ref": "6f614ab4-402f-4cc9-bff0-573a9b823f84",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4f56be84-cf55-4e88-b2fd-5604e5c05785"
        },
        "item": {
          "id": "d58925ee-12a0-400a-809c-ccb7b82dcee4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "334ab8e1-df07-451b-89c2-fcf1a8d6f6fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0b20b2-68bc-48ae-b2c8-4f364e60c13a",
        "cursor": {
          "ref": "83bf0c89-cb11-4e4c-9804-d3602702b3d4",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b22aa4d5-b57c-4586-910b-b5259d68dbb6"
        },
        "item": {
          "id": "9e0b20b2-68bc-48ae-b2c8-4f364e60c13a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b3d7c0e2-e6c9-44e8-9ce9-ef8df0aa231c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09560c62-c55a-41ed-8dbf-c4ea970705e0",
        "cursor": {
          "ref": "7a1486f1-f98e-4b5d-88fc-34e93c3d1ea0",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c152defb-0b06-4896-8986-daf703093568"
        },
        "item": {
          "id": "09560c62-c55a-41ed-8dbf-c4ea970705e0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "76015d1f-de4b-406e-9a28-45a802e64c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfdce621-de57-46b5-a392-c1668e960723",
        "cursor": {
          "ref": "54943cbd-393d-4235-b9d6-9676c7a8455d",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d53fd21d-e5a1-4fba-95ab-f61a9da56c0b"
        },
        "item": {
          "id": "bfdce621-de57-46b5-a392-c1668e960723",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "aa03dbc0-4ae2-44e7-a5f8-3cc954870f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b573303-d4e1-4eab-9535-5a383452e641",
        "cursor": {
          "ref": "772263ce-6a64-4dd9-b017-1bd09aee0e8c",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "bf67eb2a-8a9e-432e-847e-f467de7e305b"
        },
        "item": {
          "id": "0b573303-d4e1-4eab-9535-5a383452e641",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1b817b02-0dbc-4024-8f82-4c72ca322780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9708c9b-0b2b-4b8d-a3ba-eeeeb0675aec",
        "cursor": {
          "ref": "55e42920-09d7-4f05-9c40-5bebf667694d",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ee82c107-1a9d-403e-8583-149354f54e2e"
        },
        "item": {
          "id": "a9708c9b-0b2b-4b8d-a3ba-eeeeb0675aec",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e658e724-6f72-469d-ab9d-949073944c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c911dd2b-9adb-461f-b11b-90cc1316f4dc",
        "cursor": {
          "ref": "ea6010d2-0af8-4e27-a67d-71a183ec6d80",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "af9bc36e-2c3b-4441-9b0a-d358ee226b40"
        },
        "item": {
          "id": "c911dd2b-9adb-461f-b11b-90cc1316f4dc",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3f43f871-c3b1-46bb-ae82-b28ff2cccade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47eedccc-ad62-4fc8-b217-00fc0e42386c",
        "cursor": {
          "ref": "fe9e540e-e81f-4d21-bae1-be3a36c0867a",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3d702d1b-30d4-48ae-a8e3-f39b110d6dfa"
        },
        "item": {
          "id": "47eedccc-ad62-4fc8-b217-00fc0e42386c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5e1b7a5a-eda2-4410-8cb1-4be5ac819a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e086c0-a7eb-4a02-b38e-1ddf2a0f852f",
        "cursor": {
          "ref": "c9f1d610-e35f-4a78-bea7-a20ba8c614e1",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "837bd54f-f51e-4481-a383-5bcdea095999"
        },
        "item": {
          "id": "32e086c0-a7eb-4a02-b38e-1ddf2a0f852f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f22c28ca-cdc4-403b-b051-534e2bf08f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d29b07-31a5-4cf6-8d3b-952aa26cd939",
        "cursor": {
          "ref": "5d673857-ee05-4a86-8202-46d625019eb8",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1304bc4b-f063-4bdc-8613-2417a664af61"
        },
        "item": {
          "id": "19d29b07-31a5-4cf6-8d3b-952aa26cd939",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "00117304-71cc-4642-9b7a-adb183b450c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8c6b79-a2ea-468f-a8f7-f94663bdb64a",
        "cursor": {
          "ref": "3d751221-c0c9-4bdc-97b7-bb330281aad5",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "56a2f6e7-6d8c-4b80-97c7-38a887bdb823"
        },
        "item": {
          "id": "ce8c6b79-a2ea-468f-a8f7-f94663bdb64a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "14b3ec55-733e-46a3-b3de-18313e228f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335df7dd-40cb-4d41-93bb-98815dc2e91b",
        "cursor": {
          "ref": "b1399df5-3194-4790-ade1-d7e5d433b91c",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1bdb4305-83fd-4717-b960-42ea411ce1cc"
        },
        "item": {
          "id": "335df7dd-40cb-4d41-93bb-98815dc2e91b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9697776a-0852-41cf-8342-ed0c0e02b960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b81da7b-4e1e-4730-b897-6799fce703ce",
        "cursor": {
          "ref": "ea996ed5-1c69-4f27-8f67-ac10296ce531",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c52d0537-4dd4-4cc4-9451-00d714206ddb"
        },
        "item": {
          "id": "4b81da7b-4e1e-4730-b897-6799fce703ce",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "102c0f65-9f0f-4929-b955-f1384705d783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ca9952-f181-42b8-a638-4556e7ebaa68",
        "cursor": {
          "ref": "4939be62-aeee-4940-bc7d-ffaa70e5f4d4",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7818d716-7369-44df-b415-dafcd5530247"
        },
        "item": {
          "id": "91ca9952-f181-42b8-a638-4556e7ebaa68",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "cdd8e2f8-2fd3-4018-a440-27d8f4e8cd67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50cbfab8-9846-4635-b55b-952222570190",
        "cursor": {
          "ref": "456d57eb-999b-4fe2-97a5-f4681bc62784",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d62dd2ce-0faa-43af-90a0-093909f8d02a"
        },
        "item": {
          "id": "50cbfab8-9846-4635-b55b-952222570190",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9412f82e-f1e0-43b4-b8bb-18d604d52137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b04865-1d0c-4d24-b890-fe8840cfed70",
        "cursor": {
          "ref": "83b335ce-8084-47b4-b953-5f9bf5be1413",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "81b0f4a6-2c5a-4d51-9ed5-d377984a8c23"
        },
        "item": {
          "id": "18b04865-1d0c-4d24-b890-fe8840cfed70",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "dc180d06-af80-4323-980e-a0cea3b4f18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a70dfe-4acc-4401-a233-852c5b5fbd77",
        "cursor": {
          "ref": "f75d7ff2-3ce9-42f5-8a6d-6ee94fe19af8",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c7562f7b-35d8-4595-84ad-e9c1fb2558b2"
        },
        "item": {
          "id": "20a70dfe-4acc-4401-a233-852c5b5fbd77",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a33482e8-08c7-4a65-b0c8-2703cda37118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e83655-a38a-4e77-8c62-c3ff1a1c57d8",
        "cursor": {
          "ref": "c4cb8cb9-3f0c-4fa6-89c3-2252fd76396c",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3a00bc48-9b76-4fb6-9b44-e732aae93401"
        },
        "item": {
          "id": "57e83655-a38a-4e77-8c62-c3ff1a1c57d8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3b946310-85c9-4371-81b0-0d6bf7b06bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6788adf9-b0a7-452d-a88d-592a96b6be37",
        "cursor": {
          "ref": "cb583691-19a9-4ba3-b769-301c0e15861c",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d59e44a8-570d-4c12-887a-c6c4767cb3b8"
        },
        "item": {
          "id": "6788adf9-b0a7-452d-a88d-592a96b6be37",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6b0604dc-e7b7-4b06-a51c-0ef74883ad5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae9a5c0-bdcb-40f1-b9be-fc626e96e2ae",
        "cursor": {
          "ref": "ae1a225e-5438-49cb-8eb8-17b99ee0a4e1",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2621dc9b-7931-4a81-a181-cc39940af09e"
        },
        "item": {
          "id": "4ae9a5c0-bdcb-40f1-b9be-fc626e96e2ae",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b364afd6-9425-498d-8f11-d2909f1165bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f1abfb-a235-4268-a0a9-1895835b4188",
        "cursor": {
          "ref": "c62a1857-61b2-469c-b19e-9e8f8ef4f6fc",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "52b6782d-9771-4670-9960-2cf2c16d45ff"
        },
        "item": {
          "id": "08f1abfb-a235-4268-a0a9-1895835b4188",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7c2f11c8-edd4-4494-8185-aaf93a1e58d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc91553-25bc-48e3-89b5-f13a6394f8ba",
        "cursor": {
          "ref": "bccedf64-d000-4e2b-b66e-62c99bebae05",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "127fd5a9-a208-4f9e-8274-bcfef8163531"
        },
        "item": {
          "id": "ffc91553-25bc-48e3-89b5-f13a6394f8ba",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "79f2f634-48e9-45cc-bf36-3a48806e5e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895f18e1-b63f-46df-9e17-ce20f55b165b",
        "cursor": {
          "ref": "a968365e-02f5-47df-b485-0cf8d3539bc8",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "764f7de9-10de-4036-991a-8184fadbf895"
        },
        "item": {
          "id": "895f18e1-b63f-46df-9e17-ce20f55b165b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f45dc114-8411-41db-bb0a-440efcbd9105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a616d2-d234-4b31-8717-16f4d61d241d",
        "cursor": {
          "ref": "d007289f-665c-49ee-82eb-5d92ef1d98e9",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5a728bbf-f8f9-453e-bd53-15d2192ec647"
        },
        "item": {
          "id": "04a616d2-d234-4b31-8717-16f4d61d241d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cad53d99-ad98-4a08-bb87-88899cdcb41a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830e0109-7a09-4695-a4a3-b8e15c746fc4",
        "cursor": {
          "ref": "6b7d4e16-9666-4b71-8fea-cf1a8b1bb1b6",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "55d1d6a4-4aa7-49c9-8249-da050c22ed66"
        },
        "item": {
          "id": "830e0109-7a09-4695-a4a3-b8e15c746fc4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cdcaeadd-b165-441c-b069-8339beb3d3b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980e7e87-02e1-43cb-a9ad-c763a86053d1",
        "cursor": {
          "ref": "12e4696d-d794-44d0-9d7a-34742f12aa42",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "aa9e0c90-96ef-44cf-aa1a-48555c56278b"
        },
        "item": {
          "id": "980e7e87-02e1-43cb-a9ad-c763a86053d1",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "db0bac3c-6a51-418d-8ada-b8ffef93cbb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c76845-59f7-4a1e-8439-d94568d2c972",
        "cursor": {
          "ref": "43153c11-74f2-4131-b699-4b3dcc8a0b73",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a0abd0af-efe6-430c-8b43-d0febd70cd5b"
        },
        "item": {
          "id": "f9c76845-59f7-4a1e-8439-d94568d2c972",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "905daf26-1c73-4296-a774-8c994dd94839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743eec0c-2201-499d-a158-9a210e3592a0",
        "cursor": {
          "ref": "a2f87b3b-4309-4d0a-99ca-e57b93c73fe1",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "60ee760f-ac4f-4346-aded-f1c7af6085ba"
        },
        "item": {
          "id": "743eec0c-2201-499d-a158-9a210e3592a0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "82182d8b-e53b-470d-b1db-8e3d7cf14236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0474e18-511e-4451-b3de-fd227f433bad",
        "cursor": {
          "ref": "0ecbe146-b5ea-4d62-bb16-508cea09073a",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6c9f377c-450a-48bd-9914-aeead4890ce6"
        },
        "item": {
          "id": "e0474e18-511e-4451-b3de-fd227f433bad",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b9304de2-9da4-448b-8b7d-28bb877b43c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c2367f-975b-4df4-8b26-748b537715a9",
        "cursor": {
          "ref": "13a56368-a60a-45b4-8ea3-08d939ef95af",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "68d85cb7-f8ca-4126-8065-767bc3fd059d"
        },
        "item": {
          "id": "c6c2367f-975b-4df4-8b26-748b537715a9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cfcfad48-63bb-43d2-b4d3-1ea7b9e7fffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acec5421-ac77-4c14-b47c-8bb9cf0de44b",
        "cursor": {
          "ref": "6a8d7917-3766-4049-a293-90b060a48e11",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0517cf90-7934-4edc-bab0-e04266d7ad1b"
        },
        "item": {
          "id": "acec5421-ac77-4c14-b47c-8bb9cf0de44b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e5aa4e07-2a8a-4311-8dfb-34aafcb8c500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e61b04-fa1e-4b50-9506-71539e0d1dcb",
        "cursor": {
          "ref": "494a8d76-d1f0-41fd-ab3c-d8fc134685f5",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "73d83d11-f9c5-4300-9fa3-e33f52971f03"
        },
        "item": {
          "id": "d5e61b04-fa1e-4b50-9506-71539e0d1dcb",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2e7210ed-2a84-4d0c-898b-29d479702b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73dc244b-dacc-4725-adef-9cbb3a5e66f7",
        "cursor": {
          "ref": "62314d98-ee4a-42a7-9fe3-489a0085f761",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9795d8c6-5f3c-4534-a217-4b0924d0cb7b"
        },
        "item": {
          "id": "73dc244b-dacc-4725-adef-9cbb3a5e66f7",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6d8d658f-70e7-4f6b-9f5f-9f9d1a056368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e734632-3c5b-4453-b085-78e44c8188d1",
        "cursor": {
          "ref": "c48ccf01-78a1-4f1f-b4d9-80dc496ff3da",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3c43d068-42f0-409f-92b5-5d289ea98e52"
        },
        "item": {
          "id": "7e734632-3c5b-4453-b085-78e44c8188d1",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c34acdc4-0806-4495-8058-8660870b21d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be1f8f5-a1c8-4de5-9836-6b23f5e50958",
        "cursor": {
          "ref": "3aa66679-9127-417e-8e8a-13b24186f42d",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2646a7fb-40c4-4c11-9e5b-6cf07c0c1988"
        },
        "item": {
          "id": "2be1f8f5-a1c8-4de5-9836-6b23f5e50958",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7301a2ad-82e4-4e12-b524-dc247eba830b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d7c963-035f-4505-ad75-b8d3d878bf4b",
        "cursor": {
          "ref": "b5a63b97-52bf-4c14-8426-81bd858d0ba0",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "33374380-e2f0-4c0b-a6cb-8f92057469a5"
        },
        "item": {
          "id": "f7d7c963-035f-4505-ad75-b8d3d878bf4b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9141b19c-7e32-413e-b6ce-c3103c0f3185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c7cb24-27fb-4dab-9424-699aa3abd481",
        "cursor": {
          "ref": "5e7e9971-0efe-42ca-a2bb-4d978f903a74",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "92634535-7a3a-42a3-82e5-ac2cd732cb3a"
        },
        "item": {
          "id": "f7c7cb24-27fb-4dab-9424-699aa3abd481",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "06681d67-635f-43bf-8e8c-ddcdcfec3c4e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750a7779-fcea-46d5-aad8-3e8bd200cd70",
        "cursor": {
          "ref": "5670a215-928e-452b-b327-39f3c2fc293e",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a96149b4-3787-418b-955d-2a2039e9599b"
        },
        "item": {
          "id": "750a7779-fcea-46d5-aad8-3e8bd200cd70",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "af942266-73ef-4472-9e21-9029132102a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abcc38eb-93f0-4dab-acd8-7ecea7f90fb1",
        "cursor": {
          "ref": "28594266-017d-43e8-a757-2873b30733cf",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "dd674a04-6110-4ce4-9c1f-615601417583"
        },
        "item": {
          "id": "abcc38eb-93f0-4dab-acd8-7ecea7f90fb1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "78f23c28-dd9c-4022-bed1-5ef63b33f1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86882fbe-3a9b-4665-af95-b3a9cee20905",
        "cursor": {
          "ref": "92d8ef8c-bb14-4328-9e43-440183348638",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "62658401-194c-4bdc-ac60-e7923f31e63f"
        },
        "item": {
          "id": "86882fbe-3a9b-4665-af95-b3a9cee20905",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "959a5fa0-9375-406c-a909-6d5c38b45298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b11e9d-cb68-4b6e-a1ad-206de490f3b0",
        "cursor": {
          "ref": "9415d3b7-cc15-4903-9e59-7b7a76a8947c",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8883335b-1c02-4a0f-a4a6-3a850e2e6263"
        },
        "item": {
          "id": "c1b11e9d-cb68-4b6e-a1ad-206de490f3b0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "daa950c4-4e4f-44f7-99b5-0dcf6e9ad556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7337b8-9c9c-4121-9b52-e3f740ef6884",
        "cursor": {
          "ref": "dbdf4b10-1f00-445e-b6bf-f4c5a6a0f77f",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8d44e6b7-ae81-4e15-94b7-61b8d07166cd"
        },
        "item": {
          "id": "ce7337b8-9c9c-4121-9b52-e3f740ef6884",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "272e728b-0d72-4f32-bb88-b18f857f1fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c331de9-10ea-4e38-a5c9-b486cbb1ef4d",
        "cursor": {
          "ref": "aab70385-f749-40ba-8ce8-3cb41b956169",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e0d71a61-f267-4360-bd44-dfb619c4bfc4"
        },
        "item": {
          "id": "1c331de9-10ea-4e38-a5c9-b486cbb1ef4d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b92226e6-255d-4ed6-ab2c-826282543d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4cef4b8-5e9d-473e-9044-d4ad28fcbee2",
        "cursor": {
          "ref": "eb81d5fc-8cc3-4eaa-afb6-f640def7b767",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b74e787f-178c-49ec-a2de-4453f82e40ab"
        },
        "item": {
          "id": "b4cef4b8-5e9d-473e-9044-d4ad28fcbee2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f975ad2c-8981-487d-84f3-ddfbe01328b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d360f16-fecb-409f-a79c-a15856407dc6",
        "cursor": {
          "ref": "7a9223a2-5b93-402b-a46e-e6fac57b7017",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5bad1d73-1fc6-4a6c-a003-202b543e8ff6"
        },
        "item": {
          "id": "3d360f16-fecb-409f-a79c-a15856407dc6",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6e5f8c12-104b-4174-9acd-56a5c21f14f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39bdca30-1bf5-4d61-b904-01b99fb0c88e",
        "cursor": {
          "ref": "3ee1ab1f-564b-406d-b965-acd2c6b15ca1",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "697c39ef-790c-4fc2-af0e-aeeeadcff462"
        },
        "item": {
          "id": "39bdca30-1bf5-4d61-b904-01b99fb0c88e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1ca7967c-56ff-439d-bfba-965d932f2610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45ff1ab-91d7-4735-a97a-ae94a141376c",
        "cursor": {
          "ref": "3267a42f-c505-44c1-a37d-d631d4740542",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "16f08e9f-653c-436f-827c-70c6b4878adb"
        },
        "item": {
          "id": "d45ff1ab-91d7-4735-a97a-ae94a141376c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e8d8b741-c3c6-494f-8915-30b2311ae995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee347119-3b5b-4445-9430-8b041753c1ea",
        "cursor": {
          "ref": "e232bf7d-3e0e-4b7d-8de5-9f0af4304135",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9972a4a9-9988-4d43-a352-659c7177f4af"
        },
        "item": {
          "id": "ee347119-3b5b-4445-9430-8b041753c1ea",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5a3fbc8a-231e-49c4-b900-181980362f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8898bfe4-9d04-406c-8803-f85ff7976935",
        "cursor": {
          "ref": "312c1c77-d76d-45a3-9ffb-7c959ab610da",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2d4799d5-b90b-49a5-bcfd-6d7552ea4fd8"
        },
        "item": {
          "id": "8898bfe4-9d04-406c-8803-f85ff7976935",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c6dcd5a2-0713-4b0b-accf-5222dc4b6aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60cc9bb5-6e2d-49a0-b18d-bf60644572b2",
        "cursor": {
          "ref": "e6927733-2d48-4034-8376-d665bd20f4a0",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "535ee008-05a5-43bf-96f1-b887168d2eb0"
        },
        "item": {
          "id": "60cc9bb5-6e2d-49a0-b18d-bf60644572b2",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d3fabb35-8389-41aa-b8ca-dff0d02ee443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6077b691-8d82-45cd-9280-c2bb9309b892",
        "cursor": {
          "ref": "54599f30-79aa-48d0-953c-8760c363c363",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4c9095da-1d20-4041-9412-9dc580d502ad"
        },
        "item": {
          "id": "6077b691-8d82-45cd-9280-c2bb9309b892",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2f9d1e71-1600-43e9-b5b9-3085a11dd8de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc147f89-3249-4322-92cf-3b395c61f5db",
        "cursor": {
          "ref": "06d9ac70-1e5c-4c6c-ae7f-58d29850f7f6",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d3fdf2ab-07dd-4e96-903e-a80048d8fa54"
        },
        "item": {
          "id": "dc147f89-3249-4322-92cf-3b395c61f5db",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "28232853-6c59-49a9-8012-e0884b81874f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9495b7-9fdf-4343-9df0-89ae85b4835e",
        "cursor": {
          "ref": "e672e66b-cf16-4437-b4b5-58807ca3697e",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "79cede79-36a0-41aa-8698-b912a1484ee6"
        },
        "item": {
          "id": "ac9495b7-9fdf-4343-9df0-89ae85b4835e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "05900c9f-1129-4ef4-99d7-d9007e9f2edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4985c0ed-a57f-41d8-9a4b-6d7d5db5e19c",
        "cursor": {
          "ref": "cb34e96a-f256-4b8a-b770-17e610ca595e",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9c85cc0c-822c-4a7b-9ecd-24386dfec5e8"
        },
        "item": {
          "id": "4985c0ed-a57f-41d8-9a4b-6d7d5db5e19c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7a200f2c-1c93-41ef-bb5f-a0c095c6582f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194d6507-dbc2-475f-8679-eb7a8fc4d544",
        "cursor": {
          "ref": "91abae28-750a-4e83-bc69-3e2eac0596f6",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6820a7eb-b661-4ffd-934f-b05ae3494272"
        },
        "item": {
          "id": "194d6507-dbc2-475f-8679-eb7a8fc4d544",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "17861901-a3bb-4a06-92f6-78525a502d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb2991f5-db92-416c-b6f8-39fd24e14e14",
        "cursor": {
          "ref": "ed82b792-c0e8-4b84-9336-7855f44bba52",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8ce27999-d721-43ca-9893-aaf2cc8c31ae"
        },
        "item": {
          "id": "fb2991f5-db92-416c-b6f8-39fd24e14e14",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2f6490f6-55b5-4d83-b92c-4d0be5a48d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc8ebe8-9911-481d-8d35-f6020d742de3",
        "cursor": {
          "ref": "8d0f1037-5364-475a-b06f-58ebcb3d3a24",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6a70b8f1-b22a-404e-b050-7f9af38a8dd5"
        },
        "item": {
          "id": "6dc8ebe8-9911-481d-8d35-f6020d742de3",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "35fc2670-6992-4fa3-be04-af154ed132af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6425ea-dd0d-48ff-995a-2fa3ce4097de",
        "cursor": {
          "ref": "b27e13d0-7f6b-489a-bcee-cce18a67864d",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4adf3c66-64f5-4a74-869f-35a638876e68"
        },
        "item": {
          "id": "1a6425ea-dd0d-48ff-995a-2fa3ce4097de",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0d606758-ab78-4225-a95b-961276d41daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557ba034-0e1e-41d5-9d39-f137b651d431",
        "cursor": {
          "ref": "2d1ec6aa-2a96-4437-a170-ac6e34c9641c",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "51de6e86-e13b-48a3-8573-e7a74e5ffcd3"
        },
        "item": {
          "id": "557ba034-0e1e-41d5-9d39-f137b651d431",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9e339305-0b3e-475e-b46e-457a241c07d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78708a27-ff89-4f6c-a251-18d4a749f2a3",
        "cursor": {
          "ref": "4c37203d-e024-47be-9d9c-1c52fffe24e9",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e57cfc1a-5e4b-401e-8268-6e091340bc88"
        },
        "item": {
          "id": "78708a27-ff89-4f6c-a251-18d4a749f2a3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d354625a-91c1-4533-801a-24aa22a1ea35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b4501d-dee8-4967-9b23-05e1e3e021c3",
        "cursor": {
          "ref": "c0117cf8-56ed-4e7b-aafe-66dd5695b59f",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c36442a7-0e4c-4a43-b1a7-f70aca70079a"
        },
        "item": {
          "id": "21b4501d-dee8-4967-9b23-05e1e3e021c3",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "75754f51-701c-415f-80d3-2bca584fa4d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96294a65-eb57-4f7e-ae20-1baed6bf0999",
        "cursor": {
          "ref": "3662ea41-19fd-49de-bf0e-c6308cd24737",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "dac2c79f-a4cf-478a-8e0f-dbca5ed55a30"
        },
        "item": {
          "id": "96294a65-eb57-4f7e-ae20-1baed6bf0999",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "dcc3b289-96f4-4923-99d9-7280afeb7750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050e41c0-b4a1-4dbc-9d06-42d118f9b95c",
        "cursor": {
          "ref": "a9ba0904-dd4e-4d50-89a8-1e65b3c6cab8",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ea1ab110-88b1-48a6-8439-67c5823ad47e"
        },
        "item": {
          "id": "050e41c0-b4a1-4dbc-9d06-42d118f9b95c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2570fa58-95e2-4394-81a0-8e194e6bee0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9093279-0180-45b1-88ce-96d7cb39ffd7",
        "cursor": {
          "ref": "e23dbdf7-fd6a-41fc-821e-92e211f01af6",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4b9ba798-2c40-432f-a16e-d266160a275a"
        },
        "item": {
          "id": "d9093279-0180-45b1-88ce-96d7cb39ffd7",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "72cc9718-952a-4569-99e6-8b8d8a7bc3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27880e0-f1cd-4ee9-9783-6f62db805d5f",
        "cursor": {
          "ref": "fb1da2b7-1a13-4895-9220-23e2f6b1e117",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "285e469f-e33a-4a88-bfe2-b0224a495dfe"
        },
        "item": {
          "id": "b27880e0-f1cd-4ee9-9783-6f62db805d5f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9a7aed23-60b7-4e1c-a84c-41bb738b9504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc4d0a2-ce3d-480a-9921-50781680cbf5",
        "cursor": {
          "ref": "77b843b0-05b5-47f0-84e8-7f38a3aef5d0",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "63c98953-3a2b-4bed-9933-dcaac6ccb35f"
        },
        "item": {
          "id": "cdc4d0a2-ce3d-480a-9921-50781680cbf5",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "88ce53b5-189d-413d-b3fa-45d0924b8111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242253e1-aea8-4457-8739-380805c3f50f",
        "cursor": {
          "ref": "b7bc8a58-0357-4666-8455-75edb6c02b04",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "41689fbc-b8dd-4b4b-a331-69d01e9c4e1d"
        },
        "item": {
          "id": "242253e1-aea8-4457-8739-380805c3f50f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "35cccdfc-af45-4ced-8a58-d917598f1df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4136cbc-eda7-4c99-a9ae-03ea4b456520",
        "cursor": {
          "ref": "4fe98596-f39c-4c60-b89f-cf879dc66d7c",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "11ee8997-9c3e-4481-a8f8-1e540d25d7c2"
        },
        "item": {
          "id": "c4136cbc-eda7-4c99-a9ae-03ea4b456520",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1eb6b560-3d3e-48d4-8175-1889694817e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca645777-c10c-4966-ac25-bb55a3d8e95f",
        "cursor": {
          "ref": "46d10286-a96d-41bc-8561-26cc84b95931",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e4bdfd5b-82c7-46df-be5d-a55a9878bbce"
        },
        "item": {
          "id": "ca645777-c10c-4966-ac25-bb55a3d8e95f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3a369f1a-71ca-4136-837b-c7ac15b73272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e541b432-0a46-48f0-a193-f9930f45ab53",
        "cursor": {
          "ref": "1b463157-c4de-4133-ada4-2b7e12920d8a",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f0332436-c0c4-4652-9274-3f1e3a6dc47e"
        },
        "item": {
          "id": "e541b432-0a46-48f0-a193-f9930f45ab53",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "189c5043-0cf9-4359-8202-91aa1ec2e157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a35b34ca-eac1-4421-881b-666d79a59bd9",
        "cursor": {
          "ref": "90050b7d-62af-43fb-b906-628b69e3f58d",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "af062610-1ab1-4195-8722-19ad0ab67b5c"
        },
        "item": {
          "id": "a35b34ca-eac1-4421-881b-666d79a59bd9",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a29bb449-dc95-4db1-82e3-94345ceda1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c9d40c-f37c-410e-b698-145075b3c266",
        "cursor": {
          "ref": "5b43a9ce-e94e-47b9-b729-d08795d62994",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4b9c8dd4-71a0-4a40-9795-efde13025691"
        },
        "item": {
          "id": "f1c9d40c-f37c-410e-b698-145075b3c266",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5d40df80-2cbf-4ee6-adbb-6e3bfc3ba48e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0bdda0-9f00-4b0b-935d-48e03771ba44",
        "cursor": {
          "ref": "f4649d22-16bb-4af6-8241-f835a84f4c00",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f125f5bf-7cf9-47a8-b602-40e12afe46bb"
        },
        "item": {
          "id": "8d0bdda0-9f00-4b0b-935d-48e03771ba44",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "617705a5-9f56-4e80-b8a5-a783b3e57569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4358578b-551d-4231-b06d-7c4c29241244",
        "cursor": {
          "ref": "05f8a0d4-68eb-408d-8194-2f1918df7a5e",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "84b4f3d7-f602-4c75-aa09-cc2cb28e7221"
        },
        "item": {
          "id": "4358578b-551d-4231-b06d-7c4c29241244",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3a134fd0-2e2e-46bf-9032-935fe570b197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd32c47-1ca8-4ab5-bc65-4dcc898326a5",
        "cursor": {
          "ref": "56f8ddf8-b9bc-4f98-8b3f-8d0db3fac66b",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1744bdfc-a685-4b3e-871c-01feff5abc17"
        },
        "item": {
          "id": "8fd32c47-1ca8-4ab5-bc65-4dcc898326a5",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "84324684-de61-4e10-97b0-63d2b1738313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55602090-7c68-4c2a-b309-657ededd1681",
        "cursor": {
          "ref": "c2e4dbdd-6998-4795-8aa2-ff27f8162da2",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d6da4924-465e-4b32-b21d-de5af6291cc0"
        },
        "item": {
          "id": "55602090-7c68-4c2a-b309-657ededd1681",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d606e718-263f-49bc-83c9-3ea0205c559b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e2eba2-322d-45c9-ab81-63f3a13f6eb9",
        "cursor": {
          "ref": "9468b3e0-bc61-49cc-a643-ef0c4e4ac870",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2b44b7d5-6618-4550-b1ea-30ae2bf5ca67"
        },
        "item": {
          "id": "67e2eba2-322d-45c9-ab81-63f3a13f6eb9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2a15eac0-0739-4179-ab7f-3642725d8dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f7ad3c-96a0-4312-990f-68f082fba313",
        "cursor": {
          "ref": "d527419e-af15-4a7d-85ba-ad36cfeac633",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4f0816ca-6a26-4686-846d-b018771bb022"
        },
        "item": {
          "id": "e5f7ad3c-96a0-4312-990f-68f082fba313",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "59a46b24-3da3-43e8-9096-800ed2caff93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861eba26-aac0-4cfc-83e7-115adc168881",
        "cursor": {
          "ref": "4f4a2279-0ba1-4eab-b5f8-cccfef94a599",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a82660f5-53bc-4439-839c-5a58155e7de2"
        },
        "item": {
          "id": "861eba26-aac0-4cfc-83e7-115adc168881",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "487ff042-44cf-40e7-bcaa-d2c68bb29794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c516f3f2-c944-475a-a1e1-17e1aa4b3142",
        "cursor": {
          "ref": "e3fbeef9-52ac-4fdc-bafc-fd12988a3d21",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a3f60264-4653-4922-a483-631f02a490c1"
        },
        "item": {
          "id": "c516f3f2-c944-475a-a1e1-17e1aa4b3142",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e033cfbb-3999-42d8-8d73-0ba7c8d9ddc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fdb5945-dc77-4e2d-8cda-feb0a3e90233",
        "cursor": {
          "ref": "0979712b-5434-4abe-8139-d23d7def026d",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d6cbaea4-740a-4707-8266-fda5f4d275fd"
        },
        "item": {
          "id": "3fdb5945-dc77-4e2d-8cda-feb0a3e90233",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "96dfc5f3-2227-4ff9-8256-a67bd0828f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18482658-4b56-4e7e-a4e3-5ca7f0e55298",
        "cursor": {
          "ref": "b2e8ead7-ebf6-4bf4-af3a-a42faf84e56c",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "eba0f4a5-eaf7-4dd1-a841-3229227deb65"
        },
        "item": {
          "id": "18482658-4b56-4e7e-a4e3-5ca7f0e55298",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "23d8f87f-76e6-4bdc-b719-28d0c5a62b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e57eca-e480-4ca1-920d-6a313afae7ad",
        "cursor": {
          "ref": "99d6bbed-28a1-4d12-97d6-a3cbfbdcc2a3",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "615c47b2-c706-40e2-8147-96857f7f0c12"
        },
        "item": {
          "id": "64e57eca-e480-4ca1-920d-6a313afae7ad",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "efe03425-d93d-4d19-b16d-cefdd48b6288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d393d7b-1397-4074-9864-5fb3e48db3d6",
        "cursor": {
          "ref": "747ef3f1-db5e-4ff7-9c0c-dd67b707a095",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "885c5fe8-faf8-40f3-8c28-60eca919ac28"
        },
        "item": {
          "id": "3d393d7b-1397-4074-9864-5fb3e48db3d6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d32c9522-d636-4ce4-ae97-af6bc377fd72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60fc5c15-2ce1-45c8-88af-9b6044fbe0e1",
        "cursor": {
          "ref": "42552add-2609-4e29-8faf-b62bd30f51d0",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f8c5b000-bb84-4cbc-9f86-dd0335c52422"
        },
        "item": {
          "id": "60fc5c15-2ce1-45c8-88af-9b6044fbe0e1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e5ca720b-28a4-4dad-b902-d746a9f13104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4141e7d9-63a2-41b5-bfcb-c30e3525b6ec",
        "cursor": {
          "ref": "bd5ea9db-c1c5-4259-ae63-14491acaa71f",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "810ce686-cbe1-40ad-9f48-f3757f75fc4a"
        },
        "item": {
          "id": "4141e7d9-63a2-41b5-bfcb-c30e3525b6ec",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2b3826e8-5c54-4479-870e-283c60177ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80c45aa-cedb-40ae-8fa8-d5dd79f04e20",
        "cursor": {
          "ref": "6a365d7a-a487-4904-95c0-4370b249f542",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "89088a72-5a1d-486a-be05-d79b39303a37"
        },
        "item": {
          "id": "f80c45aa-cedb-40ae-8fa8-d5dd79f04e20",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "62ede40f-8223-4e26-9dbe-d7b17b8dc152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050e562f-724e-4ded-9e1d-7a49b8251f5f",
        "cursor": {
          "ref": "73fecaf7-e300-45c1-b5e4-d25f19853eff",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4c2920cf-4798-4ca0-98b8-4275cb68ed29"
        },
        "item": {
          "id": "050e562f-724e-4ded-9e1d-7a49b8251f5f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "49fb9aaa-a126-465f-81c2-27357e4518a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd522c6e-75df-4c8c-8cdc-4ecf0f560c4d",
        "cursor": {
          "ref": "13667f0b-8338-4d73-b0f7-c07c1355e2bc",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "da56ba40-6401-42af-be79-6cade7a687d9"
        },
        "item": {
          "id": "dd522c6e-75df-4c8c-8cdc-4ecf0f560c4d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a5e056d7-5475-4051-a307-02ef1acde705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e3e7dd-646f-4b2a-bf50-b563d73b6a55",
        "cursor": {
          "ref": "cc73de53-1e35-4eca-b22e-03f1ac9c9eac",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "bf2e9f0f-6859-477c-ab16-a5821971c926"
        },
        "item": {
          "id": "15e3e7dd-646f-4b2a-bf50-b563d73b6a55",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b74b30a2-d6fa-4eef-ae51-2889beffd693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7ad96d-78c2-4a01-a1fe-f6403f868eff",
        "cursor": {
          "ref": "caf74fdf-be47-4db4-b527-7c14c0e808b0",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "dfd0a4bb-0e40-4715-af83-477603e96d96"
        },
        "item": {
          "id": "db7ad96d-78c2-4a01-a1fe-f6403f868eff",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "45499ed2-0c5e-4cf2-ae6c-aee065848b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39fc68b-01be-49ea-8bc0-76ad815ba76b",
        "cursor": {
          "ref": "e9a7afce-b81c-440d-9f86-4ac4a6425a6b",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "227f874b-1648-4911-9e25-97ebdad6aee4"
        },
        "item": {
          "id": "e39fc68b-01be-49ea-8bc0-76ad815ba76b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "45b09595-a9d3-4880-9222-86ac3635ae5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b4d207-9654-46d4-bd8c-203c3f87c4c0",
        "cursor": {
          "ref": "740223f0-2224-4193-a54e-652799d8db71",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "3797a402-1be4-4b9a-aeb8-5113ad71f4f4"
        },
        "item": {
          "id": "02b4d207-9654-46d4-bd8c-203c3f87c4c0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "031f35c2-46ef-4ad6-a9b7-df02aeef0f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84426bb8-908b-489e-9d58-cb7b6b77f568",
        "cursor": {
          "ref": "9575ec41-b7a9-47b5-956e-2ce8c70afd8a",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "cfd5a978-4214-4aeb-a728-6f3789649e93"
        },
        "item": {
          "id": "84426bb8-908b-489e-9d58-cb7b6b77f568",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "59cd4f69-c102-45b2-a0a6-91e51c6a0458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1c02f0-6f1a-4500-a3bb-d1c946561115",
        "cursor": {
          "ref": "29ff8a39-a7a1-4607-93f9-590ac5ca120f",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7ee88f68-68d4-4af3-8493-0568df2573b2"
        },
        "item": {
          "id": "eb1c02f0-6f1a-4500-a3bb-d1c946561115",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1b623357-09ff-4491-8012-3e73254bf9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329009ec-7637-49e7-a8e5-751808559c86",
        "cursor": {
          "ref": "893c5276-db77-4839-a418-db008569cb49",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e3cdc353-456f-4425-a861-48d04591f63c"
        },
        "item": {
          "id": "329009ec-7637-49e7-a8e5-751808559c86",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "05865e43-9507-415b-9b83-436ae514b098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4cb2ae-72d3-4124-a290-e566e0e577e1",
        "cursor": {
          "ref": "728b34c0-0d9e-4a51-81fd-a4bcc71b5051",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "03e00771-6135-43a4-946a-f8639bae5436"
        },
        "item": {
          "id": "6e4cb2ae-72d3-4124-a290-e566e0e577e1",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e127e28a-12de-4460-8c85-4b8619ac204a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e18bcdc-4736-4d7e-bca6-db392bef6bcb",
        "cursor": {
          "ref": "3265c1be-81e6-4da3-ad85-bdae0712d394",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a5ddde72-137a-4b21-9465-0177a8e4df42"
        },
        "item": {
          "id": "0e18bcdc-4736-4d7e-bca6-db392bef6bcb",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ef198579-cdb1-4829-9805-b85304682409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e22d898-f5af-4bc4-a305-3503041d3ae4",
        "cursor": {
          "ref": "ebc4b4d8-1556-42d8-8fb6-31ea282ea300",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "501858b3-b2a2-4e95-a1f0-6bb86711964b"
        },
        "item": {
          "id": "1e22d898-f5af-4bc4-a305-3503041d3ae4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "30a65b4a-d46a-455b-9c41-0e15c149dc06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd0bf03-bc8b-4f86-bb08-a860b246eb17",
        "cursor": {
          "ref": "5a15313f-e85f-4fae-a171-1f304f4c9238",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "128427b0-eec6-480f-b9d3-3ef1e8c6cf52"
        },
        "item": {
          "id": "2fd0bf03-bc8b-4f86-bb08-a860b246eb17",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b84c8dd8-f7f1-48be-959e-8f0cf2e2fc5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da953e3-fc43-435a-a999-595ba080d91b",
        "cursor": {
          "ref": "110ef2a8-61fc-4691-92f7-cfc40a972edd",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "af5a771e-0abb-412e-a3d4-a247ab4fcb9f"
        },
        "item": {
          "id": "1da953e3-fc43-435a-a999-595ba080d91b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c6d2f9a7-c27e-4d67-bdea-75e31cab69d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d057c9-a416-41c5-8688-2e7f54e3100a",
        "cursor": {
          "ref": "349ed1d3-f288-449a-9eb6-103c15f11ad3",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1474c966-f379-4ef4-9869-1200eaeb203c"
        },
        "item": {
          "id": "e2d057c9-a416-41c5-8688-2e7f54e3100a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c60ffb6a-175d-43fd-87e3-8fd88313677e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2eb0ec8-9ebd-44c9-9788-970e15a22408",
        "cursor": {
          "ref": "914898bf-80f2-4708-b28d-80c7ecb01199",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9428b96c-4aeb-4bdd-9228-adbc7d21c283"
        },
        "item": {
          "id": "c2eb0ec8-9ebd-44c9-9788-970e15a22408",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ceedcd11-9f9e-4de7-8ad1-5845ba0461b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfacbd85-4b1b-4bd4-8f00-86a3808258fb",
        "cursor": {
          "ref": "95910fe4-c921-4b67-a201-9ed3a05d722b",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ec1bfa48-396f-4baa-8829-0f0bf14b68cf"
        },
        "item": {
          "id": "dfacbd85-4b1b-4bd4-8f00-86a3808258fb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9eb33ef6-9ce3-4e71-8337-6cd0e3d409a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2b484e-fd93-425b-834c-43f09dd61568",
        "cursor": {
          "ref": "d03769ae-676b-42e7-b512-8a7257606057",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "04925769-4fec-400e-bd12-e535aabd4c1c"
        },
        "item": {
          "id": "4a2b484e-fd93-425b-834c-43f09dd61568",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f2eccc56-e1b0-4b01-aea3-9c9230e03568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3252b0-a1bb-4d3f-9bb2-c27034d36119",
        "cursor": {
          "ref": "ee99e6ae-09bf-44d3-ad26-99c962e56c17",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0a137a79-9bda-4804-bf0b-be00137f7c91"
        },
        "item": {
          "id": "4f3252b0-a1bb-4d3f-9bb2-c27034d36119",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c85f6f86-4017-4a69-83b1-1ca773f3c361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46bce64d-7d0e-4189-bcc7-f356a0703518",
        "cursor": {
          "ref": "10dd55f3-fb81-4b2f-92f2-e3fb8d738f49",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0a8da2b7-4240-40c7-bb68-4e9542814395"
        },
        "item": {
          "id": "46bce64d-7d0e-4189-bcc7-f356a0703518",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "47e63b90-07d4-4f13-95ec-74636c040293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe267544-56c3-4f0f-b7b6-6ddf6f1f7d28",
        "cursor": {
          "ref": "3433cd57-c4cc-46ce-8f9d-2511f0a10568",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c45aed83-1ef9-4fa7-9046-b90c8df2ab6c"
        },
        "item": {
          "id": "fe267544-56c3-4f0f-b7b6-6ddf6f1f7d28",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3193226c-415d-43f1-b7a3-0da7ba5d0d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53dbdda-60e6-4cbe-a46c-ddc212d92332",
        "cursor": {
          "ref": "719ecedf-b2e3-4ec8-9f11-d1af3a72bb25",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e3a7a791-e4da-43ae-b5dc-9456305f6ad0"
        },
        "item": {
          "id": "a53dbdda-60e6-4cbe-a46c-ddc212d92332",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "09846ea6-da4e-4610-8c75-ba44c4e21e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11606541-a3e1-4990-91a6-2750a8ad8443",
        "cursor": {
          "ref": "fe1d5090-4da3-4bd1-a98d-5ff4fc72e9e1",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7974d06d-fa0e-4413-a2f6-5f54c79fc09f"
        },
        "item": {
          "id": "11606541-a3e1-4990-91a6-2750a8ad8443",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6eef8ff7-528a-4502-b284-2012191ea82b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100a5f01-7329-4e42-b53e-3f846faaf34c",
        "cursor": {
          "ref": "43a361a2-5671-43e7-98d2-b58767cccb65",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "958f8d47-21b6-458d-a6f3-0efdc7e6c033"
        },
        "item": {
          "id": "100a5f01-7329-4e42-b53e-3f846faaf34c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "140f31c9-d5ea-40a6-92c4-5e487d1cfbf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec6af621-d369-4ddf-b33d-d830a7e0e927",
        "cursor": {
          "ref": "67e719fe-b379-42f2-b050-243ed76f900e",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "58e688d1-a1db-4a8c-9aa6-4a02c61ba488"
        },
        "item": {
          "id": "ec6af621-d369-4ddf-b33d-d830a7e0e927",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f81f6059-001b-4b03-a29c-e01e8b0dc27e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a9ec97-c555-48a9-bb5e-bfc129c17511",
        "cursor": {
          "ref": "22a33e72-28e8-4802-a779-52c0da8ceb8d",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a9e63c4c-07d9-4995-bbff-ed326287e525"
        },
        "item": {
          "id": "43a9ec97-c555-48a9-bb5e-bfc129c17511",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1b40871b-ffa5-4e9c-9126-2148c0d728b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813bfc3b-8776-4937-b1d2-2768dd378b6f",
        "cursor": {
          "ref": "9e4b95ca-ba14-471a-a03e-b08081ecdce1",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3b43355a-ea39-434a-92db-90eee5d94fb7"
        },
        "item": {
          "id": "813bfc3b-8776-4937-b1d2-2768dd378b6f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "aef39d39-c358-4e92-b566-502d9bf3de70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692a2be0-cf49-4898-a8b5-476623df29fd",
        "cursor": {
          "ref": "9a1c9452-7b17-4ec5-917f-8b1279d74078",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "bc5227c0-362a-4d60-9b3a-9362dcf5fd9e"
        },
        "item": {
          "id": "692a2be0-cf49-4898-a8b5-476623df29fd",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c5e335cf-f239-4ff2-ab2a-b1f0341d292d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23acd311-ebce-49ce-943e-5cf1b7732d82",
        "cursor": {
          "ref": "dca2bfb7-9685-4a54-ab9e-27dd9162c81c",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9de4132c-62dd-4c03-8646-062a040eb44f"
        },
        "item": {
          "id": "23acd311-ebce-49ce-943e-5cf1b7732d82",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "fd983930-3b6b-4a0c-bc47-d2e5a8440a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4d664c-14e0-437e-813a-ab167439e794",
        "cursor": {
          "ref": "25556f95-2012-4862-9b2d-dd87befef2fe",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5002489d-8c74-4d35-b876-9b078fdd3240"
        },
        "item": {
          "id": "9d4d664c-14e0-437e-813a-ab167439e794",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b611b032-5d86-4fd5-b32f-fd6112670bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2ec0f0-4d23-4c35-9876-edb105e4c1af",
        "cursor": {
          "ref": "0d881437-f3e6-4195-bb94-41fe347f1403",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ecd89cab-da5a-4ad5-8f68-9f80171bb43a"
        },
        "item": {
          "id": "db2ec0f0-4d23-4c35-9876-edb105e4c1af",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "189b6016-7ca7-46ef-8136-d443f520b5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7d3b34-3ff4-4729-a253-adcef5aa5d70",
        "cursor": {
          "ref": "81f5bc1f-27d0-49b6-a61d-e0eaded78d55",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d265a54a-790c-4a8f-9165-ea994c2cf4e0"
        },
        "item": {
          "id": "9d7d3b34-3ff4-4729-a253-adcef5aa5d70",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0f2ce980-6dfe-458c-abac-2e377d382756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a639964d-de2f-4b42-aec5-6bef995e36b5",
        "cursor": {
          "ref": "b09dd166-0601-4a4f-87f6-8d941445ad15",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "cf9a0593-344f-4388-a8e7-67b99275404e"
        },
        "item": {
          "id": "a639964d-de2f-4b42-aec5-6bef995e36b5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "eca2e551-3c26-40a2-aeff-57539148ade4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fac4ded-26fb-4ac1-ab58-a369b81e16d2",
        "cursor": {
          "ref": "7e47763b-df7f-49d5-a923-a14dc8c9e3fe",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7f3fdbfb-9618-4b73-a35e-a17cbe1e085b"
        },
        "item": {
          "id": "9fac4ded-26fb-4ac1-ab58-a369b81e16d2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d2a4806f-4ebd-46a5-b821-a74f4a0d5326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0c5f2c-5e67-4990-b2be-f97066bfa32d",
        "cursor": {
          "ref": "077080da-7d38-4ba6-9496-1fb740f99163",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8e189b78-4635-4a4e-972e-f53fe15840b4"
        },
        "item": {
          "id": "3e0c5f2c-5e67-4990-b2be-f97066bfa32d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1a617c72-296d-4429-a284-a3e5bf75a992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5ece1f-a461-4d66-9949-11054c373655",
        "cursor": {
          "ref": "404b1f16-a79a-46bc-a432-22c5405162ed",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "09b090ea-3c6a-40e9-bb51-fdee33515b09"
        },
        "item": {
          "id": "0e5ece1f-a461-4d66-9949-11054c373655",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ba46a1e0-2e26-4517-8cdd-c4ad570f02a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e0ed19-5439-4303-86a7-210489331cf0",
        "cursor": {
          "ref": "391f72d7-cbfe-4351-9ee3-8a44e30b7ab7",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1163855f-4f21-478c-b86d-cd1626cbaeab"
        },
        "item": {
          "id": "c9e0ed19-5439-4303-86a7-210489331cf0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a3932f5d-2aec-4cca-80dd-37f5c80603cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a13513-0412-4ae1-9b5e-29b998db1e87",
        "cursor": {
          "ref": "e995e46d-783e-41a1-b00a-5563d16eb2b8",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6f0b9092-c201-4a84-b5f7-5c13a6b4fa20"
        },
        "item": {
          "id": "d3a13513-0412-4ae1-9b5e-29b998db1e87",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b99c243d-b6f5-4d9c-85a7-5a38047b3cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445c237f-ae57-4149-a33e-357f061e3caf",
        "cursor": {
          "ref": "1b17ab2a-624c-4800-8333-f144e371800b",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8296d89b-5fbc-4245-9294-b7209cbc13c6"
        },
        "item": {
          "id": "445c237f-ae57-4149-a33e-357f061e3caf",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a4faf692-0bf8-43dc-a8b7-786e2f2925e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a099b270-54e7-4224-ab3b-ff24f6f1610f",
        "cursor": {
          "ref": "0edff143-e972-4725-a701-705cdbfff787",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "93a7a6c9-3502-42a3-9638-cc664524612a"
        },
        "item": {
          "id": "a099b270-54e7-4224-ab3b-ff24f6f1610f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "eae4c672-0090-4262-8b31-8c03ccfee789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db00365c-69d9-4e60-b64c-4a50649fedf6",
        "cursor": {
          "ref": "6e667479-adbb-4120-9705-1c0bb07dca59",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "173a7c88-3794-424b-a74a-3ff992e8cd30"
        },
        "item": {
          "id": "db00365c-69d9-4e60-b64c-4a50649fedf6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6788bb91-f355-408a-8466-da9870838683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90cab6c0-82c3-4f25-8d73-c2338fce0e98",
        "cursor": {
          "ref": "1f3120bd-9f2b-4eb5-a7cd-a404c66491a1",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0da26604-a266-41d4-9e89-e9ae85b7fcd6"
        },
        "item": {
          "id": "90cab6c0-82c3-4f25-8d73-c2338fce0e98",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2b66aeaa-c3a4-495d-83a7-d81425edc589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a80966-6aa3-432f-b2f0-ddeb971e0cba",
        "cursor": {
          "ref": "4a5bc77b-7740-4979-83e7-cafb675500c7",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d0f22b06-69c7-4523-8289-2bf898568353"
        },
        "item": {
          "id": "57a80966-6aa3-432f-b2f0-ddeb971e0cba",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d7c7f3d1-994c-4b27-80ce-0be356beaa1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e188da-3331-4c09-8f08-c6f0fa641fe6",
        "cursor": {
          "ref": "18f20f45-1d68-4050-8ab7-5747c8443712",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "02924ac4-f7b9-4c73-ace1-7c4f7afbe69b"
        },
        "item": {
          "id": "84e188da-3331-4c09-8f08-c6f0fa641fe6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0d802633-d153-4fc0-a20e-2bbec65c0684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a4bbea-3d43-498b-9f4f-3ba9a0b7b1a1",
        "cursor": {
          "ref": "8bb48a05-3cfc-49bc-bf18-9fadeacf1054",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7db2a1c6-211e-4910-b584-cfa9c56952f5"
        },
        "item": {
          "id": "f0a4bbea-3d43-498b-9f4f-3ba9a0b7b1a1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "cf841158-1832-4b27-8c0d-8c378b50b03e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3732f25e-0763-402f-aa78-b6ae8e8fdf23",
        "cursor": {
          "ref": "6029023d-7ce7-453d-8c5c-09355417b2c7",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5aea6679-c535-47fc-9e47-9a8b6a0b3579"
        },
        "item": {
          "id": "3732f25e-0763-402f-aa78-b6ae8e8fdf23",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a357f826-dab5-4385-a5cb-9420335d749a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb9172d-26a3-4e47-afe5-fdcec089efca",
        "cursor": {
          "ref": "b31ce720-7b74-4036-9519-d3959d42772a",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2e979ece-05c3-4ab8-a4f4-dfc60f4bbdd9"
        },
        "item": {
          "id": "9eb9172d-26a3-4e47-afe5-fdcec089efca",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "97bdb7d7-cb1b-4ab2-9bf1-e86f49312f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5757307c-16ea-4b0e-b753-a19ceff25a51",
        "cursor": {
          "ref": "81a326a4-2fae-4849-8688-82e63448af05",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "60719025-361c-49cf-a773-459fb9ff2df9"
        },
        "item": {
          "id": "5757307c-16ea-4b0e-b753-a19ceff25a51",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "84a1537f-fde2-460c-a2eb-d77c09cd96a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8192014f-23a9-4f6e-80ac-29d2b23329ed",
        "cursor": {
          "ref": "a6f3f327-0b3e-4e22-866f-d354bd575fc0",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0e708910-8b9d-4ad9-aa00-e53ad38d2ff5"
        },
        "item": {
          "id": "8192014f-23a9-4f6e-80ac-29d2b23329ed",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d02772bb-e21f-4dc9-9fed-5f20f48fa1b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "e89ba4ac-d7c4-447d-98c4-ead4bffa3b60",
        "cursor": {
          "ref": "adcc7ad6-69d4-4cf6-bdd6-96fb045421be",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "47829d99-e2a3-489a-85b3-ef5234b39bb9"
        },
        "item": {
          "id": "e89ba4ac-d7c4-447d-98c4-ead4bffa3b60",
          "name": "credentials_verify"
        },
        "response": {
          "id": "fd6bb8d2-0277-49b9-90d5-7ee56775fd2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "cd6eb864-2d95-4404-822e-9e98d0576f59",
        "cursor": {
          "ref": "c6fd9a92-1024-4238-b870-053cd00f246a",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "130f0583-06af-4820-9224-8de11dbf19fe"
        },
        "item": {
          "id": "cd6eb864-2d95-4404-822e-9e98d0576f59",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "74e21273-9645-4a6c-9637-a1237b999003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "85c748b4-722a-4d44-a4a0-44099b3477c1",
        "cursor": {
          "ref": "9dc3fba8-983b-481e-ae63-6f2614f3b9d2",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "de2ff641-5fc2-4a8d-828d-cf1f583f4f5e"
        },
        "item": {
          "id": "85c748b4-722a-4d44-a4a0-44099b3477c1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0f23c23b-ae28-456f-8d18-eedbf7f04c8d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c748b4-722a-4d44-a4a0-44099b3477c1",
        "cursor": {
          "ref": "9dc3fba8-983b-481e-ae63-6f2614f3b9d2",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "de2ff641-5fc2-4a8d-828d-cf1f583f4f5e"
        },
        "item": {
          "id": "85c748b4-722a-4d44-a4a0-44099b3477c1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0f23c23b-ae28-456f-8d18-eedbf7f04c8d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f78c3e-834d-4086-940c-ae37e54dd97a",
        "cursor": {
          "ref": "6d4070df-c8a2-4b66-ac6f-d80376e8a147",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "213eb594-c1e6-4bfb-aa24-daf30b46a83a"
        },
        "item": {
          "id": "77f78c3e-834d-4086-940c-ae37e54dd97a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b2cc477c-2bc0-4ef2-89df-3d0b610a8670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf40334-1e1b-4fcb-bff8-3bc8513afebd",
        "cursor": {
          "ref": "0417b41d-2f4b-41d4-bead-22eb187f2e20",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2fd8d5bd-1402-4357-b413-4c223f1553f2"
        },
        "item": {
          "id": "ecf40334-1e1b-4fcb-bff8-3bc8513afebd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "61ed11ee-c0f2-4c7c-9a28-aebabdf0c72a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}