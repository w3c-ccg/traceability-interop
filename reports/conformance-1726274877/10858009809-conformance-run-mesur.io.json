{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "afdf8cb7-ca9f-47e4-839d-f6faa164559a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ee2f0350-2fe8-4b0d-a483-1565ea09898d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bf0378e2-d4c3-4ca1-94c2-4d3d5a5661bd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4140f40b-84c0-4ccd-9dd4-50aaf440c733"
                }
              }
            ]
          },
          {
            "id": "b3b05063-8b94-4d0a-963b-de33a5178a1c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cb660d7d-e00a-4306-be33-2bbc874139fc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "83865c40-ef73-43ac-8ed7-404776358d27"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "479a348d-ba15-4b4d-b5c4-f411ecb7e833",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1da4c565-c399-46bf-b8fd-7d00d11d2aa1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "34062aad-b95c-4377-ae41-780720455675",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b41c48ef-a714-4bc6-adbf-a98b8df0ed1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5ccccbb1-63fa-40aa-985a-b8bf12881340"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ca253dd7-8a81-4bb6-bf89-fb3d4b4cc0ca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "071a3372-588b-451d-bd6c-940b8875e7ff"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ec6c1c36-02bf-459f-9629-fd174e28f749",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cbf26b07-03e1-4dcc-93ad-19aec1832471"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3a190fd7-5bdd-449b-a13f-fde380c077be",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7be48301-a5df-4d60-9145-6783591939a0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "af04494d-e625-4e7e-817f-fab5b81b5dd9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c9e652e3-76ca-4447-8ea5-dc672724a231"
            }
          }
        ]
      },
      {
        "id": "9229f1b7-c850-4508-be09-51485691107f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a2668915-7623-4caf-9405-4a9d6ad800d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "270cf676-6e21-4fe5-a6e4-5e022b4ccc66",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4d847264-7077-41b4-b224-58afc00d0f92",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22d1bf6-8c5c-4b55-9be5-ab2dc3253aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d75711b-1205-44ad-aca2-b4a09bcc4be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bbfe408-8469-4cb8-b46e-3188c080fcdf",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e851712d-91ab-45c5-b28d-119251e2c1af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75e729f6-1298-44d5-8b40-9820d19c5495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14ef01e-0bf6-4306-b558-24aa9a1e94a1",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae088fa-3ff5-4b6b-8daa-736021901fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79f73421-7220-4112-8d72-8a79866063d4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fa70e069-c5d2-437d-893f-d39cbd9c840d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "48edb2b4-e5cb-4816-9485-54788d2f31a8",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce4d150-f238-4ea1-a5dd-90a351d455e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "928238cb-4ab4-4a4f-aa4b-c0d7d9318f79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "801da26b-fbc0-425e-ae09-a66fa69a65b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecc3253c-5362-4f6a-af4c-bb6184745c34"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6404224f-96e3-4933-88c3-4e6b0f5835c8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b8d8e92f-b8e4-4990-b138-cdf01fa13c3c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9ca26d8-7325-4c95-adea-314dc801f284",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1d369754-a84c-472f-a7cd-7f88273e3edc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e3aa5bb-0ada-4ff4-82c7-775718de00e0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b7e56f04-fd55-4a72-94ed-bf83b4ffe542"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae32f2d2-6c87-44f1-8c18-8212d6f99540",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bf4c8143-f795-4b0e-b003-b068f6dfaa44"
            }
          }
        ]
      },
      {
        "id": "8be824cd-587b-4daf-a168-3c92a5451b2d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "535997e9-0f7c-40aa-bb45-5b4b15e6a740",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8e470140-477b-4f35-b6c1-17f62b5b5177",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a4d9777c-7f23-4297-a523-7d42e7d55464",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc3e0fd-0222-456c-b33e-7814b63a2174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e6e7b8-4094-47d2-9efb-f9a3fe834696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d66570-21a0-4ea5-b2d8-a88c173061ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33b42b4d-e540-430c-991f-dc44eb6ad40a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa2fcf7-fb06-48c7-b62a-45eb7a6ecac2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1344bd-8c3e-4fd5-ab7f-181e136ef211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ec98bba-395d-46c5-b715-7d42620c3742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adea54ab-05d6-40f3-b69a-e8e588156abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0b85990-286f-46a2-a863-95535f7f6dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e20eac43-aad7-47fa-b74e-2f7682d3a77c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33188301-78dd-425b-b0ea-b70764b47c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1ad3b80-47b3-4c1a-9c3d-615bdcb128fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ee3a5b-8325-4f04-8a3f-31c9912a7602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "315deae9-0089-42c0-8415-f5298ec234fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4830dd-4070-4cae-80a7-4e3e1be31abc",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf35042a-6fb8-465e-b02a-93348c702722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f310ac91-bb81-444c-aaa0-1c0f1d11e56d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd3816d-7831-4f50-b58d-bf01f93b1c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e1bcd42-a8d9-4959-b160-8bbb73d1e20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f0db14-7f31-441d-bc3c-9ddd0a2a113e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c526d5-d83e-46d8-9d40-681c4327cb50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b75dc1d3-10ed-4641-932c-9d0e8683253e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd3972a6-43a8-4582-932b-c0273ec9fc76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7231712-ae99-483b-8f2b-e57f3b585cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee14c31f-d72b-4155-bed5-c2e7945487d5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90bb717c-7be1-40e0-9940-2313f5da0fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eea89701-f4b2-45cc-b9dc-13e2d00af76a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de40a5d-5008-4592-a963-d5678d7f8634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "826e1b25-150e-42a8-8a8a-e0f33a9d9fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54fe7b13-7b29-442c-92f3-45f8ad3fb282",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f08428-e7aa-41ec-9fa1-90e4ce71bab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c089adb-10e0-4ef3-a6ad-1c4c00fa8bf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b69f085-2e11-440a-a1de-b3fdbbaccfd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5147d560-cd7a-4a9b-90ad-685d9900888a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe79dbd7-5cc7-4898-add4-d29daf024786",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde49068-e89c-48ce-9c50-c468f3bccf8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaf2c03d-1ce1-41c9-944f-bfa5b01f2a31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46eee308-053a-4ba8-861c-1041fcbfb2d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c67ecea-68ad-426f-9c79-059dc34f11d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224f71d8-4d00-4f65-ac87-ab8eddf48d8e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93b72c3-f9c5-4d19-b759-c5be967eacf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8367b12-0bcc-41cc-950b-b4d979f3558b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617061d1-50b0-4ea0-933c-bdf79f44bfda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36a8fd38-e46d-4a13-9bed-f002d9f66c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eccfba9-0e16-460e-96d7-0194c4391be9",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d33d88b-6a7b-4327-9c13-24e4d4597548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a63f5986-89f3-476c-bc46-403b1529581b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d062b9d-47d7-409a-a056-4c91956efc5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ae35e3a-af71-4a5c-875e-701dcc1ce49a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6377b7f8-bd75-40a2-a5f5-32f5f3f96071",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641fd588-c86b-4dee-be1b-6d2b845cc7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e26e3f96-b5e1-4d2c-8a06-fd855f179616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54bc12c3-ceb4-4f40-bc1a-11935d109a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "191c6f1e-c272-45ec-836e-dbc42a01714c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6e0ae7-db27-4461-b3fc-d5a75ef0a60a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c1ce7d-7ddf-4017-827b-6b2b23a93196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9005ecf1-a21d-425a-910c-97b069a8e65e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a95368d-b1eb-4efb-917e-19fdc99b75be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17a00e55-d9c1-4cd2-8773-cb341fc3b10f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c3f9788-9bf9-4909-a6e0-21941103923b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77cbd2ed-d42b-44f3-9afe-b26dc1dd84cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "695e3662-2823-4ced-84a2-7336c1030f4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e0c2d1-f3ec-4edf-bfbd-a818c9fd7c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "637549fd-fdaf-48f8-b252-36e9cdb26b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e131d94f-aa33-41ff-94ef-cc937e88b986",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "545aed4f-6303-49d6-b44e-5b808b4f24db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b73fc88d-3f64-4fd7-9f30-548cda01d3c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a0a887-b47c-41b4-aa32-2f0dd6d9d179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5dd5cea-01da-4fc7-80f5-165724a93319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e585c5a5-c752-43ab-a7e7-6c0fcf8b523a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59225945-d85a-4538-ad1c-e3c800d74f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "933661a3-d8dd-44c2-accb-88372e711161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a8b2e1-d1b7-41f2-8e42-e9db42cedf48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d2dccbd-13cf-4ff7-8fb5-b8728de21099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acaff353-90e6-4cb6-84af-26fe34265be2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1130ceeb-d172-4d38-94b2-81fbf5ff650f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afcb0b22-abce-476f-9617-16a0ca876f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9082eda-cfcd-4a9d-98ba-13a5e62cb91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "714bf6dd-e23d-4719-ae87-5f703de8f04c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827e6bc3-1b16-46e5-81dd-01ae411b948b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33e742c-e684-4b91-ab42-503c39a8b1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcaefd5c-13d9-47b8-9799-5c67c3170b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ac0f10-17d8-4c3c-995d-101aab6d9004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "905752db-bc3e-4b90-b5ef-6d9c0c240733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d88b31-2bb0-4295-b77c-04808ccb25d1",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60aa7470-1e2c-401d-a36b-a6e06500314c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da6221f-33d8-49dc-82ff-168ee447b05d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d654ffdb-6e69-4200-b576-2d786067b7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7581ecc7-2f72-458e-a5ab-ac9894536633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d98c8f0-9978-4f34-a0d1-7850fceadea0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e8a6c2-b684-49e8-b7bb-4c2a5991481e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def4503b-dd56-4e82-b76b-61013995961e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dac8f53-a891-4bae-8608-d3fe62b1c1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a56a6437-0917-41d0-8b5f-05ee83e61279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeeb80da-00bb-4aac-a45e-2aa92f49cdcb",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d5cfac-af70-447b-9992-58a2ecc8070c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51bdda9d-80bf-4ce7-85d0-b3659b89ae2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c854a17-ddf7-40d8-887b-7cc23825dcdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f556cb8-b03b-4a1c-b9eb-8f6b1e9708c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cfd67bd-2ca9-4416-81ab-134119ee1c1b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4b7a3a-ba0e-4474-aa5b-f41cbbbcb15f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e68e2e89-f841-493c-a3be-ce5792c93329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b934f473-c618-48e8-a70f-570b20fedd92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb30a973-4815-4fee-9ca8-6049d4f0c703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3bef32f-b3f5-49c5-92d8-fff988330152",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aaae629-a9d4-48de-9433-b9aa6d845525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "550dbcef-ada6-4be3-a59b-a340289ef7fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c7465a-eb94-4c08-89b4-3900c485e9a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b97b5ebf-f70e-4e9f-be52-1183b94e6cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd935ac-02ed-47c5-8f68-204fd613c805",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1728db71-825b-4b15-8cdd-2dfa295727a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "febcf4f2-ce52-46f3-9021-9bb1dcbce2d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b71fc1b-964d-4487-b96d-0066157186fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "59974b20-b427-4e1b-b534-8357f4f3aa4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0369ab-35b1-4bd5-98b3-9465d4bfcf82",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61cd5252-55d4-45bc-afb1-5f3b4579792b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5c96e98-1653-49ca-af3d-fae4c3188806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3872578c-c0a3-472a-a2c9-c51af6b50c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c7ba1d4-2893-4815-96c8-dd69f7e6207e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb7618e-20dc-4fc5-9c4a-de539c5cd425",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20380508-d85f-4e08-9581-07c19199b9b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ab342b7-37de-4525-9297-fe8c6450396f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6906b40b-eb0d-4f4a-8148-3c5a78beb2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "04687954-2998-457e-b399-29e83f590435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88098f2f-15ef-41ed-931e-460ecc626f81",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e1e574-13e8-4ad1-ad8b-e2a30796a163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8674b38b-5b43-4310-bca4-b6412a70d79c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95f8181-6403-4feb-ba4a-b81cd713d518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e16f5732-e198-4024-ad14-9db5924abb9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ead14cb-9be3-4aac-99ae-f01df1095505",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ba5a17-1b58-480c-a50d-1d7a9b97d7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d6da32-e45f-4ba3-b9ae-633c3e04e5f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80704e2b-c508-4e86-a258-d2c7dd809fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a924200-d905-4beb-940f-577677c17646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88214a4-9769-41c0-ba22-4d587a345f13",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d524928-86bc-46fd-a942-045c13510eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8c4dfdf-984c-460c-9626-8faba54fd3f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902bb54c-87ce-4e3a-be95-8efe75c7d4a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7131baf3-0137-4b30-b7ba-27576dffc4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd22d5c3-9160-4098-aa7d-f415569bcb80",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7f1d44-21c7-4fbb-a0e7-0323cb7746be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea22286-d040-4ee9-bbcb-acce0028b4f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "767ec199-5cd0-459c-9fca-5e8c7a2f4841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "90cde4d9-8410-4fa9-8d54-77077139f146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483ff8bd-a274-4b42-a0af-0ba8e27cf199",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48301b41-402c-41d4-bbea-40b22becfe98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0469906-54c2-4382-abf2-43a039417755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dda930f-4f65-4730-850d-2bdab08cd2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b03913b-9e7c-49c7-94e2-cb4734870203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19fce04f-9877-487b-bbfb-9d437adc5737",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4909654a-20ab-415c-bfef-db5dddb02dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4452edb-cb72-4a0b-b469-a98f61d324c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa66c6d2-f1b9-4edb-822a-f6304650391d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c72c0d1e-12b6-4e78-aa31-362ef0eeef84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aec7351-7381-419f-ba0b-8d363abc471e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4102cd72-dcd6-4167-9fa8-94c4f8380f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "475e9171-e17a-41c7-b15b-67b8cc7af01b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d856bc49-4306-492c-b856-de98df486fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "427723c2-f5d6-4568-8fc0-caee9b45de97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7c6dd3-ae33-4599-9bff-b70f4a44f4d3",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9366795-947c-4a99-971b-bcd60638e189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78bf5a41-bacf-4803-a9a4-2cd8dee39ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc0ad0a-aab7-4006-a245-009a83216ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d97b1e03-7660-4a1d-956f-fa48ad77c0db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb10f25-5291-4b97-ac65-e33bce8b2f08",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "059ba67b-b675-4316-9345-d2f3b7963997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c689ac0-e461-4597-80d0-4506ffbb1c6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75ed09d-71b9-473f-ab36-43bf6ae345f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "371ad816-9aec-4822-85b3-ff13b8e33ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d724af-031a-4a71-b5ce-baa31a4190a5",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c55c1ae-8e48-4f4d-9935-52ff30223dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfb088f9-b37d-4fb5-ae6f-7d514684e400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409daeb1-d7ea-445d-a485-0feaa445a7d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "151a8c7c-e513-47fe-b449-2ab2c59abeb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86887297-7dd9-4e9b-b3de-0ae29566d932",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fab694b-3c03-40a5-88ba-84fb588dea4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "204107f1-6d2c-4d35-bb3c-cd843e538b97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df92edb4-78b4-410b-983e-18af922eacf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e9eb9086-fc41-46f8-bde4-20b8ac020129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9059b677-50b4-4e9a-b5ab-1beffc21fb5c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0dd71d-9465-40c3-8a3b-f9c7717044ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1129a00c-1531-45f7-8830-4c597fc573bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68d615b-6faa-4c2c-ba2b-8be293fcb477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b356336-24ad-4c3e-995d-8819026dd57c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064960f9-973a-4ec4-af45-9279b2759b15",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "750cf0df-b297-4501-b655-b81896d5efc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fa8a3da-b604-4967-8f0e-67a59adee633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ef5cd4-cf33-483a-b9a5-88367222949f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6c227d4-06a4-4cd7-b562-3a9328f8b6de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e820175-841f-4f07-a75b-157e8737c786",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "528ff152-8c1f-4443-946c-9a799ef480d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6d9c49c-1c4e-4b12-86a5-dc44a010c008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65328e91-8bb9-4f39-8539-dbad60541446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c5aa6d9-bf81-41fc-9ebe-2f8b185eeeb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f724df-eb07-4eb7-9857-7b1cbea063ac",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "156a57a0-543d-497c-b73e-b3f25fc37f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfc064e0-d45c-48c5-8b58-497ae9e49162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c983fb-8753-4db9-8544-9b4331bc3781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2895005-9297-44cb-8244-dfd860b8fd9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f37195-dcee-4d90-8de7-e8c73498d64a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ce7912-dd8f-4685-b9b5-119fe81fed79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4848e368-156f-446e-bd71-12a530d439e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15e93f8-a6e4-4890-822d-a394dde35d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8df33a26-2d56-45a5-8675-621e6932185c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32730c14-959b-4d6b-aa57-584bf451120a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca770466-dd8c-43c8-8ad7-327a939607a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10d238c8-f698-4704-ab68-2182942f6124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce64a69-5af8-4677-b1d6-7ea230bf49cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0f5e0b25-7355-4dab-9fc5-f0f7703e9021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd576ea8-670c-4f40-a381-c031a4b0e9e8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "231296ca-36aa-4186-9dc0-5b0d805471d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcf0ef5c-5a94-443f-96b3-f3278b89e145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee38aae6-0dc5-4475-9f77-adfb5edd09fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "04c11eae-8742-48c8-b093-725d65b2ce36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "725c5819-73f3-42e2-b7bd-f57b5be79664",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c94b5fb-1150-4936-8591-4d6d218898bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee2f79cc-eda4-42fa-80c6-aa9d9a38011b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6eac32-c8a2-42c4-bed1-8931c550d9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9695da1-fb15-4154-aa1c-1589e07762cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b658fe0f-4bed-4ad9-aca6-7b40fbd37b83",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab0b323-72c6-44ec-ae81-1dc99e36eae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b259df11-c053-4fd1-972e-af843e16b769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f635d6dd-505a-4c54-b7ff-488a78e79682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d827632-6468-4ca0-8790-4b2bc0f1276c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ca8f72-d2d9-404d-8474-3bf3ca0270de",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c60d353-1a35-4b03-b290-56f944e819b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52d399ba-f2e9-410f-89ec-de8e6dd789d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6e748b-d1bf-431f-bad0-7de6eeefd352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd5f1938-5f63-4300-80d9-436473c449b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd44b8f-7b47-44e8-8a62-d5fb4116ef21",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee329300-0382-47ae-9c6b-5f36d9e21fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5a02043-5e3c-45e3-9f2e-3b9cca866c30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f22ad4-b474-48fb-926c-d1a753b519d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63c932be-24d7-4a79-bf0a-a422bb3ab7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac1ccc6-7a85-4ed9-a498-5a8f4955c60a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587402f6-26f6-43d9-b24d-ca6ec6eeb2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42ff5a6d-1dc5-4da0-b5a6-de5070df603e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bdefcd7-4983-46f5-8021-2d22601f3ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47ca4c58-12cf-4327-bac7-8e4313d6b8fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21311e52-e6a0-4a9d-9fe4-89d639c5c435",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb05671c-cadc-425e-aa63-85bdc7ec550e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ede5dc63-be60-4c8b-8196-461ca3d8c2e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8de841-c6fc-4881-b852-9f2e98236cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc04f8a4-5447-49d6-936e-935439af521d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d89d766-db3b-48be-a34b-d9f6a262c5ed",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9453e8d0-7cbd-40f9-abd7-f060f373b99c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdfef44b-8229-46ca-85d7-fcec0e38699a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05fa60b8-44b7-488f-a3a5-9b66a831574d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0558bc76-5116-4eca-a8e6-caa51d0ed2b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7f2f74-ca14-4084-ad23-4bf350177baa",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ec9778-be84-4b98-888f-aee29c200224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a4be238-bdb4-45b8-91cd-f8f7a74a25ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9a4110-6821-4683-a054-f117885fff79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a90f9648-380c-4e49-a1ee-395c85eff0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4effccc-8b2f-4ddf-918a-20f620f13bb9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6eed8d0-f452-4a40-bc9c-411b6cbc7287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3797db96-3598-49f8-95be-e836e340bdc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe29c89-5072-44ea-a81c-2ff4ffed05b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfe8871e-a6c9-4a6f-93a0-9dcf70b93492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29082c90-4eba-47a4-93f9-bbe710c4cafd",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4294cc01-2e05-4043-9d5a-553570ab4ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8291135-371b-4e48-b406-f022db89b77a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6bac34f-8929-41e6-937f-075601a91933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c8b2afb-1722-468a-92d5-fb99edcce74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607ebfef-762c-41be-a71f-f356417c577e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aba3f77-c7a1-4607-8f2c-f1693fa6027d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1786a21f-177c-49ad-9686-711edb848605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5eb37cd-cbba-4b8b-bb4d-813b1665ea4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "949bad4c-b366-4d55-a631-6a3890ca99da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fea2aca-e8fb-41a8-a981-9f9ad8f340b3",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22798127-71d3-4292-bf29-4e9e3ab28400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54959360-1f3d-4382-884b-f5d99415dd80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5642b1f6-e522-4964-86a1-ecaecf3d72a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e7c41e2-3624-45c6-83df-83347392fa6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e899fac1-7b14-4f68-8783-c0bdede683d8",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "533d1fb8-849c-4058-9eee-0145d26f9d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84eb8d26-9d10-4e0a-b353-44ab6a1f10b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f89900-e8eb-4d47-905f-bd71180f9f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2e5a8fbf-c51f-43c3-b16b-384e572d8ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95dfcbd1-3d33-42a8-b066-66e7b52819cc",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2533d792-7738-4fe8-a97b-909c1661370e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7347b197-b910-4271-b9bb-dd38c1a95577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b566505-1ede-40bc-8207-d1729b328306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "be8c8911-7015-4ff2-8822-ff3732d0e93e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dbb9b4c-89ae-43f3-bd39-44103c60c34d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ecf9b69-b9f2-4bd4-8b1b-14ba5602668a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bb924f8-aa2a-494c-9627-f18837143eba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a6ab93-82e7-47a9-b685-d0184e28f8a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a83f6b0-4338-4e87-93c8-ded20f7e4a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a3c61a-3707-44b1-9f4f-b43c173f35db",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "331175bd-6a8e-4ed3-a973-e7d80001c91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65005a6b-6e54-480a-99ca-f7ad56bad380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3330ca7b-d679-4253-b24b-4d7168b042d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e20090d8-ddaa-4525-88e2-77060efbd230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffda57bb-4983-4419-8635-8a991f048275",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "608fe2eb-4f4a-46c7-8e7f-0412f7c73bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a833893f-5703-4805-811f-fa88caac8d13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b04d7e-0a5e-43bd-ab11-3a6daa777e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4e11542-58ab-4aef-b681-aaaa137f1bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31adc90-ddd6-4f8b-9127-e4e53a9e2d53",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1641f5-1e57-4a02-b9ff-eab1f55d9ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91188c5d-4991-406a-8e39-18fdb14e4268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2204caa4-3140-4829-9637-8413cc2e2cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f4aebba-8b6d-4bf7-b2ca-fe289e4e47f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df8e0f3-1668-4ed4-b404-3f35c30e6a3d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4a9905-2bfd-45f1-bfb2-0a184d12575f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a54f9ee5-65c3-4f9a-8d6b-d39ecafeef19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c97690-f2ff-4136-88a4-ca438f31aa8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "be217dbf-f5c3-4cf8-9e6c-959edce12ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c441d700-5b6b-433e-b408-2dd5bc829c69",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47eaeeb1-1de8-4aaa-906b-631c74b6892a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bac8f77-7a9a-47bf-9f75-52ab75c7169a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b87e08-d163-49a0-b36e-24f49ce05eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae102536-00a3-4408-a37f-1797cf559c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0600028-02b1-496c-9478-c4676233ada3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5ecbda-3db4-4f0c-ba43-4de8f3c584ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b517abc0-0e8c-4a8c-b844-8d39cd00e002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a57b26-64bf-4bd6-8e0d-f309edc36123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f377090e-e439-4d0a-b00c-f0ddc21dedf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d68267-f817-4a0e-9eaf-614ce207954e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b281b2-b680-427a-a07e-4dd5c0ffecba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1662a0ab-c159-4378-b74f-e471a65f19af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053b69eb-e428-492f-ae9c-1a4360090985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "910ee843-b51b-4501-b6df-4680a95e54ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c339d4c-2ed2-4cb2-a0fd-f10296580c22",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b783aca-c90e-4a34-b21a-09a3347ee588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34184578-3678-471d-ba42-e3853da14965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07fc8e56-0935-4418-9cae-5d9aac21f759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a6d1c09-d494-4868-a661-ecf726b2f0a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d568ea9-71fe-4267-986f-490d8b6e8c58",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41c3e73-0b8a-4c92-a83f-8d3693844bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f84e9e38-1df2-467a-97af-2554678bf99b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225440fc-d7bb-43a4-91dc-4cf3c1dc45bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e9981f7-dde2-43aa-aae9-69c985f9ed98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e05760-fc4b-4473-a7ff-86eb0c6336b0",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d37f89-9ba8-470b-80bf-a8aa460072ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70549d0a-3fef-44fe-aaa5-17369dfd8c39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895a8f31-554c-4841-b65f-20cbb635ae59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e30fd100-45cb-4b2e-9c90-3a5b549cca92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5612b16-3d43-48e5-920f-7f57378f30e9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42bda185-ee80-4f60-9952-37cf6694c260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9db7d548-d6ba-4b12-8118-1efc2354ab8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b81fe2-6cec-4859-9130-7865b353a379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd4cec17-1b0b-4e08-a1f8-a2a994e0a194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b98636-a5e5-4288-b27e-b32e50a1c25d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df56ea30-0105-4c18-a015-326f95722b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14869845-e252-4527-aa76-4649c19f2f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a5c3be-6537-4391-b04a-53aafbb67381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a643f7b4-9be7-42a4-b94b-74b7f963319d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5280e547-e87a-40e8-9c90-96ac48bb60a9",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26846af6-2cd2-43e7-8793-c1b21e5a847b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "483cf94b-115d-44b8-abca-44429e0e0daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d882a3b9-2140-4a6f-9a6c-05979729b88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1102c695-9c18-4914-a032-d06fb881ac45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff302a1-bd40-491d-9964-a6e3851248c1",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c7bc70-b48a-47f0-b216-b7d2f43ab764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5594a5f6-8e6c-4eee-b123-b7a1ce12dc97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7773e43e-1cb8-4b37-977c-07f5d47c5000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c16a9e72-3e88-4a72-932c-465ec793b913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d9aebb-de16-48a1-ac16-9badfe3ff3de",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61ebebb-722a-424f-a4e5-a2b543ca1caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7e3100b-74ba-435b-98ce-30f966bcd11e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452ff8e3-fe00-4e0c-8e59-5e80112e80dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b204ce5-57fa-4931-a54f-c0febe04d2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da55ecc-0c4f-4054-accc-3db0459b5906",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ab94fd-f4a5-405e-b954-8a08b96ef71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72768acb-3cdc-4b9d-84fd-9d22745a1ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1248d2c7-9eb8-4ded-af36-5dc38a81cb07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec168c7-ddae-424d-b926-f0595551b7e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a86cf60a-7e00-4e9d-a28a-8e99a1924558",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32374133-1809-4f26-8866-d370bf7d49ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6831ac8c-76b9-42f3-850e-e7c0e509feee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a0dac0-a32c-4913-85e6-61752fc9b54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f05b159d-546d-49c3-9ee9-4cc2b0b956ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69083ad4-acac-478a-b2fe-fe154ee7070f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e33fc0-da52-4c6b-93b4-a75ff20a9259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2083953-8d52-433a-b9af-7670fa201832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b3ded8-59ca-4121-bc84-c66df3a3b949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "49bb7d9e-aa7f-45c4-8a84-e8485326f9fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802686ff-93d8-4c0f-8208-8c7f97241cee",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58269589-3e3b-4051-98fc-f94f7a1aee37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2fe8428-40f5-42c2-88be-bbcdca2e073b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039533a1-f45d-44b4-8d6b-854d4dfcea5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd7f58ee-4755-4b8b-bf1e-7012277036f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4022db61-897f-4f08-87f2-1272ffd9cbb3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f105e884-7069-44cb-89a0-131a9680ad46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c8021d5-f552-4da3-8452-a397131592e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c859cb30-dc8b-4625-81a2-c60fed2b57d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d2e32a3-ba05-4826-ba35-bdc5c3e19a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9f2a8f-6dd8-4437-862c-fababf4cafc2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c7e333-b3cc-4364-9b08-4f16ce8d3c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f7f5b75-c370-4205-9e0e-19ddff228a0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67dd0711-4ef8-4f53-91f5-e6a348c68f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e85ab110-9603-45c0-becf-ac8a3b118edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be6cf35-c32b-483f-b615-5c436005100d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "364c94cd-1eef-48ff-a462-abc2eb0c2830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fbaa052-8a9b-47c2-8242-6b655308ed08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb784ef6-68ef-420d-860f-11b64c7a62ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5ccad990-ce91-400a-855a-b23a7aa9cbd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66084ff5-4212-4ed1-9a2b-fa66f34012e2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2da849-0b9b-41a8-a070-66140f97cec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e809fef2-2cf1-4111-b25f-74f3e6958bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dcd4c73-6236-4832-bce4-05f349940572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d426d82-31d6-487f-9a3c-62b46e683572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26af1c0a-b92b-46e7-b352-f3e1c6772646",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f88313-ea19-4bbb-829c-5673c12b0ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e47dde-c6cd-4dfd-ac40-12301fad0331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854ba55b-f8bb-42da-9f2a-64ca76b706ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db61aa10-3725-47bd-9d2c-5f3e962ccd74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd903ea4-d8e7-4a7d-bc6d-ba7a6acf5505",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb2c8f2-93cb-4031-b4f7-a0a9b34e0718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee1052f-38db-40a1-bb86-76372a44db51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257774c8-d0b7-405e-836f-9514ba37260c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c654fec0-472c-49a5-b81e-2869ab75c877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6cf0b7-5d0f-4993-9cbb-b4d05bcd9ea7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49360022-658d-45af-9d79-53542d83797e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c31a4a05-d150-4662-a848-1b9c3091bfe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9df56d-50e9-4a91-9326-1c97c465aaf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdfae6ca-4041-4589-8b94-24122f0047f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbab4f54-4ccc-4693-893c-6a23865b8b27",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62361d1-eb53-44de-97e6-8e78da7725c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d40c19d3-c530-4a52-8c3f-0df46c50bdaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568a28ca-9adc-49c1-94d6-ff3db74d49fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "39e22075-4795-4472-a213-539e1926f98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd55e545-232e-41ef-aea6-ef7648bc11bc",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9263f23-345a-4b75-bc86-6c1807263eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f90c2170-01b0-40ee-b2f0-20d6bd24e7c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ff44e5-6274-40ee-bd78-9ee19e71b03d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "237632fe-1ee8-4d96-beef-f351f14d1918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e1ce10-82cf-4093-853b-4f9c28016a47",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6416eefa-8b0b-450f-9ea0-9c19cbebb790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7df38db-f5e4-4153-8eda-0a12e03f2aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b54f0d7-c074-4e3e-ab93-e5a192c76216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "351e6c69-7ba6-46ee-84f3-7665e72d19bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8badcfc-1625-44dc-bf86-22cebcebfeb6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca575c3-0647-46e8-99c4-6d85df806683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e5ea0f6-83e1-478d-8b57-2b24ecd8ab16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e186583e-53ab-4225-9cfc-5bead4e73c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a0c725d-4e9e-4aab-a2cb-5e10a1bed385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7a4d55-ea31-4859-bad9-ff7053d651c5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19eca519-b77b-4b1e-88ed-df7a0705ec77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d2bce6e-b40f-4160-9fbb-53500469e4fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9886203a-74ae-46f6-a23f-8cf42478e2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca61fd94-de0a-4319-9d8e-b8e7eb76824b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed716032-d0ba-48f5-b602-40df86812b5c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7f02ff-943d-42f5-ae1d-2c9c7ee38139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03d61378-fba1-4536-95a1-358a63f3a834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc08d992-db57-411b-811c-be95eecfb69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b79e786-5e0a-4ebb-9bbf-ef2e8007c446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57151ab3-fd56-46c1-9310-0413f2933d1f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca08cf5-8f51-4520-a1ce-ecef880540b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84fca825-5f0c-4512-8999-48d0d7d7e634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818fabd7-56b6-4d96-b2e0-2d06a1cfdfb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4353441a-86e1-46c3-8eb6-9b399597be4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0416d26a-ef6d-48b2-a587-46ba62339877",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe592b8-f825-417f-a39c-c14f0824ec52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "08f15a60-33e0-40c9-a0fe-82c093e74e50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697cde87-e36b-4239-91cf-b745fa0ef65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "884f849f-8974-4409-8e68-130a57fcc380"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c52ba867-03de-4f55-80bc-a7227c851dd7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a7d56aa-43ee-49dc-8e1d-a90b2982a890",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b110573-dbfb-4f7d-b2a0-9df4db107746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf4308b5-c40d-495f-99c9-620fc66cdee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c08e669-b076-46c3-a895-55304cbf4366",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae6d73ea-d691-4b2b-8565-e45bdeddb1f4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52c8da02-8de2-4fd3-8fe1-1c8724acc27f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e8fb37e-befe-4771-91c4-4d4fd1688957"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0447fc23-6253-4b7e-9a45-47aebf57052c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d771f31-6dab-4a46-b658-fb768269a4f1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0dc52881-03da-4cd8-8844-85906122c1c8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d5ecc802-6650-46b0-908f-0a5ac6b5d945"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fe9f3ec7-c0b5-4955-96e2-0a28ff0a1baa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e2028ed8-a9ee-41f1-80ef-05b000b46181"
                }
              }
            ]
          },
          {
            "id": "93f57466-998f-4cdb-b90f-96f4a1a5b57a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a82954d7-10e7-4029-9ab6-70843d2fa5e8",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "88bf6046-755f-4552-a5d8-5e39f4935454",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "120dbf2a-6a44-451b-a448-8589a9798051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "64c68104-0270-410f-ab30-60d7972f588e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af152d58-fa72-4544-86bc-e1b3984adc89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feb40bd1-ae17-472b-8f29-7c357e427cc2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "46764d54-5f80-4b23-90d5-94577214e34f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "89fea096-65b0-4bef-8659-1597eff18b58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c88cc8b6-6d33-4abc-a954-1fdb4d3beaf6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1717e0e5-0968-4180-96f5-14d51c02c3de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e64c3654-7796-4644-9631-2ee9fc814c37"
                    }
                  }
                ]
              },
              {
                "id": "297d14b6-77ff-49aa-9130-e165d1bf443d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "96ca9f32-3fc2-48d8-8236-86170b6ab4bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "24b3e712-2255-4ddf-9a08-150fa332462e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e771596e-ceb1-4705-90e4-99bd3a71e1ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f96672ad-dec7-4d99-8574-31e9565ec9d1"
                    }
                  }
                ]
              },
              {
                "id": "f4fa6ecb-2b4d-4b0c-873a-2f44cac7b470",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e29bb891-edf4-44a6-bf5a-01f100dc4ce3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "00decfc2-9fd8-473f-8ad3-9bd1f0375c55"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48a16c6c-465e-4039-a645-31140e97c652",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d054d6c9-1964-41d4-af97-f4b87e843a8e"
                    }
                  }
                ]
              },
              {
                "id": "52410d9e-05a2-40fc-94a6-6d83bd071702",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e52750a7-793c-4e1e-b936-7addaf146d8e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4383c559-66e9-4796-8e18-634ae270f934"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f5c4d7a-609f-4ff8-842b-ffe2508e0b84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "22a706d2-146b-4fe6-9673-bdb9495cbda8"
                    }
                  }
                ]
              },
              {
                "id": "a7d2fe15-99a4-40c9-a29c-5fc74340745f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "684202b2-1dcf-40cf-af74-2526e3a8b425",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d20d3bcc-7b4e-46b5-862d-8d963e21fa2b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "680ade5c-3fa1-4afa-921e-e7721a2b9fa0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b621155d-52ac-4481-9794-ec89a2d34a69"
                    }
                  }
                ]
              },
              {
                "id": "633f4203-c8ea-4375-b16e-c9af1296b13c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c809d20-9bb9-4fde-8701-b4e2f3a87b9c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3740bb5d-2686-48ce-9cca-f20fb6549118"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35286f97-4985-48bb-bb5e-4331bb9af052",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cc1c9cc6-29b8-4aa4-b9e6-e9243f43a45a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "163e1995-af0c-4e69-b1ab-6a44ecf2a7dd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f225ebe8-f110-4163-ae8a-e425042e6070"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c8a56271-de15-408e-8c0c-74adc3a58d5e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "27704022-2ebd-4caf-a61a-c46de599037a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f6305ff0-4714-4337-a188-9032b464767f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "fd193303-4c34-42f0-a6e3-3bbeeadea454"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d603e983-9601-4453-a8bc-d3b2c004559c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aeb12037-3c08-4427-b66e-5928644ba9ab"
            }
          }
        ]
      },
      {
        "id": "b1be319d-2151-4d9d-9d4e-57016e7f3759",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "febd2325-fbbc-4072-9a5c-7e53e826fec7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b169cc0d-3918-47b6-b965-ca517cbb17c3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "44cf296e-5832-4dcb-9c37-43cced250803",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec4a26f-ced1-4e7f-a2c4-58b60e82aff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "159ec734-9500-4a71-bf69-8fe80a8e2335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e2cc16-b781-42de-a305-9f0b74f13612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2ec52dc-e2c9-4b99-a02e-a8e508a0d4cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b2bd5c-4d65-4fda-9fab-566e212aab9b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2098d184-d9cc-4f30-ba02-dea6e8b975e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ca30b19-d15e-481a-806d-08a59152217d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d788efe8-4723-412b-ab63-89a62f15c85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b58e719e-7d9a-4999-a7bc-33057decae42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a4e346-619a-4720-ba78-347407dc83dc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4ed7df-c064-421c-b533-b608be5d831b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d00aa4c5-dd25-4a0c-8434-1bc7bcd505dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece034c0-a0da-4d82-b1cd-7b04c2cfcf04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d129f817-9078-41b1-ad82-a2557d76e6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238c27c6-f3e3-4e58-baf4-7f7a71e35cef",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e39bd3-da4f-4fbc-91b0-27d01cfc3c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8e174ea-ee5e-4623-b872-f3816299291a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002bd816-f095-41c2-b3a4-ab46c125e1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d2b4bcf-9159-452e-b55d-51da860f8aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dad1dc4-3f76-48d4-a314-e55402736926",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02472d5f-8d17-4743-b01a-74585181a999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80bac305-b1ff-4255-b3f6-c4cccbbb4976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b863a765-85e6-42f1-a5c2-6d8eb24587f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dde9795-ae02-43bc-98c6-edcbff7a70d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8106f85e-790d-47d5-96b9-ebf23e36d2f4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2851f9ed-4e43-4fdc-a64a-10de59901286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "315529fa-669c-4b9c-8f10-9d165c7eb03b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd930d2-5a49-439b-97c8-ae031b46658a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "48cda41c-9c22-4ca0-833a-aa1340f8826b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5a9219-3430-4da4-b38c-1f9f2a32879d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18706e66-a797-41a8-81e3-5448f38edb6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36a486c3-dd5c-40ee-9a90-cc167674eef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff220ff-9e46-49c4-9c24-0c13903afbb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d337c48-3831-49dd-aedc-8a71d82d12b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f0ab13-3094-47e9-a765-de767f188ee9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6985b8-abc6-47c0-bf46-fcc2ae1eab67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61bb0645-f7ca-4712-8d0c-ba441aa0c0ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ee8e35-13e9-4abb-8198-4e0db1b80eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "08bdb786-f2bc-4b68-a11e-fc291d087e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b913d14-5eaf-4aa9-88a3-6da893ff4941",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a806d78e-08c0-47b6-96a4-3ecba228f63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa375be2-63c3-4d1c-bc6f-6ffe4194b4c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad5cec4-e372-45a0-9696-a2caf7fe6372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d0b801b-03f0-47da-b165-1387bb2aef23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402bae9a-b0ca-4c81-9517-40f7dfd13403",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff7475b-86b0-480f-a67d-3105a066055a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d0c4057-3da9-48b2-a9a6-25df0921260e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c23c82-93e4-48d3-8409-6a7439e9523a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "95969870-3e93-4753-88ac-ee2248d51f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b581ad0-cfac-4c99-9062-092885520654",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92042c6e-9cde-4312-8064-bff462300f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c3d374-ce6c-4b65-b935-3c9a50488356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72820e48-dc38-4bf7-89ca-00a46b732720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e5b00983-289d-48cd-8f0b-7194d5c93bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "039571f2-6a15-464b-8f07-e3ef687eeda1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3453300-bdb8-42ef-880c-207dd967d212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44fe5996-5ea9-4162-9ca0-418ba44b33b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ddfd95-3716-454f-b0e5-239c5df6cd02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e899be5d-d400-4ea5-8b13-d55a8a870458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b96323-931d-4635-8a62-24dd28a9b187",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf9457d-d796-4931-a2a3-b3c62088e9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40322c0b-1fba-401c-b278-2eaf518325fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2319bbde-dc66-4fac-8d80-827f211de0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "313d13aa-ae14-4dea-a793-f94793e1825f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f420496-f1a4-4e43-b75b-828a7e846d39",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ee9d3f-c0f9-4c98-8d8f-208fa2cf407f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61dca846-cd0a-48fe-829e-e1b588ac0244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128e6721-242e-44b5-b252-4a5dc891ec64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5099ed59-a2b8-487b-855e-f431959b50f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d22bc3-24f8-4878-81cb-961e610f67be",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fca6b7c-e2c8-46ea-ba49-8aae51881371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6fedae6-8c1c-4952-aad4-c15961186c3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d2448f-a6e8-4ded-aecc-eadef699fb36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d32fb9b-e3d5-4edf-8289-270952c63d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f0574c-1591-4b0c-a5d1-5bfde224c824",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc94abe-ddd3-4c79-ab85-810d1b08dccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aebbf4cd-d89d-4719-bde9-e51cc01e844c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd1506e-3796-44f4-ac5b-442b19da1d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e71158c-1e9a-42a8-92b8-166a6e49c541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e888835e-ed93-48b4-af49-ab9dc2c2b601",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb9d4d0-08fd-4299-9770-fd9da1389c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22a1e0d7-a962-435d-8773-17b850c87b80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3341a32-98a4-4762-b4ca-e561ea648c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "75d7577c-e216-4e78-ac91-c8a24117cfd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e70e395-5627-4ba0-8312-2448e0221dc0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a33c529-6ed7-47cb-9407-6335f05ef8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597c87f2-e5b5-4ece-9b0d-53b5fcf8dd49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498f3c70-8e26-4bd9-a284-a94fa0a5e7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fc7a75d-7575-452b-a001-20da69f59067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d391b1-3d91-4bbf-8910-db1ad5c5f15b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faeb49d4-ec30-4748-901e-0270604ec929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f40c125-9dab-48c4-8d3c-110e6a2be650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4fe586-df90-4169-938d-702593a892cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eee98c26-fbc1-42e4-894f-646396cb294b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2f4f1f-42f9-449c-9355-f74ff2377343",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e9f631-6fa8-4e5d-9482-8272b6fa51fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b93b06fc-7e3c-44ac-84c4-88c674062d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b66680c-0def-4cb7-b53d-3aaf4651957a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f287430c-d4cd-46dd-8567-9cab2baf2315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3377a230-5267-4873-80ca-eafe5cafd6ec",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5328addf-2cd1-4964-8e04-725c1bbbdd6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bdd51fa-28e5-403e-936b-f585bb1a4dc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "041977f5-a516-4f6c-ac34-47f3c1181e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de3e53b6-d83d-4cf8-8841-49aa32056f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa93bea8-714e-4468-9d74-b8affafc42d3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1499169-5731-4457-b988-72c8cfc42468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "383bd3ee-2344-412a-ba68-c196b703a5b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe588f9a-9646-4868-979e-e3b11e356a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f605d8c-8b01-429d-b963-c37d47b169a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b52512-24ae-454a-9679-68fa5963be47",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "024ad38b-2b41-4198-969a-5773ad1483c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f55d20fc-703f-48aa-b2e6-12576e166362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c6f495-c530-40c1-9b47-f37227f63323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1331eb6a-17f8-4f96-86a7-0c90e32f2d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca87ccd-a198-41ec-b9c0-2e92738cf470",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a258613e-f132-428a-ba25-275c5e431811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "decdd6ea-6598-4ccb-8c66-a400902dbbfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22494378-bb77-400d-9fc6-0f242171ba63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26e93519-e59c-4597-aef5-74780500b354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430300bb-1f7b-4a6a-b002-c7662b75bf62",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa1b95c-b2f5-49c8-8eff-61b8548998bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "975ec048-be8d-46c9-a807-bf5d08faa57e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fca787e-03c7-4e7c-9af5-69f799bde599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7832e3c4-8b11-4976-909b-8587ee97b9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8815f667-357f-4d4f-9a17-5b61040e14d4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc27692-e166-4564-bc98-74141c974d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a8306c9-27ae-4dc8-8994-8a32cbcd00f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ff10f2-3b1d-4e6c-9c48-ea64ad945ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aecf23eb-985f-46f6-a85e-2a2915461687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c045ce7b-7d5c-4ac4-b914-5139e3883f71",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30ca592-34e8-47ae-9a4f-788c3755f023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb2c05e-0427-4bc3-bd97-6d6a29f41385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f573111-d8ab-4cbb-a5c2-0071c75b3708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88e39d86-fd13-405c-b4d3-405945514449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8ae68a-076d-455b-9870-f174e963ca82",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1e1f1c-4f93-4e06-9b6c-74e3ce8400e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57628254-b0be-4666-992a-e4481a05e894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97521d8e-265a-469d-bf04-96a127b3a35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92cd3b1b-7343-4878-8aa6-e03dcb8ea6a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a92baa-d002-40ec-a913-7a90584209aa",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9112620-b22b-459a-931c-3fdc4f500377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37ecfd60-8ec1-40dd-bc89-ebb516e80414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8c26a2-3c2a-438b-94a9-4845daa0f9a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8be8b16-a53b-4cb3-bec9-f98cbf8528f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af41a793-f914-45c1-9d5b-ab2184d537dd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8329c23-40c3-4644-83b0-822db2075b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e579a31-643a-4870-bafb-d90a5837ff6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b142d0ef-150f-4d65-b518-9e9240c41ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2600d226-825a-4cd1-9dc1-0c320f38303c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec934dd4-7a4c-401b-8f38-d9c141590684",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ff9331-da9b-4b4d-93ba-a288c8aacd7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1844ce6-209e-4ee1-ba89-aaff11249164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56cb1e8a-715f-4727-a7ad-e605ae19f4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74a1d8b1-da3d-48a9-ad37-91f527e85c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376f60f8-cdad-4a31-b20d-6972137ce80f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ff9078-3692-44ea-9565-4acd4a159c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3501e293-03f8-4fd5-815e-f384e99f7bdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56cf088d-7c49-4ea4-9a1b-f9012cc467b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eeacf871-6760-4b08-a3fd-2b1c8f8f5941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a93e0495-f1bc-47c6-8a9e-c0df928b115a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb6efbf3-bc60-433f-aad8-31c5f3437bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70f83f8d-39b9-4616-b7f9-3990d54b883f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ba7ffa-1306-4ee2-afc8-0738316654ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65e2a427-a715-4c79-96e9-1782dc4d9cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f2531b-a5aa-4be7-9979-80ea2475f96a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d58ae2c0-3cdf-4878-82f3-642af68bd503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90ed1848-aea9-4354-8d4d-e9d67447fc91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813b88b0-56b7-4a50-b686-98449a03c82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "390e94aa-4caa-475b-810f-a9407df078b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd87920e-b1fc-47af-bba6-c6b2716f6d8c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9429ee5-2ca4-4195-8645-ea1d826b4647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8590e29a-b346-488d-86c0-22069531dcaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c49d6de-fb75-43ab-a917-4ce5ad3b4bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "363b2501-cbed-42b3-8649-3a684e614704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0873bdeb-44a5-4822-89fb-c467286146b6",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f080d15-6885-4db1-8f42-c71f770d3050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25feb2b6-5449-4a53-ae06-d0cd6dde106f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c065c0c1-ba7a-4176-af69-354e2f74b421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd7e1411-950e-48d4-90f0-817599912469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eade083-4283-43e9-8f90-13d953056770",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64d5e91-4000-4909-abc9-2c017399f936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef722e52-3037-4569-b2ab-d17653af212e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af42d8f-bed9-41af-9195-cec57cfc090d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c278fb6-dc54-426c-bd27-1845b95c782d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "600b498c-177f-4b26-ae2f-63e57d360dfc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b4035e65-dac5-4175-a9dc-ce048bdc634d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7f0bc1-3a1a-4c26-9279-31fd870e41f0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6f048214-7650-41ce-ad9a-dfcfbb257ee6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c0c82d-361b-4cdf-9c61-1e060ff40bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2507ead4-e126-4287-92e7-232ed2d6857b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7b7f218-572b-4eb9-b1dd-2b29bcc5e8d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e324246-df33-4cd9-b62b-e51274f9f234"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ebeb9ed-2b0a-4aeb-9157-8a4c6d9c5981",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ccbd815d-49b7-46d1-9977-a9a0bb62c07e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "26f0cb0b-3ee0-462c-a120-a763a55fa4ea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9cc94200-1f99-48b9-88f2-df10d6788129"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a27d14da-fe1d-4ba4-9932-d157edd288db",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8e3b599f-9adc-4ddb-9be9-49b6f90cca94"
            }
          }
        ]
      },
      {
        "id": "1b4f19e2-7542-4366-be0f-efb9ac410c93",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c7b22179-6395-4d52-9639-4fcea57f3fd0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f442e072-3708-4081-aacb-eb3eae615445",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0235ac71-ea54-43ad-96fa-598fa30aebf3",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a965ec95-0401-4a2a-8db6-1d625ad28436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d1b3a4e-b115-41fb-9ccb-bbcf617dad6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaaf7961-d06d-41f9-a8af-d40ca2c8626d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a65212-a422-4f67-bed7-0a4ebbece23b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3713d6b9-b767-4e9a-9441-5adc3c114a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be26b381-40e0-4045-8970-55172c0497e0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3cd37f-0f12-43e8-a652-a16241e2f5c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7327408a-65ea-49b1-8d28-133516d7c98d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c23aae-d49e-4550-8181-16a8b8e9b926",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68d4c6a-745c-4e07-9305-9c6016a09c2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "659b84dc-9a06-4eae-b9b8-3c7348a2b8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f64ad7-9324-47b4-ba62-0cd22917b9b8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27cf2374-86ed-42a1-aa9a-ffd87e1d2ff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9213b4f-690c-4e19-adde-c670d34b43fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45729df7-901e-4c01-a441-2e29994814af",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7c3ab9-d23a-42ad-b3e8-6be0d8b8eb3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c607901-ff5c-4b4e-bef7-3a1ca5f38e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "102d968e-fb59-4708-ba89-fa371999617e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea04d63-5bcc-48a2-90cd-86bc7d0ad150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eb2eb9d-7a9d-41e2-ad09-11e44850f660"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f0f4c0-c89c-4f39-a5e3-71be33c89188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5bbe493-dfe6-461c-b278-462d5af087ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e60929-02d9-403a-9df7-e390dcc4b4db",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc9de17-28fb-4413-97a9-a9e27d502688",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8186e591-8e98-443d-9263-53d84ede012e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4a3a99-d7d1-4996-a3c0-d04b4a87ab44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f45fc09-a4dd-4396-8f89-b595ab13cae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16cb027e-7e2e-41b4-9d6c-7f11ccf7cb2c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b24de097-27ad-4458-a8cd-33dba454b961",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc7090ef-aaf7-4df8-a59a-acee8506d6ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f5847b-8c26-4482-8189-7200b5c989cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "003d423a-8fa8-4e4c-b668-34d9feec3226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a8dc31-cb37-4751-bc46-5e0b13849420",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad61d09b-d68b-49cb-a907-38d90a24bbf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d6d4410-1581-4d11-a1b9-f0dcc8013d61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2482d3f0-3dfc-411f-ae4c-83aa3f0a70da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace219d6-b9c4-43e7-acd0-bf4f15f1db7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e7a5da-d572-4c8c-809d-f677b27ffb64",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33550175-a3ee-4888-a057-2b6f6455b685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf853ada-f47c-471b-be17-4718d94a1113"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1048f2-ab79-4801-84ee-1c70cc9b3e0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "796e2fdd-2299-4ba1-b094-aa4b731309a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8492db-9fc8-4424-98bd-0ba4676c9299",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b53c9b-b5f2-45a8-8eb6-bbdf55b73716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d8c4bac-3dd5-4143-9c59-a6e32bbf444a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b72cf9-2554-4094-b852-ece783ce356d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05a64e41-6e09-42ac-99ec-d90461240cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b28bbb-9f9b-4afe-b06f-42f5bad13451",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8f6777-b17d-49c9-821e-e7cd0dc93d8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90657891-c92d-4b7f-940c-ebd70fc04ef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11e0f70-ce62-4948-863a-2b2280ec8b96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c412831-0f69-49b1-b85d-eaea977001f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ef9564-8ee2-4c70-a73f-11a9690d88fb",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0689ec-ad25-49dc-89dd-254748a91b8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f369cbd7-83df-4a86-a883-bad36b0e346a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e60477e-d409-40fc-b809-d2a67eedc2de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da4334d3-1199-46c9-b37c-b66a6fd3fb27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6d8491-fc2f-46f8-8c83-40ec0f74bfd4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9895dcd-66bb-4e44-a7c9-8737683a05e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cf28a77-f3ce-4cf4-9eec-fcd2bbf85f57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cca9e47-6f18-4ddf-9886-7130404698d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a83c8299-3d4f-40a4-8fb6-89b44b443178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f105fa4e-ad01-4a2f-a828-5c6c4cfea2f9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0441be9-4ce9-46da-adc1-bc8f9756669f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48caec5d-904f-44b6-9c0e-741d2348b72e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2cbf61-3b7d-47a4-bfc8-cc6445d96b05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "135897a0-f8f5-4b21-b69b-f6e4269f369b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ca91ed-50f7-4268-ad10-c4bb5c27967c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad693c5-6fe4-49db-9d61-6057f135c5d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9311ad18-14b9-4401-af0d-29bd9da4ee16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "021bed2a-df34-4e4d-80f3-facaa393eeb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff7f5552-630b-41c4-906a-1e6a555dd035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a0f0ce-3530-40f8-839d-e6880ec22aaf",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f461280-b566-4e65-a854-5dd5c4ababa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "137af7b1-ca45-4e3a-8999-485b373e9d54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3664e92-aa0a-44fb-85a6-3717fffe2a2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02120e06-9f1f-4246-8d86-4798f14c1eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6bcaafa-9bd2-48ef-b642-10a077379040",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025621fa-0638-4d1c-8756-2aeaa27cbb9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67939e91-4747-43c4-831f-80441fcd6b6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e8d548-4021-45a5-aa9f-3774589044b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e5bced-1abc-4693-b8bd-9da7424c0028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34206575-24c5-405e-a812-12666b78d505",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed381f06-52b7-4834-994f-2d2acf08b3b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ddee717-930c-47a5-82e5-8839ce9956bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7029d757-b84f-4a4c-be37-688f71604c9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8757b54-2783-4c5c-b6b0-94b190ad46ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3a58dd-97ac-4921-b6fe-611da80c68a1",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935c466a-d32f-4d2a-a059-f46b7c16cceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3082cce-72d7-47e2-be41-112b1984bd3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "167fec94-5163-4a2a-a7ce-1e18c89807bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33cfdd66-d91b-4e5e-806b-2d6f24b93a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de2ab25-0d4e-4fbe-864b-6d8ba068fa2a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921853d8-6ea0-44c0-ac53-2cd52717b2ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1cbad1b-4413-40e9-b8ad-6fe159a10bda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf73cf0-887c-408e-9859-c885b91f6f61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cf060db-6ecd-41ae-b749-af8a69f88cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85847550-1b3f-4256-b178-f5a6cf41d97f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5090cc7-b7b8-4ee0-88c5-8265c740b48d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8cc72bf-2b35-415d-8b36-aaf52611ffd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c761c697-5548-45ba-929e-e86cdb6f1fe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b465743-d680-47d9-9e29-84a0c94351bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "527d5dd3-ae1c-4773-a8c6-0a71a3bb6a07",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0191be-9131-41ff-b353-6decbad39add",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1178ca6-73de-4dc7-9d0e-2515a4ef7056"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ce0622-5318-435a-a45a-4779bed097fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "058e5aad-222d-4dca-92e1-393068b0c8ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e619f9-6b66-4398-b331-4034cd904de7",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d47c9c-873d-4060-80c0-b0392ed3c3e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bb20cdd-3276-448c-a48c-6815493224a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3600af02-ae8e-4c41-8616-3452a721dc6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2ffab70-518c-4cae-a3e4-afe597776772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628d0b93-adaa-428f-9694-016288de293d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c215091-e7e5-4ab0-a68e-4ebf65cfb85a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a817d626-e01e-4659-a742-048a4bcbbccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2a04b4-1afe-4807-82d2-e51ca48bf894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed20532b-4292-4643-99ab-2bc444338a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5476f6-3de1-45a1-ba3a-04b6e628101a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a47b70-ca84-4733-ad13-abbf762e0863",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1868c35-0c64-4374-89e1-efb670a62386"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffaee5e0-07c2-47b7-aa65-b6429890bf42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bd3446d-1c8f-40a9-ad03-553039dc4c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56eb88b6-2b4f-44a8-90ab-715bbe41e75e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873c8d6d-7c9f-4ea1-b841-87dadca9019b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f88ce2-8a16-46f1-a2bb-daac7bf33645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "397003b5-e68e-4d10-ac8b-95319a3243ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b3a4ef1-f57b-4275-9a3a-d59e0195aade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e047fb42-a3fa-440f-b22f-97fe96e9c397",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7ebdf6-b443-4377-9f4f-c0dbc2a23b62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c802fb9b-d5e0-461a-b2e0-f23a2e67091f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7f4ce6-a965-4594-8595-8cf1acea7853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "811898df-dbf8-4a84-abe7-3ad4a454745d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc75ae96-c83e-4830-a5a9-4a15fce30ad9",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7578285-afa2-4758-ad0b-d0e80d3a7434",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a6bf0f5-c109-4d8d-a726-634abd9fba44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1c9d03-43b4-4495-90e5-4f035f887af9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7432c8a-15f6-4bff-8d22-f55940bb1b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8016bea1-1ea7-411f-83d7-edda2a09706e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1537dd1f-12a2-46c7-af3c-3f666fc05aee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "293115dd-f496-4ea4-b052-1074b5807741"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8180dc7e-54f9-4ce2-9580-973755561018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c767c10f-efe7-4a14-b2cb-57f2f754e70a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1237bc67-c717-4861-a2f1-2eeb2b87ccba",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f5f6cd-1d44-496d-9d19-4d63a9e1a35a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b2e4fca-733a-4e3f-b951-1f209783d680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef3e2d6-6c40-4bf1-9da0-051b2f7848cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "213cce81-0914-4a7f-97b5-6b429013ce42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae44fa20-7f1e-480b-87a2-4814f9259e1a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7adc77d-dc6c-4af9-9719-41e82f7f4e58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d70583f5-dd81-4367-98d1-abf35a6cc5f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff34140-b7f2-41d2-8d1c-54abf968e90f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b868245-2e80-48b0-9ab1-438b9ae4cb2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4211ff9-f567-417d-bc2c-440c1e7394a2",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef4fb2c-e8e6-4b52-9cf2-e303255cd3d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96414ef0-02c3-4078-868c-a52c8615a30c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ee91a2-09e5-45ef-8717-9f58d150b5f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d063306-6e39-4df1-a630-2f3ed7a9da67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b445d81-21cc-4c7a-b054-f018b63f097f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68b7d00-fe0d-433f-8b33-2514fac340c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec400c52-69a8-4d6d-b00c-aba7ecb26030"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb378e2e-4514-4d7d-b7ac-c6d783ed6843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c016724-caec-4c13-bcf9-40634b8bd1a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6787f5c1-5d65-4336-b20e-42a0c75e9789",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5207feb-0ce2-4ca6-ba16-6ac53aea63d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b469c22a-ff7d-48e6-bcac-0d06f47bfe17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b141e50e-3624-45e6-b7b3-61a799adf301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d1697ba-fc7a-4b97-940f-97ea27eb709b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99d5114-9cca-4eaa-ac9b-2fd14f12c8e7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1563ad80-30cd-4ebb-9705-e91f578aef35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06b09ec7-6e48-463a-9398-f2dd8174dc2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee4c976-cc11-496f-80da-ab746dacd01d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef5babac-e712-4780-b067-1f365957dc34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6fecc3-6d77-4808-a400-c87e63e50eca",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d10921-e320-4f44-98ae-9575bb4ec2bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beb9197e-2bae-4954-9496-91da6843acdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a77582e-c62a-4fa6-8881-6608ff27ee6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4f3fd3d-28b1-45cf-9d78-6de9b1a880f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ac5e62-3d13-4140-88f1-4fce936d8955",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f11dff7-1eb2-42dc-b6a2-f05bcf1241a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49008f1b-d55c-4166-810b-f60a1e171d02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "834df7c3-d1e7-447f-8e08-d1099a883357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddbdfe3b-d802-44df-9c1f-fead3a8bc68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14620a21-e951-44e7-a4f0-fd1c0b35c955",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b618f38-e28b-4410-a7ee-56bfd0e4d448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d493ceee-7850-4068-9481-d663b45de065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30299158-0903-4715-9457-4e463e28cccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "670a653d-b877-4ef3-a435-df279b55ef5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39825dd-771a-41ad-bafd-499cc8d6b47a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6697e3e4-f329-4786-9154-f1b0a577d899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0147bde-9167-4edd-bb35-115145aaa66a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee75bede-d48a-4fc6-bdf8-4d4f7af11273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e752acc-670f-4a9d-a221-d2db5c67d7a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7857f353-5a3f-4219-a9f5-d2af28c1be79",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55705ec4-0374-4f5c-8866-ee1444738942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d81d94c4-9af5-4eaf-8237-ab506e4115cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9cc311-179b-4826-9266-358928b6074b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40ca2090-a779-4632-adc9-2c2c152c92e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34398291-8ba3-458e-aa80-14ea74d54405",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b25f1f-c569-486f-9d73-9401b8e9a31a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "907da1b4-db5b-442c-b1db-897419d6efff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4a4bb5-b024-4fdc-9d76-0c179871dde8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b960964-855c-45ad-85de-9a08199b326e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af486ba-5818-49aa-acc1-ffceccfbfbcf",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2189ba-0595-45bd-895d-60457e284106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95071d72-e39a-4b7f-92b8-bdc147544ad0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9373ec-6374-4efa-89bc-1b3b575473ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b53e3fd4-5b5d-4982-9c70-2f4af3f1c12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8cb9d9d-0d1e-4d77-bed3-894bb43d8836",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a83bcf0-9192-4677-b1a2-a001a7d7fbd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "569f75c4-e0ce-4537-a5f8-79c3caf36219"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f317c5-6408-4a0b-a2b3-0fc5d53b40fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15155cf5-0a6c-4e4b-8fed-8da8fc474f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad011b5-99c1-447f-8b99-44f019696ad2",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b83060d-1109-4dfa-b732-0a771f6d0822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "264f39c6-7828-4f53-80fb-82590778b17a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9b759b-cc47-4dc9-b552-ebebdc8a4dee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b8ff58c-bdc7-4ed8-bd3d-38eea996c639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a8a4cee-4f14-440e-b518-1a552dcbec68",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff24d61f-ab1c-4414-952a-6a08c692102a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b2ad349-8ebb-49ee-a273-a663ca502496"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67c136b-bb2b-4b7a-a485-4c9355d694b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33093f1f-df9a-48b9-ae03-b85e5d9b78d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee7f122-7c51-42a6-919a-591b51fc6577",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c9d251-396f-47a5-84f9-7fc219abad5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7af017eb-e3da-4075-8926-e7cda0f4df68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d605148-3905-4a34-92e0-da1d5c72e847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3127ac7-0fab-47af-8961-2d0d54617e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d34d4e-88d4-4dff-90b2-ebf6cf36725b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873f587d-98de-460c-b7c9-c0d5ee57c37f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31f2407d-b398-41b8-94df-728fe5e6a03a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3ad960-cae2-4a12-8718-59ba429e7b8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e66b6ff1-8abe-4e3a-b26c-d3cb23e6a644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80864179-877c-4cf4-9477-7377ab1142e9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd3ce83-e014-4d45-9bd1-8811a04e2add",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "022699f3-c3b3-4edc-8dcb-9591daf225a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e010212a-9832-4dfe-8336-0bc0356a4ccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28c260ef-c2a2-41e6-9c74-ac3b5f38bcf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09788a2f-0239-4c46-958d-1334ac96a0fa",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2e4cbc-1566-4cdc-87bc-4059258c8df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05dcc067-a084-462f-9f60-d1ad15c94bee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a54fb91b-3c21-430d-a843-3a639299c6b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e4fa1de-09d0-4bf5-9469-97ae295becf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c7df22-d0d0-4200-b22e-6cdf3323f20e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084d13a5-4a5c-441d-9bfb-8a5063a014f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb9f8e72-1fa7-4ae7-b94f-e50a876bf38c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3ffcf7-dc8b-437f-8917-293da6ebb990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ae59ba-06e2-4502-a094-ddc31fd2932a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd1ba02-7873-4510-9bec-05d441efcd72",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1f9489-f9a7-4d7f-95c9-d106ac79009c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6a3f9ad-0904-4939-a301-853d214a7daf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5bb21d4-7aee-4512-a8af-404513262029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e57ed0c-ca90-4d21-aff3-8cefeb069f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb357101-976f-400c-bc68-b32926568294",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f014089a-c989-4996-89a8-9810d176ddf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cba1560f-e39b-4f94-9440-86d55eef06a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd65e2af-7f38-496c-99f1-1a3c231f6c98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e2a829f-6078-43ca-81e0-7a9b9ab7c42b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02779808-0061-4824-acbb-90f70f14b94a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "018c645f-ab31-438d-8fc5-b12aadd0c2a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd16a27b-ae37-4e8c-ab1d-d53c5ffdb311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c0d3e4-b50b-4c50-b4a1-09a5c4038e0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75dfe596-9e0b-4b87-a5fe-cfa3a577eab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678a2948-3470-4611-bb5e-897de120fc9e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757a52d8-52a5-4e03-9a54-ced2e52f570b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db7e791c-15f4-4d03-a305-b6f72d863891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1cb00ec-5f7d-4c71-8485-566c12a0989f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cfcd8e5-5921-453f-9597-b5538fbd4f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ec5d44-3b9e-4569-93e7-d7a96807e85e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab2102b-8845-4d04-87e0-57d97996f299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c5a29a2-b15b-4c84-a5b8-1e26c57be20b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b550c4-8ebb-4951-979d-dcff41d093d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3de49008-a424-42ea-9f6d-427758d1aa79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8608641-58cc-4782-8344-887a8259a39d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad392b2-04af-42f7-8ac0-29137cea0887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87ff3ffb-ef7e-4c5d-9f48-654330269097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09b9951-2d7d-4b56-acbb-3027a457f795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "932c1f0c-7f6b-4462-9a44-8d977e95a7e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e556476-022d-4340-904d-eb0bbc010980",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2afaf6-8676-4b7d-bde5-fbcc15ffd860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d05286ba-bbd8-4ba3-a9eb-e110faded97e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b34df293-33fb-4129-afaf-abbff3cb4190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce95ee00-a156-4769-9212-c1f1663894c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead0c071-a9f8-4386-af2f-6a372fc8332b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa5499e-83e5-4c54-946a-de6b1414f5d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e6a253-b822-4104-8b62-07096caadb64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c452e92e-7c77-404b-bb21-5ca5d4ae4765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff3ff946-0dcd-434b-9fae-5e4f95b9a5fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0cdce4a-c3e8-415a-8da4-00c0e8d311a8",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f47a852-ac7e-4076-977b-1bb4fe3647f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c8865cc-557d-4d07-a91c-cae7cfccf329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9922b7b9-291c-44f1-96f1-a2468d428719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "932110d6-fd67-42b9-b01d-3c6ac36e53d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45cca798-7dad-4941-8ea8-bb9caf859ded",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eefec9ef-1ddc-4f19-8eb0-55262de6fd14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f2a6232-f5fb-421d-8f42-1236cc62af96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a73d79-d85e-46e1-9bb1-97a4f38d032c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e4e0dad-f53e-4545-b698-aa751fa0b5ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0795bd18-635c-4021-94c6-ab3fd108e171",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259ef550-96b8-4ed2-bb65-6b7851e160ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be469401-742a-463a-a9f9-d1bc9c8bd901"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dccc0dd-48ec-4af5-a8b9-f96f6917a4ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f84b2aca-a7f2-4713-bce6-7b28a779e94b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7b9e3b-14f8-4d86-aa6c-69d3b0db0a42",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a43654b-a826-41f4-b973-769300ee0c87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39b64cb6-d4c5-4a30-88b3-452821601e0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "209ec24f-f06e-40ed-a23b-b857b4abdd6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "914912ec-0c29-48da-b8d7-2583c7186936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd985c8e-9acf-423e-adcc-163efedb0328",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d8dc37-1bf1-438d-997b-c9d4a97adf56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b347579-55ff-4bab-b51c-e5d17dd31fcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "311baf82-0834-4eff-af5e-0929582fdeb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e61b3ee9-510d-4615-a6e1-d5f701b973e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239f6f72-a65d-4c25-b063-296dffb69ceb",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158ca1c3-0852-43dd-900a-3d49f24c2965",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57af4dea-f747-4416-9115-64bcc5e357cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e45dcc-bb41-4cb8-baac-49a1d51edc9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "646497c3-5b1e-450e-94df-755b571e8dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9940f58-278a-47fd-adc2-4a4ebe7f46fc",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4c14c8-36b5-4da7-beee-8c871f58c6d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7595bf2-c293-42ab-801a-34485efd2fc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "019c4fbe-9eb4-4391-8c25-3183cb19d8fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf23bf99-e77a-4d53-bb2e-27ffb2c8791c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4cbbb1-9682-4bca-adcb-42ec6c4adc05",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c61fef-231c-4b60-b4d9-40bd6c4bf55b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d536efe7-602b-40ca-a843-0df1488396f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "310981b6-402d-4e03-8de6-2d5be99e62af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc1008dd-d44d-48f6-b484-155fbc1a1f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690507b1-d3dd-4b87-82a9-b76dbb9100a2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda759e1-5d02-4f40-afad-937a0ad7c452",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c8be7b2-49d1-44f5-8f2e-8c5d02e8e94d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee7bd8d-be98-4664-a913-134bb8087fc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36cc3182-ed1e-473a-9df9-4b9c6afcb0cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e52ed2-d90b-4800-bf42-ffb390948e04",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c45d11-5068-4231-9c17-3daac8b7cdcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ec99fa7-66f6-46e4-affe-98f3169350cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1430c535-1f7e-4a02-9930-30f020ffa2b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61d56ad3-a77d-4c5a-86d9-85e1f0eb611c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd56cc8-4075-48dd-a482-6d6f4ad99eff",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ab0c01-5833-4b13-b9ea-a414bd06b862",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52a62d36-1311-420c-9d95-982443d9977d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "493c0bbf-8402-495e-9c45-bce296010da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62203a51-0422-4755-a8bc-5febee087cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7938bcd0-ff8f-41fd-86cf-dfb3880f6bc8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc678ba-f4e9-45b2-ac10-94ec42cacac4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ae0c513-2ea7-41ea-af33-fbf8633fad76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f498159a-2bbb-41f6-afc8-cb41366083f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfe206a0-632a-44c0-a49e-4f51f7fe5490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561472fd-085a-488f-af14-9cdafbb84f80",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d17979c-ff39-4eac-b508-545b3c2ae007",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60d54a13-296a-4ab6-bb9d-cb4d5df41203"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df1df46-6e23-495b-8daf-0d75755a8e34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcb170b2-117f-41e1-ab84-3471c9051528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e417b680-f7f6-4851-ab7b-40a09ccd9a75",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39fa698-b494-42ee-8b31-a55f0b2ee2bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a8e5aa7-9f7f-4a78-a777-ce1ca3ad6c48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7343ea50-d453-4f6d-95c2-33146aafaa07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4902f4d3-61dd-4084-83e7-f5d1992561f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c12b370d-7410-49ae-9cd0-2e64f37adafc",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8479972f-db76-44ef-b57f-5348b370ab62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f57b7a87-0c90-4591-9ef8-1fb7fb006632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff49af3c-6829-4c91-bdba-e9a504127214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad46db9c-e82c-4f5a-982d-a9bd05feea34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c0c77b-0de2-4ec0-8288-e69bbe5759d5",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2852d3d9-fe4f-4b7f-9a6b-d27ab444d79d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c03bb644-b0c2-4b60-b4e5-add8024f50eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64fb1375-7cec-4c77-a769-6fd01dfccae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d0e8390-7b2f-4bb2-85b7-05432e15e8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0cdadd4-8dd3-4216-84ed-8d2d1c1d8df3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3044ae4-352b-47e1-9463-38f8764d4c55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fb56fd8-df19-4f3d-b874-20b5441bc53c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9eaacf-c20e-4bad-95ee-6a7bfc1b8101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23a598cb-c263-4632-a4b2-8ab5727b83da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37925601-b0c7-4edc-b369-17b695cf290d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e790d5-344b-4381-a4a8-6a08057230da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "438c7afc-d2cb-4fca-93f9-4462affce950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4929e86c-6d83-4f61-9fa3-c67cda4e6487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe0326a6-5024-4431-9e9a-461aa61b3c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c58b653-e4b1-4eaf-847d-c5f86c7c1f85",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05081493-a0dc-465b-8f5f-72c513f830d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daaffcb3-59d0-4713-a7d9-20d37b727c75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81727d34-1e7c-41f5-a44e-3f31640b4f49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfdfc450-1e6d-4a55-88c4-42cb7c62b273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52946ecb-2014-4685-a244-72cd46f578b6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9f999a-8cb3-4ba6-b5a0-acabec3e6306",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9be9a37b-6707-424a-9c1f-66bcbf2580d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59f79a2-ce71-4da7-b260-ae80c06ffe7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc324027-b8ca-489f-8dc9-3e14bf54869e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec80d96b-b724-4b12-9eeb-5d879b7f282d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a5a57d-215f-4287-9242-dfa354706689",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08910e1a-4dd6-4234-a996-8cd72976b06d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b129af8-4a78-41aa-a3dd-fc8f7d3df796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcad29ff-cc62-4232-a7ba-f0a9c4f6e7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02159acb-2707-446b-a882-061a3c61f0e8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1477ef5a-f436-4f23-95ec-dbac149dff0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "849e954d-e0fa-441b-9499-d83f5123bdd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de83bc30-fa4a-47d2-971c-bc59f5574b21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecad86c1-1a45-4233-a24e-d8716fc2398b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5308048-ba01-40c5-8be5-d8f3687d190a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "384c4ed9-c37c-46d1-be96-e4df2e978a7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5ad36e8-a9a5-4adb-9401-90912682fd93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "452b16c1-892b-41d8-a81a-daf423c5e345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df45123d-4c16-4500-8268-bd20f2ac6d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f1efb2-8aa5-419a-a871-c177985fb987",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50df3ce8-9634-4b2b-bc44-5e56ebe7a11e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be071ae0-f5fb-458a-9667-736cc69170f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26790f9d-d8be-40da-9159-887d873f3122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f949bc68-fd87-401c-a03d-04bf3e98d75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5b4996-7e76-4ec8-b083-6ba016082693",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458921ff-9626-454e-b1b6-257619c6ac47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7eb1fd2f-edd5-4823-95ec-54f4265a5ada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d906b31-3221-4767-93de-03573c2f2d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76cabaaa-fe80-4b3b-ac7d-e1ad73b5f233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84a54ec-3762-45fc-9559-84b79c296be6",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e2bab3-808f-443a-b2e3-ac640bd85378",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efe14c16-9c3b-4ccc-9861-9ab3b05463f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34cadbfb-045b-4489-ba8b-ee45f4a627cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fbb918c-bc3d-413b-83f7-14d4a9abef40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967cb43a-d6d2-4874-a76e-144236617ba7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bfe8690-7a06-4df5-b212-295377142526",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a25a803-6013-4b3e-aa49-cb235d4766b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59761df-644d-4de8-8157-ecd2daae0352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a6c0ee1-317d-43cd-aefe-a794731f8e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b72727-6c08-4a22-9c70-523ca62d6953",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d70ef5d-51f4-4ead-8d5e-e996498f0ed6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1590e86-c5e1-409f-8ddd-8bcd7dd235fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e909180-4d4a-41fb-b744-532c360014a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da1fdd78-1307-4110-8914-2b3d2d24442d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4726a6e7-81fd-49be-857e-6722b63636fc",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a3aadd-70cf-44ec-ac95-8566b02032bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "633a289c-dc13-4ba4-86c4-862931dbf437"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d2f853-f0c4-455a-833c-395020e9636f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09cc277e-1595-4e4c-a96c-69247e870e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4cb0e11-1e78-4d6c-866b-608fa9aa734a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d945267c-1149-47d3-8298-7fccbb247899",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acf477cd-21ca-49a5-bc06-9b55bb1e5c1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a29243-800a-4dc8-b693-4a52e948b998",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc2f3b4b-6062-4d3a-b579-b6edc65cb21e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b92b67-a499-4657-bf0f-ea016e0ed4c5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb7c4ca-50e0-49e7-a430-df97eb56ee85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f27d817-927a-4798-9215-1e0df62915ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd21119-76be-4a3a-b99e-4c3383777284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0142c6c-3833-4e27-86bf-787c4089e8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988c3c50-8e9f-4fa6-8f18-78da1180acea",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0609fb-eddd-4a49-a449-9a1bf43e0f12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5214bbb-02e0-4675-b431-382f3554d68a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f51d431-d1af-4ce8-aedc-0e0004df4c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7f71209-d764-4550-9d90-8ee46c42c45d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f71d56-d079-4181-9109-a2ee30c5bb7f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3519af-6236-4d4b-b88b-26bb3fb2a69a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "788f125a-a9ea-4024-9089-82d2533e2621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5daad781-cfc1-4ff3-a697-a9712d371718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b657e94d-1692-4fca-8f09-c6a32206ec57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614429a5-d87d-40d2-bbe5-7791f5dbe995",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b12f53-05f2-48a0-a926-f3af2dda9517",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ea0fe31-be8f-4600-b2f1-69c58e2cfdcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f0b11c-11a1-42f3-b315-c6655b6e924c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25ffe19b-2d43-45d4-b048-3a3421d14bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846c2265-cbf7-4fbc-b97f-099d35c9dbe1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4f4536-ef4b-4b0f-9a2c-583f5b961f46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f318a85f-1399-4f6d-be25-cfc4165e9e47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea5413c-cb15-4f8a-bccb-3ea3e31a97e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d4c3790-7e55-4b86-840e-f8a48f139b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52acd794-8498-4a32-9af5-2e97bb8ba7af",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b60467-45c9-4fcc-885a-519c81185b32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7d5418c-b283-4ac3-8a88-79ec336c204d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1379bb11-03eb-4fbb-811c-0d76656fcd03",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb457a8-79dd-454a-9761-40dd0e789b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2296cd2-ab76-419a-94a3-a495615bafaf",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70f003a-2d19-4080-97f2-25bafd607f05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e92bc29-c577-479f-8137-e7d26730736e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "737afcff-4bce-4719-8cd7-24347aa13535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf2ff55a-7668-4cd1-b4ad-7039f1a47478"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37f7e3ce-070a-4d02-844f-922d4e9b526f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8f1bfeb-28cb-4cb1-8e29-5b694e14e3d8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5008d8d1-6a23-4247-a8a4-d36f24039125",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a68d9f0-4f2e-4ec5-b526-9e5561aa18f2"
                    }
                  }
                ]
              },
              {
                "id": "c98ce693-73a9-4431-b4dd-b548d2de2f37",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ce5451a-fdc4-4b4d-b2ee-ad38089aa77c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20c7aa7-b634-41ba-8f80-1637b4f18614",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "36d31363-6db2-4ae0-87ab-a526b3f25ef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e6c618-c328-4521-b90f-40f6968dc93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f8e8a5d8-a942-4300-a7d3-5a0037de2f4e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6968932-ee5d-4e8e-b72b-a03a87f9051f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd4c46eb-bfe4-404e-badf-ef542f00ff60"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "843c7a0a-47a1-4b66-8954-20d9074c698b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "883653d9-a934-4b50-9677-d58a8f9cc32b"
                    }
                  }
                ]
              },
              {
                "id": "1ea51041-1c33-4169-bf56-07459c6496b4",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0d6e31bd-8184-4a1b-bbf9-e050e7887399",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3e95b8-7579-4cba-b5b6-84a0c8854987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6f769d09-4b39-421f-9f0a-e63d04a14667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47c5aa0-2079-4ede-8771-f9615ba48e02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec15798-8f55-48ad-90e4-c92271c04586"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8d33e55e-ba6a-425b-8dd1-5b8611e3bbf3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "395014d6-cb55-43af-95de-20e8dc573831",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80ba622d-de38-4d99-98bc-c076b4e61ad9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "85b8114f-b9e1-4ab8-bcb0-123cc6b3132d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10b75d1a-ffcb-4fde-b5b7-2ea0e6a1aff4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "626cd0bc-c821-4348-b5dd-b36eb86bd23f"
                    }
                  }
                ]
              },
              {
                "id": "f29f7719-280f-4c13-833c-f8f71d6ed803",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f66f180e-665f-49fb-b3e7-c3d01dfed901",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "46dee0ce-9563-4b76-b08a-820d0e5c3bc5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd3f05e4-71ef-4bc5-8f04-dcf7a259e43d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a85c4beb-432e-402d-9bb8-73518fc36b2d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0dee5dbe-875a-45cb-9a7c-386ffa36fd28",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "18734905-0008-43a2-93cc-0a6b10fdaa38"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e91cba51-4980-4158-88d1-c962f9905f20",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "90613a45-30d9-4f4d-b58f-6ed806b62324"
            }
          }
        ]
      },
      {
        "id": "771ae492-ac19-4ba0-9f1f-55b206c54e83",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "91d99c0e-c158-41eb-a6b9-dfb4c37f9210",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a31d7d8e-735b-4a4e-9f14-6ac42bc58684",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "16519942-3c0b-46d7-8f5b-e09ba43af63b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f6b4e9-c663-4e30-8bdb-4ad63d35f3f3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1d790acf-22d0-4c64-a1ed-c51eefabacf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5196d30-66bc-4c3f-a694-af2befeefbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c14ce78-0061-4f28-8b91-e6db43980e22"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "969a8be3-0928-45fc-b041-8cdef7c1663b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0e58213-a532-4a99-a876-413c836b30f3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c6d4de5-c052-4bfe-8733-269813fe1d6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "652ad496-9d82-4cdf-8968-db97e53a9c4e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0188bf0b-1a37-4f72-921e-d1674f7f897b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ec1f00ce-0a5a-44f8-96d6-dd17dc34caa5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e6496f2-5e1b-427b-a288-2555a4beebf6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a732cd12-5906-4a86-b15c-d069c5c3eae3"
            }
          }
        ]
      },
      {
        "id": "2b786f62-8ca7-4408-83dc-daf8ad19167e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "769363af-54e6-429a-af96-d9a417eb0946",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2430a97d-a311-4465-b127-0678956329fd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "77ff65db-3c21-4798-845e-a32234023fd4",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f1209a-bbfd-4bb9-811f-781b9a197fb2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce0b8045-624f-4fce-b4b6-67d6cce6fbe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94021caf-5cef-43b8-964d-5a8182024daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "254d9b02-926c-468b-8520-5b1f3ea77f53"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc592b9b-2ce8-4569-96bb-d6682ba784eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4027910-aba6-4a17-a93c-1bea4c5130f6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "11d944f5-25ad-4bd2-8918-30b6217ad61b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "963cef6f-ab2e-4a3e-b9e3-1757341bb9ac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7df9b397-1049-45e1-8ff2-0795a212e84b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "429203f9-f4d7-4b79-b31a-3d01c62892ff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12e6c975-dc59-41a4-a049-f132beac21b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aec3e488-2ae2-423b-a175-f5cfd47053a3"
            }
          }
        ]
      },
      {
        "id": "8749e736-928b-4f34-a296-19837199d8ee",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3933c4b2-af1d-4ff2-b6a0-cfa3f3ee0ada",
            "name": "Negative Testing",
            "item": [
              {
                "id": "edfb448f-425f-42cc-8e39-11cfb6d5b3cc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "62a66799-64d8-4848-b0bb-8658be60ed05",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d46fa2-2762-46c2-9f1a-61ccf591aeb4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc76c690-85e1-4943-8603-de45d9cd0a60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c75cc63-acd3-4053-bb6a-cb77d6eb8f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ceb2669-a11c-48dc-9df0-fdc4b8f09016"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e69e4ae-3ead-46b8-9031-5ae2c6ade514",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70f35d57-7c6b-4a1c-a555-2ad82eff2b99"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed3b132d-fa3a-43f9-846f-6d7dd44047b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "687767be-dc0d-47f5-b212-dd181091005c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "564ce975-8191-4045-98f0-da0e178bfbd6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3457f0bb-3871-40b9-9930-74a1e390e8c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "af458a9d-5979-4630-990c-e0d8babc38d9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c454e78-d6ac-4ce0-9533-af6955757292"
            }
          }
        ]
      },
      {
        "id": "481c2b09-1699-49c9-87a5-0314b0db628c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a658c35-47ac-4aed-ab31-4787c53fffa4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a8bb1631-77c5-4c9e-9a34-cee7d4e326e0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "75e8bbe3-fc47-41c1-9acc-b776d9413129",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fd8a66e5-f7a6-4581-9c79-d31efc00f1f4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "46603b84-f32e-4813-9408-ec71b1dd6322",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 67.11111111111111,
      "responseMin": 5,
      "responseMax": 626,
      "responseSd": 37.20998377339379,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1726274563065,
      "completed": 1726274588004
    },
    "executions": [
      {
        "id": "ee2f0350-2fe8-4b0d-a483-1565ea09898d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "33a50f60-38b6-4738-80c3-bd6fc299ccfb",
          "httpRequestId": "eaf14530-4071-460c-ba91-1e0015d512b3"
        },
        "item": {
          "id": "ee2f0350-2fe8-4b0d-a483-1565ea09898d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f37b7b00-194e-41f2-bb91-b954578fdce8",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 0
        }
      },
      {
        "id": "b3b05063-8b94-4d0a-963b-de33a5178a1c",
        "cursor": {
          "ref": "7d61c822-af2e-44a1-aced-ea05165648b2",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1d678c32-d692-4221-bd34-837fa2858ea6"
        },
        "item": {
          "id": "b3b05063-8b94-4d0a-963b-de33a5178a1c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "df3f7390-8e71-40e7-b9b8-dd5ed0e38202",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "34062aad-b95c-4377-ae41-780720455675",
        "cursor": {
          "ref": "604f4a42-5063-4e9d-9d80-edcb44981a16",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c621e3df-185d-450a-b923-f8748f895b43"
        },
        "item": {
          "id": "34062aad-b95c-4377-ae41-780720455675",
          "name": "did_json"
        },
        "response": {
          "id": "4e83a2dc-edcd-45e0-b606-f4143da9e772",
          "status": "OK",
          "code": 200,
          "responseTime": 214,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d847264-7077-41b4-b224-58afc00d0f92",
        "cursor": {
          "ref": "0f5a3bb7-c7c1-4010-bacd-23005b1fad4e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6f0c7604-6824-41fc-b9cf-e83427308e81"
        },
        "item": {
          "id": "4d847264-7077-41b4-b224-58afc00d0f92",
          "name": "did:invalid"
        },
        "response": {
          "id": "7ad17b17-f7e4-4d01-808d-48d56fc2626e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d847264-7077-41b4-b224-58afc00d0f92",
        "cursor": {
          "ref": "0f5a3bb7-c7c1-4010-bacd-23005b1fad4e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6f0c7604-6824-41fc-b9cf-e83427308e81"
        },
        "item": {
          "id": "4d847264-7077-41b4-b224-58afc00d0f92",
          "name": "did:invalid"
        },
        "response": {
          "id": "7ad17b17-f7e4-4d01-808d-48d56fc2626e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bbfe408-8469-4cb8-b46e-3188c080fcdf",
        "cursor": {
          "ref": "6179624f-ca97-4095-b25d-6d5796a1dafd",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "183045bf-5909-4fec-bb35-8fd82d0c1a7f"
        },
        "item": {
          "id": "4bbfe408-8469-4cb8-b46e-3188c080fcdf",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "cf999cc3-e152-42f2-8ac6-43d0bc10a415",
          "status": "Not Found",
          "code": 404,
          "responseTime": 134,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14ef01e-0bf6-4306-b558-24aa9a1e94a1",
        "cursor": {
          "ref": "742ba78e-77f7-4c51-a3d0-021710ab56f1",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "bf6b207b-26f3-4e29-8f67-d10f1edbba9b"
        },
        "item": {
          "id": "e14ef01e-0bf6-4306-b558-24aa9a1e94a1",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "436fbbce-e090-470f-970e-66fb7b886909",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48edb2b4-e5cb-4816-9485-54788d2f31a8",
        "cursor": {
          "ref": "5da0bed9-2de8-415b-bb48-1b605d9cdf80",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c92dc12e-b408-4027-8e8a-89cc4a5e293f"
        },
        "item": {
          "id": "48edb2b4-e5cb-4816-9485-54788d2f31a8",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2e6f9927-2685-42d1-92c3-ade6319a5d37",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d8e92f-b8e4-4990-b138-cdf01fa13c3c",
        "cursor": {
          "ref": "a5ba9254-42f6-4c48-8258-69afd2eb40b4",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6642092d-b12a-424e-bd02-46ab20e9c1a0"
        },
        "item": {
          "id": "b8d8e92f-b8e4-4990-b138-cdf01fa13c3c",
          "name": "identifiers"
        },
        "response": {
          "id": "75144dd2-9fa8-45ca-ab9b-9b384b6c1c02",
          "status": "OK",
          "code": 200,
          "responseTime": 105,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d9777c-7f23-4297-a523-7d42e7d55464",
        "cursor": {
          "ref": "6e79829a-18fa-48ac-96be-0eaa0a387b43",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "bcb1ed02-bbb4-419a-870b-be7c6a9fb7dc"
        },
        "item": {
          "id": "a4d9777c-7f23-4297-a523-7d42e7d55464",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "192c3df1-2261-4c04-aeb3-be393aaa90a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa2fcf7-fb06-48c7-b62a-45eb7a6ecac2",
        "cursor": {
          "ref": "7cb4460a-8ca5-4761-b034-3ca0dcd4a667",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0bd599c6-256b-4eb4-aa2f-c8704e60b685"
        },
        "item": {
          "id": "dfa2fcf7-fb06-48c7-b62a-45eb7a6ecac2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7e6980d3-5013-4ee4-9c61-76d92c8e62e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20eac43-aad7-47fa-b74e-2f7682d3a77c",
        "cursor": {
          "ref": "72535aed-421a-4c09-b67f-4064566eb1a3",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2c57794e-b7c0-4b7e-b144-a23b6291a355"
        },
        "item": {
          "id": "e20eac43-aad7-47fa-b74e-2f7682d3a77c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "efd04f41-3c48-4642-b920-c55eea336416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4830dd-4070-4cae-80a7-4e3e1be31abc",
        "cursor": {
          "ref": "a44ed245-657e-438a-8a8b-cf2ac24a72b5",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4db7be1c-2955-4eb7-a860-0f4d84e5e80e"
        },
        "item": {
          "id": "3e4830dd-4070-4cae-80a7-4e3e1be31abc",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "67c24887-dc2a-4661-b89b-b291d09d92bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f0db14-7f31-441d-bc3c-9ddd0a2a113e",
        "cursor": {
          "ref": "052d32cc-2f75-47bf-a688-31ce7cb416f2",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a37565ef-adf3-4f4c-90d0-3601decb74d5"
        },
        "item": {
          "id": "74f0db14-7f31-441d-bc3c-9ddd0a2a113e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8b701572-50a4-4b9e-905d-e38fff8fc1f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee14c31f-d72b-4155-bed5-c2e7945487d5",
        "cursor": {
          "ref": "8bfcec21-94af-426a-8563-7268bdc164c6",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "bc5dfedd-4e89-400a-8266-ee676de4c828"
        },
        "item": {
          "id": "ee14c31f-d72b-4155-bed5-c2e7945487d5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0db0f500-b786-454d-9ef8-92dd9a6f75eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54fe7b13-7b29-442c-92f3-45f8ad3fb282",
        "cursor": {
          "ref": "db0324aa-351a-43a9-a1cb-dbc6a3d1cf65",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4c5ee0ad-83dd-4832-bfe4-a3ed5955a1f3"
        },
        "item": {
          "id": "54fe7b13-7b29-442c-92f3-45f8ad3fb282",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "63adbbed-0d45-42d2-bc99-fce603ee0ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe79dbd7-5cc7-4898-add4-d29daf024786",
        "cursor": {
          "ref": "8a0eecfb-9cb3-4515-9efd-f62566a3ff8c",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "21e34730-43ad-4e8a-9b70-a303bba3310d"
        },
        "item": {
          "id": "fe79dbd7-5cc7-4898-add4-d29daf024786",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "598b5c6f-930e-47e3-86cf-802e54c266c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224f71d8-4d00-4f65-ac87-ab8eddf48d8e",
        "cursor": {
          "ref": "d4b0fb45-b79e-4d60-a8ca-9f9fd98a2409",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9ab82ff6-aa11-4797-a3ee-d12a9ad252b7"
        },
        "item": {
          "id": "224f71d8-4d00-4f65-ac87-ab8eddf48d8e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9d9f619a-d4ad-471e-8143-44e6e6af90be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eccfba9-0e16-460e-96d7-0194c4391be9",
        "cursor": {
          "ref": "f2e2feb0-ea5c-49a4-b364-c4ecba98726d",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4afcc86e-f443-404e-8b04-269c5d72176d"
        },
        "item": {
          "id": "0eccfba9-0e16-460e-96d7-0194c4391be9",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4118993d-3b1a-4247-b6bb-a08eaec38508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6377b7f8-bd75-40a2-a5f5-32f5f3f96071",
        "cursor": {
          "ref": "29ba21c7-ff18-4f4e-94a3-3cce50d13c1c",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "da15198a-8561-460e-a090-4d60faaa132e"
        },
        "item": {
          "id": "6377b7f8-bd75-40a2-a5f5-32f5f3f96071",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "061d7c5d-1070-481d-a600-bb195983419d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6e0ae7-db27-4461-b3fc-d5a75ef0a60a",
        "cursor": {
          "ref": "4652b86c-b2e9-48ee-85a9-1967a0dce7c1",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4c7d7e41-2822-476b-8086-90eecae3a89c"
        },
        "item": {
          "id": "8a6e0ae7-db27-4461-b3fc-d5a75ef0a60a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3689b893-a6e3-4af5-b8c5-eb241ccf9e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c3f9788-9bf9-4909-a6e0-21941103923b",
        "cursor": {
          "ref": "6ac0c5b8-7c01-4c75-a5cc-441525207a38",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8c1678d8-d6e1-4ed0-a043-8aa2328f2335"
        },
        "item": {
          "id": "5c3f9788-9bf9-4909-a6e0-21941103923b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "acc6a5b9-33d9-46a2-b2a1-abccb85640ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e131d94f-aa33-41ff-94ef-cc937e88b986",
        "cursor": {
          "ref": "8e6b5f49-0dcd-4281-a3b8-6e772d568cbf",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2169bc2f-7610-4a78-af60-dbb5edbac6ea"
        },
        "item": {
          "id": "e131d94f-aa33-41ff-94ef-cc937e88b986",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "86830202-b3e2-4a8f-ab9f-22568063cf8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e585c5a5-c752-43ab-a7e7-6c0fcf8b523a",
        "cursor": {
          "ref": "e01789cb-25e5-4e9b-a6fd-ed05f7fb6f81",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ad386497-aad3-4915-a705-a87b46464421"
        },
        "item": {
          "id": "e585c5a5-c752-43ab-a7e7-6c0fcf8b523a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4a52d212-0906-493e-9b98-a95ec196107d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acaff353-90e6-4cb6-84af-26fe34265be2",
        "cursor": {
          "ref": "85255c62-6eb8-4b10-887c-af3087bb9209",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "90054fa3-55d0-45e4-959b-7e89f1802b1f"
        },
        "item": {
          "id": "acaff353-90e6-4cb6-84af-26fe34265be2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "deef2171-28d3-498d-88d4-73aa16b736b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827e6bc3-1b16-46e5-81dd-01ae411b948b",
        "cursor": {
          "ref": "7c6bc32f-fad9-49e8-93e4-7be6777618b9",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8e821695-7f0c-4bd6-b839-ddc0d0b4492c"
        },
        "item": {
          "id": "827e6bc3-1b16-46e5-81dd-01ae411b948b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c5a3f2c8-423a-41a0-a93b-4b563a72067d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d88b31-2bb0-4295-b77c-04808ccb25d1",
        "cursor": {
          "ref": "2ab089bd-8f10-474f-93bc-acde9a2f3efb",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "193f4bae-f872-4bf4-8d8c-fafc726c859c"
        },
        "item": {
          "id": "84d88b31-2bb0-4295-b77c-04808ccb25d1",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b46a9a71-dfb8-4961-aacb-73469a66c939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d98c8f0-9978-4f34-a0d1-7850fceadea0",
        "cursor": {
          "ref": "126d2be8-ced5-4a5a-a9ec-2dcead8c9fb6",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e3e07392-5500-443d-8e51-d8c51b6cf3d5"
        },
        "item": {
          "id": "6d98c8f0-9978-4f34-a0d1-7850fceadea0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b346af26-a4e3-4f74-8d36-d667875b89f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeeb80da-00bb-4aac-a45e-2aa92f49cdcb",
        "cursor": {
          "ref": "7c17c546-bb18-4ceb-b1d9-2d8bb0f3c38e",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "845bee76-886b-430d-a3a1-41368e5be407"
        },
        "item": {
          "id": "aeeb80da-00bb-4aac-a45e-2aa92f49cdcb",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f81b5b77-2b78-4d91-8699-cfe2dfb2fc6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cfd67bd-2ca9-4416-81ab-134119ee1c1b",
        "cursor": {
          "ref": "1c509772-7ef4-4986-850d-b7877758750b",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "71ddf3b4-65a4-4845-85cb-44caf78a929b"
        },
        "item": {
          "id": "4cfd67bd-2ca9-4416-81ab-134119ee1c1b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6f232019-7240-4294-a125-b6a2bae9ec06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3bef32f-b3f5-49c5-92d8-fff988330152",
        "cursor": {
          "ref": "27152c98-08ca-4ced-835e-8b047df0f166",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a93c86e9-6c2c-4f9f-92df-411f4a9691a5"
        },
        "item": {
          "id": "d3bef32f-b3f5-49c5-92d8-fff988330152",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8d58ca5b-fa24-4126-90fb-ad58623582c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd935ac-02ed-47c5-8f68-204fd613c805",
        "cursor": {
          "ref": "8be691c6-4622-48e0-918f-321f1d7e16e6",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "57570083-9eac-4d78-bef8-6de347b22829"
        },
        "item": {
          "id": "8cd935ac-02ed-47c5-8f68-204fd613c805",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f6cf78cc-b0db-47e8-9a1e-b002ea3e4fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0369ab-35b1-4bd5-98b3-9465d4bfcf82",
        "cursor": {
          "ref": "f8af475e-4d74-4d79-bc21-c0a5cbd2496a",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "52f03907-df6c-42df-9641-11fafad96dfd"
        },
        "item": {
          "id": "3d0369ab-35b1-4bd5-98b3-9465d4bfcf82",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "48cdbbff-5fbb-4053-a93c-f7fafc497c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb7618e-20dc-4fc5-9c4a-de539c5cd425",
        "cursor": {
          "ref": "f1f38d34-11ae-4c68-8e99-bd6f905393e7",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "32661d1e-d8b6-4938-9090-ab284db2b94c"
        },
        "item": {
          "id": "9bb7618e-20dc-4fc5-9c4a-de539c5cd425",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d8c0e408-0924-4784-8934-9919bb84946c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88098f2f-15ef-41ed-931e-460ecc626f81",
        "cursor": {
          "ref": "a4ec6cb8-aa34-4f4d-b95c-0cc2fc7a0937",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4f45299c-a1a8-4cd2-a2fc-847dfcf0748f"
        },
        "item": {
          "id": "88098f2f-15ef-41ed-931e-460ecc626f81",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "788103a4-6ee3-4eb7-8889-8af690244756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ead14cb-9be3-4aac-99ae-f01df1095505",
        "cursor": {
          "ref": "9e72f3cd-28e1-4404-b65f-f5d715b711a0",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f3929ceb-de1c-4286-a002-b86166b94545"
        },
        "item": {
          "id": "0ead14cb-9be3-4aac-99ae-f01df1095505",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d4b6d60f-d849-4bde-89f9-0dcc4841091b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88214a4-9769-41c0-ba22-4d587a345f13",
        "cursor": {
          "ref": "59d5fdb8-fd91-4df8-b763-4f06ddf91247",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "bac18f9b-44d2-443d-8563-61f47d9a6d91"
        },
        "item": {
          "id": "a88214a4-9769-41c0-ba22-4d587a345f13",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "fb3f0d25-1414-4514-bd88-91f7632f20a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd22d5c3-9160-4098-aa7d-f415569bcb80",
        "cursor": {
          "ref": "1a11f489-9adb-4493-ae7e-8987f8fd0881",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "674a5182-1501-4a17-a59c-16c4681096b2"
        },
        "item": {
          "id": "bd22d5c3-9160-4098-aa7d-f415569bcb80",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "dfdcb94a-e110-4d3d-9183-3e06a74f743e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483ff8bd-a274-4b42-a0af-0ba8e27cf199",
        "cursor": {
          "ref": "e560d783-b958-4cd6-a522-083535359d21",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "19d955ac-952f-4f14-8bc9-31f28b664f80"
        },
        "item": {
          "id": "483ff8bd-a274-4b42-a0af-0ba8e27cf199",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "367cc988-9158-4042-ba74-9e0a6fab8bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19fce04f-9877-487b-bbfb-9d437adc5737",
        "cursor": {
          "ref": "15f58137-bd1e-44dc-a1de-39a3661e9e85",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "30e4374a-7b57-46b8-b1ea-75b6c0ffd694"
        },
        "item": {
          "id": "19fce04f-9877-487b-bbfb-9d437adc5737",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a2b26e8a-15e4-435a-80f0-a02ab6beed45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aec7351-7381-419f-ba0b-8d363abc471e",
        "cursor": {
          "ref": "748c9a46-06d7-458c-9549-9569a4edd5d9",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "90be9550-6c34-4799-99f7-c32bfddc312a"
        },
        "item": {
          "id": "7aec7351-7381-419f-ba0b-8d363abc471e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "30e9a713-6485-4d42-879a-26b27665e37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7c6dd3-ae33-4599-9bff-b70f4a44f4d3",
        "cursor": {
          "ref": "00331e1d-2f47-42d2-83e9-02da1978b588",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d7d63e6e-88c8-47f3-a34d-ac662242fca7"
        },
        "item": {
          "id": "fd7c6dd3-ae33-4599-9bff-b70f4a44f4d3",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "378c0178-cf93-44c2-ba3a-04c6f03fd0b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb10f25-5291-4b97-ac65-e33bce8b2f08",
        "cursor": {
          "ref": "024b485d-5f3e-4e2a-b585-a70b427e394d",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "30e7f0e8-e87c-4870-8bad-04525ab6519a"
        },
        "item": {
          "id": "2cb10f25-5291-4b97-ac65-e33bce8b2f08",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "be852af6-bba1-4bdd-aa9b-7fe15d40d482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d724af-031a-4a71-b5ce-baa31a4190a5",
        "cursor": {
          "ref": "288ec07d-fc83-4d5a-a869-ba296c92ed8a",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "cf60f7bc-9de4-4875-a8b0-774c6f3cc2a7"
        },
        "item": {
          "id": "08d724af-031a-4a71-b5ce-baa31a4190a5",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "319d6a16-23c8-4985-b41b-2b7080a00634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86887297-7dd9-4e9b-b3de-0ae29566d932",
        "cursor": {
          "ref": "b3c2ac96-d957-4391-8303-bf3c12b57643",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c146cc95-b4bc-4813-8d7e-2a3b22865c51"
        },
        "item": {
          "id": "86887297-7dd9-4e9b-b3de-0ae29566d932",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "32c42e56-c45c-4f2e-b073-957b27a267c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9059b677-50b4-4e9a-b5ab-1beffc21fb5c",
        "cursor": {
          "ref": "22fbbce9-9645-4278-ba15-d30774486c94",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "543cb6de-66be-4332-b3ed-dcf52ca553af"
        },
        "item": {
          "id": "9059b677-50b4-4e9a-b5ab-1beffc21fb5c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6b4acd72-93fd-471d-af37-fd9e75836017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064960f9-973a-4ec4-af45-9279b2759b15",
        "cursor": {
          "ref": "ec6d75b7-4bc1-4515-ab76-24135541b34b",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "38301edc-a2c7-40b0-a77e-b22b875e8296"
        },
        "item": {
          "id": "064960f9-973a-4ec4-af45-9279b2759b15",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4a1c5b44-c670-47dc-b038-53fb329f5536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e820175-841f-4f07-a75b-157e8737c786",
        "cursor": {
          "ref": "50ea1d8e-6584-4127-a782-1cb1677da1f1",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "bb11ceb3-b975-4fa3-a599-1751b7605cae"
        },
        "item": {
          "id": "0e820175-841f-4f07-a75b-157e8737c786",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1087faf6-1697-4b90-81ce-f1ccf6e4fe5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f724df-eb07-4eb7-9857-7b1cbea063ac",
        "cursor": {
          "ref": "15ba9bd5-b810-4f2e-a41f-5f2303b2c15f",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "263fe515-ad98-42d6-8571-e571a4d48898"
        },
        "item": {
          "id": "46f724df-eb07-4eb7-9857-7b1cbea063ac",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3613456a-0a09-4195-9c4a-248bb9edf56b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f37195-dcee-4d90-8de7-e8c73498d64a",
        "cursor": {
          "ref": "24f2b58c-3a73-430b-bfa9-4f6528a30b43",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f7157eae-3ed5-45fa-8999-bade40993165"
        },
        "item": {
          "id": "42f37195-dcee-4d90-8de7-e8c73498d64a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b9862819-4457-4bf2-ae22-c328d88ef8ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32730c14-959b-4d6b-aa57-584bf451120a",
        "cursor": {
          "ref": "3bb7c65c-91cf-47ff-a92f-e20b3c1693ba",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c54accf6-a5bf-4405-80f0-d0b1184febb4"
        },
        "item": {
          "id": "32730c14-959b-4d6b-aa57-584bf451120a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "831aa60b-af62-4747-a5c5-3b0d51f5ba70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd576ea8-670c-4f40-a381-c031a4b0e9e8",
        "cursor": {
          "ref": "04d66ffd-4d40-48bb-8416-5a34a2248a8b",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d98670a9-0fe8-4dff-a91e-e0d31bab8710"
        },
        "item": {
          "id": "dd576ea8-670c-4f40-a381-c031a4b0e9e8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f09f41cd-1fe1-4fe9-ad31-ed65865c9d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "725c5819-73f3-42e2-b7bd-f57b5be79664",
        "cursor": {
          "ref": "d390d6dd-ee05-41ec-94aa-5fa82d3a54d7",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6a23bf14-7724-4fdb-8941-0f58a6a9c283"
        },
        "item": {
          "id": "725c5819-73f3-42e2-b7bd-f57b5be79664",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "80054e64-f401-4b0c-8af9-0356ab553240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b658fe0f-4bed-4ad9-aca6-7b40fbd37b83",
        "cursor": {
          "ref": "6d4218df-3ab0-4e5f-8845-3dfd09b111df",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2b59c1c9-83cf-4c38-8126-7278b904b28b"
        },
        "item": {
          "id": "b658fe0f-4bed-4ad9-aca6-7b40fbd37b83",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3daa2b0d-2cb8-4822-a166-d12d5895e90a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ca8f72-d2d9-404d-8474-3bf3ca0270de",
        "cursor": {
          "ref": "3f61122d-2a46-4194-9aba-88fa844da54c",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9df18b6f-84e5-412f-9d2b-ab8af5e30eb6"
        },
        "item": {
          "id": "c3ca8f72-d2d9-404d-8474-3bf3ca0270de",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b3171bba-b43c-4072-aa9d-057ee43e6bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd44b8f-7b47-44e8-8a62-d5fb4116ef21",
        "cursor": {
          "ref": "85bf9976-771c-41a8-b146-90b6f03a0a75",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "670ffce1-135f-445c-bf80-8927d01bf992"
        },
        "item": {
          "id": "ebd44b8f-7b47-44e8-8a62-d5fb4116ef21",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "034962ac-8d99-418b-b573-36c3dd5490cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac1ccc6-7a85-4ed9-a498-5a8f4955c60a",
        "cursor": {
          "ref": "c50470d9-0467-43cd-8f7f-ca413d4890ed",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5f2bd309-f269-48f5-8c8b-d04809ff0a45"
        },
        "item": {
          "id": "4ac1ccc6-7a85-4ed9-a498-5a8f4955c60a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b8d7181b-58e5-4097-839a-7538a61941d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21311e52-e6a0-4a9d-9fe4-89d639c5c435",
        "cursor": {
          "ref": "027c2989-41cc-4bae-84d6-7b93c3c38956",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2023457c-de4e-4659-aa54-c8228a7d1504"
        },
        "item": {
          "id": "21311e52-e6a0-4a9d-9fe4-89d639c5c435",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6190a632-3cb2-44cc-baa8-3d8b316e903b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d89d766-db3b-48be-a34b-d9f6a262c5ed",
        "cursor": {
          "ref": "1292ffb4-5e1d-4705-9b70-df7152623193",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "22191631-9778-4d19-a13f-73ae213c69c1"
        },
        "item": {
          "id": "1d89d766-db3b-48be-a34b-d9f6a262c5ed",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "01587ee2-e524-4a24-abda-0881812be5fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7f2f74-ca14-4084-ad23-4bf350177baa",
        "cursor": {
          "ref": "91fb73b1-a176-4500-8964-b67031e80136",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "207a4646-99ed-4af0-b25c-fe0077f395f8"
        },
        "item": {
          "id": "1e7f2f74-ca14-4084-ad23-4bf350177baa",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "380cb6d1-d719-46c6-a371-746b3fadd40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4effccc-8b2f-4ddf-918a-20f620f13bb9",
        "cursor": {
          "ref": "11cacfd5-3bf9-42b8-b0d2-1514fc4fc0f9",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ab72348c-6468-45d9-a111-e76fc32da1fb"
        },
        "item": {
          "id": "d4effccc-8b2f-4ddf-918a-20f620f13bb9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "782fded2-d13b-41fe-b278-15c311195647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29082c90-4eba-47a4-93f9-bbe710c4cafd",
        "cursor": {
          "ref": "2663d6f8-67ee-49de-ab59-b1389860a9e4",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "42e9b566-f23c-4cab-8ebe-d59a747eda0f"
        },
        "item": {
          "id": "29082c90-4eba-47a4-93f9-bbe710c4cafd",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ce4868ac-b3c5-40df-b473-cdb319eb8f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607ebfef-762c-41be-a71f-f356417c577e",
        "cursor": {
          "ref": "2bf5b155-7900-4292-a78f-bb53e54f2d3a",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9c31b5c9-41f1-49e4-b744-754dbeba2daa"
        },
        "item": {
          "id": "607ebfef-762c-41be-a71f-f356417c577e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2a320f5e-ee21-4cf2-80ae-e1a8848eb0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fea2aca-e8fb-41a8-a981-9f9ad8f340b3",
        "cursor": {
          "ref": "4cba6861-119f-45a1-9fd7-3caed9938e19",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "31ea6c49-fb7d-412d-8c56-02c97ff662f0"
        },
        "item": {
          "id": "2fea2aca-e8fb-41a8-a981-9f9ad8f340b3",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "19df8498-bf23-4992-bbcd-94f3fa9325cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e899fac1-7b14-4f68-8783-c0bdede683d8",
        "cursor": {
          "ref": "79009c0b-c023-4392-bddc-7f59b4c8cc47",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0f147b2f-4f15-421f-ade4-69a1433f0380"
        },
        "item": {
          "id": "e899fac1-7b14-4f68-8783-c0bdede683d8",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e86cebee-6297-464c-bd2d-5cb6d87d1b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95dfcbd1-3d33-42a8-b066-66e7b52819cc",
        "cursor": {
          "ref": "dfb68f51-3a83-4641-80a2-dfe99c326b17",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "67be613f-d571-489c-bf97-4f6aaaf8bdec"
        },
        "item": {
          "id": "95dfcbd1-3d33-42a8-b066-66e7b52819cc",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3264e847-72b4-4e85-92b1-2816b3ceb675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dbb9b4c-89ae-43f3-bd39-44103c60c34d",
        "cursor": {
          "ref": "c71dc826-c409-44dd-9ab6-3d3bf5f33adb",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "abdf5aff-0b93-4e30-b951-fe8e92e48d16"
        },
        "item": {
          "id": "6dbb9b4c-89ae-43f3-bd39-44103c60c34d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8cca4e56-4358-49ef-8a36-1645e48d4ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a3c61a-3707-44b1-9f4f-b43c173f35db",
        "cursor": {
          "ref": "d8f1a196-7703-4334-afcb-d7c1b93ed923",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5a302b88-abad-4769-92de-38ec3b0ce9ec"
        },
        "item": {
          "id": "51a3c61a-3707-44b1-9f4f-b43c173f35db",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4b22e137-5e5f-4836-bd5d-d18e5ed14ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffda57bb-4983-4419-8635-8a991f048275",
        "cursor": {
          "ref": "6cc110eb-ab24-4fde-ad6c-e43436cd9cc2",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e66a6760-53e4-44af-a5d8-fe5e90b15178"
        },
        "item": {
          "id": "ffda57bb-4983-4419-8635-8a991f048275",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4fbe8480-ce4f-4a4c-a3af-bd15fb8b3186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31adc90-ddd6-4f8b-9127-e4e53a9e2d53",
        "cursor": {
          "ref": "51751fc5-efa1-41a0-bee9-9f96a2cc803b",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6893169e-c1ff-41d4-84ff-37dac88e119f"
        },
        "item": {
          "id": "d31adc90-ddd6-4f8b-9127-e4e53a9e2d53",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d2b48808-7297-4fe3-b426-2d9758ddb1f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df8e0f3-1668-4ed4-b404-3f35c30e6a3d",
        "cursor": {
          "ref": "18051b23-5c61-4e34-932b-3da02ca4a6bc",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "be168762-1007-46f9-9f9d-a2b6fc195145"
        },
        "item": {
          "id": "3df8e0f3-1668-4ed4-b404-3f35c30e6a3d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b494a8fc-199c-4786-a423-8d7e3f3cac75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c441d700-5b6b-433e-b408-2dd5bc829c69",
        "cursor": {
          "ref": "7e842ca4-feae-4915-b0b5-f423dbe48bbd",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ac933cb6-402d-4a8d-a0af-c7d816d6d1ad"
        },
        "item": {
          "id": "c441d700-5b6b-433e-b408-2dd5bc829c69",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "820cdd19-0991-4bd6-8ea6-db5a92c18176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0600028-02b1-496c-9478-c4676233ada3",
        "cursor": {
          "ref": "c10fdec6-9f05-4be7-9ac4-c44983c64911",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "4d663aae-004f-4d3e-9c87-14d9e77d8d6d"
        },
        "item": {
          "id": "c0600028-02b1-496c-9478-c4676233ada3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b8130039-7d98-4d62-b7ee-b961757b252e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d68267-f817-4a0e-9eaf-614ce207954e",
        "cursor": {
          "ref": "ee826d7a-9913-4200-ab00-ab924c67cb90",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "bcdef8d1-8140-457f-a88b-e0d2967a0628"
        },
        "item": {
          "id": "14d68267-f817-4a0e-9eaf-614ce207954e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5c6948c9-9a8a-433b-bac0-28c0799ff9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c339d4c-2ed2-4cb2-a0fd-f10296580c22",
        "cursor": {
          "ref": "5debaf79-2d13-4b21-9fbf-03d86999ea0a",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "041be693-0cc2-48d7-ac47-6d1e4be05895"
        },
        "item": {
          "id": "2c339d4c-2ed2-4cb2-a0fd-f10296580c22",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d98ba80c-d9f1-4f4e-a538-418d959584c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d568ea9-71fe-4267-986f-490d8b6e8c58",
        "cursor": {
          "ref": "4462d8e8-7420-496d-8904-e91cec954e00",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "243ff259-a47f-4c1d-b914-5d6d99199697"
        },
        "item": {
          "id": "7d568ea9-71fe-4267-986f-490d8b6e8c58",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1906b32c-5c34-4a37-b471-fd54fa302d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e05760-fc4b-4473-a7ff-86eb0c6336b0",
        "cursor": {
          "ref": "ace23cfe-2fd4-464f-b9e8-0635fc38d44e",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "dec69dea-d2be-4cf5-ac21-6b39628eea2a"
        },
        "item": {
          "id": "36e05760-fc4b-4473-a7ff-86eb0c6336b0",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "576f2afa-c74a-475c-aeb8-9464aba3609f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5612b16-3d43-48e5-920f-7f57378f30e9",
        "cursor": {
          "ref": "22bdb57f-d65b-4d1a-ad72-986d682556ac",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b54f0c45-cc87-4a25-ab2a-6b91def52656"
        },
        "item": {
          "id": "a5612b16-3d43-48e5-920f-7f57378f30e9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "cdd21da6-443e-44e3-9451-414a48f11e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b98636-a5e5-4288-b27e-b32e50a1c25d",
        "cursor": {
          "ref": "1ce3b2fc-2677-4729-bd09-6974e9fc5e20",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0ae5a428-a6d2-436f-92c3-c27e575ccc23"
        },
        "item": {
          "id": "b6b98636-a5e5-4288-b27e-b32e50a1c25d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4048145d-ea40-499a-a652-bc8d6569567f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5280e547-e87a-40e8-9c90-96ac48bb60a9",
        "cursor": {
          "ref": "4fe06007-a91c-465f-996b-b7356ecaa2f5",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f55ba7be-dac6-42b9-b8f1-eae9b93bfa8f"
        },
        "item": {
          "id": "5280e547-e87a-40e8-9c90-96ac48bb60a9",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3313994e-7034-412f-8de5-c5bd784910ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff302a1-bd40-491d-9964-a6e3851248c1",
        "cursor": {
          "ref": "5e4b0910-2b27-4548-9c80-a21afe359f44",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0fa2c94b-d8c9-4182-9c94-b783587089ea"
        },
        "item": {
          "id": "8ff302a1-bd40-491d-9964-a6e3851248c1",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f33e4c47-daf4-42da-887a-36d366b47cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d9aebb-de16-48a1-ac16-9badfe3ff3de",
        "cursor": {
          "ref": "19e66084-a86b-4d56-b04e-333ae352e06e",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4340eefb-e08f-4d8c-8745-b6cbb9023a77"
        },
        "item": {
          "id": "95d9aebb-de16-48a1-ac16-9badfe3ff3de",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "871877e8-7343-4619-8a1f-79f6a605d403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da55ecc-0c4f-4054-accc-3db0459b5906",
        "cursor": {
          "ref": "6f666e84-5ba4-4c04-84f2-822d01049e99",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7ffe0e74-12f0-4af9-aa90-611a75ebe830"
        },
        "item": {
          "id": "8da55ecc-0c4f-4054-accc-3db0459b5906",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ddd7ee93-584a-4508-a330-a1d9ccd42ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86cf60a-7e00-4e9d-a28a-8e99a1924558",
        "cursor": {
          "ref": "2c242874-c143-4b5e-96f1-a00334d912dd",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2088431e-68f3-431c-be45-b3da3b076ec8"
        },
        "item": {
          "id": "a86cf60a-7e00-4e9d-a28a-8e99a1924558",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "eac5a38a-5bbf-471f-8666-db71bcc4c0c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69083ad4-acac-478a-b2fe-fe154ee7070f",
        "cursor": {
          "ref": "509e8727-2ed9-40e6-81a2-a4da89008c7e",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d6bee6ac-0de9-454b-84d3-c6da8766de89"
        },
        "item": {
          "id": "69083ad4-acac-478a-b2fe-fe154ee7070f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0d764402-5c61-4077-9c4d-427e8f882619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802686ff-93d8-4c0f-8208-8c7f97241cee",
        "cursor": {
          "ref": "db8a0468-7c80-48e8-a172-203dffec8123",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5cfa72c2-aa8a-4180-81b8-47cef358f8ae"
        },
        "item": {
          "id": "802686ff-93d8-4c0f-8208-8c7f97241cee",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8279ad72-0555-41b9-9ccc-c8b5c9fe6701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4022db61-897f-4f08-87f2-1272ffd9cbb3",
        "cursor": {
          "ref": "8f5b4810-7015-448c-8bd5-5e21875ac922",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1fc12e28-cf92-4c94-b04a-dad27df36813"
        },
        "item": {
          "id": "4022db61-897f-4f08-87f2-1272ffd9cbb3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "466e75db-15b1-45c6-99bf-29e49cf214d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9f2a8f-6dd8-4437-862c-fababf4cafc2",
        "cursor": {
          "ref": "72e1a9ff-0d80-4df6-96cd-b7d2c4107cb2",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "bfa2b1a3-c894-4f1b-8dd9-e2ca356a1ab2"
        },
        "item": {
          "id": "fc9f2a8f-6dd8-4437-862c-fababf4cafc2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0f8d4685-cce0-4a48-b894-9dddd04e548d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be6cf35-c32b-483f-b615-5c436005100d",
        "cursor": {
          "ref": "863e9c92-9e7b-44e5-b145-3c26e815f8d3",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "82f0beb7-2bdf-4bb8-94bd-c5e50dd28423"
        },
        "item": {
          "id": "2be6cf35-c32b-483f-b615-5c436005100d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2038de1a-69b1-48d7-844a-e3e8a53fba5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66084ff5-4212-4ed1-9a2b-fa66f34012e2",
        "cursor": {
          "ref": "42f30386-d8a5-41a4-92e5-5ee2c208676e",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b15daaad-3e9d-4ec2-bd7f-d15ffac8e8e5"
        },
        "item": {
          "id": "66084ff5-4212-4ed1-9a2b-fa66f34012e2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f7938d70-0ea8-44ce-a007-0951ef3c352f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26af1c0a-b92b-46e7-b352-f3e1c6772646",
        "cursor": {
          "ref": "3391af89-2364-4cd3-8947-b046a85bcc27",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "025f192b-163d-4277-a75f-299652eb70ca"
        },
        "item": {
          "id": "26af1c0a-b92b-46e7-b352-f3e1c6772646",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8b6f3091-3af2-4c50-b753-a32c3bc4ff53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd903ea4-d8e7-4a7d-bc6d-ba7a6acf5505",
        "cursor": {
          "ref": "821de893-59a1-4bba-96e1-d14be81f84e1",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5322f8e6-e181-451b-9ec3-4cdcec471671"
        },
        "item": {
          "id": "dd903ea4-d8e7-4a7d-bc6d-ba7a6acf5505",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "16b330f4-32f6-4e0a-8fb4-317e327bf9d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6cf0b7-5d0f-4993-9cbb-b4d05bcd9ea7",
        "cursor": {
          "ref": "b2c72466-77af-4383-8977-8d4688097db7",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0703337e-52dd-4102-abb2-5ab1defe89f1"
        },
        "item": {
          "id": "bb6cf0b7-5d0f-4993-9cbb-b4d05bcd9ea7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "619d8d01-4fa2-4fab-b27b-ed9af01ca822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbab4f54-4ccc-4693-893c-6a23865b8b27",
        "cursor": {
          "ref": "dca71d98-5273-4529-a93d-a53c410ce8d1",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e00cb99d-b869-42f5-a48a-874cbbe60d21"
        },
        "item": {
          "id": "bbab4f54-4ccc-4693-893c-6a23865b8b27",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "565f642f-2c05-423c-b029-1fce2946205d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd55e545-232e-41ef-aea6-ef7648bc11bc",
        "cursor": {
          "ref": "57894391-185c-4bcb-9ce7-d09b0e568305",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "90a18a9c-f5b1-4576-8f7d-24af2c89a2b2"
        },
        "item": {
          "id": "fd55e545-232e-41ef-aea6-ef7648bc11bc",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c3bf3b73-dd5d-41bb-84cb-1088c5801344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e1ce10-82cf-4093-853b-4f9c28016a47",
        "cursor": {
          "ref": "f81b73af-db30-425b-ba2a-c397e63b153d",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "27d22d96-d587-41ab-a33c-931a5b9195d4"
        },
        "item": {
          "id": "16e1ce10-82cf-4093-853b-4f9c28016a47",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8159718b-fa7b-4232-be99-5140241e9c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8badcfc-1625-44dc-bf86-22cebcebfeb6",
        "cursor": {
          "ref": "67465b29-539d-47bb-bc26-3ca0aaeadf11",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b513373c-8f1e-48cf-8b09-05de92c1e955"
        },
        "item": {
          "id": "c8badcfc-1625-44dc-bf86-22cebcebfeb6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "013df742-6cba-4b51-98e1-97028561d313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7a4d55-ea31-4859-bad9-ff7053d651c5",
        "cursor": {
          "ref": "190bcce3-4ee3-4ac4-b161-0830593a4ffa",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d9b0f7d5-506e-4b7b-b7da-16b1f0c3ffe8"
        },
        "item": {
          "id": "fe7a4d55-ea31-4859-bad9-ff7053d651c5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "34e8561f-5e57-4cf6-820d-6717fcec1b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed716032-d0ba-48f5-b602-40df86812b5c",
        "cursor": {
          "ref": "2fe2f845-1fec-4232-8bb3-c0080aea6619",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2cbe2e67-da95-4232-8180-de729c45b8ab"
        },
        "item": {
          "id": "ed716032-d0ba-48f5-b602-40df86812b5c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0c206d6e-1f9d-4440-b30f-205fe5eadc79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57151ab3-fd56-46c1-9310-0413f2933d1f",
        "cursor": {
          "ref": "cb40c24c-c0b9-4017-a942-a18c412a52df",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3af219b6-80e5-4763-9e56-63ae9e70312c"
        },
        "item": {
          "id": "57151ab3-fd56-46c1-9310-0413f2933d1f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e46e7fb2-d183-4025-9356-ccd5473e6e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0416d26a-ef6d-48b2-a587-46ba62339877",
        "cursor": {
          "ref": "1840330a-b261-4252-8063-62461cdfb1db",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e345be3e-9ee9-4874-a57a-8ff291429651"
        },
        "item": {
          "id": "0416d26a-ef6d-48b2-a587-46ba62339877",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "491278a1-d48a-4a13-a73e-afc1c7ee9404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7d56aa-43ee-49dc-8e1d-a90b2982a890",
        "cursor": {
          "ref": "27047c73-966c-46d8-b125-ea734ed9fd7e",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0b2a9799-70a0-4537-b672-2b89d9de6a9b"
        },
        "item": {
          "id": "4a7d56aa-43ee-49dc-8e1d-a90b2982a890",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0b9ab908-1137-47bb-9a93-b6b1057c3418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88bf6046-755f-4552-a5d8-5e39f4935454",
        "cursor": {
          "ref": "4082c6b2-c0c7-4211-ab4e-1119c7848928",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2a414d34-42e9-4c60-8ac8-43446f762a6b"
        },
        "item": {
          "id": "88bf6046-755f-4552-a5d8-5e39f4935454",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "3d8c4a41-87a5-40e1-be05-723678a89820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "46764d54-5f80-4b23-90d5-94577214e34f",
        "cursor": {
          "ref": "9ab8a249-ac2b-4802-af53-1f150fe013e7",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "bcb14397-adc9-44bb-b70b-4992e61d6b35"
        },
        "item": {
          "id": "46764d54-5f80-4b23-90d5-94577214e34f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "80d73b83-c428-47d0-aa7e-701bd8d12ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "297d14b6-77ff-49aa-9130-e165d1bf443d",
        "cursor": {
          "ref": "1a50aa90-c8bc-4fb3-9503-101a9885b20a",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f3159498-4990-4c8e-a6e0-ab8d130940e3"
        },
        "item": {
          "id": "297d14b6-77ff-49aa-9130-e165d1bf443d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b9d53150-89dd-4e97-83c9-5e0e6b2687f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "f4fa6ecb-2b4d-4b0c-873a-2f44cac7b470",
        "cursor": {
          "ref": "e88d00f6-ca78-418d-9252-d109857b6c7b",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "406a8a9a-be5b-4099-a2fd-af6d2b489d98"
        },
        "item": {
          "id": "f4fa6ecb-2b4d-4b0c-873a-2f44cac7b470",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ba9d5877-6331-4063-b6ff-5cbb1361e37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "52410d9e-05a2-40fc-94a6-6d83bd071702",
        "cursor": {
          "ref": "9ba9f1aa-73bd-4570-9750-4998710ccbde",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b4859a8e-5392-46ff-9540-daffa2ca5235"
        },
        "item": {
          "id": "52410d9e-05a2-40fc-94a6-6d83bd071702",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "34a5e751-bad0-4ed1-b885-6a1dc62f0c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "a7d2fe15-99a4-40c9-a29c-5fc74340745f",
        "cursor": {
          "ref": "521d5fa2-9b12-424e-95b3-e115a231c210",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e137dc1a-6005-425a-8265-bf125857a526"
        },
        "item": {
          "id": "a7d2fe15-99a4-40c9-a29c-5fc74340745f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "94aafee4-41a9-42f3-8184-405412aed487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "633f4203-c8ea-4375-b16e-c9af1296b13c",
        "cursor": {
          "ref": "57ace3dc-0dd1-4182-83a3-073eaa4661fe",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "bfdaabff-da87-4840-8530-7b55d85ef8ea"
        },
        "item": {
          "id": "633f4203-c8ea-4375-b16e-c9af1296b13c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3bb3d911-5747-4b33-a56a-bce244ba9a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "44cf296e-5832-4dcb-9c37-43cced250803",
        "cursor": {
          "ref": "2f3c2456-c294-4339-80dc-18f442b35ac5",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "782219af-8e0a-4ad1-9d29-92e7664c1f31"
        },
        "item": {
          "id": "44cf296e-5832-4dcb-9c37-43cced250803",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1a444879-273d-4372-9d34-ae9af42a2a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b2bd5c-4d65-4fda-9fab-566e212aab9b",
        "cursor": {
          "ref": "4a01658c-b790-4784-9196-a0e8a59964e6",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f83c2773-a5e8-4ad1-8f9e-2dcb4a867fb8"
        },
        "item": {
          "id": "b8b2bd5c-4d65-4fda-9fab-566e212aab9b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e3c30bae-c587-491a-a1f5-eec9d5e33e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a4e346-619a-4720-ba78-347407dc83dc",
        "cursor": {
          "ref": "c3a0d7e6-d7f9-47f9-86e0-6d35eb4ea05d",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "826695e1-c66b-4ee4-bcd8-dcc582bbf2c8"
        },
        "item": {
          "id": "83a4e346-619a-4720-ba78-347407dc83dc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f26613fc-6971-4ace-83a4-17e233e1e63e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238c27c6-f3e3-4e58-baf4-7f7a71e35cef",
        "cursor": {
          "ref": "76b942cb-603b-415d-9a03-37f35d0b668f",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3bdabd14-482c-4030-891e-7242d9559ee6"
        },
        "item": {
          "id": "238c27c6-f3e3-4e58-baf4-7f7a71e35cef",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a0e143d4-6398-448b-a1a4-81ce2fbf158c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dad1dc4-3f76-48d4-a314-e55402736926",
        "cursor": {
          "ref": "4b68f9e4-0a9d-4f00-8f95-0b027e5c099a",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a73e21ad-757e-4059-ba10-750ede53a190"
        },
        "item": {
          "id": "1dad1dc4-3f76-48d4-a314-e55402736926",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "dc258014-527f-4e3b-971a-8fd3b2599f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8106f85e-790d-47d5-96b9-ebf23e36d2f4",
        "cursor": {
          "ref": "4c9afd76-b0d8-4332-81e6-b953d7f90d63",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "26c14dcc-8fc2-4bae-93b8-8b36129e5e96"
        },
        "item": {
          "id": "8106f85e-790d-47d5-96b9-ebf23e36d2f4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "71750f27-dbf8-4c05-b595-5318711edda0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5a9219-3430-4da4-b38c-1f9f2a32879d",
        "cursor": {
          "ref": "de046c83-c163-4296-a739-b15ca330f805",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6f9b6105-730f-4c74-82a2-5a0f4177ad51"
        },
        "item": {
          "id": "df5a9219-3430-4da4-b38c-1f9f2a32879d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f481bcf7-8327-4758-8492-c579de69e18f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f0ab13-3094-47e9-a765-de767f188ee9",
        "cursor": {
          "ref": "12752aa9-23f8-46e7-bd8a-d867aee5a682",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ba247d35-8080-4805-a0b7-f5837bdf1ea5"
        },
        "item": {
          "id": "a9f0ab13-3094-47e9-a765-de767f188ee9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "21aae90b-5a6f-45e8-a729-8a12a85adc41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b913d14-5eaf-4aa9-88a3-6da893ff4941",
        "cursor": {
          "ref": "a50daed7-2785-479c-8493-f9d9f7937707",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e0c3a4dc-abbb-4f4f-be10-708f6a99c3f1"
        },
        "item": {
          "id": "7b913d14-5eaf-4aa9-88a3-6da893ff4941",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "df64e3b4-c9ec-42d0-a99c-fee1230aeaae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402bae9a-b0ca-4c81-9517-40f7dfd13403",
        "cursor": {
          "ref": "edc2e41f-d5c5-493f-a3a7-8448273dc3b0",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f2270731-80fa-4789-b9d4-1e6ea32ecf7c"
        },
        "item": {
          "id": "402bae9a-b0ca-4c81-9517-40f7dfd13403",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "41ee4523-9b81-48e8-94a0-098bd15eb90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b581ad0-cfac-4c99-9062-092885520654",
        "cursor": {
          "ref": "86fd6e66-4b5b-40eb-abe3-a91573e8dd57",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "834bc2fc-ec20-4ade-a740-ddc7987da6b4"
        },
        "item": {
          "id": "6b581ad0-cfac-4c99-9062-092885520654",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a06dc562-49b5-4590-8b8d-04d3dbebe147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039571f2-6a15-464b-8f07-e3ef687eeda1",
        "cursor": {
          "ref": "4a857c25-d6e7-4cd5-9f5d-e2be924052db",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c09b0ee4-4b4b-4fab-93ec-c55a98b0c235"
        },
        "item": {
          "id": "039571f2-6a15-464b-8f07-e3ef687eeda1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "865dfc5e-318c-4304-aedf-091f84b8b6e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b96323-931d-4635-8a62-24dd28a9b187",
        "cursor": {
          "ref": "bb17267b-2f4b-47a4-adb3-3bd518862d28",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "33a3b984-bba2-4d38-8d0e-5b138d6ca0d3"
        },
        "item": {
          "id": "77b96323-931d-4635-8a62-24dd28a9b187",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5a432c9e-1c2e-481a-9ec1-91cdc402d3dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f420496-f1a4-4e43-b75b-828a7e846d39",
        "cursor": {
          "ref": "f98d29a0-bb63-4fbe-a87e-dd1a9cd56c90",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7612e192-88bd-4a5d-a963-945d5d2ab09f"
        },
        "item": {
          "id": "9f420496-f1a4-4e43-b75b-828a7e846d39",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1f031c0a-26d7-40fe-8ff5-fda9ca22f91a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d22bc3-24f8-4878-81cb-961e610f67be",
        "cursor": {
          "ref": "e666b05c-5892-469a-ae01-c77232f8a4f0",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d96cddd1-d6fa-4dfa-96e6-12010d8ee4f5"
        },
        "item": {
          "id": "b4d22bc3-24f8-4878-81cb-961e610f67be",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5678aea5-0f1e-44dd-bb54-054c9a1b4195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f0574c-1591-4b0c-a5d1-5bfde224c824",
        "cursor": {
          "ref": "be95e994-1a10-40c5-b195-1f59f813f1b4",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "bc67f6d2-46e0-4788-9beb-e207439c0381"
        },
        "item": {
          "id": "c6f0574c-1591-4b0c-a5d1-5bfde224c824",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7b2ea16c-94d7-4745-b069-af046755c002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e888835e-ed93-48b4-af49-ab9dc2c2b601",
        "cursor": {
          "ref": "ac66e52d-f78d-4577-9314-5c35f39efdfa",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0ec7b70b-2a0e-4a6a-99b3-a39858b62eea"
        },
        "item": {
          "id": "e888835e-ed93-48b4-af49-ab9dc2c2b601",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "36915dc2-9fe0-47c5-bb1c-ec57b9563984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e70e395-5627-4ba0-8312-2448e0221dc0",
        "cursor": {
          "ref": "3a146879-8624-4399-a724-72897611e149",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d448e501-ad16-4d10-8cf2-158967995e7a"
        },
        "item": {
          "id": "0e70e395-5627-4ba0-8312-2448e0221dc0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5a4bc84a-4609-43de-89c6-117335fcc7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d391b1-3d91-4bbf-8910-db1ad5c5f15b",
        "cursor": {
          "ref": "ab9b3bf9-8cf1-49e7-8f67-cd98a0b01e8e",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "71288ee3-f695-4b39-8f3a-7aef4efb0940"
        },
        "item": {
          "id": "50d391b1-3d91-4bbf-8910-db1ad5c5f15b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "898fdc00-f3e2-4b64-8436-c87be85dfcd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2f4f1f-42f9-449c-9355-f74ff2377343",
        "cursor": {
          "ref": "a9c2499c-e80e-4a76-b70b-d43ef46fcf59",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "613255db-0d81-4ec3-9396-f0864005d74e"
        },
        "item": {
          "id": "6b2f4f1f-42f9-449c-9355-f74ff2377343",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8cd53691-e72e-4ce6-b779-f4773f39edf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3377a230-5267-4873-80ca-eafe5cafd6ec",
        "cursor": {
          "ref": "afe63638-f17d-4f21-9130-98376480e0d1",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "219b0e5e-0db6-43d9-b290-dde8daf152f9"
        },
        "item": {
          "id": "3377a230-5267-4873-80ca-eafe5cafd6ec",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6aa3f832-2a77-4b56-8fc8-16a8aa83a45b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa93bea8-714e-4468-9d74-b8affafc42d3",
        "cursor": {
          "ref": "02a66e12-7f73-420f-9de5-1219f9bdafa4",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "73ac6037-033d-434b-94a3-73df6c1bcdf1"
        },
        "item": {
          "id": "fa93bea8-714e-4468-9d74-b8affafc42d3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4a4bfc6c-4d18-44a2-8687-80b9ed6d09d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b52512-24ae-454a-9679-68fa5963be47",
        "cursor": {
          "ref": "dbc443e5-ea44-4597-8999-d6c2569c3468",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b2143b60-8dc4-4b2a-8631-144b95d600ae"
        },
        "item": {
          "id": "91b52512-24ae-454a-9679-68fa5963be47",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cdbedaf0-047c-4830-b99f-6a56dbb42664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca87ccd-a198-41ec-b9c0-2e92738cf470",
        "cursor": {
          "ref": "436c717e-32e2-483b-822a-1ad69c34d4d4",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8e777d8a-e661-4b5a-aed6-600c48b40a38"
        },
        "item": {
          "id": "cca87ccd-a198-41ec-b9c0-2e92738cf470",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d2a726db-4655-45ff-afed-6e4540f71ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430300bb-1f7b-4a6a-b002-c7662b75bf62",
        "cursor": {
          "ref": "c49c9354-42df-4d0c-9f97-430fed4ac763",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2c55aeaa-6bba-4ddf-bc6f-1101b8f4127c"
        },
        "item": {
          "id": "430300bb-1f7b-4a6a-b002-c7662b75bf62",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "46cd5ff0-4c55-4295-97cb-508dd6106654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8815f667-357f-4d4f-9a17-5b61040e14d4",
        "cursor": {
          "ref": "5d9d22a7-c5e7-4ed1-ab28-f148f856ec92",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8d57c2c1-654f-409d-a69b-f6340e48a4b5"
        },
        "item": {
          "id": "8815f667-357f-4d4f-9a17-5b61040e14d4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6666b20c-d34c-471e-a63f-d1f038e402d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c045ce7b-7d5c-4ac4-b914-5139e3883f71",
        "cursor": {
          "ref": "d6a7dc1d-0733-464c-b60b-56d3c1edfc2d",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d40f58d9-ff4f-45aa-bc96-50798ec9915b"
        },
        "item": {
          "id": "c045ce7b-7d5c-4ac4-b914-5139e3883f71",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7fd5606f-e682-4474-a302-06f5577ddde8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8ae68a-076d-455b-9870-f174e963ca82",
        "cursor": {
          "ref": "62d8d8e8-cd8a-42ed-a572-dc98575a7691",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "08e86c78-5228-4a3d-a474-940db6d12f7b"
        },
        "item": {
          "id": "8f8ae68a-076d-455b-9870-f174e963ca82",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b209c873-3e2f-41c1-bf43-333d6d60852c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a92baa-d002-40ec-a913-7a90584209aa",
        "cursor": {
          "ref": "5afb28c2-86c2-483a-bef3-7fe99ed41128",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8b1feafe-1965-4e99-8a09-6f16cea502c3"
        },
        "item": {
          "id": "15a92baa-d002-40ec-a913-7a90584209aa",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "034e6c13-bcb2-44d5-9b8d-009d06ab2050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af41a793-f914-45c1-9d5b-ab2184d537dd",
        "cursor": {
          "ref": "39a237e8-f7c3-43b0-bb29-96e21b8b4689",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "98368fa6-dcc5-4c78-8f20-34ffa6cf781d"
        },
        "item": {
          "id": "af41a793-f914-45c1-9d5b-ab2184d537dd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e1cb5ae4-0915-4498-8f92-d2df5dba838b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec934dd4-7a4c-401b-8f38-d9c141590684",
        "cursor": {
          "ref": "db8ca504-6a7e-4528-86a3-64f1c263c628",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8d617ac6-e177-489b-9dc9-a42daf04478d"
        },
        "item": {
          "id": "ec934dd4-7a4c-401b-8f38-d9c141590684",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5754b435-e81e-4e15-a4b2-c22da97e0ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376f60f8-cdad-4a31-b20d-6972137ce80f",
        "cursor": {
          "ref": "6aba6f83-a96e-4ecc-ad85-9ba67b06fa5b",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c90ef697-cecc-454d-91e9-531c74e0594f"
        },
        "item": {
          "id": "376f60f8-cdad-4a31-b20d-6972137ce80f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4de89bef-f5a2-40d3-9584-e047fc485f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93e0495-f1bc-47c6-8a9e-c0df928b115a",
        "cursor": {
          "ref": "cbbe955b-19ca-4b6e-b9c0-29b966b280c8",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "52277881-3c3e-4146-ac6a-0e90f670619b"
        },
        "item": {
          "id": "a93e0495-f1bc-47c6-8a9e-c0df928b115a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1447b38a-89ee-441d-81df-cf7a02021385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f2531b-a5aa-4be7-9979-80ea2475f96a",
        "cursor": {
          "ref": "a6c8d8fd-df7a-4370-83a2-265e9318abc5",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ab7d0a98-eb24-4187-a906-9a2114e29d4a"
        },
        "item": {
          "id": "d4f2531b-a5aa-4be7-9979-80ea2475f96a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f4da8756-3b30-47d7-9fba-5531936f2e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd87920e-b1fc-47af-bba6-c6b2716f6d8c",
        "cursor": {
          "ref": "af1e9771-9b63-43b6-985e-125e50219eca",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e2f97423-501a-4f61-8c75-4e98d347de29"
        },
        "item": {
          "id": "dd87920e-b1fc-47af-bba6-c6b2716f6d8c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "007e047c-cbf8-4d2e-a145-d2bfaf74765c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0873bdeb-44a5-4822-89fb-c467286146b6",
        "cursor": {
          "ref": "d134b264-d921-4847-9c7c-1db3b5a1e57f",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "17077a1f-bf2a-48be-a4b3-e12efe66a3b1"
        },
        "item": {
          "id": "0873bdeb-44a5-4822-89fb-c467286146b6",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "2f73c19a-062d-4b6e-bba8-2a273ac0a7ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eade083-4283-43e9-8f90-13d953056770",
        "cursor": {
          "ref": "12400d9e-6e4f-4d6a-9669-acf823690f26",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "56a827f8-007d-43b5-96bb-f4a76772c2f5"
        },
        "item": {
          "id": "0eade083-4283-43e9-8f90-13d953056770",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a08d2d65-39a5-4c88-9715-d23fb31cc81e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4035e65-dac5-4175-a9dc-ce048bdc634d",
        "cursor": {
          "ref": "797d04f4-1146-4747-a14b-2a6bd540ca09",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "210a35c4-dbaa-4410-8ac8-1f1df5228cb5"
        },
        "item": {
          "id": "b4035e65-dac5-4175-a9dc-ce048bdc634d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e6c7a4c7-a7b8-4921-ae67-517b913d68bb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0235ac71-ea54-43ad-96fa-598fa30aebf3",
        "cursor": {
          "ref": "ad57b6ca-5846-41ca-b8aa-7c919eb45555",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e5d94def-0ca1-4b7f-9ca0-99f8c1947bae"
        },
        "item": {
          "id": "0235ac71-ea54-43ad-96fa-598fa30aebf3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "41e079e2-466d-4a1c-9e19-603f73ae0eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaaf7961-d06d-41f9-a8af-d40ca2c8626d",
        "cursor": {
          "ref": "195538d9-4839-4f5b-a0bd-8d78f6909f5a",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "470cc846-3be1-4a50-bf35-3608cb8a1079"
        },
        "item": {
          "id": "aaaf7961-d06d-41f9-a8af-d40ca2c8626d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2afa9baa-0be9-4459-a332-cc5765c34201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be26b381-40e0-4045-8970-55172c0497e0",
        "cursor": {
          "ref": "b7d882d4-831e-41b7-b1b3-e1af7a16b784",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "71071609-c254-45e0-9464-6b7068b765b3"
        },
        "item": {
          "id": "be26b381-40e0-4045-8970-55172c0497e0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5d11c9e5-358c-42af-ad69-0678241b8e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c23aae-d49e-4550-8181-16a8b8e9b926",
        "cursor": {
          "ref": "17607032-ff61-4806-b718-c416fc877cb5",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "cad9920d-b5f5-4855-a98a-6c29ddf7a2cc"
        },
        "item": {
          "id": "e2c23aae-d49e-4550-8181-16a8b8e9b926",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a00469c2-b103-4936-9c85-b95e46a50d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f64ad7-9324-47b4-ba62-0cd22917b9b8",
        "cursor": {
          "ref": "3b2d3bb9-2a00-4dd3-a1fd-53d279506fa2",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1a9471ac-919f-484a-91df-14ae075e0687"
        },
        "item": {
          "id": "58f64ad7-9324-47b4-ba62-0cd22917b9b8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "175e98b2-52c3-4380-be08-ebb1b4827ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45729df7-901e-4c01-a441-2e29994814af",
        "cursor": {
          "ref": "1d1e0618-161d-49bd-839e-5fd3992c1562",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e51421a1-3e04-472e-97b8-433d5fb2591c"
        },
        "item": {
          "id": "45729df7-901e-4c01-a441-2e29994814af",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "cbab5205-16b5-4bdc-bd1a-1789f3d4ab10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102d968e-fb59-4708-ba89-fa371999617e",
        "cursor": {
          "ref": "a41ff3a4-5352-40b3-b4c0-fc6cd2eb3f5e",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "10db7a18-0037-426f-a01a-05efc29ed12d"
        },
        "item": {
          "id": "102d968e-fb59-4708-ba89-fa371999617e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "86e55888-a986-4574-bc93-88d6612f5f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e60929-02d9-403a-9df7-e390dcc4b4db",
        "cursor": {
          "ref": "b2e280dd-6b41-432d-9437-353d1723c126",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d94f68be-3b03-451c-b44b-12ecb49102e3"
        },
        "item": {
          "id": "63e60929-02d9-403a-9df7-e390dcc4b4db",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8fbf2c73-7710-4ebd-9959-96becd29ef3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cb027e-7e2e-41b4-9d6c-7f11ccf7cb2c",
        "cursor": {
          "ref": "d55c13ec-521b-4349-9636-e3e0e0581214",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e4003b87-b157-41e0-881b-5554498ab96c"
        },
        "item": {
          "id": "16cb027e-7e2e-41b4-9d6c-7f11ccf7cb2c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "108bc994-c112-4f48-8ff9-122fc1b4ba45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a8dc31-cb37-4751-bc46-5e0b13849420",
        "cursor": {
          "ref": "992788a0-dea3-4a7f-9ae5-ff679c072280",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ef972b33-109e-417a-9c52-fffcbc4b8951"
        },
        "item": {
          "id": "b2a8dc31-cb37-4751-bc46-5e0b13849420",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "edd2068e-c046-46c2-87e7-514fac249b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e7a5da-d572-4c8c-809d-f677b27ffb64",
        "cursor": {
          "ref": "7ad35217-ef46-4767-b9b9-2aadcc860dc7",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1b9100e6-2bc8-48fb-b9c5-ba336e6118fe"
        },
        "item": {
          "id": "75e7a5da-d572-4c8c-809d-f677b27ffb64",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6c964aa1-0de3-4765-b1c1-efd009c985b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8492db-9fc8-4424-98bd-0ba4676c9299",
        "cursor": {
          "ref": "8e1b98f0-a7fe-47fd-af4c-e32d293753cb",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "474e9e0f-a316-4770-8800-4bf5011f0508"
        },
        "item": {
          "id": "9f8492db-9fc8-4424-98bd-0ba4676c9299",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "87450842-b2d7-4380-a94c-0f7eedf91ccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b28bbb-9f9b-4afe-b06f-42f5bad13451",
        "cursor": {
          "ref": "8c8045a2-219e-4af3-83ab-a49edd3502cf",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "bf66f646-fe0b-40e3-ae56-f85cd6d93754"
        },
        "item": {
          "id": "c7b28bbb-9f9b-4afe-b06f-42f5bad13451",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0b13c0c4-314f-4d62-a08b-2c171d9b4946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ef9564-8ee2-4c70-a73f-11a9690d88fb",
        "cursor": {
          "ref": "750cab94-ca7f-46f8-bf45-08a5f6774731",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4a8743db-95c7-4987-9dd4-cf45a1702df2"
        },
        "item": {
          "id": "87ef9564-8ee2-4c70-a73f-11a9690d88fb",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "cc008ce0-e2e7-4d87-9c74-b765d186c551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6d8491-fc2f-46f8-8c83-40ec0f74bfd4",
        "cursor": {
          "ref": "a0ee985b-8a6b-4a82-aa09-ed9290d5446b",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "df7d5b45-d3c3-44c5-a878-ab5e66a13016"
        },
        "item": {
          "id": "2d6d8491-fc2f-46f8-8c83-40ec0f74bfd4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3d5d1dec-f40b-4bf6-b620-977d27470b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f105fa4e-ad01-4a2f-a828-5c6c4cfea2f9",
        "cursor": {
          "ref": "00f82b40-b03e-4edb-9be7-b9ab6f12284d",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1be12972-b126-494f-8617-e4eae8c3e6f3"
        },
        "item": {
          "id": "f105fa4e-ad01-4a2f-a828-5c6c4cfea2f9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "46dfa3e7-782a-4ad3-91b0-178549f9d901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ca91ed-50f7-4268-ad10-c4bb5c27967c",
        "cursor": {
          "ref": "51cb5809-2140-4392-a59e-9bdd99d6a56d",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "90d0ea3e-cf3c-42fb-ab9d-2111fa45b6a9"
        },
        "item": {
          "id": "51ca91ed-50f7-4268-ad10-c4bb5c27967c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "06789af0-a9fe-42fd-819c-5a0200b9bb1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a0f0ce-3530-40f8-839d-e6880ec22aaf",
        "cursor": {
          "ref": "bceb688d-1ff7-454a-ae5a-bc1c67121576",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "540a1163-1a4f-4e6e-a486-738a83296801"
        },
        "item": {
          "id": "42a0f0ce-3530-40f8-839d-e6880ec22aaf",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c59f302e-5497-4853-af48-946e2604c5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6bcaafa-9bd2-48ef-b642-10a077379040",
        "cursor": {
          "ref": "a47d8248-8208-4dfc-b847-ed1c2111b2f4",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7589d39b-5c00-4dfb-898d-0f3eccf1d796"
        },
        "item": {
          "id": "b6bcaafa-9bd2-48ef-b642-10a077379040",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "da81dbde-b181-42ce-b764-a2608e3b3f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34206575-24c5-405e-a812-12666b78d505",
        "cursor": {
          "ref": "d5bb0fa2-9ff0-4545-b8f5-92f7986da9a0",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "34aa3cb3-71fe-45b0-aee8-28d0e134a8a7"
        },
        "item": {
          "id": "34206575-24c5-405e-a812-12666b78d505",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "128e4dd1-e6a3-4d33-a6e3-95006649fff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3a58dd-97ac-4921-b6fe-611da80c68a1",
        "cursor": {
          "ref": "748f9ab7-0067-49ff-831c-342c3ac06f6e",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "eb9e9697-34d6-4442-b04c-71178294121d"
        },
        "item": {
          "id": "ea3a58dd-97ac-4921-b6fe-611da80c68a1",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2644ec30-193e-4bfe-b413-4c173f38b5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de2ab25-0d4e-4fbe-864b-6d8ba068fa2a",
        "cursor": {
          "ref": "8ccf73e9-773d-44a2-9004-0ba9def1edf7",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "dc30cce3-bce6-4ad7-9d99-b32b332dfc4b"
        },
        "item": {
          "id": "2de2ab25-0d4e-4fbe-864b-6d8ba068fa2a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9e86996c-1b2d-4c78-a7df-4e667d78d5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85847550-1b3f-4256-b178-f5a6cf41d97f",
        "cursor": {
          "ref": "04e69456-1708-4ac8-bbee-998be6f7b8e3",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "aaa7bd0b-515d-460a-ad79-b62e3add39d6"
        },
        "item": {
          "id": "85847550-1b3f-4256-b178-f5a6cf41d97f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "20dc3da5-21be-4050-8a35-58551bb6d653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "527d5dd3-ae1c-4773-a8c6-0a71a3bb6a07",
        "cursor": {
          "ref": "178798b6-ba6c-4e2a-989d-16cd6640107c",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1ee18a21-1466-4b2b-a6da-2ffef5196646"
        },
        "item": {
          "id": "527d5dd3-ae1c-4773-a8c6-0a71a3bb6a07",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "33f3271e-fcb2-4d83-bf60-37dc220ac908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e619f9-6b66-4398-b331-4034cd904de7",
        "cursor": {
          "ref": "ad67cd80-ace8-49ba-af31-1f32c0c1e01b",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3a1e8e8b-8338-4f8f-945b-3b0b47b8e2fb"
        },
        "item": {
          "id": "a9e619f9-6b66-4398-b331-4034cd904de7",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "59ce0e80-d336-4630-b237-96ab4bf4d162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628d0b93-adaa-428f-9694-016288de293d",
        "cursor": {
          "ref": "ca581955-ccde-49c3-9bbc-8b47cbfa6feb",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3f404460-ad25-42bd-a0af-fbbff5d6158e"
        },
        "item": {
          "id": "628d0b93-adaa-428f-9694-016288de293d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ce7d2921-a0c4-44e6-998e-cf6e1dcc03f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5476f6-3de1-45a1-ba3a-04b6e628101a",
        "cursor": {
          "ref": "8044ac38-4dcf-4076-a634-c0788c236262",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6b40de68-93d6-4e91-b526-c2fa25b3924e"
        },
        "item": {
          "id": "eb5476f6-3de1-45a1-ba3a-04b6e628101a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3aef322d-6708-4ab9-b012-4fb521a8176b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56eb88b6-2b4f-44a8-90ab-715bbe41e75e",
        "cursor": {
          "ref": "bf965d07-a433-4530-96be-d34844b6de56",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a34555d9-0090-434c-8822-15a63670228a"
        },
        "item": {
          "id": "56eb88b6-2b4f-44a8-90ab-715bbe41e75e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2b0a85c8-6d14-424c-a4ec-28887b66dab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e047fb42-a3fa-440f-b22f-97fe96e9c397",
        "cursor": {
          "ref": "d32390c9-290a-4cfe-8d97-ec7754757b55",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "00f4d2f5-6e52-4d4b-8abe-0988dc57a168"
        },
        "item": {
          "id": "e047fb42-a3fa-440f-b22f-97fe96e9c397",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "258e0041-7fb6-4cdf-bd09-211a974c61fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc75ae96-c83e-4830-a5a9-4a15fce30ad9",
        "cursor": {
          "ref": "aa7b5252-3c32-497c-b5be-5d3e11243a30",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "72168e52-5d44-448e-b7db-d56c49085286"
        },
        "item": {
          "id": "bc75ae96-c83e-4830-a5a9-4a15fce30ad9",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "95e15ca0-d8b9-4ad3-9c12-6c7f2a813d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8016bea1-1ea7-411f-83d7-edda2a09706e",
        "cursor": {
          "ref": "0284d68a-c701-4ef7-a82a-935e930cbf8f",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "394f8c0c-c9a5-4769-aab3-7992c8ebc6d4"
        },
        "item": {
          "id": "8016bea1-1ea7-411f-83d7-edda2a09706e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a3e3625e-7503-4c44-9f2a-f497f7f5ac29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1237bc67-c717-4861-a2f1-2eeb2b87ccba",
        "cursor": {
          "ref": "35dc5233-1535-4113-af07-9965fce010d5",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "125699cf-1a8a-4052-b56a-c6d4f955544d"
        },
        "item": {
          "id": "1237bc67-c717-4861-a2f1-2eeb2b87ccba",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "930d59c8-789a-4895-9986-2af27bae4d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae44fa20-7f1e-480b-87a2-4814f9259e1a",
        "cursor": {
          "ref": "6195e73e-7628-461b-adea-4ca1f094f22d",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c961840d-3d95-4d1d-9096-e9dcab912b31"
        },
        "item": {
          "id": "ae44fa20-7f1e-480b-87a2-4814f9259e1a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d3d8b7a5-b3c7-4b17-a6aa-05e4b61c301a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4211ff9-f567-417d-bc2c-440c1e7394a2",
        "cursor": {
          "ref": "e490f907-c8ce-43fd-9db0-114ab5356eed",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "cce1e032-26a7-41e4-b230-10abbcd932a6"
        },
        "item": {
          "id": "a4211ff9-f567-417d-bc2c-440c1e7394a2",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2f5648fc-8a32-44cf-b976-690b3678aaff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b445d81-21cc-4c7a-b054-f018b63f097f",
        "cursor": {
          "ref": "bad6d23e-2902-415a-84ae-153c79cb021c",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a26feaeb-2941-4b32-b8cb-fda09a7e1b42"
        },
        "item": {
          "id": "8b445d81-21cc-4c7a-b054-f018b63f097f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "af90437b-09a8-4bff-9964-5dbb20d9a485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6787f5c1-5d65-4336-b20e-42a0c75e9789",
        "cursor": {
          "ref": "8ef4f0ac-b42c-440a-9dab-79c288b5c647",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d4f8f246-f660-4c7e-b3a6-99a4021a828c"
        },
        "item": {
          "id": "6787f5c1-5d65-4336-b20e-42a0c75e9789",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e008209a-af69-431e-8bcc-fc63e28f08c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99d5114-9cca-4eaa-ac9b-2fd14f12c8e7",
        "cursor": {
          "ref": "249c4884-3868-405e-9285-7fa91734b1a6",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e8cc167e-2ba0-4dfa-974d-b45a5b18be66"
        },
        "item": {
          "id": "a99d5114-9cca-4eaa-ac9b-2fd14f12c8e7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d941bb5d-5133-4986-b43b-f85b0a92f266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6fecc3-6d77-4808-a400-c87e63e50eca",
        "cursor": {
          "ref": "4667252a-e212-48e7-ba5f-8dea6236011e",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "82197c46-1131-4fd3-8cb6-8120e74322d9"
        },
        "item": {
          "id": "1b6fecc3-6d77-4808-a400-c87e63e50eca",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0d16b739-b466-4da5-ae34-4b0d5626cd24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ac5e62-3d13-4140-88f1-4fce936d8955",
        "cursor": {
          "ref": "58ca8f4b-f773-4c79-8324-6330e7518f3d",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "efe603ed-dcbf-4c7e-9577-eb63d7f803d9"
        },
        "item": {
          "id": "15ac5e62-3d13-4140-88f1-4fce936d8955",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "349e9930-efb2-4bf9-b4f6-519c8a232d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14620a21-e951-44e7-a4f0-fd1c0b35c955",
        "cursor": {
          "ref": "9b34e009-fa20-4afb-8f14-b0816ca2f6cb",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7cfb0b54-c340-4bcd-a080-120968b292bf"
        },
        "item": {
          "id": "14620a21-e951-44e7-a4f0-fd1c0b35c955",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "378076bc-b73c-4f94-8678-56d96a960b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39825dd-771a-41ad-bafd-499cc8d6b47a",
        "cursor": {
          "ref": "19328853-ea4f-4329-9eca-eb53fc037f63",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c78e0d63-1bfe-45e6-b772-7e90e3679f8f"
        },
        "item": {
          "id": "c39825dd-771a-41ad-bafd-499cc8d6b47a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "36b3afc0-712b-48b3-adcc-d116e74218ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7857f353-5a3f-4219-a9f5-d2af28c1be79",
        "cursor": {
          "ref": "f44059cd-6bda-48cd-8464-4206d266d5f9",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e0616256-3c15-4842-8701-7baab0ed69d5"
        },
        "item": {
          "id": "7857f353-5a3f-4219-a9f5-d2af28c1be79",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "dcf2b71b-2649-496a-872b-70cdd63da8d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34398291-8ba3-458e-aa80-14ea74d54405",
        "cursor": {
          "ref": "30a76731-57e4-4deb-9e2f-67f201f6cd6a",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f4ce44f6-3e8c-4281-ac6f-e0e05d286847"
        },
        "item": {
          "id": "34398291-8ba3-458e-aa80-14ea74d54405",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "54ed31d2-15db-4b63-b142-53fa708a9240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af486ba-5818-49aa-acc1-ffceccfbfbcf",
        "cursor": {
          "ref": "c32673b7-d1e0-4d51-b5c8-0cdbaa04d1a1",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5751cb30-33cd-4018-a7e8-dffb66b18ab2"
        },
        "item": {
          "id": "5af486ba-5818-49aa-acc1-ffceccfbfbcf",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "cf00e00f-a352-42a1-903d-4cbd0dcb7b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8cb9d9d-0d1e-4d77-bed3-894bb43d8836",
        "cursor": {
          "ref": "46441ae3-efd1-40ef-9bb5-059e8f5a59e0",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "626ca397-0ded-4cce-a528-f866ddd39396"
        },
        "item": {
          "id": "a8cb9d9d-0d1e-4d77-bed3-894bb43d8836",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9e41e4a6-f681-424e-993f-af079ed9dd5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad011b5-99c1-447f-8b99-44f019696ad2",
        "cursor": {
          "ref": "d3d4db3a-caf2-40af-9320-e9e7b1dcb5cb",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "fc2ec955-e0cf-4174-8dbd-a656e9a0f8ba"
        },
        "item": {
          "id": "2ad011b5-99c1-447f-8b99-44f019696ad2",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "421bc7c5-bf95-4374-a17d-45102001b59d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8a4cee-4f14-440e-b518-1a552dcbec68",
        "cursor": {
          "ref": "88c60803-e166-459b-97d4-1728b57096db",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1e993d52-abd0-4634-bfcd-6bbdb7aa37c6"
        },
        "item": {
          "id": "8a8a4cee-4f14-440e-b518-1a552dcbec68",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f5499c60-771c-45c4-857f-763a08066429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee7f122-7c51-42a6-919a-591b51fc6577",
        "cursor": {
          "ref": "1dc1d734-6119-495f-a078-dab85ff08f88",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4090dc77-7f55-4f08-a70c-8cbec354eef9"
        },
        "item": {
          "id": "cee7f122-7c51-42a6-919a-591b51fc6577",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1f6f43d3-28a2-4eba-aa55-7a74a72fab1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d34d4e-88d4-4dff-90b2-ebf6cf36725b",
        "cursor": {
          "ref": "acb53cc0-809e-4509-853f-e39b8f2dae60",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0dc4e616-cdad-46bc-af2c-c93d376292fe"
        },
        "item": {
          "id": "79d34d4e-88d4-4dff-90b2-ebf6cf36725b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f56e1720-9cb6-4e40-a82c-34fddee3037c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80864179-877c-4cf4-9477-7377ab1142e9",
        "cursor": {
          "ref": "386250be-678b-41bd-b35f-9558c9c318d0",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b966df60-791e-4574-8947-a451d2158089"
        },
        "item": {
          "id": "80864179-877c-4cf4-9477-7377ab1142e9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8010003f-f19b-4096-8f1a-22e7db042a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09788a2f-0239-4c46-958d-1334ac96a0fa",
        "cursor": {
          "ref": "3384c2c1-0d79-405f-bfed-6490ad8959ac",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "41f1c791-9a2a-4426-99af-ac06e8636eea"
        },
        "item": {
          "id": "09788a2f-0239-4c46-958d-1334ac96a0fa",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "53c31857-4311-46b5-a061-fa377d3d04ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c7df22-d0d0-4200-b22e-6cdf3323f20e",
        "cursor": {
          "ref": "59025f4f-38d1-40d7-ab85-d23e408543c6",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7d78982e-977f-4f43-ae52-adc175ecfb2d"
        },
        "item": {
          "id": "e0c7df22-d0d0-4200-b22e-6cdf3323f20e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "37dc5f72-0c57-4402-82a6-73cadc549ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd1ba02-7873-4510-9bec-05d441efcd72",
        "cursor": {
          "ref": "ca8820bc-d9c3-4f28-a027-4e6f77197676",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "71a150ee-3682-4fd2-8231-456136d377a0"
        },
        "item": {
          "id": "bcd1ba02-7873-4510-9bec-05d441efcd72",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f69e5392-8c46-45ec-8265-43a50621f96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb357101-976f-400c-bc68-b32926568294",
        "cursor": {
          "ref": "f2db3e0e-2435-403c-b77e-ffd05bdb8ca1",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7679c2be-0677-47f8-8108-196babf60a84"
        },
        "item": {
          "id": "bb357101-976f-400c-bc68-b32926568294",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1747de49-793a-47c9-8e70-d229f5652ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02779808-0061-4824-acbb-90f70f14b94a",
        "cursor": {
          "ref": "ceb04971-c024-4c88-b33d-cfa35ea7f424",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2f937036-43f8-42a4-b270-e22262375bf7"
        },
        "item": {
          "id": "02779808-0061-4824-acbb-90f70f14b94a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "60cbebde-5491-44d4-b975-9a6583b9925e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678a2948-3470-4611-bb5e-897de120fc9e",
        "cursor": {
          "ref": "de7b8543-4836-4779-8e00-bc57acd642a5",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "192e7442-ffda-46eb-b641-ba630abd6b76"
        },
        "item": {
          "id": "678a2948-3470-4611-bb5e-897de120fc9e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8c48956e-2c33-4f52-8378-f51546dcce9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ec5d44-3b9e-4569-93e7-d7a96807e85e",
        "cursor": {
          "ref": "e12d7358-03ed-492f-92dd-1df94b45248a",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "19b7795b-d2ab-42e5-b891-a443b9194673"
        },
        "item": {
          "id": "08ec5d44-3b9e-4569-93e7-d7a96807e85e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "23231c83-1795-4905-973c-7ccb308b14c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8608641-58cc-4782-8344-887a8259a39d",
        "cursor": {
          "ref": "cc95c533-85b9-41e3-9726-688d303d13e7",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f0608189-4972-42f4-b834-7382b66a1c11"
        },
        "item": {
          "id": "f8608641-58cc-4782-8344-887a8259a39d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6a0938c1-553a-429c-87c8-53e283d47891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e556476-022d-4340-904d-eb0bbc010980",
        "cursor": {
          "ref": "8dfcf8ad-6d38-40b4-b6e8-4be24c591974",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2266caa8-bfd5-41e3-a1c0-6ebc5f4e6900"
        },
        "item": {
          "id": "0e556476-022d-4340-904d-eb0bbc010980",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3a5c3a0a-dafd-46e0-9df9-8f92798bf95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead0c071-a9f8-4386-af2f-6a372fc8332b",
        "cursor": {
          "ref": "b3b42437-5e3d-4e91-aadf-070528a6da72",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "fe943cf1-f98e-46b9-b55f-25eafd989f31"
        },
        "item": {
          "id": "ead0c071-a9f8-4386-af2f-6a372fc8332b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "93463a80-5843-4b21-832b-730b7c483abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0cdce4a-c3e8-415a-8da4-00c0e8d311a8",
        "cursor": {
          "ref": "a567964f-480a-4c33-8db1-730baff49063",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a8f7cc2a-d84f-4db7-8c93-caa2690a6dc1"
        },
        "item": {
          "id": "d0cdce4a-c3e8-415a-8da4-00c0e8d311a8",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "da3fe8e4-3397-446f-87b5-c4108d01ea2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45cca798-7dad-4941-8ea8-bb9caf859ded",
        "cursor": {
          "ref": "5fa151e8-d581-41d5-92c0-8b0ffed8e79d",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c0d1df51-3374-413e-9c00-0622dbe96a4e"
        },
        "item": {
          "id": "45cca798-7dad-4941-8ea8-bb9caf859ded",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "85c07ec9-81d3-4fe5-8561-9f0cc97e29af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0795bd18-635c-4021-94c6-ab3fd108e171",
        "cursor": {
          "ref": "ede79e49-8f99-47ea-af58-95be6a91d18c",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0e952ad8-3ccd-4e2b-8f31-0630315bd873"
        },
        "item": {
          "id": "0795bd18-635c-4021-94c6-ab3fd108e171",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3f0098dc-0e6e-4e08-b7e8-821f7b4aac1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7b9e3b-14f8-4d86-aa6c-69d3b0db0a42",
        "cursor": {
          "ref": "9cd0f07a-7769-4cb2-bddc-9dd7e48107fb",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9b6dd671-a7cd-455a-8984-4595d2627aeb"
        },
        "item": {
          "id": "1b7b9e3b-14f8-4d86-aa6c-69d3b0db0a42",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0f1f2c41-7e60-44f1-a924-78540e575d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd985c8e-9acf-423e-adcc-163efedb0328",
        "cursor": {
          "ref": "1fe8be1b-ea30-4b05-9843-2b9760bc04b8",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6102b66d-829b-4eb7-902c-11d608606e09"
        },
        "item": {
          "id": "dd985c8e-9acf-423e-adcc-163efedb0328",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2b8db983-77f5-40f5-ae69-f35305055cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239f6f72-a65d-4c25-b063-296dffb69ceb",
        "cursor": {
          "ref": "939e0918-6bd5-4e85-8751-3608ebf37fe3",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f9fc58fc-cd55-4f0c-b924-a50e9965321f"
        },
        "item": {
          "id": "239f6f72-a65d-4c25-b063-296dffb69ceb",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "eaccf794-b107-4102-8739-4e5fd56cc106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9940f58-278a-47fd-adc2-4a4ebe7f46fc",
        "cursor": {
          "ref": "90e9bcf1-9c5e-45dc-b5e0-32720370fde9",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5f5036b2-c999-48ca-92de-3f70a08f9524"
        },
        "item": {
          "id": "e9940f58-278a-47fd-adc2-4a4ebe7f46fc",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6bb99b82-81fb-4996-b6e9-2f287ee7c64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4cbbb1-9682-4bca-adcb-42ec6c4adc05",
        "cursor": {
          "ref": "1069ac81-9ac1-4817-87dc-f84f73b07a2d",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3a3e7c18-a425-4f71-b80b-5588404a1505"
        },
        "item": {
          "id": "5c4cbbb1-9682-4bca-adcb-42ec6c4adc05",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "79c48abf-e0e0-4cf2-aa41-6bb1baf29aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690507b1-d3dd-4b87-82a9-b76dbb9100a2",
        "cursor": {
          "ref": "2fc821bc-7046-4c13-a2d4-8e977ea739c1",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9a61738e-31e7-42b4-9fc9-814f91b50df9"
        },
        "item": {
          "id": "690507b1-d3dd-4b87-82a9-b76dbb9100a2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5942d871-5afb-435e-91bd-365b7f0aa3ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e52ed2-d90b-4800-bf42-ffb390948e04",
        "cursor": {
          "ref": "b4d00195-7763-46fa-b93b-02cfdb3c523f",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b767d123-dc17-40af-89a6-8258126f374d"
        },
        "item": {
          "id": "c5e52ed2-d90b-4800-bf42-ffb390948e04",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7fdf3950-75cb-429a-90bf-76b6ee34ef9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd56cc8-4075-48dd-a482-6d6f4ad99eff",
        "cursor": {
          "ref": "0b9da4a3-d258-4393-b247-3719cf9e1a19",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2a2a1194-b6ab-4254-bf33-a71595f37966"
        },
        "item": {
          "id": "4dd56cc8-4075-48dd-a482-6d6f4ad99eff",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8a6689c5-ec64-4583-a89d-44f5b02efb40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7938bcd0-ff8f-41fd-86cf-dfb3880f6bc8",
        "cursor": {
          "ref": "9ece3101-29f0-4f2f-834f-71b8b23e6703",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "908ed837-fbc2-4363-8326-a4920f73a79b"
        },
        "item": {
          "id": "7938bcd0-ff8f-41fd-86cf-dfb3880f6bc8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e0dfc8aa-68df-49f9-94e0-86cfe698ce9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561472fd-085a-488f-af14-9cdafbb84f80",
        "cursor": {
          "ref": "ea3277b6-4766-439f-9703-0ae5b37720c1",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "32193f05-e5da-41f5-8feb-52fa67531ed8"
        },
        "item": {
          "id": "561472fd-085a-488f-af14-9cdafbb84f80",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c2b4c210-ef48-4396-9685-056ed3da58d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e417b680-f7f6-4851-ab7b-40a09ccd9a75",
        "cursor": {
          "ref": "eb012b8c-ac47-4498-a5e0-aa10a453f237",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a46f44e6-00fc-482c-9919-af417923603b"
        },
        "item": {
          "id": "e417b680-f7f6-4851-ab7b-40a09ccd9a75",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7c1af332-8f3c-40c6-a844-af2f9fc8dc53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c12b370d-7410-49ae-9cd0-2e64f37adafc",
        "cursor": {
          "ref": "b10c63b4-578e-4d35-9962-2dda9b5123a1",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c9f090d2-c9ea-49d9-bd2d-6b195081341a"
        },
        "item": {
          "id": "c12b370d-7410-49ae-9cd0-2e64f37adafc",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2d97f539-886e-41bb-bb17-08d621ce9c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c0c77b-0de2-4ec0-8288-e69bbe5759d5",
        "cursor": {
          "ref": "f4d2f799-79ae-42b5-9404-0f01bc80fc2c",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e1554532-cfa2-4610-826b-8e7b68e69b60"
        },
        "item": {
          "id": "97c0c77b-0de2-4ec0-8288-e69bbe5759d5",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "69e21507-c5b2-41c9-98be-44d237854827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0cdadd4-8dd3-4216-84ed-8d2d1c1d8df3",
        "cursor": {
          "ref": "73442486-09c4-405e-bb46-9e3c6f50788b",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "39031830-4f5d-4cae-ac9c-d925d526b53b"
        },
        "item": {
          "id": "d0cdadd4-8dd3-4216-84ed-8d2d1c1d8df3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "218d0524-dc6a-45df-95be-e469ca5677d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37925601-b0c7-4edc-b369-17b695cf290d",
        "cursor": {
          "ref": "6a5fb364-236e-4a7b-a4f1-83de0247e0dc",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1cd117f7-2e84-41ab-9730-07144e3e6847"
        },
        "item": {
          "id": "37925601-b0c7-4edc-b369-17b695cf290d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d0582652-1eb2-48d0-9ff9-d46be8f5bac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c58b653-e4b1-4eaf-847d-c5f86c7c1f85",
        "cursor": {
          "ref": "968e4221-2122-4a60-a1ad-ad3fd8131807",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "53346d34-a5cf-421b-85d5-a70f651bbdb4"
        },
        "item": {
          "id": "0c58b653-e4b1-4eaf-847d-c5f86c7c1f85",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8ec5cfe3-1636-4426-b48b-aca04b2b7217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52946ecb-2014-4685-a244-72cd46f578b6",
        "cursor": {
          "ref": "4cc28036-9895-46b1-8008-68b945f39c32",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "41779ff2-ba41-4d4e-82b1-ff36c12e3682"
        },
        "item": {
          "id": "52946ecb-2014-4685-a244-72cd46f578b6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "439a6143-c931-4a33-938f-e16a8e6a49a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec80d96b-b724-4b12-9eeb-5d879b7f282d",
        "cursor": {
          "ref": "f11d14b8-6bf9-44f9-9d8f-a6871b99fb21",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "858bd6ef-3bf1-4c38-92a7-a3d958f21a4d"
        },
        "item": {
          "id": "ec80d96b-b724-4b12-9eeb-5d879b7f282d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "23048609-4e04-479c-b66c-571cc74d4d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02159acb-2707-446b-a882-061a3c61f0e8",
        "cursor": {
          "ref": "1f37c053-6591-4b9a-a43f-78632481a84c",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4faf2118-dfe8-4915-a1aa-d798fd1ae81b"
        },
        "item": {
          "id": "02159acb-2707-446b-a882-061a3c61f0e8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "13667373-ca8d-4213-ad53-6d6bde284c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5308048-ba01-40c5-8be5-d8f3687d190a",
        "cursor": {
          "ref": "679a036a-5e66-4ea6-a434-0d1a872b8a44",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d71ebf39-fcea-4bc1-8e35-d8d5776afd45"
        },
        "item": {
          "id": "a5308048-ba01-40c5-8be5-d8f3687d190a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ce79c3fc-5cdf-4170-8c45-e99cff5fb467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f1efb2-8aa5-419a-a871-c177985fb987",
        "cursor": {
          "ref": "a5ed2d3a-9cc5-4e29-8ac5-3b8154c850b9",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "eaac3838-cfc7-4689-8d26-7891540eb341"
        },
        "item": {
          "id": "30f1efb2-8aa5-419a-a871-c177985fb987",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3aee87c6-2183-485b-a106-773ad06f65b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5b4996-7e76-4ec8-b083-6ba016082693",
        "cursor": {
          "ref": "5498e44e-bf3c-4b24-a973-10cf9f6ac599",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "27fc677d-81a4-4735-ade4-da36b27b5b4d"
        },
        "item": {
          "id": "3f5b4996-7e76-4ec8-b083-6ba016082693",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "607145d9-085f-415f-b704-7fc43e14ef57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84a54ec-3762-45fc-9559-84b79c296be6",
        "cursor": {
          "ref": "b808e4f2-7b29-469a-bc2f-f7157388feab",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "579af91c-a301-4af4-8509-7b182cf8e115"
        },
        "item": {
          "id": "b84a54ec-3762-45fc-9559-84b79c296be6",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "35fdfe47-8664-408b-8272-b8de92ae6f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967cb43a-d6d2-4874-a76e-144236617ba7",
        "cursor": {
          "ref": "2a1e5f69-8619-451c-8e91-263323d5ba75",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "11e47a7b-b6f0-43b5-80d2-87fbcf4fd476"
        },
        "item": {
          "id": "967cb43a-d6d2-4874-a76e-144236617ba7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c154d0f3-509c-4b9d-8358-eaf910775801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b72727-6c08-4a22-9c70-523ca62d6953",
        "cursor": {
          "ref": "fa8a7708-7be8-4c5c-921f-e5d917675d86",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "25bec072-3aa4-49eb-866c-4e76cecd11f6"
        },
        "item": {
          "id": "c5b72727-6c08-4a22-9c70-523ca62d6953",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d866f79e-4d63-435d-ad13-0434e265c457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4726a6e7-81fd-49be-857e-6722b63636fc",
        "cursor": {
          "ref": "cc05c6e7-db69-4536-ad4a-bb5977151685",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "04f8f06c-b5ee-425e-b283-c5893abf67e5"
        },
        "item": {
          "id": "4726a6e7-81fd-49be-857e-6722b63636fc",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0ed32eb0-ca87-4ab3-96cf-324e1b68a2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4cb0e11-1e78-4d6c-866b-608fa9aa734a",
        "cursor": {
          "ref": "53424481-436e-46b4-b944-7c993dd4bab5",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "324239e2-53bf-4fe9-9016-dc0d0b209577"
        },
        "item": {
          "id": "a4cb0e11-1e78-4d6c-866b-608fa9aa734a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6b3a9f01-a2f8-4ff4-93ff-ba477019c49d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b92b67-a499-4657-bf0f-ea016e0ed4c5",
        "cursor": {
          "ref": "d9192830-090a-4a29-bd62-2d7d1c69f758",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c238ffa3-3418-4efe-8fce-7611e6e72803"
        },
        "item": {
          "id": "71b92b67-a499-4657-bf0f-ea016e0ed4c5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "58e40003-bd7b-4e60-982f-42a29106e6f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988c3c50-8e9f-4fa6-8f18-78da1180acea",
        "cursor": {
          "ref": "df6194f3-a96e-4142-90d5-66ea8e01536c",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "593ec8b4-b460-4e6b-85dc-8bdafa8a1e84"
        },
        "item": {
          "id": "988c3c50-8e9f-4fa6-8f18-78da1180acea",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b1d67328-b953-4760-ae1d-b52b443cabf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f71d56-d079-4181-9109-a2ee30c5bb7f",
        "cursor": {
          "ref": "ecd61243-4427-404d-9805-57abe591f77d",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "81b93dc7-5f6c-4095-bacc-0f93c3769051"
        },
        "item": {
          "id": "11f71d56-d079-4181-9109-a2ee30c5bb7f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "603ccb79-2cfb-4861-b4f8-8a47ffd72dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614429a5-d87d-40d2-bbe5-7791f5dbe995",
        "cursor": {
          "ref": "0c293ac7-9b5d-4a66-ba23-b005aad0dc44",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9e356685-f18a-4a81-abab-91b135def5e0"
        },
        "item": {
          "id": "614429a5-d87d-40d2-bbe5-7791f5dbe995",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "46310174-1a4f-4465-9846-e556f1e3e758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846c2265-cbf7-4fbc-b97f-099d35c9dbe1",
        "cursor": {
          "ref": "4b567a5f-3cd1-400d-ad13-1be55ab442cf",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9eb44a23-8538-4545-82f7-35acea226051"
        },
        "item": {
          "id": "846c2265-cbf7-4fbc-b97f-099d35c9dbe1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9a3853ca-4759-43f6-9184-bd8eaa231482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52acd794-8498-4a32-9af5-2e97bb8ba7af",
        "cursor": {
          "ref": "f5fc9b0f-3e5e-4292-a673-f5ad91d59062",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "22a8d468-5869-4d86-b416-e162c7831ca5"
        },
        "item": {
          "id": "52acd794-8498-4a32-9af5-2e97bb8ba7af",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5aba24f5-5c14-41d5-9705-d6aafcfd3e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2296cd2-ab76-419a-94a3-a495615bafaf",
        "cursor": {
          "ref": "fa3e610e-50cc-4e1b-8fa1-99f8e503c208",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "46404c90-1193-4152-9f6a-16c90cfeb6e3"
        },
        "item": {
          "id": "c2296cd2-ab76-419a-94a3-a495615bafaf",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e1cdfc0c-9cf5-4356-b8aa-cf266df2b694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce5451a-fdc4-4b4d-b2ee-ad38089aa77c",
        "cursor": {
          "ref": "248938ab-c164-4b15-a9be-ec8ecd6f8bb6",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6cc59e0d-ef4b-44a7-8a83-2f113a0f7084"
        },
        "item": {
          "id": "5ce5451a-fdc4-4b4d-b2ee-ad38089aa77c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6e7249da-d66f-49a2-b289-45f785278129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6e31bd-8184-4a1b-bbf9-e050e7887399",
        "cursor": {
          "ref": "c3a2883d-ffd0-4457-80a6-67122908107a",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0ebd1d8c-e724-4bbe-85c8-2e2237f706ef"
        },
        "item": {
          "id": "0d6e31bd-8184-4a1b-bbf9-e050e7887399",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4a1ba209-256d-4597-be96-65119d6a692c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "395014d6-cb55-43af-95de-20e8dc573831",
        "cursor": {
          "ref": "bfc77541-b4a7-4b61-bf16-af325b7f5be0",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "74a9a4b3-1347-42cc-891e-0acdd4ab1ce4"
        },
        "item": {
          "id": "395014d6-cb55-43af-95de-20e8dc573831",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8e601f23-8a64-4a7b-b181-5084b0e7a3f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "f29f7719-280f-4c13-833c-f8f71d6ed803",
        "cursor": {
          "ref": "06f40a5d-ca50-44e7-b666-8a5050a24e6e",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5d7d015f-f7ea-4fb2-905d-a61e8a8b3939"
        },
        "item": {
          "id": "f29f7719-280f-4c13-833c-f8f71d6ed803",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3adb651e-d44d-4c5f-b71f-30b1f52bec8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "16519942-3c0b-46d7-8f5b-e09ba43af63b",
        "cursor": {
          "ref": "7d709aa3-62fe-4c67-9de1-791a71c6f658",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "98e75042-ee23-4cb8-a10d-563a7d86827a"
        },
        "item": {
          "id": "16519942-3c0b-46d7-8f5b-e09ba43af63b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0cbe5297-9198-4b75-8b9b-659cdb71f344",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16519942-3c0b-46d7-8f5b-e09ba43af63b",
        "cursor": {
          "ref": "7d709aa3-62fe-4c67-9de1-791a71c6f658",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "98e75042-ee23-4cb8-a10d-563a7d86827a"
        },
        "item": {
          "id": "16519942-3c0b-46d7-8f5b-e09ba43af63b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0cbe5297-9198-4b75-8b9b-659cdb71f344",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ff65db-3c21-4798-845e-a32234023fd4",
        "cursor": {
          "ref": "f19bf77e-2c13-47e1-9956-0c300ecf5c23",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4e9a6504-8992-43d5-a1e6-52c105b4da8a"
        },
        "item": {
          "id": "77ff65db-3c21-4798-845e-a32234023fd4",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "13ccf136-2de6-481e-8e1f-7bd316d786d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a66799-64d8-4848-b0bb-8658be60ed05",
        "cursor": {
          "ref": "7e06646a-0cf6-4d28-a55e-1f82d04907c1",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c75cb17a-f75d-41f8-95d9-4ba26b13432e"
        },
        "item": {
          "id": "62a66799-64d8-4848-b0bb-8658be60ed05",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "578cfeb2-a585-439f-be61-0b3322975568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}