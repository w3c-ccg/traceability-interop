{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c5821535-992d-40d5-8fbf-6b397a4843e7",
        "name": "Clear Cache",
        "item": [
          {
            "id": "bbf71320-809a-4186-bd3d-4fb6c1599e7c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "363efc0b-4822-45ee-8d9a-578f361b5212",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c25d615a-ebb4-4fe2-a95e-b0d693601e49"
                }
              }
            ]
          },
          {
            "id": "940ac0df-a477-4b1b-9cef-ec7cd5a1c8d8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d9ebfcf3-af7a-4864-951a-885e0e75d3df",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d00d7bcf-2def-4b03-a149-dce877b04ab2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5b99f408-2e8a-4c09-a95c-3c01d9daeb44",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ff5061e9-56e5-450f-ac37-c975aec2306a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "041fd80e-8d8c-4c95-a46c-6e5ca7a5ad4a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e06f760-14e1-4413-82d7-73e2a488b9f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b2f2bcc8-d7c1-476c-9339-5e2d5cf73e2c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a74008bd-69a5-4c37-a423-dd64b9161b22",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2487b3d1-54ab-421d-9a36-8d9e7462577a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cdae78e1-d784-48af-b116-dcbaa1fbdde5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "753676b7-e65c-492f-9b95-17706fca94ae"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d1019b0-db49-4de1-a938-637724773859",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "fe259f24-24cd-414a-b482-ed3f70b31cef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "332dd8d1-6b6b-44c7-b6a7-ca8f95fc0d79",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6489d214-9893-49a4-9b4d-ff45b497de7b"
            }
          }
        ]
      },
      {
        "id": "83a44714-87c2-44ef-b7e2-d57f2111d61b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ceb8086c-37f5-4ce2-94a8-b55233cc6e2b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ad1c987e-74af-4b3b-b458-c1dafa5386b3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4d01bee9-aead-417c-8169-00981f11b49c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8ea063-6092-4e9f-a6af-1f770acad912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2b442c9-9ee2-4350-ab7c-033195f960d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79fa61c3-eaa1-40b8-838e-0de9f61f53d6",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67da7936-c25a-45bd-a8c8-ad865985eded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "92f473dc-5ec3-4907-8001-461162e3ecf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a503cf-bcd1-4028-b0d2-e592c5202f45",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d76e2b-b66b-4f97-9dfb-55c85a1d83de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "363c9a56-0da0-4e4b-b543-a157936c2d14"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5e821f69-be85-44a6-abb8-5362252e71ab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ce1c135b-9800-451b-b345-7e9208fc7254",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e498f9-9c55-4dab-b612-24d5141c3c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d4a183d5-62d1-49bd-bf41-c2bb45a9fc2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54a3280-079c-44e4-ac2b-f488a9db06e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a655c74c-16d0-4b10-ba3d-8a410fd69f84"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "21591920-b05e-48ca-bf0f-91d96b6be083",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5f29a082-69d8-4f86-986b-a466f75df39f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "16f6652b-bd7e-442f-9642-0ab84d6c93c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1979a02c-4305-493c-ad51-954fa654ec92"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8904399-e835-448c-8f2f-ee4ea8c261bb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "bf59f369-f384-4edd-8e59-597fcf6a46b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1cc9a210-b5ca-45b5-aeaa-8a38109a5f92",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8791ab66-c012-44fc-9689-1fbc36d52ced"
            }
          }
        ]
      },
      {
        "id": "7b35ad71-8eda-4d22-a638-11132b1f72a6",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a680e863-51d7-4691-8add-c0be8a1f7d81",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1716c290-a103-4af0-9c99-538c5f559576",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a53df05d-794c-4a4c-a42a-6864cc474e54",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "570346cb-3450-42b9-acf5-e001eb6223cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbbe084a-b6e9-44b3-9a3d-5ff4bc9be019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a205d140-109a-4d4a-8556-ac392f6919c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64833a8c-de77-43a3-8c25-0b48801e7032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c3d680-96fe-4532-abab-a236e9b58813",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3072d2-cf83-4f42-abfd-c00d34b6dd09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "760337a7-7a14-401a-ad7f-17ec829cb85c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b2197d-2362-4c12-b9c1-0caa0dde3eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19ec3b1d-7dd0-4a48-9f7b-aa3f13a22d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96486d4a-a9b1-4a85-a2f4-35f18bdc7b98",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4eef366-cc86-4b53-ac2e-877f17bca481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9970cb65-0423-4d47-b3e5-3d8546611824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7c3fc4-6f7c-4505-a20b-5bd89ccbc6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d162d7c-d52d-4e9e-82a3-13dc3d83707a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42733f2-250b-43fd-be63-eac38615a8c3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "064983a9-e3ad-4e97-9fd1-b87b2bdd1e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4210b1-2eba-4be7-94c5-d2c2a5c4ecb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6473a37-1d3b-4869-8ccb-1abba0bd9140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd7f88bf-d1a5-4dfc-b24a-b1277400d061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03063ae3-0003-4b80-bff8-a6b6acfcc965",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "134476bd-25c7-44f6-9475-a23d353920dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bafebff-89bc-4d05-a462-62a8233204e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65073d18-9f4d-4fe0-8b11-b54d0a2ec6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad60ae5b-a563-4f74-aeb0-92bf00d5570e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2194394-f961-491c-b484-d63a23bbc0c1",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9945a685-e529-42eb-af5b-0f502d965586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f6f3b21-cd35-4ae9-9ba4-1aa200137cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4256bf60-4a6f-4973-9a5c-af173c67dc29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bcd2087-e1b2-4b09-9816-a335076fe3e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52adaeab-2700-4f3c-b711-157e502262a4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afadc1d-d7f1-4a6c-a4fa-ca87fb057ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "682c11d4-5197-4dc7-8377-672102f584d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f51ac3-6725-4101-81ae-fad3f7d735db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13ee3a44-51cc-486a-b7e2-cd902bf42f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170b5dbc-3966-4251-b39f-0ae1c5449455",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1a3506-54b8-4367-9d40-353824fc7654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "251080fe-8ce8-4684-b35f-0789835b1fca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "599f1f12-8756-4423-9b05-1dd4b03fc227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ea981f9-e280-4982-83ab-4434474229da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4070bafd-8559-43cc-9874-15cd7c05734c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4bd0f4-6f79-4f32-9364-12405548e398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc87633b-1401-4c19-bc16-5d5dd352ed9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9309e281-26f4-43e7-a68d-1ba17261ea87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d69aafb2-bf22-4f4b-802a-e703903635dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99783215-f04a-4284-ae61-73cc7b206107",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4b7327-179b-4a92-b760-5be6beb91760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "751725ae-fb86-44ba-814b-d372c7b72be0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89809e97-cd50-4669-9255-7c4eb76021b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "134b0b11-c30f-4318-85d7-7dee5baf99ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f244d2fd-967e-4ced-88df-d1768b6fe5ca",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ace1c7e-3c30-4d4e-994a-310a808486c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ad96824-dcc6-42f3-9280-deba7701eb1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617b2958-6c03-48c2-86ad-424bf7f8dd5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c677427-bd83-493e-8e29-d42ad264dcdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba70962-fe73-4193-a03f-4949cbdcc930",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a5b9d1-1a16-442d-9629-2409d7798eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f4be4f6-1eea-47c9-a549-d93ccd1b8539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d8f96f-0dc1-4bde-83f0-41e00f424eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c75c4a65-7173-4091-bc55-84d70da17331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f2eda4-b364-434b-be8d-5d1e2000e7a2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e30f357d-9b72-4ba3-883b-c72e55c95870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae7e2e96-cc8a-4c90-b55e-73385f24cdef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f38453-df63-4110-82da-09367c52bccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6edb3d31-b2e5-4129-8f2b-2e5b0307bf49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23b8085-d7f6-41eb-8d6d-29a11ebba4f3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b388dbf9-0fab-400e-8956-b3cf49beedb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d70ed7-f9f4-4364-b674-1a30f855d23a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3292b2-78d5-450d-a3da-9d5a2025e952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "751c9c7a-d20c-490e-8b80-1fcd97011337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0af36c-5389-4962-a0cd-27edef38bfaa",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe254a8-633e-440e-a4a7-ce418d768bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e8c4996-3aaa-40ba-b4a9-a0b57b8cec6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d343808-4942-4d07-aed5-c36ef46144ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bed67b02-4615-48d2-a8f7-8d6e757eb5b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2434d07a-4669-4ebf-a846-11e45952e462",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2854abc6-c933-498e-9c7d-bf154e725ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "559fc64b-e761-4171-aec1-ff8fecc1f747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418b9391-c9f4-4d35-b1a8-3055cbcd4df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd01785b-cb52-4d89-bb23-f9f1ed158240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72ad305-a665-4720-9747-25eb4ef52632",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8b3f9a-311e-45b0-b15d-777618a75e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce3d0494-040d-4b77-89c6-44a3e1934b7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcfd9a59-7661-4acb-8c86-e7bd14ce7d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79c715ed-f3d5-4daa-b62e-37216c60976d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1bcb84-4333-4cf7-ad56-703fe650fa22",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd241c3b-4b90-45d9-898b-1f78d1eda468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0783790-20a5-468c-9aec-937c747f1989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cba1c03-7c15-4ae7-9a83-ea8d69395b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5977c860-c6a2-42ee-a1ce-907a15e95e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee58c80-ebf7-4f6f-abd3-f10d7f85565b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfdb0c79-12ed-4d93-b7d6-9c8d6a81d5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cb5acac-1db6-4089-8936-3fd42fac060a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ccb619-4cfd-46e5-81f5-f1c00eff2eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffe93c9d-141b-428a-b93e-d6c384d03815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b8f663-77dc-4cb1-a372-7bf95186ed65",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dbc3615-1463-43e5-a125-c7047842fcb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14193852-3f82-4aef-808f-a9024b181c97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ec1ec4-e2b3-4bd9-89df-062120231f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb7a713f-49b7-44e8-a492-52351cb5899c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe1f458-d02f-4583-9420-29cfa8e1c88b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b2524c-f964-4bda-88f9-048fc6ddf03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2446cf63-52c0-4e10-a018-82d94afbf79b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9839453-007e-4eff-83db-a08993cb34a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "19986ae0-de76-4152-9d18-7d2b76843816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940f3f1f-0ace-410c-9a44-ba29aecf2157",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea49790-83ea-4250-a9b9-7091684dbd30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4fbfad4-c29c-47de-9650-f34604d0f593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe3944c-ee96-4cb6-9e6e-2559bdcbfe87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "64272fd5-a77c-43e8-83c5-e74078f7c221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be8dd76f-56ae-4330-9de4-3e39a9bf34cd",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6bc704-363a-433f-9a3f-128cf436b302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc9594c-d0c2-4242-bb25-df0695f8efef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddbef1d1-eda7-4233-977c-6b1b65ca5196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e25df031-44af-4db7-8699-0fe8dd5fd4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d1f6df4-c4e8-43a7-856a-a967837eb94d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0cbb1d-6044-4cab-b885-8a4cac052dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "728ce8ba-25b9-4677-a034-f64a0059bd05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263d7f3a-87fe-49cf-b35c-87a08f795fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9dc420b-1813-4ba3-a662-95aa24375ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f049f442-06a9-439b-ba4b-0ef87603ce8e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "798a8fcc-a4ac-4da6-8e8f-99372fb27326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a6bc9d1-e231-4327-b844-2c3495965459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae06eba-2ae0-48eb-84ea-2716bd2f6f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "30e08081-077f-47c1-bb5e-3d85f5d3c323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34954cb0-68a4-448a-89ac-cb3604a273fb",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd720f98-3850-4130-ac5b-900909ec8577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6662e2ed-a5ec-4286-bba1-af8043af6f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1c3375-9895-43bb-b3fd-84279bbc63bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea4e5a65-00db-421c-96a7-e1027017b41f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9831af0b-21ca-43dd-9645-d40733190a29",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6c374e-94e9-4682-a8f8-b7f2dc1bf122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fad9e135-53bb-41fd-bfed-b07027aa2221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18a70cd-70b8-4654-955a-d426fd2b3e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "58871ada-a379-4411-9d6e-3a523c659326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69f229f-23df-46f7-b89b-a0d9737ce5a3",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc84702-d6ef-4aa2-8ea6-c308ecd785fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c183014-5320-4df0-8d24-6a3b4a0da740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b859ba87-df3b-439f-a1d3-0e1cfbf0861a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "71d9b662-1d94-44be-819e-8b06117b3ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c132b26-e9a3-4503-a51a-979a3ff0e3c3",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c316836e-304a-4918-acf5-c5c7633a3b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3202dde-f898-4c1e-bfd2-9e5df506c224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f13f08f-0e24-45a0-9159-a3b2939c72c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "690d43e9-3193-43bf-b3ed-c4e2a4273638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105aa570-9d22-4b76-8aea-1980b589ece7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0351e1be-8cc1-441e-b272-2a3eb064190d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d06f14a-d245-4a75-a205-05726f664b8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f517654c-580e-4fdc-884c-1d84f0219cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa38f0d5-244f-4f24-9197-485cb4ade205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4868b1a-3780-487f-b4a4-36afbdf5cf12",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d436ee47-69ad-41b2-ab66-92352a8cc960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e07c2aa-0f86-406d-95be-d275dad682a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b424a38-f0ec-4be9-8798-44c60b79b887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a80cf75-e1cd-4784-88a4-55750d591286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90884227-bcfc-4271-b2b8-9265849e7721",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce4367b-5355-4eb7-aa62-7468cd3ecc66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901ea628-ca77-444c-91af-25f635d5b855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b9706e-b0d3-4829-8db9-b7e42bc0669f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c1c6cd1-a4cf-41fe-9a5b-25e3a31bdc60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f21e97-d3c5-465f-ac36-4d76f3824b3f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c796a8b7-accc-4bc5-90f1-ca787249d289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35b19d87-66bc-40c4-9f82-1c154334abc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6db5c0-3b4c-44c7-84cd-4953efd5dc4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df827d5c-c877-4d63-9758-e23514bffb23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "411348ab-c004-4a06-a8e0-630053137297",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74858f21-2111-4034-a762-dbde4a949ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc3abe0b-9632-4e66-a61f-bef0040c5120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c3637a-4473-4af1-8532-be7126e2bdad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "92c65d8a-7579-4f66-b3d6-9e2848d50bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd723820-74d9-419b-aa70-f6383b60b1b2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1018b1c2-5da1-461c-b00c-ad9d6b917875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eebc3768-3231-4770-a974-66b9c32c900b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a68c221-5347-48c1-9a08-7f4fa44f01ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "aa510769-258c-4f5c-92fe-6dbe59f52074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8afa4c-6b34-49e3-b0b7-c9936e6199bb",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f6c956-c43e-4982-ba5a-d8c535ae18b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0873809e-9737-472f-9d02-7c5d67517e67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb26619-24e2-4aee-b13b-1e905c8a998d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3caea5a3-a143-4489-9c4a-dca7c0e36d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2984f834-1576-4fb8-9c10-5970080e8d99",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85165b0a-82b6-4c12-9276-602ae245e29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b2533aa-f0bb-4e7f-89f1-b788282a92a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0507f6-4d69-4d38-8ea8-3d054c094c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ac7b5f2-0ac3-4cf2-84b1-29e72c18c5b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d89c13-3934-4fb5-a672-af35f5f77771",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cca8ce5-a92f-406d-b28b-8cf96f2a5d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3b872d8-1f88-4857-864f-382a95c22a86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecbab3cc-5e0c-4384-9bb5-056bb4222a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "20f68d6d-be0b-4db8-a12e-3aed15ef68db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d50d54-7879-4982-a4ba-aa4942ff28a2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "098c6c55-8d01-4a3b-b00b-844e4d51ce89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90d64619-8e12-450a-b0d1-5190bfd24cdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5abc6559-9ff4-4961-a5fb-684394a31a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ffe027a-bc42-4e00-afc3-22f4c6c3c96d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb2d744-0ddd-40cf-839f-33e2e671c83a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc7dc35-8a6e-4eb9-bed1-5048137c1ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a55ddb04-19b7-4fc8-8184-8fb695cd6780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f16110a-70f6-400c-ab17-8e73659b37af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c1b9215-1d87-4c05-a3b1-3ec7703de650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12948941-5b28-4e5b-be0c-e9c01d115d34",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b54a7b8-59fe-4e1d-8924-f2180860ab68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd1dc3b7-4eff-4d3e-8d02-03568984ef9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19535972-bae5-4d00-a56f-be78de74364a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a67e33bc-f408-4c71-9ac7-b3e46e05127f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e9cdae-ab38-492a-aa2f-18d3cb5e2ad1",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "387d234b-c286-4241-8382-87d5ac55961d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc2e3985-d96a-4986-bf89-be0e4c6dac68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3553b81f-1aeb-4037-9b9d-9f69fc486ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "511b3044-7e48-406c-bc43-fa927c735f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5683f09-66f0-4434-aea9-9386a8ecc124",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6e704b-fcad-43d8-bd85-a2d68410a94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68510e01-143c-43d8-9a51-2d65b4600e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b500b96d-1e17-4fa3-a887-05fcfdcb3c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "94c59337-34f5-41a8-a996-076712511e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2918d03-c9b4-4374-9404-277634b19b30",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3befd02-59ec-40d6-92e2-c3b53f8fb820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "401a80ac-a02d-4a3d-8366-8e728b2ac34d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d810c188-149f-4d7e-ad17-c190ad0391c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f7d47b4-24d0-40d4-9026-a36af250a20c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41f50c4-b714-4280-8594-a41f92ba4bad",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3bd2ae-bd21-430e-a1a4-3f4371f2c51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d836864-5905-4035-947d-ea47cee16fc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474ad64d-e5d3-4b41-8752-d5fc645d7f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a431930c-7d0f-46a6-bdb8-858ca64d7f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a4927b-117f-4672-81d3-a4cc8c9f4ef2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6467076d-62b0-4740-bb8f-8985a1cdcfd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5650acaf-9c58-4734-8cfd-8b02598175a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c599ab-8584-4ae4-8991-6a0baa76485a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fed937e-9443-488c-b024-4806417b95b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7bb6b8d-b261-4c5d-8a94-94c83e47363d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4169d49-79d8-4ffc-962b-ad0865cc7514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c4c72cb-b34a-4e72-8d45-660a84dad8ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e203e9-0f69-4042-9106-7a66379a9779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba78fee6-ebc7-4c53-af07-a535efd7d477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c75d5e-401e-47ac-836a-9c472d167cc3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a8ec3e-8be2-40ce-be96-dbaedd33730b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23b8a21f-a56a-48ee-b63e-116ddb184cf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86667f8a-aa77-469c-bfab-3d2af5ce722c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ee927dc-3b18-4d5b-aa6d-bb0b4c47954a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5f6b3a-4586-4d9d-87a0-b28ea3799b04",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5faedf8f-e0db-47b9-8b13-347e70327457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "133204a9-653e-49d9-8c50-b2bf0b4ad50d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85c8d38-2739-4aad-93c5-49b3e6a4bc2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1696a73-f1e4-4e56-91ad-881569b096d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75571d35-af5f-4b5a-a6b0-89b7b19503b9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db9e795-7e28-4113-9452-8d34abcba916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bec9884-43aa-4bfb-9788-0c8045eed49e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1d25a3-30e5-4c56-81e2-29cabd0238b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "234ec927-1924-4357-bd13-ffb1ffd07271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426bfbc3-807a-4b3b-b485-babb29346aea",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b8a282-cea6-431a-909e-e9f8e00c2fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43a95969-6b8f-4fca-9428-15d631434806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad41339-ec05-41cd-aec0-15d94cfd9d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1e6f63e-e619-41ef-82ee-69ba2f1ed1f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5d48e4-6b08-4cdc-ae5d-66a5ab338c8e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c2f9bb6-29fa-425a-94e1-52b7a32e3936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15443a76-415a-4705-85d8-8bd2d560026e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa2ee39-a870-49dd-bb7f-c827b5ae297f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "04f976fa-bf5f-4236-9254-f1f45a47923d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049c1226-f1d3-45c1-8907-092af7025436",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b020cf-aa0f-4dee-a15e-524159fa450f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a8b583b-d773-45df-b6a4-b3cc3c18d5b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d170d7-8821-4e71-b621-d021e95c381d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cc18469-4acf-44ef-accf-7a8978e99a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54381792-45bc-46bd-b0b0-b69257bc8f65",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "088521ec-f103-44b9-803d-473aaf8f6413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5c5e69f-a27a-41b1-9e0c-c0c2e8b32086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ac5a52-c0c0-432e-b367-05c8005b960b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "912494a0-f65f-4445-a574-6b5c9bbba474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9443f6-cf96-41fc-9e37-f739389b608d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05464f6f-39fb-480f-b816-deb50c755429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e6e87f0-cbab-40d8-8e5a-e08765872d63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35af647-9304-494e-9881-ac987a86bd6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "024c1698-7ff9-491c-aaa5-bb01303d4fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af787e6-6d40-439d-ab6e-f61f8f59c205",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9f6bd4-280b-44c7-ac88-334453c3c3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77c9e60d-bde6-440e-afd1-9e3e5049af6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5663e45e-9a9d-4868-9a53-f1d8d6565cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "02fc984a-5a37-48dc-8ef4-d272a02aa18d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "093d0646-7d1c-4550-a5d3-63e5dc08b789",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2ec20b-aa83-4180-95b8-ee9ff9c81e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "315b9fae-615c-4762-b190-4ae1890cd4c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5759db-1ec7-42c4-abd6-c9d809ce4d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "15274056-a114-4b99-a0f0-920515e9218b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f1fb46-cb1c-4188-b34c-d5099d50ed84",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d76ccd-81e2-4a71-9a45-194b524f073a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ac3362-6305-40ac-96c9-3147972cbc5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df7ed31-70bf-40d8-811f-e5030f35cb6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "447b2659-8fb3-4d4b-8310-96c7cd88b6fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834d7030-26b6-4e99-9c96-858aec5a31e7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "206e406d-2a4b-4d57-95ca-2f5dbaf2d3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "861e97a9-9c43-4191-bff6-126fa0ffc420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab473b1-8ae2-4cd5-97b5-9a3b47abe87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cffb5dc-0e6c-43af-afa2-fd2e6e645366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c0e180-ab16-48f3-a705-ccfd4d65e16e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9bd10f-f404-4114-86ef-6764235cd449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d6a37f2-35e4-4952-b2c1-21e02749c889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731b8988-6389-4834-a9ba-f12d1d959085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f3eb9f2-4250-4d35-bb1c-46b567c24d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9269d5c7-bb78-4d89-b1be-8b1f43fd44fe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "193ea325-c1a8-4c1c-9b6a-325d84a7222f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b8d4a9e-6d63-4e64-bbf3-81f6807f4036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4264226c-519d-4978-8db7-95f261909e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "449bb651-b66c-424c-ac8f-fbd0fe6c944c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32aa032-55cc-4839-8fd8-283e1e4af727",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeaf098d-3fb6-4d68-a2ce-83e78814e56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66f52e3f-f05c-4122-b4e4-ff3c789036ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1eee1d-3472-4af9-ae6c-0c3a61e71f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8fdaf1f-f4a8-41fa-bfac-29aeeebd9056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a206b7ad-38dc-4777-a614-53cd14ea258a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc95694-0c3e-4f19-b467-62e15de769c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb04139b-33c8-4183-b74c-aec796b5fa77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17521c87-e164-4748-9588-08d72be4844f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b3d6f5d-595d-4b79-a399-0be793a88c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc697ee-0df6-41cd-ac6d-b14754dc39ee",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfcff71c-53c5-4432-a18d-df512c77c9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7746216-6e3c-4719-b787-7955b1cfda58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272319ae-5035-4752-9077-46c70010864e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7abf24db-f546-4ddf-af92-f33fdd6a8e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18930dc-f024-4f28-99ae-f0e16883526e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "159dea61-b118-42ff-af8c-c8cb1f29f65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d581c82-0b9f-4a16-a717-0083807e95a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f7b7df-e856-4548-bc16-f9ae49bdb9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f59e33ed-3d15-4532-be94-4ca56b9eb0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf2d219e-43f0-49dc-9c68-dba6a18eeeaa",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0223d38-4c0c-4dd2-830d-d3bd9e60a475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c18b5e2-beb5-4eb4-b5d1-da1d18ca5634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e660755-ab68-4b6b-b166-ec94e2a2eca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "242b790b-5a4c-43d9-9ce6-4d354ade635c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb93bb1c-8880-4ea1-8c5d-33b2913ceae3",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f928ae9-ef8c-4378-8526-8f7885f472d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be826840-526f-4e76-ad96-167f6126d979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "203b9ed8-a5e5-4f10-8a1f-c719779fc50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dd175930-553c-4dce-9a88-c351ca11c3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ca0a5a-035e-4f34-8145-8ba12919a3f3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1421815c-b98e-4940-aeca-8a707a6b44ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b835b6c9-a357-4e9d-9c9b-f924acebb35e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e725cd-b93d-4a72-8ad2-4870655bff36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a648b457-a52d-4639-8b97-a22639099e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f78900-3218-4897-8b0f-385c4240bb66",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf160a9-90f2-43ed-ae03-145987c55f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce753937-89e0-47b4-a35e-011459664764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5a165d-0847-41b6-9be0-8c2415ac2730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b17ff25-a4d8-40af-8715-b0ea8bc3c6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "157e09c6-8683-4b6b-ac61-096fb0001712",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99078427-6556-484b-bb1f-fe9179334002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d70abba3-d6a5-4fc5-8359-8d322562cd8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17991d43-c9cc-4929-8bba-ca67f3c47f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9a5b580-9eaf-47b1-af58-56180e786e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9591772-48a9-4c1f-aeb4-b4085f6f61e4",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a198d7e4-faf7-4747-b5f6-73f88b11251b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57ae8f9d-6859-45bb-b990-441e24d1c804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee51bfa-5cae-47dd-a9f5-78a01113e8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8514880e-7d34-4f14-bd46-d7ecf748bfc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89152247-0dd1-43b6-bf3c-67624dbe7e52",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f21818-37a3-452c-a6b9-c4a498a680a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab715ca1-428a-43df-bcf9-cb1b5a730d97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2e7eaa-3c76-443a-bc78-55e0afa31d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5eaee72a-54c3-4ade-a48e-0a48f9c5f580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84d9e3c-0764-4c19-99fc-6243dc46be50",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76b2810-84fc-4bba-a9a3-350348f76dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12df9be5-f95f-4313-8bd2-e60ab2c5af62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5a892e-4d22-47dc-aa70-31472417ebca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3fd21276-2611-47e5-af6e-927010b38b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024313cf-5fb0-4bc1-b76f-e44c548d5f83",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8955522b-db47-4275-a260-15ebee640b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e933e52-9354-42e4-b036-326186891951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1038cce1-eb74-41fa-b25d-ef302da7ebc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ea988883-fe7f-44dc-a200-d405edf1e661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda6af13-097c-455a-a48d-23e2869365d0",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2190ab7-9f5f-49a4-8c15-6773af5338ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c65a71b-7a4f-4a2d-898f-f251aa865bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ed5dfb-df5b-4aec-aa2d-5ee48e3c5894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "729b9074-5c82-443f-aa13-4a58f44beddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da10f3d5-5458-485c-baa7-70b9db675c1c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea2fcf8-75df-4f67-a4ae-98a175f4c569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07a66505-e54b-42bf-b180-771f4181f8b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad11c03-2de2-446d-b775-f53a08a8887d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "34ec9e8a-0d15-42c0-a3f7-48c3ab72b692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5905c1c2-b9ea-4ec2-9e4a-ce7a81c4adb4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e70d17-4e83-4e7e-9ad8-781d67a5cfee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edbfc087-332b-4d8f-9880-db2e25936cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41797d57-96c1-45fa-9bfc-b103c370d7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "89a18340-623f-48cd-9eb6-2cc0b1cef694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d12375-8265-409e-9792-da7fe00a2cde",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4c58d4-0b33-4afe-883c-ac6dd231b491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2cea09a-d7fc-4b6a-9f62-a7201471db03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951d19f9-c89f-4ae3-aa24-ebed29cf8ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "553930a0-8ce4-4c81-9425-27f74b7517cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e36acd-072e-464a-b297-7c029ae4a791",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88afe3b-61b7-4c3f-97bf-45d6dbe6e8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06cd6c41-6eb1-45db-9898-3731018e4a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a543f7-b8db-4038-b409-2a23074f1610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "806235ab-77f7-44b2-a9d3-ef5d603a30ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa29208-ad64-4722-81a9-e1b1a117c08c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "915cb576-2cfd-4e91-8a95-f3e1cefc13c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e51133d-0690-4b1b-9533-a2c67ab211ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee7fab9-577c-4f35-be05-f830989b0162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e1a6882e-13b7-423c-9a15-0fb8545001c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da452ae-c249-4519-9a76-7c4106443b99",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ec7023-0484-4d54-8d90-9b158506ef25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04eb8e21-ddf6-48aa-b4ab-c262afe45157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97bb8d7c-47c2-4154-9ab1-4e7a02c0bc54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc87b987-e32b-44bf-87a3-154d70ce1acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17c002f-7060-4fd5-8b4a-06fe60e41b4c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28d921c-22b0-4256-a4fe-3bc1510fbc2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cda97482-e5f9-4a1a-839b-8cbb3ad5f762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d8dee4f-972c-4410-967f-2a61fabdf897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac5249ba-4ea5-4244-82ac-cbbb5c855e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c90fba2f-0669-4a5e-8315-fd8a949bb502",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43297046-4b8f-46df-97e5-69252bb39d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b62e1f73-5433-425b-9f89-be99f7586bc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6de94e-83ca-40ff-a7f2-f30528aaa51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3789e261-7748-4c63-ac6d-08f09eb440e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d7d09e-f3d0-4d73-bf9c-1f4809f8cfdf",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cbdd31e-a2b3-48c8-84c5-96d3991f9d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec7bf932-cda8-45cc-98cc-23ebf52f9ee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d1d2190-d933-472c-acee-4524ddb89043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7bdeaf8-5ae8-4ada-b629-de2c8bb5ce9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff9925e-8f7d-4558-a70c-4d025d59c35c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c18d3e-8a9c-4984-acc2-febc5353a1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc26e8a-77a0-4451-871e-37043aa2f3fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f12ee1-3398-4640-ba67-7685e1e3503d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "06db100d-8812-4ee6-a31a-6196a5625072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ba423b-a277-4dbf-b55c-28523ef7934f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b162621-f44d-41fc-b510-a0e973f679d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77112eb5-e45e-4af3-88c8-c6042cd34968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b36ad1-f1ce-47db-b0dd-840dbb706a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6732018d-5b4c-49ce-ad04-e309d0f5d693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de3a03a-085e-4d77-a5d8-e6f70103cac0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6106ff5-c9e6-4f9e-8b4c-d9b848018ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "308b1463-7968-4e97-ade1-855d6d94eef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ad6893-5fd6-49a6-844c-41b163432953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1019600-6711-4f82-808e-bede40a202a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781a4314-2436-43e1-9081-df1a83102e5d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7dbdb3-b1d9-4cae-bf20-bead4af2e6e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3223f7a-6487-4b8b-8d74-2fd21273d187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30767ce3-b194-4b03-8322-c75b125a9b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b21718c8-9ca8-44d7-a487-1a6d80d9aace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d134500-0a29-4ce9-b5d1-5a493ae6399f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "317cf7f6-fe8b-47da-8515-27b554c57fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4a3e8f8-54a4-4b8b-a032-de01f4f0fe3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea899d52-bcfe-495d-bb2b-c7b83526f2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "718d178c-45fe-4bf5-82cd-64a554246746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb3c5a7-f55a-47b4-87f7-6a99030d46e6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a75dc94-0ebe-48d5-985e-ff053a9062be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c84a2bb-5bfe-4fcc-ad17-e7f3392fcb79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c447587-7632-43dc-9d91-56f45476778d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf5158e7-b85e-4c8c-91f5-cd5a90cef9de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b435473-fdb3-48df-86b8-d014582a9756",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c438db-eff2-4caa-a083-c31d1cd5b8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24392fc5-95e2-4ec2-8a5f-4713121399bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a55ce2-5c17-4bd8-aed1-fd292bc914b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fd7a3fd-992d-4115-93df-64bb85af4a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f64bf46-0097-4e5d-a63a-327e484163d9",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfb66fc-fa9d-4b25-a04f-c2cdb282ea74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e619b8cd-46b7-422d-9e14-c7b4f142966c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a71e38b-bc79-4c45-b745-7d7d60c68b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "284dd39c-3e31-41c4-8cf3-a6a425e4759f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "326e6ec1-a5d6-4f80-b5ac-bd9393646d7d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a4394c70-0d13-4ae5-ad18-34ab77849ec0",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "611b87fd-d8f7-4f0b-96cf-68b21706d831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34585754-3db3-4a2c-9145-ab714ac16a7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4df8985-8c5c-4925-b71d-c7f9ba35f838",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34b40bd6-20d7-4443-a0eb-b79a370f75a2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d3cbc7f-c57c-42de-8dfd-de82136889de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bfe8b9cb-16dd-482f-aa77-d336824e2b9d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f80da3a-f62a-431b-b5e4-c9336ca890f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9e9d832-6a3b-4fbe-995c-9db820ba97cf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dcb4c9ed-f4e8-4ab5-a430-b35f05cfc57b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1930d8e2-577a-42ba-b739-cc812d7b4ebb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d7b42f47-549f-4388-aa8a-027b91443ac3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bc1f8c04-11da-4b23-b04a-4f73bb25fc21"
                }
              }
            ]
          },
          {
            "id": "3a91f205-e6dd-4c77-a8d6-14e8a6d292fe",
            "name": "Positive Testing",
            "item": [
              {
                "id": "22da32b7-7fca-49dd-b4c6-6c0b7d6f8cbd",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e767bcb4-7700-4550-a353-e0f0edf1e5a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7c36db1a-a8b3-4254-83e2-f01985e7b736"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "153d8a6c-546a-42aa-8012-26dcf579529b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "79f9926f-25ac-4f79-bbc5-c8a4c4fe211e"
                    }
                  }
                ]
              },
              {
                "id": "79d374e5-f63b-443c-ae28-7b5ef02db5d2",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d9a53ba-c03c-4d99-aafe-eec12bd6d0e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "29d68c0e-8147-4a3e-913a-cb4954d4303e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d61b3a97-2003-4784-a6e9-da4e04b10704",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "affb0046-2140-4d3a-b2b4-f934d40321a1"
                    }
                  }
                ]
              },
              {
                "id": "6cf22142-5d6d-46d9-b118-80d7d61bfd95",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0cd55c7-dbf9-454c-87b3-c8c1af1a9e07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "58854ea9-356e-4206-900a-d3fa7827e23f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bef75f58-74b6-4d16-8585-ed9650cf988b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "957a587c-ae45-4eee-aed6-12e1d55c4846"
                    }
                  }
                ]
              },
              {
                "id": "f4b55d71-2f63-4294-bf53-fb8ad3e2cc79",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d74ab5b7-0f7a-4da5-9e14-ea3072472f7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b8ec0490-6b30-411f-92d3-e51387a189d0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9d700c8-aaf2-43ad-8c14-fede337be87e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c1b6dbcb-7433-40f7-a345-1fb61682e6ae"
                    }
                  }
                ]
              },
              {
                "id": "f8ef011e-f792-4c2e-bc66-9692f7208967",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44b1d8bc-6643-4e4c-9bec-b15f67f023d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "54661a5b-c159-481e-a997-2642bcd8dd68"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9320ff52-248f-4d54-8644-0729d90e1df7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "bda266be-9635-4abe-b4f6-a77722bd95a0"
                    }
                  }
                ]
              },
              {
                "id": "1f091c4d-fe24-4c24-9344-cc8c4266bf68",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aec86ec1-0112-4721-824a-23a6907eac85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "efa7a944-f768-4d09-aecf-98891467122f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "409895d3-3ebe-4897-98f2-9d22de3df6a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "79a9021f-4bf4-4948-bd51-0a39dd805dca"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d1bd6fbe-04e9-4214-8f0a-a2fef4d3f247",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7c952b69-6621-447f-98b7-178b38cc4bd9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e71cea88-bb56-4af2-a210-463ccaf389bc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1457aa69-54ab-4bee-95cb-355f893f952c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d4cb34a8-3830-45f4-9a0d-f61d7211738b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "351153d9-72a1-442f-8cd5-5daa6ef5b2f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e43386c9-58b9-4d8d-a8c5-55e818145935",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f71e84e2-0ff6-4ae4-80ea-0fa4d4bfb598"
            }
          }
        ]
      },
      {
        "id": "8a3c7b37-f000-4973-8898-d43f63bd3e87",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "bca91c54-1d13-4e26-84b8-ea96d64ca203",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b927cc14-4773-4d47-aeb9-21fda2c3aa33",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f47b36be-4c9d-4e50-9d3d-578975de8c3f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a047fa4d-6327-40b1-9319-8dd1541fa058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e1007d0-1ed4-4a3a-be28-9313f9ddf9c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd98b5a-b877-4b20-af79-70ad545b5204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5dfd91e-3c62-4d18-858c-15ee76d1e8fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21db38aa-216b-4547-bcc5-771be8e7a0ac",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a862596a-f0ae-4ab0-b840-612c8ef47d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f773daee-a46d-439a-9adb-002209b7588d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48236aac-5f69-495a-b24c-b0cb3595178b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1bd84a8-ddf1-4f52-9a60-cd4d006a9b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dddc3d52-9c7f-4284-a27c-740873e9d9d3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b90a7b1-db0e-4cad-b130-5ed71d6f7b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54535780-d796-4399-a818-e785b9504a30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31992a9a-7c8d-4762-92ae-21e7cda0aa3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "63a6f087-1eaf-4ae8-93dd-6366a51c2eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ee8df1-b808-4998-b641-96aab91bbcbc",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5493eb-ec1f-40c2-adf0-1a3e36684607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d90b7c4a-3aff-4cf6-80be-022e1df2309b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f414c01a-2aa2-4a4a-913b-d440a64d7d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e14f079-92c4-40ec-95f8-b03727a22af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0fc5544-c407-4387-803a-618ab8672546",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bbde08e-ebbd-40e3-af77-aac2dd745304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b31b22-b6db-45d2-92f1-d43d115418df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c6bd74-9d97-4d85-943c-61787fd26113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1821bea4-f15c-4fc2-85d9-4d4af0bf892d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f58c6c6-ced7-4f38-8cc2-ee238db78b29",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46177597-021d-4208-822f-ff9a542030ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec3e1cb-9842-4d4b-a795-dfb8ce1aac53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ff5169-9953-435e-8e29-7a1049ccec94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "037af750-4bb4-4ddf-bfbb-453bf43e10fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8922de30-9cd7-4b15-bb30-1ecedea66b6f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa59dc1-0952-4e1b-b12a-71267a7bc063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f0caf0-f4af-4018-84de-14744d4442d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec691eb-c5d5-4ce5-b275-c8af501f10ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "acccb0f0-9a4a-4224-ad7a-52ff72bd4642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72cae95-6bc5-4922-9b6f-25ce56db32b6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d378dbb0-a10c-4673-9435-1104ffda9549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77eb719e-bcb4-4113-ad74-723d1993c971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eeb4d12-cc91-4e9c-8f16-efbf9109266d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93bf743f-f3ea-4d79-8730-89857bcde892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc9e9ecb-96f0-443c-ae33-45a8ffaf8242",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46390252-5df5-4836-a52e-38ad334ed7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded0f0c2-9ce3-4a0c-a8c9-031b5c4440b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb608bed-3ae3-4046-b07a-b30f18cc0249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "51504a46-c032-440e-b99e-350309708c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef93d57-8893-47f4-854d-a15176f42fb0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4770451b-cf03-406c-896b-868defe3ef8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91e72028-3396-4146-83f9-89cf39248510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb9b983-d4e3-47de-bfd7-e81da1e312df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f261bdec-0edf-4419-8e6a-efd8e7ca5e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba8287f-04db-4cd6-8521-35d433199611",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bfd3e05-ba0e-4766-8ba5-a5e4fc884210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bb9b30f-f769-43f7-8d5a-f0045e425165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77fd06b-4399-4ede-b29e-82669a73da00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "10ddac30-aeeb-41a2-bcdb-383d610d8bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9170d87a-e566-4d55-bfa2-963f14d4da23",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb945458-2b70-4cb5-81ca-02c4c3bb29ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc9d5461-6397-43f2-b7ca-0cb531775ebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a25e506-5b3a-47f2-a2f5-f1ec606f0814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "47b7d5eb-80cc-4b7b-9e8b-ad0f36766a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80121553-09ca-46a5-bb70-fb87bbcf9749",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03fa9174-a6cd-416a-9e05-eb34d5f936e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "174cc528-f97c-4ff7-98c8-c565a5b5f784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df61d2dc-8fa6-44b2-ae70-9e76e5650b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9451cbf-e74d-46f8-bc54-e607fb6ded26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe8c322-779d-4470-9045-ab5502229a60",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa43629-33cd-4849-9d9c-c68ee88ff648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2502215a-f94a-43ee-bec3-2d04ecb56458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409aa898-ed2f-4f0f-957f-a6ddf884a318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4129d6b-e298-4e82-9d83-5f8bce964a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5675880a-f331-44f8-82f3-b903cb85758a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac867bc-75f5-403e-a16a-51aaa0eeced3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "357332b8-ae66-4f96-8441-743f1f9689ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6759f967-0383-49ac-9fa1-6883f0a7ecff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b558dd24-b095-4744-bd14-c3d09fd456a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14000967-7281-47fb-bbcc-3bdcb5630a64",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3cbe58-bbc8-41a7-8ae6-cac8cde98264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "285136ea-3bf9-4519-a14d-9caea0850571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a78b22c-f0a7-403f-b6b9-077f5d983cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2591ce04-ec7d-4f20-ae7a-9c0adace2617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e1c48a-36db-4d54-a5db-cd26cf35dfdf",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4fbcb7-93d0-4894-a395-746c87a166d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb3dcbe7-506b-43ee-a481-db4c0eb6b2f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ced4374-40a9-427c-b714-964d53522b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "402ee413-289c-4eac-8ef5-fd5a2960c72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef9f676-9013-4406-90b8-9acdff6fc070",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c908da85-bdda-4df4-b6e2-9d5080fce982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "862bc877-fac3-4b34-b8d6-af1c8a6e175d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "688251f8-ba1f-4cd8-8d8d-e8acae2d4f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "85c6b6d2-cba3-44ec-8c1b-e3475d9b7d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c47413-9af6-4efb-a4f6-ba9949d1b8d2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "824b06e4-9fed-40ff-a12d-11d83216e55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be5155e5-3d6e-486d-9d4b-6bbac00be6ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f84cb43-5716-4539-9efa-d02858511d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f041669a-48e1-4822-b368-b0a0845808f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e434a711-b0c7-4afa-ad27-161c562daf86",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5945ed-cd90-45d9-808d-f5d41c0eba31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37f41aa7-0afc-4651-97bc-4074cdf2aaa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e28f2d-70cf-4259-b910-7e94566addf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0488dbf8-9c0a-447b-aec2-ee5ad0137145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a22d2aa1-2232-4aac-b9e2-c24b4762233c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d050f0be-e7b8-4952-a5e2-73777d2b9a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c39cca-34a6-4f3b-8e60-b250c6271c86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb4f826-a962-4d36-add3-79166eb9ed76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eeab19d2-5901-4471-9ec8-7648817019be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca5b6da-943f-4800-871b-ac09e712ca7a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d99b84-6b38-4298-bd77-533a345794d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfb9646a-93e7-49dc-8f24-1cdb10a33c59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4679e10e-e58d-4af9-b97d-ef9fd10e9f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d04c336-c1b9-4c8b-ab97-5bfea2ba8ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49861e86-b47b-46c3-9826-f5b78bc9e04d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a62410-50bf-42bc-bc2a-0ae29abe79d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9173514-26bc-4e96-b04d-95ef3380f00e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e444dc84-f1e4-4c19-adda-72753bef3f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8972bca4-aa69-4634-a191-8dd71fb7e098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e492d66c-627a-467a-96d1-b58b3b3871dd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba251d4-d4d8-435d-a264-ed5e70e99959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9c961bf-1ddc-4a48-a93a-a73571efcf81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca0825e-4b6f-4529-81f4-24c9ec108b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4e08605-5c5a-4c76-9510-1e6a1ed9ee4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76685ea1-c7f9-4d6c-acfe-b29e43af9825",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ef2f82-0fcd-427b-ae8d-3a85d6de59f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e72c3970-39a8-4889-8788-4490b5853d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016b34b1-f816-46f4-a2db-eea30f5b8bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f39a05-3bc9-457d-b8a0-0add0b05edc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc940e16-a971-4491-be46-bc89c26f5126",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7fd3eb8-9628-4a9e-b179-34e2944e5547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99848fe6-e906-406e-8c06-1b7999bbe5ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b34f348-ddb4-441b-a6ad-37af91ccab64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d289672-0708-410e-8d35-6eadde9d0632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0840679-e9a5-424a-aa05-cfc5efdfa36b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9da859e-bb97-4df5-b5ab-a4e6043630ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d53dbfa6-f929-4e30-a9ec-77f8e02c3b91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bfa124b-38a5-485f-95d7-23439d865071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4e83242-eba5-44aa-bf52-fe6f01c73be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864251ea-decd-4bf2-9680-86b3f3f43469",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea94920-2221-41f6-b718-52d92f5f492a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ec9181-a74e-4fed-851f-bb74b3741436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116a801a-a07f-41c0-8035-0d5a213d93cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6e57994-a26f-4fda-b7ff-edea0a82c316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b190374-3c67-4347-aef7-bf22206ae009",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76475cdb-cf7b-4601-aa3c-a81c9ade7871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca4ecb9d-57c0-4e2f-b741-f75734a645c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5ec284-e663-458e-aaee-bdfb09a0ba7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2789f663-e4a8-4f6d-827d-be717e77a73b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794277aa-c1d4-45fe-bf46-f78c18e8eac3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b283e1-8edd-4851-9fa0-910a2502bdd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68fcabc8-0289-44ad-935a-f0f48267d16a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751e632e-61ea-4e74-91d1-f009348e4783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da752df8-1123-439b-9103-ef28afc25fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51af33dd-40cb-4c7f-868c-e1d2bfc99188",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38296878-e799-4163-b452-4219411c0242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50fcff4b-26b5-48b3-9ffb-e4bd1fcb3a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ec02fd-0107-45e0-8e13-835d71977366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f8614f8-a177-4dc6-8b68-fed43440cc56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2541ed0d-94c6-4925-b947-8bc133d160a1",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24de5edc-6a1a-4c8a-a430-9169e2d8cc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e8b059f-dfc0-403c-a1f5-811ff358496e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0979872e-93b5-409e-92d9-e252f6603a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7949ca03-848f-4f42-b100-f16194d19b8a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6b0d91ba-9b95-4bfd-977a-2822fd5a7abf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "16b7989f-0c16-4c3c-8b81-ad04759ae229",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20acffc-509b-4dc2-809b-d632026d3b31",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b05098ff-d816-49dc-896b-5ecc8b564819"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "713734df-001b-47d4-b4ac-867afcc9a91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e166b75-5804-4bbf-84c5-4b160d5875cb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6b13b89-4255-4468-8378-e9c74f567c35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c819b23-41df-476e-b9fe-300af4e649a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e200c855-e285-4dd5-a62a-bcf390511f5a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c11d016-5a2e-4ffa-a51c-daea83ef41cc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "65868072-ba7b-4dd2-9d98-8271da1c02e7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8e16c489-d4cf-4a98-ab8d-7df88e8d85e5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5bc3b536-fd34-46b4-8fc4-bcf4d077fee2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e5ad7ea6-390e-489d-8110-514ce95ea310"
            }
          }
        ]
      },
      {
        "id": "1dda8cf5-573d-4b75-aac0-daf09f4fdb56",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "c72a6085-fa00-4a50-9a76-517d33086a26",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5f870738-2e37-4cf6-ad10-fefa05fb3cb8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3574e459-7d27-403f-be01-463cc6aade67",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a860660a-c01c-48f1-a8bd-9e549f393835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a845d750-3194-4c66-9e3d-12a8c1beb221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ccbc27-45aa-40fd-8d40-f82e85e70ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f217a8b2-6952-40c0-bdae-bc1567484744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "367149c2-f7cb-45bd-bd48-874feb258a75",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "752bd665-5916-489c-9a6c-fe0dc66f020d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d2440b-bd2d-4a4a-9fcd-b27b64d2a3af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c98d07-4e8f-4909-93d5-3ba253a85368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "632ddf41-da59-476a-8e40-d631da6a49fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeeaa5aa-0f2d-4c2e-958d-58e034e5051b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4dc654-626e-4a0d-bcb0-a3063a2273f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e518a359-e6f0-40b4-ad6c-1eb3e8a50737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1dc3c84-9bb6-47d5-b9ef-edd1cb4d4068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d53c3bfd-16ac-4552-abfc-4d3282188fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5824814-a837-487d-b87e-989292613ecf",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e749550-ebeb-426d-898e-9899e6a4ec2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26c55c95-3663-4e5f-9e5c-393b0e195011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c428c3f-5a1b-4412-9ece-6238c1218904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f76b69d-bd1e-410d-8192-ab35ed13cf76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1402ec-5c38-4f0e-b87b-84d77cef0169",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9222234e-4d6a-468d-a820-47cb82e4a30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74c0c156-4bdf-429b-823a-8e9b7fc3dba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ff961b-ad7e-4c2f-b1e0-6b8dbb56d929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cf01f23-7578-42d0-a90d-0cd23bf9b72e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def205d1-2b62-44d1-a8af-e3faef1f4f71",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8382bddd-0e58-4eff-8a1d-f03a250512ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "289429be-3b55-43a2-9efc-67c54b4d616d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd28e63b-39aa-41d9-9b67-3a724a645e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca132610-421d-449c-adbc-35d587b0f8f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5cf9e22-c9ac-4708-b030-d3c348037a90",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84c6cec-4490-467b-b049-1bc4e2b35b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab471aec-d364-433c-a452-25487bd2bbf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0e4d89-821a-4ce9-973b-b2ea26bee4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcfbdf43-b512-46d1-92b1-34532208c47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897a039e-912d-4c0a-9db0-cd4233b9aa25",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e57b857-66c1-439b-bda5-9075a7915195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f659901-4370-4deb-a5e3-d36eb2dda2b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6c461c-edee-441d-843c-89809e9b7258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "abd5ddf4-6b4a-4ef7-aa79-a977b3fdc260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236ce269-0030-423f-9f5e-82fcde0d5e20",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa16f16c-ba94-404d-ac1d-a1e69bbc334e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "135519ff-c517-49ad-877a-25343f7c85f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc2667d-ff44-414d-b7d2-a2f88fcd3d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e269ecd-545b-4334-ae57-b7fe68502fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae6ce98-e8a7-4c7c-bc86-16895a15fd64",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e360e4b-57c7-4048-a5b9-9dda93562eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "660cd279-e93f-448a-b845-d1804b7be12f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05fbc3e-d425-4353-a509-1a0457b81a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35a4f24e-d905-456a-85d4-887751be4659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f0fb3d-eec3-49a4-94aa-c140e3ad843a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5f16b5-2457-4c9e-81d3-fb9e41e340d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f7f2e71-e381-4097-a050-cd80f505d1a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968d3f3b-dbba-4fc8-a793-623ec98f7fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b6e77e63-6d9a-4a82-9d3e-d8e9c8e12c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a996324-4e8e-43cf-8c74-ac50ba220c6b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55456347-dd56-4b2a-9452-f5beb18169f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7511bff1-de92-425f-b99c-7dc085cd2259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df5025c-c59f-4f03-b20a-4e30e6c2e646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd156cf-c5ce-43d6-a9a4-b967d095adcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb0d634-b75c-4aab-99d5-9c612df26cca",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f567c4-d902-4870-acf9-a1279506d72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0e4469-272c-4ea6-90d5-c1310e28539d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b24f9a2-6b00-44e6-b4f5-fd7c0822e5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9719e7f1-5100-4327-bc33-1ba7b3a42508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcec51bc-1b3f-4acd-a88d-9690727c0f3c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff33893-47e4-4984-8bef-385811d8a9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7292e83-b857-4fd5-9c10-5d6b43cff94a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2710367-5a0d-49a8-af11-b4fbb1055c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6e0a751-ddea-4cf0-8b19-e7556066cc83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7bc5896-edc1-4f06-ab50-cf78d377c30d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c9f45c-f721-4c69-9153-76cee6af289e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cba0e932-3a60-4f22-92ee-ac0facf93ed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e27476-fe87-4797-ba4c-6ec692ec7998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "79735c0d-e0ed-470e-b456-11554fb0069d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128ae31e-36a5-4bb3-a4be-c10b010e9e66",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "184f3c35-e87a-4f1a-a342-74ee6f9c5cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31607bb0-47d8-40bb-b58b-b47d47bead82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf2bb74-aa2d-4482-b24e-983153f78704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "239c9c51-9686-496f-b0c2-f077f2d5958e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c133c47-3e08-4058-b99c-3d4201f1555f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83a56e9-92dd-4324-a0ae-20f82fe445cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "895ac9b0-01a7-4831-80ea-bcbd4c8bdc59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30fb754d-f429-4a5f-92fd-c8306e2adb75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "05e88ced-dcfc-4674-93dc-765793216b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc46f56a-583f-4943-8276-12d5d1eab0a3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9504eb2f-dda0-4550-b908-394788f96102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98542bde-5677-4bf5-9e7e-9e636ac55d8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0699379-bc05-4cbe-98ae-666f9a839393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f93c0d02-e5aa-4bf2-8a8a-26164fe11a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1191d7cc-7547-4c93-8029-004deaac3005",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3adfccfc-5c5e-4fbb-a17c-203c42bce4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e51f1de-64a3-41e3-b7a9-ce3a062122b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b71f97-5fdc-4c86-b32a-6a9337ab02f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f1f6bd9-bc9e-4195-a960-8fe2ea880cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba51b30b-7071-4830-aaff-951aeb141635",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e84bee-6ad3-4318-82f4-de638462f902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bdde459-e1ad-40d5-8658-2a8bb96f07ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c81d93-fb1b-461b-b92d-f84aa042c0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5718e890-af04-40ea-8c04-80ebfa6545e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb7ac0e-13fb-4976-a6ca-0053349487e8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02394cab-ca2e-45b6-bfc6-fec51a719c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f32a148-509e-4664-84ed-18df66869f1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b3a56b-7a8e-48c7-bbad-614afdb5573e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4511ce43-5a37-43ed-8b5c-e412f393111a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629a8114-1fd9-4c1b-8415-e2b70bf39d2f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4492802d-0e80-48a8-a47b-80374db915d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e222d19c-2f8b-48ae-92da-c8977025fcb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2312aa-6c1d-4836-9028-37935f335327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "664defcd-5d45-4ca8-bdc2-781448bba914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c14ca2-9068-4b68-995a-d29d3a675390",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a4eef2-3da6-4464-976b-d81ca635881e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de2bb874-584c-4fa4-a0d2-dca5504eaf99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8c3494-08cf-43de-95f0-813f5ff6ba85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a2e51be-bdc8-4d0b-8d4a-4cccfb65bd5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa9f009-e5b9-47b6-b1cb-2ec613f9e27f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2758920e-8da8-413c-8ac5-3b1fd55c5e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1356c4c-2f77-4f68-afd6-f7b7dae438f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5edb1a2a-faf5-407d-9bdf-637c144def86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21accf60-ceb5-46ea-9e28-90f8141d0e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd925b51-d362-4101-b5fa-b531e519d2a2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8280e1b2-23ec-4a2d-bc8c-fdb7ad05dc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dfc17d6-870f-4f6d-bfb2-1e9e8da285c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fff4136-9100-4bdc-bd5a-850e14af744a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94f561b7-8375-4664-9aa1-6d52d21dd98f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1b0f6f-4725-4aa0-9ef6-42e8854556e1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f0aa15-a861-49d8-8c2e-72dd3befb1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd757f39-378c-42ba-9eb8-1f3b160e95ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9776957a-dadc-4c62-a33a-5444419c305b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdda3553-8bd2-418f-8d7f-f01e0e65f851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab093e7-2576-43e8-af08-8e0f48eb7f9a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a7a47c-9bdc-44f2-9300-f768f624a673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "702ff6a4-3582-4456-9082-a07635980995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249370ad-d747-432f-8bab-7382c4fd99b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8face734-fe9b-4335-84ad-43d542dbf4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0ed38f-0190-4829-bb99-4141a7232795",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21940604-d48e-4d5c-9a4f-112c39b5648a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "270d9435-61a8-4680-b088-5b3a5a38dd02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46dd6eb-e24e-4a26-a7bc-831e0d121512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2542bf6-57fe-4d77-8ba5-acacb74fad3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5fc5cf7-af26-4e66-943e-ab9e42b2b650",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e77da4-3164-4cab-b6ea-34ca3f94095b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a93b20-bcce-470c-ac53-9ba8ca2d28ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e91d91-4396-4645-ad33-7bd9ae385ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6948fd46-6bb4-4cc3-ba2b-d98157ad21bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f03ec00-8cb6-4316-a165-fc007261f707",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3152545-e87b-46c6-ad09-e503c79054ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7a99615-5892-4ade-a9be-51d984899ab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9c3b21-d3d4-4f5a-9838-fe37d9eca53d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dfa9ad9-ec75-4192-99f2-18c3f45f3a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aacc883-cde1-459b-91bc-8147da44ee33",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3452dce-eb8a-4db2-b104-c1072bd9a7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca05307c-8e83-466b-b0be-4038eb643822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4aa619-eb1e-49bf-89cb-35e9ba8967e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfc28e1e-34e8-4380-9fb7-f55971920cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21cefa0-3f9e-4739-adf9-6f1a4ad22d9e",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf21f3e-43db-408d-bffb-7f71523bc567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2fa778b-71d5-4ca5-9414-e9315cec2789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e65ab4e-02dd-400f-8d3a-0d3b1a2a1024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cee1cb5-9052-4d10-82a5-f019bc89c8fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ced1502-81d7-42a8-9de9-3024eb39aabc",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7095fc0d-e0e1-42c7-8c82-77916f2ebcfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aca99c5f-1f96-49d8-8529-7d7a5a44b430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b801c85c-e849-4241-a999-d7589639f075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d699e07a-14a7-4c50-905c-3288778bdead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98052ff9-5267-4574-aedf-58be3289da8f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "defd86be-84ed-4f06-96a7-60b82a40b245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0a48f0a-cea4-448f-9f0b-d1bc345301b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a2f9b4-e1a5-4c38-b143-b73614405688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61866ab8-047a-4b07-9a0e-4c274fa10e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63724e8e-5b3c-441f-a137-a32d0814ec21",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b205bac5-ad93-420e-a67a-e123d85a82a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42c44007-d4df-4b1d-a86b-4e720e8922b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91afbb7-c46e-4603-8148-c5448117b06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bfd626b-2032-4782-8c1c-4883ba78bcbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65df5889-c539-4c56-83f8-6564127cf4ef",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9ca9ec-4bc8-4c31-8e08-d6123d4da159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f64e7d90-7203-4915-a025-10d32fbcd858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aeef84e-b62c-4779-92b4-6968979a0fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd984f0f-6619-4fff-98e0-b8aa8a493ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810ad6f9-b5f6-497e-9c63-a293ca01379e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7580e97-5050-4e0f-9c0c-44c9d0dc7815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd13c0b5-fc13-4e4a-abc9-083b00ec43b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8105c295-e8d0-4231-9f5b-691a26b00f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44ff7ad1-bf6d-4490-b15c-a90c4af89543"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "159412e7-08f7-4e81-ab39-e1c300ccdcfb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c099b81b-5682-46b9-8bf1-1026159d4699",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e4e9d5-73a3-4abf-b4ee-bde599a00028",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "58e0387b-3e7a-4856-a9ab-450a2ab5517f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b3f967-4b1a-4b8b-9f52-d5f7227f68f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d819aeaa-98b3-4a88-a988-22a38653c062"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "426de112-1ac7-4c06-92b4-326ce8709e02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "300cc7cd-cf32-46cd-8daf-bdba72bab7dc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "33d89b1a-c74c-4fc1-afaa-8542e793ac6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c30382db-5c17-4328-ad4d-6e5dce7e4942"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b7b5c927-a1aa-4276-ad60-107852933fcd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4f4dd742-4d7a-4a2b-bec1-262ee9deae08"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e1c42b60-2633-4487-9ad8-29bf192fbd2f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "90be5b0f-8a10-44ae-8bcb-849fe6e48651"
            }
          }
        ]
      },
      {
        "id": "80050763-9f02-45c9-a0f8-3a80677b840b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "48c4d2b1-befc-4875-80ab-31c6734a95ae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cb9dd32b-a97b-4379-96b3-e5ad385ab528",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7b55e10f-4565-45ec-ab40-d8494a81532b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0f7b51-7048-41ba-af40-cc37551d460d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bdf68ab-5ee2-4807-8f85-fec0d0a155f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c308c8db-3202-442f-b500-a33732a4e377",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "148e4cd5-34a1-45d8-9fcd-9a67e562c27f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee2ef34-c1c4-4313-a72d-f2884c7fb5c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eef3f1c-ef38-4970-a9e7-93ab1651aa4b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5497ee4d-864c-4ed1-9685-4d9589e7d16a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f62ea77d-2ce8-47d1-a88e-6245149a3be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1c1c37-fbd7-4a56-b73e-29aa291b4a43",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a5ec57-fd33-457c-9ff8-93fd5079f262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf230865-dcdb-4a52-89b7-3475a50bc1b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198bb6ee-5632-4cea-bfe6-1d0421c5bdea",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ab219c-8f0c-4c2a-a03e-1d24d9b2f0b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e97f5b69-b7a4-4fe4-b84b-f2ae98d83ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c39e33-786c-47ec-85fe-6ad511d71911",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e06757e-1284-4803-9a11-e1a98c55a4a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56d96344-50ee-46b7-b946-7a4dcf89670b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ecb507-7f8f-4a82-8e82-83a134ef1253",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698661c4-5416-4425-ac48-c62a4abf9942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5805f5e4-bd69-46af-bd3d-331597067ee3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f382054-c2b1-4e39-95c1-c9fa335f701a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78369034-16bf-45a2-9e05-66f23b31ad56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c847d3ff-368d-41f5-8b90-7ac72b8c6054",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ffdd2fa-64f3-48ea-af12-cb9fc9bfbab7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07b18b63-087b-4852-97ae-5b19a21f0b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b6c888-23c6-42e2-a64d-c483ed9672fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dbfae00-f804-40f7-853b-ee4643c30e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5729778d-ea41-45bc-af93-73fe5f13d84a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3656a86c-8f62-4b09-8204-2bf8630910b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c4731f1-b571-466e-8f41-fe03305043b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6415cb2d-fcfc-4486-adbb-10691a0749d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c0a7aae-3be2-4358-8936-e92af0d150ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ca6224-a98f-4b33-8e41-8f7ed12001dd",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b30f4b46-038c-4516-a870-eb5eec064688",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "993f0b24-bb8e-4a97-889c-b9de5228cfe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ed179e-9134-44a5-a26d-75185e9fd922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65eff0eb-3ce0-4614-b075-001fde08519d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3fe6d4f-e05a-46b7-a475-9a13f3c58bb3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32119b1e-6713-4bab-85fb-f61e9d7ea82d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a67869b9-6ec4-4651-81f9-695178f922c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4abb1386-af89-4017-8997-5683596a3ba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5d8dc09-9d89-4788-8543-c3417d489092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e10a967-f651-42bb-9389-a416cde74052",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204e67e3-2e87-4abd-aebe-70927646db2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46706d93-1070-4607-8913-839102bf2270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d34a94-c000-4e0e-bb03-55d2d088df04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "912e6633-d268-45e6-a789-b73082fcfe33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481082dc-fb21-4ed6-b063-05af25619bab",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd535a6e-339e-4cd9-af0a-2028cfbfba86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3620d5cf-e7fd-48f9-b3b5-f75c9ee5c72d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac7cfff-50ee-47f4-bc46-4fe7900cef39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70490062-ff14-42df-b753-76701ab5eb39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e982112c-c10a-4ac0-9081-19d0d384cf3b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30cf3031-6e15-453a-a5e9-666f23f524f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c945be60-cadf-45d2-96fe-2ce774930f06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9375edf9-0cda-4195-9a1b-27a07af94cef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ab2359-42b3-42b3-8857-1c4d6652c521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56796a7a-c14e-49ff-8246-4dc516070e84",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eacbc5c2-d595-49b7-bd00-112b8221eb45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1ee6e5a-27fe-4b0e-bb42-a2a9bc11887b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb150e4-c3a0-4a5c-942f-bd8fdc6ef87c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba06cbe8-e9f5-4ece-bc98-9ea5e5d4b6e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db07bcf-b003-4cb5-88e8-4e009078e396",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec529e5-20ba-4dbc-b4b3-244f888872e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fe17c3d-3e8e-44b9-8d40-0fd8b46f7179"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef18fae-6797-40cd-ac4e-a3902291ea37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a4929eb-6902-4e1f-92a6-aef78a1cfa57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1350ece1-7ca2-4d3c-a64d-a7d3475a543b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1ed662-d3e3-4d4b-9522-304b5e547d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1640dd52-25fd-47df-8bf2-c5f9f51f8a57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62bf66be-f180-4ba2-9668-643cde2c8a39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3d69f1e-c182-4970-ac14-da5b9a671e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68e8102-ad7f-4d5d-84e6-b5b91929e836",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b38ea25-051f-4be0-92c9-e29e28147eb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "790cdd47-b3c9-4af5-9e53-37ffd386daae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74b09c4-1b40-49b5-9666-8951c592f479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56ac05a8-7ca9-4eae-9f1e-09513df60b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b825ff81-41dd-4139-9c89-fa2671a162eb",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adee67d3-32fe-43f2-9783-061c9925f229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7332acf9-9733-4c2d-bd50-5ff5a9d497ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f2f0dd-e7c2-4f51-bd25-779c8f892b50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc64043-d859-4419-bfd1-15ade8712f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d03a577-1b12-4d31-8fee-c26b4e77617a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a49752a-91a6-4036-b2ae-30d5e519fd86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb8591ab-9efc-4205-b8e7-99a659636cb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdbb1a98-046a-4ebd-af6d-66b4990e1de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "648bcd08-ffd1-48c2-a5ff-309b3de83d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796f1566-a807-4529-8e7c-f524374d7ca4",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1ba050-a5be-446a-9f45-e7c4c147da98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "178ad34c-29f6-4ce0-a7d2-ccdd7ac526c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09405999-821d-4ea3-81cb-d542663e0521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b6a429-9ffc-4b7f-baf0-8f386b037365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1fec23-c3aa-4f69-ba3c-28dd7c49170b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f843e7-d4c0-42ec-8799-b890df3283e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e1367a2-91d0-4566-b42b-e310b021df38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "262265d8-a1a5-4459-9e6b-377f33ae80e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89c68c20-49a9-4035-aa62-82903bb1218e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86a4f27-c249-4ce3-9aa9-52bb632a44e0",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b44897-3a30-4ab2-b41b-0f35f44354e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddef388a-a422-44e0-9258-83b2e483acf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee3f78f1-4d38-43e0-8ee6-2b3d46228891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97441567-314b-4806-b31d-77eba13fd5ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1eadd62-7586-4cf1-924c-baaf534d9b52",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f70d08-7c8f-494a-bce6-71c7876049fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff6cec03-5237-4c7f-8eff-706024157631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c83e88-4cf2-4c77-bf0a-f7bdc38b02cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29dd2323-6393-4e54-bde4-e6c4464a8368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad304bb-e77d-4353-8493-d044a29cca0b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da59db3b-c1b7-48f4-addb-5512a1e5c995",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d297c0be-0fd3-4219-b03e-668b02b832d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b16b6a-75b4-4674-b7c3-cc5f77799ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70418b1c-f11a-4f2a-89aa-1cd7515f8154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd26ab5-c83e-4516-b862-a7f2f8b159b3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45109e7-9f37-4817-a4a7-d8781d73bbff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24fc89bd-61d6-4f0c-964e-d9ca4f1ea5a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc1bc1d-6270-4a20-a6be-8893ff9e341f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b49116d2-baf4-484e-9840-81193f6e7e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32943209-2a46-4cf9-a88a-0012393b7267",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc03b45-be7d-43a4-8793-04d49c78e775",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61b38e00-8c56-4f1c-bbd2-fc2edb556333"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cde418e-67d8-4877-8833-39b2a5b69b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d84fd69-87ae-40b1-96bd-5b31675e9252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22eb6ffa-c8b2-4d02-821e-9b1e4897ef4b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c46f42-43b2-4b9b-9758-4af8b9feefda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b06c9bf-833b-4910-9a86-ff84819c1e4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94755801-c72f-4d93-babf-fe36f27f81fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f58ea1db-3ce2-4862-9e37-a0e1f2e8fda8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a877cc01-4f65-4173-bc5d-8b2c105de1e8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f3d5e7-f525-4410-81dd-7faf124d2f6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9437dcf-69f1-4814-b732-e046dbb05134"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "741caf5c-10be-46ae-810e-3bda57323d45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c294600-6fe1-4f0d-af58-6f864986cc5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e646afd-8775-4f5d-adf9-46be70213e4d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad8d49b-a437-490d-8ebe-fa3856500d22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e4e4fe2-451a-4800-8f27-7a1588a190b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c10bc493-ce24-4bea-8bc8-9820835122d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4ae61c5-bf58-4a97-82c1-652b4b8a4327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f18dff-66e0-4665-bc51-b9f3262d0bb5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169650fa-bf4f-4fd3-8dc7-dc0a3f3acdbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7fa30ea-9345-4f39-9918-8c13177208cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5dc452-34bc-4bde-a048-a2e9735b0056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "957598db-d30a-48f6-8f30-126c1331f47d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3a9cd9-a95e-40e8-a3c5-1d74fdec0c4c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80115a29-77c4-4851-895a-b887acdf694f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ebbb5c5-6407-45ee-b5b2-d6dee9af7194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beaaa3d2-7d97-4884-a820-b17f99399ce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8fef15f-cf52-4d40-b93d-d654833f7da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b1f9f3-2f0e-4a52-a087-51e9e96db8a6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcde4b53-30ac-4e8a-b9f3-76aa35bca548",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc17b411-e55a-4f45-b462-74af34b0662d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76459260-34f6-44f4-81be-29b6127b22fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6219cbe9-a169-4820-9c5b-f17ae9eee9be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39bc77c3-7035-45e3-9c76-bf5190347677",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f56ba4e-57f9-4f3c-bf21-98cb44ad545a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdd6e042-c76c-48db-bd41-c4d9bbb0b1ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f629188a-ca75-407d-8c9c-bb2c2fb9bd8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a5790d6-7a78-4bef-94b9-c2dfa521c8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c03442-30d9-40a7-bc55-f7e5f0c95654",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa07c08d-f5ce-45a6-a996-2366901fb124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f0fa12-c567-433f-8ee8-4da6c24f7e53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44cca9c7-1415-4687-9982-75796fb946d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afdf6c75-a760-4d9e-a850-d40436a11d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c410304-9768-493c-b18c-4ee0c8733517",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f562006-187d-44e8-8411-e2601bec1128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1da07afe-0c11-4c21-8430-f6e6dc157e23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14dda969-2aae-4d49-9fa6-4a21cab985fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8556cff0-9b5b-4efa-bd27-86eb70f1011d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aeaced3-1534-4260-bb2a-6c37b72fece4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65fedbed-f0da-413e-a902-62522dac5bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd23a11-f0ae-4725-a0f1-9850a52772ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e5ae40-3c0e-4648-85ef-b2eb6b7b62a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e2ed388-8002-4719-a8b0-e7e67f90a0ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf59040-9ca5-4f00-96f7-9c3fd4d269b5",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3cd8978-4f9d-481e-92fb-e78899f32859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f7c3603-eb11-4a0b-91af-3f2124faed17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d392bcb-d3bd-4870-bb46-4960973db7ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbd55bae-0d72-4d1c-af0b-b02f016997d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7ce225-6e84-4d31-91bb-94f788c9dbc0",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a45f66-59d8-42b1-8268-fa3f6164298b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "844c3c63-83be-4116-afee-f282db5a6ee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50b6132-3ce3-451b-9ce5-4da4c1deb008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7aa024c-2142-4116-b2f5-d06cef85e769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e576fca-316f-4abe-8017-f0aeb54c8c94",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3470e89-4d80-4223-b2fd-4121d6e68d3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91724c21-7c02-4733-a11a-045cee740091"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3c4d3b-76e1-4488-b1de-87102cc69654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ba0f892-c90d-41c7-a8ee-015cebc547f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80da070-730d-4c6c-be71-68cb5e899297",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9bf2ab2-203f-4257-b48d-9cc5a07b6abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1229a904-28db-4597-8212-fa4e68799214"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3fbf79f-a8e2-4c5b-8c64-305dd3869f4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "855337e4-e0f1-4e71-8809-f6143952f573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4490beb7-2144-421a-94fb-7f70bd14bec2",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6251f2c-349e-4177-9d5f-ffd9d09604ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5182993-6472-4f64-a648-58c3b3ca3c3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22114b72-410d-4618-b6a9-1196f3a271af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b4cb3d6-b1e0-4e73-91ca-1e70218ee32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20696e4f-339f-40a9-ab35-b178eab8e97c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd31a49f-90fd-4ceb-a1e7-72bf464d6400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f89329ae-24da-4def-a995-7aaea1a002c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "483b8ab4-ea42-49c7-841c-24b9e7e6e150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd8c99b2-2ef2-4810-b21e-836db049de2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd4350e-c725-4fbc-acde-736ec673af8c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a880df3d-3165-4199-996f-1ab608a7f9ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd44d9ee-dd7d-49bc-9734-99a3b904e924"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83eb3cd0-172d-4a4c-bf77-0f100ffcccfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "015ef365-f545-4617-8247-88fbfd503fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a33c68e-c67a-47d4-86d5-cd967924e7c9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f3a017-514a-43ef-8c76-755c6b148576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f27edaf-0b44-4a03-a196-1d26884c5a31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3448148-8ace-4636-9f8f-53a75edec677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2492204e-a185-4447-a192-4fd349ebad89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88072df1-1c36-4705-abd9-5dec63e97bde",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f28111-0c77-49f6-a294-78be0b5b9324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2351f58f-ab5d-400f-91f0-06af180172eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11eea66c-b83f-4869-96f0-6f927e17435b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbb7e362-3793-40b7-94fd-be0ce341602a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2152894f-304e-4710-af36-3c658172cccd",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f6d70d3-ed13-405c-8e61-c4e646c6a62d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f3a25b0-502a-4ec7-b821-11972bbba6a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3176360e-6abb-4e68-8565-00ce3eb50548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4baa7b51-b4db-41a1-b4a2-7596e5898a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47baf555-b15f-49af-b655-6421ddc3cac8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0eee86-1803-449a-b793-14ffe1bedfb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc2d5f0f-fbc5-4e6a-80ae-7495ffa0a102"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e0734c-dcf1-4a12-b9d8-52d49f18323c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33c2e477-da0d-4319-b5a2-77bdfc13076c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c40968b2-7a23-4a88-9b16-6c4dca9e04ff",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe2c6b9-2d30-4855-a0e2-347be1a507d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0dbf33c-f9ae-45c1-aeed-a2cc905a49a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f6057a9-9136-4476-835d-32dc8d8709a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f506c732-11a0-456c-9864-8830229cc6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b024ebf-8470-47be-907b-27ed0b8aab65",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b75b751-4913-4bb2-b5d8-b33b475f319a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc5fe3bc-c437-469c-85a2-ef68512b227a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8affb7-85ad-4527-bacd-127f50e016d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "707bdb10-33c3-4f65-a418-d64710c266e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a23baa-1ea9-4be4-aab3-0a971005bd8e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10fcced8-9d50-4e1b-abe4-e8b9e20fdb5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db3476d6-f256-46bf-bd50-3515b4423307"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "326ca027-ef4e-44c1-ae78-82fce7d58d96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a832f6a5-03ef-420b-aebd-67d4ff8b5871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8063435-9e39-4b73-a99e-9bbe53a53f90",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d25b8c-73ea-4d50-b204-e532d278c1ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c23166cd-2f6f-4a9b-8766-5c3bb978023a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51d9dc5-97c6-4126-a541-8ef14e7ff2d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d83e1727-f497-4666-96f1-15d0808657ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70727a8-62a9-4098-8889-d4c0c86294ca",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15d233c-7d74-4b75-8977-75d244e1c33c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5237a3b2-3fd4-4cf1-91ac-07bb43f4879e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "074dcf1f-30ff-4c9d-9469-030749b9f833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d847b8ab-9031-4964-bdbe-409872dcc165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a96f7c-1072-4578-ac07-c26a7022f983",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d90a024-731a-458d-b1ee-fb7480c91a77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ef3f7e4-f6db-40d9-9160-c68e4874cf9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbe9a31-3324-4dd7-aab0-7755e188ecfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a633d8bd-894e-4321-a98e-2ad1429a8ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8294f1a-0afc-47bb-847d-64da4f90fdc5",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529a2029-48cc-4378-9322-8dc93f0dae6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cc1a4c6-ecc6-44d5-a2d7-7200be1d2d9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "719eeac0-ba95-4b7a-a72b-7bc80d2ef009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ea06863-03bf-4f97-8ce1-c20d9dafa0b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b903b91-c96d-4897-b6df-8a38fecd35f9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f3db5a-11af-4783-91a1-cb5d1de8b156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17f357b9-0253-4c4c-b6da-daeda383b735"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "891b55c5-818a-4cb6-8a5e-f08b5d2cabdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d037e28a-c09a-4d60-9658-c2644dc5f8f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9333689-49b7-49ac-8057-8c722baf882e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4cad264-9455-4450-88b2-01922da66263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0bfdf33-33f5-4396-a2b1-60bf63d22f03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8292932-1f9d-4bb5-b9ce-f317b43b0f21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d37b675c-100d-4add-889d-026203eb8374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d38f3e5-bcb9-431a-a7a1-aa4b60622c90",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d5b053-3ee7-4a8f-9043-c166908dfe6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "230a2037-6633-41cd-9071-796b6006c612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1cad22-b483-4955-adc0-4586bc61e7e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e77b53e-2bcf-4c1a-8761-e66d8439374a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbd49d1-8fe7-4fcc-bd05-9b025b8da485",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d7d3b7-2318-4872-a1af-64be7f959b5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f17d440-b609-4378-8abe-45992473be73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99135933-79a3-4c5b-ade0-afbfc48317c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f08cd78-0533-4ff2-87a0-504249f67aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58305cf5-c7d8-4894-9c9a-88897d2fb58e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc5f41b-23c1-4596-9563-59589c52bbaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58303a6e-c127-4bb4-84cc-b8720b5b5553"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c6b8db-9089-421d-93af-94f8253486f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b63d071-de08-4400-a63f-f431b93c5de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe21696-c8a3-42d4-a149-97b81b0f81d1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4e5078-1e58-4fd2-b96e-b9504959fa74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85938105-76b0-46c6-98a2-29a67cdacea1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf06855-1543-4c45-a32d-cf22cf92f2c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2029e51e-ab15-4cbb-9d13-29769460bf50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d7a9e2-9b0a-40c3-8785-9f00c02b8334",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4ce29f-21ef-408d-a48b-38ecc4b350d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5edaa0bc-9ce1-4f5a-9166-45dda98a4ed9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b84b3af-e379-4567-a3db-2c016cbc50ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c1d3814-8013-4f6d-8d86-08d599d9cbdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e281a8-c50c-4c47-813f-93c2ed3c753f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd3ff20a-4cf2-4294-a5ff-9d9975133690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95bf590c-2056-4f72-b81b-0eb595be6191"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7229da-867a-4c38-a2da-85d3b28e668f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b456df90-f80b-497d-8e73-c3030d509b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0adf6ab0-24a0-467b-9096-5fbb40c0cb60",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed115f2-94b4-4112-8026-2db1a9d12287",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f07121e-d59c-4af2-a9a1-d3b9dffca280"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbf0eac-7e3f-4552-8631-259d20c07fa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41c246e1-88ec-48b8-8d84-d1de77ab32f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e093f4-da11-4029-8a56-4a21cded406f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2405a720-3a1e-470b-9915-9499f64dfb52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f147e30-b410-4bf3-bf1c-027ac96fe490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8ba393-b130-4294-87cf-678b1454c225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17d8d6ac-03af-46a4-9741-c61fc33403e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99354b7d-770c-4f91-a4f4-598b512587fa",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8cf0165-5d2e-4eaa-9ecd-66f0c0d42451",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8826eef5-e198-4616-b4df-7551b2628e06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "740d6f94-3825-4b08-b145-f86be5e632e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "755c94fd-670d-4b43-ac77-af6b9d61f40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d7c5ae-a0b0-4508-8ae2-48863722a500",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf49ff4-4f41-4714-acb8-371bc60421b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5991ba2d-01e2-460c-9424-3dcef5cd8ae5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9395744c-44d8-4c6a-a1a5-c58f514e4302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da4e6d83-a697-498d-846e-d863503ae14f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e495ddb9-91d8-4b55-a9c5-4dffd50046ec",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7fe994d-88f4-43e6-a438-68328206a44c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11f2644d-b507-4036-a12e-85fdcbd966cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43734190-f6d7-4925-829d-8c284167a4fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93fbea0b-ee28-42bf-84c9-6e4496f1d467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6bc3778-fdfd-455e-817f-60df97230dfb",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e600d77-ea1b-4307-a4cc-37373ccef1ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fca25849-39cc-41bc-b458-90132063dce1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3a3f10-93c3-481e-854a-439c2d7e469e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "535dbf74-5c53-482f-bee8-495b0e7e663e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f70113-7191-4e12-b2fb-82d42c426baf",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25196ae2-46aa-4715-b53d-52e3c2aef0ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6db42f91-532d-443f-abcf-7138c519576c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9608a200-be38-43f0-853d-0cea12751a77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0887c2c3-82da-4ae1-8ed2-c4244f2270ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4add50-956b-4a09-ad1b-3d797d91b60c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731c84f8-84c8-415d-9f23-509c784295f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8da0905-b514-4658-85a8-70829666e780"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57ab0c2-34a7-4d7c-878e-cce809a5f812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "692bf74a-f812-41a5-8b79-fe744f64d92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62035557-1796-441b-9e3d-85ae2d3493c5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13583ec8-cd13-4412-ae0e-4c602687559f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b9536fb-1538-4dff-9929-9020d3933955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b0ad85b-e780-4999-8316-4a6b55c43b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3502fe4-c316-46c6-a45f-1347dd45855e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c869a4ac-9f4e-41dc-ba64-0db6e922a8a4",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7698cc9-619d-48fa-ae00-9899485503d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0d8f04c-b78b-4aab-915a-80652119b1b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a71fda9-fa61-42b5-a515-4753a0a878cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ebeaa1e-64e2-4edc-a9bf-9263e552e33a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16d0b90-3e47-4c9e-b2a1-b5d92e1d2286",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e65b52-943a-4e55-bbc6-ea067e841a86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11f07221-aebe-426b-a38f-bb1fa9753c6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6eeb65d-6e82-45a3-a35f-1cb8e20e725a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80c132a4-d651-4c20-ad5d-8e37fec26591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24812d7-d04e-4b03-a795-1d850832436c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed550073-9d0e-4294-8334-60cc0fad1af8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c925a0bc-6e59-4b90-be50-3ec5f73f6f6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49408b7f-43f6-41dc-a79c-b202c5bd97f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3a1ff04-6492-4a0e-8701-c634a095d452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf6be4c-b6a5-4d6b-859b-b8ff33914401",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b0f477-7ab0-414f-a6fa-5dc87e18b3c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5df998d9-4542-4097-8cd2-f76d45ea02a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fbe9af8-cb37-4e44-80bc-17276db2ab0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36005edd-a287-487d-bd8e-fff4fe3f065c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c470af-11a3-4bb9-9769-597216504859",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d478dc15-4681-4330-ad54-0d704a173473",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44a5b8c8-8333-442a-bfe2-73e42b45b6d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e26319b-efea-47ff-b682-41572a3b0c02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1801e335-bbc3-4abc-9b6d-00cd8cf8eab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f6973c-cc90-4b74-8b52-a229d8a1ab7a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267804e2-4cc3-4000-a1c0-9a66335c8592",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a193167a-4986-462f-999b-082a9a3cc0a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab96c53-6a61-4ee4-8d35-2cddf2a9438f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6e8c5a9-8ccf-4c78-96ed-dd77923a6080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2ecd5f-7f96-48a1-8ce5-fa627a40680e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6aa010-e694-43bf-aa97-dd98fff497a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1426c81-0030-4eae-a843-0752388cd15f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d259c69c-860c-4510-9c87-7243c212d128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b85ff12-c085-4640-964b-74bcc823583b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e0e66d-f17a-404a-bcfc-aba73db6ff39",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8205171a-4aec-4714-8a70-e23d71450ea9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05ce8d7b-241f-4dba-b0b1-1de8072024d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f3f640-bc81-44af-ad84-54e4103f1dc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53c21eae-ae83-44cf-b750-ac67d6892100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2c00d3-1e76-4a56-a913-3e91675d35c2",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75bc2fa9-2b73-4548-8d76-1bccae24b87d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3147e49-e6fb-4581-b181-fbecdad7cfa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6223fa-92cf-4d46-9fdf-f5782c32eb80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcabb622-2bd5-4c76-94f7-6317c912876f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12017c54-9ba6-4a08-bfa6-3e7aed96b240",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0750fc3d-7889-4c57-8df0-42ba8f4dd0bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ccdc925-aa02-4ff5-b6aa-9430163fb0e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d304f7e-76a8-40c4-a243-8413f2601595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "315ee125-7784-4f6a-a29a-fdfc5c4afce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14d9018-f210-47db-884b-2abcf98e0c49",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde39a23-97d4-4afd-b937-3cb660880f47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b270731-53a2-4678-b27f-8077490bda70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8c1b05-101f-4bfd-930a-404c6c749291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fcfac4e-6329-4d6b-a412-b46f3a85c21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94566674-2fe7-4cdc-9d21-b5be758fe7ec",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bcee8a5-a0a8-45ec-af49-39b91beb8c44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e40eb9d9-f097-42ce-83fe-5014d9615a17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "562c3356-2665-48dd-aae6-dbaa895330f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaaaadf9-0f0a-4691-9c32-16c382a098c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17024a24-9139-4658-94e2-6fc3defbb5ec",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe1e22f-9887-4dc0-855f-7eb818d271a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6bd405b-015b-4b97-be69-2c0ccda6c9f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f563227b-b957-49c6-a0ac-43d4c9f33ee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ebd6f1b-ec6d-401f-a344-85b7eaeca2c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae3aa95-96e6-4715-9e00-d62f26d3bbed",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9148d30-49d3-449e-a1ae-398404f165dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2da636af-ea8d-4aa4-9b05-45d73500ddd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "333ccacd-c0df-4116-bfbf-20c8a5f24dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "880ac452-5b26-4e1c-9182-c593be0f4d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63dfef59-c63b-4d3c-8221-82a1a0255ceb",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873210e6-a2d6-4509-97a7-24b9287b92b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0b2a8f5-cdf5-4132-9266-6820702a53c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55722af-cfd7-466d-81dd-6bfde7424e24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6454ea4d-7ca8-4287-a100-88326cf6e908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e277abf-a0b2-401f-b2e7-a254ebd12ef8",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7e2708-97df-4a96-925c-809c38857380",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f9ae90c-24da-4c83-84f2-33f2ca9b8e3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3188ca-2fa4-4b06-8e12-355df2418dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df18eab2-7cda-4190-b1be-efa766e57bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09965438-9765-4b6e-b362-20605877e6b0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71edddc6-66e0-4ecb-91d9-de0f6db29a12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5c47aaf-a4db-4c07-9739-97777e6711ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a7e66c-a46b-4aee-aa61-e8e014644156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04f5afba-e0c4-4c63-bf16-9a4cc0daf08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d6ad05-9c97-4895-a279-2d29a2a929ce",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df8193a-67f9-4c16-9175-4dacd4260de7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de4ced60-e294-4c88-9370-847b666f98ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "134e3762-4572-4f93-b53d-b48a8a71b4ca",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23cfe2b0-37fa-48ea-9d8a-b11b14703e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f855171-2d62-47dd-83e6-1c28df7b0483",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c260f58-e51a-40fb-b2c9-a89796ade927",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abc4af81-f276-4a4a-bb31-a158cfa7f147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "967af8c8-4b15-4e20-a930-6b9b0002c8cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2e7ac8b-4221-4781-ac9d-cf5eb0866b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb5e0a4-992e-4ba0-be35-41ea7f52da57",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a968f5b-f217-406a-8dbc-ea00061713ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f404d868-1f70-4aa8-82e6-e6b6ec501681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "662f3c68-c838-4372-aacb-b137bb252e55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "855b20fa-b884-43a2-a18c-7cfff976f330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e546a675-6c88-4617-a343-c9b5c946e897",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88148796-3a36-413e-8db5-a4912d0b3fec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62a43544-3aad-4041-945a-5f62347d7d5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05f2e82-52f7-4582-8eb6-1b04756b3f4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f47c2376-9bec-4f61-ab1a-5b0d5510d5e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e72b0c6-884c-4324-b231-c7941aa1e34f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f3ef69-1db7-4af6-9414-ceb425eb4582",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5c2b9cf-ebba-4c05-9074-16be1fac13fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d158bb4d-c5da-4ef7-a9e3-a81e47b43ed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ed20f33-0deb-4dda-afeb-434b74f57cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196ffafe-b331-46c8-8fb0-362a23fc0a2d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb76272a-c64d-4968-91ec-22d99fe3cf5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "234cb4d3-56ff-4152-8108-39cc4663c5f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cde439b-605e-4cae-82af-4e967123e8fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14875a7b-8edd-41c7-b9fd-cdccf3d82038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0484fa7-1c5f-49af-b94c-4a4cf3433959",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76802e2b-b206-4025-9160-15379686bad0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1d6597e-a1b4-4381-9322-43f36b79d0be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7e3abb-a0bc-4271-9042-fef88ac1725e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c3223bd-d235-47c5-bddd-a24882a00cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6fe520b-e274-4702-b407-82ebde994ef4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d08aa4-1eca-4403-9ef0-3c6561afcb10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d100109f-3d32-4010-8db5-3c9d2cc2c49f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c18d1b-cb75-4de8-a041-9eead1670943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca92864-a1f2-483d-b31b-8fba0132a786"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4958fe73-71b9-4051-af89-77bc6619f399",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "faa0d570-761b-4f1e-b007-969e7986daf6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "834135ad-710b-437d-90a6-e55faf8eb15b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "463d26a3-0cda-433d-b75c-c86e15d6645f"
                    }
                  }
                ]
              },
              {
                "id": "c0a5f58a-2c49-4504-a0a6-47160bc3b2c0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0458c6e5-bafd-4bae-acaa-0510cf174277",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "787cc481-5e7f-4e3c-abc1-ef54187e7b67",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5795eca2-5534-4c5b-81eb-a6422c793e1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8b7350-abe8-468f-a0a6-6ca007a3cb8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3b24516-2676-421e-867c-7febe5cfc7a8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2233e24-369f-49d0-9c95-f3a30dd9595b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c03af0df-0ef2-4cb9-aeb9-217803cc36cf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "50749378-65ea-4b46-b29a-39cc94bd1171",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffad8e29-3149-4c82-83f2-219ac709efb1"
                    }
                  }
                ]
              },
              {
                "id": "3f7d666e-e91a-4f95-86a9-d75fb2e69620",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6216ca97-a67f-4701-910d-3123cf378e45",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81cb1b7f-1b5f-4a6d-b41d-de2cf3d75c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2dae130f-6f5b-4c97-a9a8-332f2e6e31a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32dcc70c-c373-4655-96da-377d0811c901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5288c348-3d01-4991-b980-df6c8d305871"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "069811a1-6450-490c-9f50-c1d6d57dabe4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c2e8ca0c-ede1-401d-bf4f-87a33cc09fbc",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a377bf14-c4f5-417b-8091-b365c5b9372e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "66559a3a-ed51-475b-8801-eacb01262c44"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93145b70-5429-4b44-85de-dd5474a66f47",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cec49e1c-c521-4860-ade6-781dc2cee93a"
                    }
                  }
                ]
              },
              {
                "id": "546d26e7-2a96-4b7e-8df3-924949aef016",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "86781bcd-5413-4be3-aaa0-34368cccf590",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fdab4c44-0cd2-4bb1-89d9-49baa5614456"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4703b997-c5a9-4a0d-b00e-4fb0f0792218",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5be88fc0-6c3f-438f-a36d-5292e0f3ec15"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "43f4dc70-3fbb-4f3f-a8fb-fae65e9c6547",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "af3e1194-f978-493f-a235-4f395511b337"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0847e3a1-4cbc-465a-9f85-fc98bae2757f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "637bb983-0aad-4574-91ba-b1cb1b6bb38e"
            }
          }
        ]
      },
      {
        "id": "f93eb3b3-c799-42d4-b6cf-f22f8b960022",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "fe3a1ce9-2d47-4fdc-a9fd-4133859a1f1d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f97275a6-1333-46ca-bdb2-b7c0d6df5b95",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "815982ba-70d2-4692-b428-943e00e15d91",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5121046d-22e0-44af-b66e-2ce9d6e92f8c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7b55037a-db39-4aef-8cfe-5c158f1c75b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d50d0c-dfea-4f47-84c8-e5eda74e73a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44a6120b-7e63-433e-8574-8191ab0c34f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f41d9d4e-4853-430b-ae7e-6bfe32755b66",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a4e3af0-2db5-491f-b182-2480f64ba731"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a22cb7a-b95e-4e06-bfef-d402f85698f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "222e0a65-87f1-4cf5-a756-a6814923f182"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "79b875de-7fd2-4152-88af-75be92855935",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8d39023b-24ba-48fe-8c19-0d4440f8c8a8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd05a973-887e-4058-b3ad-4016e0e7c61b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "60a6b598-7073-47c7-942d-fbb2abb236b7"
            }
          }
        ]
      },
      {
        "id": "b64e32bc-c5a7-4e32-8cd9-93ffa75e51bc",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7e123664-06fc-4ad6-83a1-e381fba659e3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3e703620-48d0-4cd3-b45a-1ede9ce269af",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "24b36810-9ddf-4200-8f84-8a4a0ce57e4d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d47d47d-d998-4533-b90f-fc8b72668fd5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fcbd41ab-853f-4be9-87eb-d38c4ef07c05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca37337-c7a5-4905-b286-0cd2af2fdfac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ab5545c-0613-4fbd-8251-32ecd7a91cf6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6e13aba-638e-45ff-b853-f166defa7558",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b159bf4a-e47a-4fc0-af89-296e7f914cc4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "201aec35-5fdf-4ced-b340-7757694b0b92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88d85031-a5a9-4c69-8a29-ba4fd689a00f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "adef3841-4026-4b3c-abb3-ceb0e771ef61",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "379d9cf0-ab47-4df9-b6bc-1fc37792335e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "94ae05ee-0bf5-4c9c-baaa-f1fde73dae04",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a5671190-2fe2-4e55-92bf-99519bfa3f20"
            }
          }
        ]
      },
      {
        "id": "d856fdb4-ceb5-4472-b455-509a5bb8ab73",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a66247c3-f67f-4bdf-bf3e-361a09460329",
            "name": "Negative Testing",
            "item": [
              {
                "id": "22815966-d483-4f72-bca1-29742cbdb599",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e750ab9f-9fae-4e72-8ee5-78e37d24a890",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa077d7-36cb-4904-a82a-ff0183c75676",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a8d660d-2306-4803-87f4-167901153299"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "760e6883-8376-4adb-9ae3-1c32923f297d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1777bbe8-270d-4935-a9db-c9ad1e5c4a47"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a9d0be9-6a53-4ec3-90fc-8dab0a135147",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4eac0bc-d804-43a7-96dd-f83b45ed1b2f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8afdd834-ad66-45e7-ac40-b33decf8682a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95940078-d8e2-4c0b-8e5e-bf54be7aaba5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44033963-d829-4685-ad6a-fc0bfdbb5388",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cad79ded-53a6-42e1-84b4-df3a3d3f818f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c3a1159-12cd-4a59-b97d-e5dfb7187305",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "141ce033-6193-4bda-b85d-958eb60ab4fd"
            }
          }
        ]
      },
      {
        "id": "5ecbc98e-7271-4bce-8b1a-493c3af3bed0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c2991e4f-d576-4a83-97ab-864ac790e04e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7a0c7024-85df-409b-ba29-73035791643e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ea5f6065-5521-409e-815a-4b25b8c4c177",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5657ef45-9b08-42f1-a457-4045ba3b5759",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ebcb457-4f86-471d-8408-887ae7ea2119",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 8.211267605633806,
      "responseMin": 2,
      "responseMax": 313,
      "responseSd": 25.189515756103376,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1694910912156,
      "completed": 1694910925782
    },
    "executions": [
      {
        "id": "bbf71320-809a-4186-bd3d-4fb6c1599e7c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a375651b-78af-4e6b-bcdf-8633ad606f36",
          "httpRequestId": "b633180c-c2ba-4520-8fc3-b5726273a49d"
        },
        "item": {
          "id": "bbf71320-809a-4186-bd3d-4fb6c1599e7c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "78cd365f-2963-4c9b-86e4-14179e1d5e4f",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "940ac0df-a477-4b1b-9cef-ec7cd5a1c8d8",
        "cursor": {
          "ref": "6f7eab79-d5f9-4f28-b085-eeed47efe0da",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e99a8b4b-19d8-4c03-af70-0218b914e49e"
        },
        "item": {
          "id": "940ac0df-a477-4b1b-9cef-ec7cd5a1c8d8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8cb5c227-f2d3-4805-88c0-e3bc661603c8",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "041fd80e-8d8c-4c95-a46c-6e5ca7a5ad4a",
        "cursor": {
          "ref": "755c11ce-5675-49c6-a51a-8e85e3c75499",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "357c6de4-acd2-49c1-a6da-13216f144e65"
        },
        "item": {
          "id": "041fd80e-8d8c-4c95-a46c-6e5ca7a5ad4a",
          "name": "did_json"
        },
        "response": {
          "id": "562a50fb-dfb1-4318-9352-5fd5deab4c0f",
          "status": "OK",
          "code": 200,
          "responseTime": 160,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d01bee9-aead-417c-8169-00981f11b49c",
        "cursor": {
          "ref": "2c31ab14-8205-4fd3-85ee-538e38c4831c",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "081afe5f-78a7-4e21-8adb-e8255d1dbb95"
        },
        "item": {
          "id": "4d01bee9-aead-417c-8169-00981f11b49c",
          "name": "did:invalid"
        },
        "response": {
          "id": "b120152a-b9cf-4f85-9a27-709cd6b04568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d01bee9-aead-417c-8169-00981f11b49c",
        "cursor": {
          "ref": "2c31ab14-8205-4fd3-85ee-538e38c4831c",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "081afe5f-78a7-4e21-8adb-e8255d1dbb95"
        },
        "item": {
          "id": "4d01bee9-aead-417c-8169-00981f11b49c",
          "name": "did:invalid"
        },
        "response": {
          "id": "b120152a-b9cf-4f85-9a27-709cd6b04568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79fa61c3-eaa1-40b8-838e-0de9f61f53d6",
        "cursor": {
          "ref": "1745e967-9ffb-490b-abc1-12685906c62a",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "92accbe7-c701-4a37-98ba-b3be76cfa08d"
        },
        "item": {
          "id": "79fa61c3-eaa1-40b8-838e-0de9f61f53d6",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9f5e20f5-3f7a-4b75-b08e-99412356dd4f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 48,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a503cf-bcd1-4028-b0d2-e592c5202f45",
        "cursor": {
          "ref": "cb9355a6-2770-4cfc-be5f-b1a3a89a13cf",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "78b10f6d-6475-45c1-a00f-a27a176177b8"
        },
        "item": {
          "id": "98a503cf-bcd1-4028-b0d2-e592c5202f45",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ff8326fe-b736-43ef-8852-6c79ed3c197b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1c135b-9800-451b-b345-7e9208fc7254",
        "cursor": {
          "ref": "08d5f5b7-7e15-459b-8fb8-a68073eee498",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6658fcdc-d2d8-43f0-a737-6bb7bca7521f"
        },
        "item": {
          "id": "ce1c135b-9800-451b-b345-7e9208fc7254",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "89e2831e-31f4-4d00-b719-0588ee0b458e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f29a082-69d8-4f86-986b-a466f75df39f",
        "cursor": {
          "ref": "94cbdd17-c30e-4f43-b128-9be3bafd8c49",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "02a9f97d-5ab3-4324-8c82-6e908256fe47"
        },
        "item": {
          "id": "5f29a082-69d8-4f86-986b-a466f75df39f",
          "name": "identifiers"
        },
        "response": {
          "id": "35f3e044-fc4e-4ac7-9c10-04501dca66aa",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53df05d-794c-4a4c-a42a-6864cc474e54",
        "cursor": {
          "ref": "fe648e0c-ee7b-45de-ab64-cea9e23eb43f",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "88420b4d-1870-4d3e-ab6b-75c89fa1f7d8"
        },
        "item": {
          "id": "a53df05d-794c-4a4c-a42a-6864cc474e54",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "264d0afe-bd44-4726-b9d4-73b121de6bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c3d680-96fe-4532-abab-a236e9b58813",
        "cursor": {
          "ref": "fd1fc05e-5181-464e-86dc-2b94bc236746",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e54c9b19-0d13-4f2d-82e2-7791e7bf788c"
        },
        "item": {
          "id": "b8c3d680-96fe-4532-abab-a236e9b58813",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a41a3614-3ad0-40b2-9da3-3a664efbcc29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96486d4a-a9b1-4a85-a2f4-35f18bdc7b98",
        "cursor": {
          "ref": "0a66296c-cff7-4d24-b995-6e8605bcb122",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "fe30b129-a5a0-4e3e-8e1f-9bb65923be55"
        },
        "item": {
          "id": "96486d4a-a9b1-4a85-a2f4-35f18bdc7b98",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "75cd55fe-8fb5-4eac-887a-51c384ca209e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42733f2-250b-43fd-be63-eac38615a8c3",
        "cursor": {
          "ref": "bde68319-b1e0-42db-ae0d-358fd5433c40",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4920eccf-4052-4302-89e0-efe76388924e"
        },
        "item": {
          "id": "d42733f2-250b-43fd-be63-eac38615a8c3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3a0c3724-7f91-4901-9567-f67d98dcadd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03063ae3-0003-4b80-bff8-a6b6acfcc965",
        "cursor": {
          "ref": "ea6cbce9-bc9d-4b8e-95c9-9af03a42feda",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a8e7c940-089c-4e44-be3d-a34cb2d9395c"
        },
        "item": {
          "id": "03063ae3-0003-4b80-bff8-a6b6acfcc965",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a96a7ae2-e318-4351-9f7c-a5b525ff4dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2194394-f961-491c-b484-d63a23bbc0c1",
        "cursor": {
          "ref": "f733eb20-c822-4183-8338-ce70bdbfe99a",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1b8e04f2-a1d9-4bc1-b8fd-3db4d60d1914"
        },
        "item": {
          "id": "f2194394-f961-491c-b484-d63a23bbc0c1",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a8b30f3b-e5bd-4d89-be92-9f88e5158e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52adaeab-2700-4f3c-b711-157e502262a4",
        "cursor": {
          "ref": "e7b93138-e267-41a0-978d-862a5a7d738d",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f533a1cc-f3b2-4e25-91ba-1a40d058826d"
        },
        "item": {
          "id": "52adaeab-2700-4f3c-b711-157e502262a4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7dd107fe-8be4-4833-ab16-adf89441f474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170b5dbc-3966-4251-b39f-0ae1c5449455",
        "cursor": {
          "ref": "5243ecd0-dba7-40a8-b44d-14f41d32c126",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7ba59a95-388a-477c-8232-18463b63aca0"
        },
        "item": {
          "id": "170b5dbc-3966-4251-b39f-0ae1c5449455",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "279a498d-e41e-471e-aed3-ed5caf3120c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4070bafd-8559-43cc-9874-15cd7c05734c",
        "cursor": {
          "ref": "a711ad92-eec5-4cfd-8a5e-bc7a522ca213",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7f932aa8-d5e4-4031-b516-187ba2415f43"
        },
        "item": {
          "id": "4070bafd-8559-43cc-9874-15cd7c05734c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c9c3ab87-3d95-4792-9179-0615bc9dbb95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99783215-f04a-4284-ae61-73cc7b206107",
        "cursor": {
          "ref": "d96afcc3-3372-4233-84f6-e7b5d89e6a01",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3131b695-b7ff-4612-90c1-04c6f4fc27c0"
        },
        "item": {
          "id": "99783215-f04a-4284-ae61-73cc7b206107",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a7734a2b-1d0b-4f55-98d4-a1aa4de0828c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f244d2fd-967e-4ced-88df-d1768b6fe5ca",
        "cursor": {
          "ref": "6e97aac8-e3b5-42bd-90aa-d3b6be92bfac",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0e03ae67-7d1b-4358-ab03-2b9c8ff44a89"
        },
        "item": {
          "id": "f244d2fd-967e-4ced-88df-d1768b6fe5ca",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "bc9503cf-d60f-4a78-99b6-d5ad8f0948d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba70962-fe73-4193-a03f-4949cbdcc930",
        "cursor": {
          "ref": "78e6fe1c-761e-4834-abfb-6f5114fc6781",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2922ff7f-9385-4647-8055-42fb0edbb9dd"
        },
        "item": {
          "id": "bba70962-fe73-4193-a03f-4949cbdcc930",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "bbb42525-8886-4cc1-8fd2-a038783c82fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f2eda4-b364-434b-be8d-5d1e2000e7a2",
        "cursor": {
          "ref": "33d89f07-3da9-4464-84a1-f9c1486a558f",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "922aeec5-f860-4d54-907b-9fcb93062f73"
        },
        "item": {
          "id": "78f2eda4-b364-434b-be8d-5d1e2000e7a2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8bc7a319-2d20-42cc-a1e2-5b5a4d8d53d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23b8085-d7f6-41eb-8d6d-29a11ebba4f3",
        "cursor": {
          "ref": "70c42863-dede-4128-a9b1-e24fc811fbd4",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "40144f7c-c040-4d18-8dc8-0cbb5261ebce"
        },
        "item": {
          "id": "f23b8085-d7f6-41eb-8d6d-29a11ebba4f3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5d89ca2d-5a09-4409-9732-519799ee2cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0af36c-5389-4962-a0cd-27edef38bfaa",
        "cursor": {
          "ref": "21cb6188-d419-43d6-8053-a015e1eac60b",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "61076e8b-feae-4eab-aa2d-6da06065b306"
        },
        "item": {
          "id": "dd0af36c-5389-4962-a0cd-27edef38bfaa",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d0bda628-0909-4d14-807f-887b7cc3f6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2434d07a-4669-4ebf-a846-11e45952e462",
        "cursor": {
          "ref": "0c7a0287-cb69-44f8-bcbf-63b926dc8531",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "55799dd3-edd8-4aec-939e-24e45b0be114"
        },
        "item": {
          "id": "2434d07a-4669-4ebf-a846-11e45952e462",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "25e47dec-fb08-4511-97f1-9942360e9577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72ad305-a665-4720-9747-25eb4ef52632",
        "cursor": {
          "ref": "6269a1a0-cf57-454e-bc3a-92497d1c95f9",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "19d243f8-e26e-488f-a1e7-142c13057ce2"
        },
        "item": {
          "id": "b72ad305-a665-4720-9747-25eb4ef52632",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5224234b-a1a3-4728-ae4e-70991ac088c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1bcb84-4333-4cf7-ad56-703fe650fa22",
        "cursor": {
          "ref": "f20dff0f-c82c-4812-bfbf-4dfab04fd791",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6cef1a95-0208-4c32-be8f-5d1ab5655f03"
        },
        "item": {
          "id": "3d1bcb84-4333-4cf7-ad56-703fe650fa22",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "434d6dcf-5df4-49b8-b5c8-1bd80040628a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee58c80-ebf7-4f6f-abd3-f10d7f85565b",
        "cursor": {
          "ref": "32880cc3-7e06-4154-9957-041254965424",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "16aa265f-345f-4ada-a69d-245d97ce6511"
        },
        "item": {
          "id": "cee58c80-ebf7-4f6f-abd3-f10d7f85565b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b8deea95-a517-4bd4-8f65-ab62edacd82c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b8f663-77dc-4cb1-a372-7bf95186ed65",
        "cursor": {
          "ref": "071d6d42-5383-4b1f-9777-856894babd8c",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "afde783e-638a-4e9e-bfb1-3408796f3f37"
        },
        "item": {
          "id": "e9b8f663-77dc-4cb1-a372-7bf95186ed65",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7bbb8e0e-a140-45d3-9cd0-c1ae7a76fe20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe1f458-d02f-4583-9420-29cfa8e1c88b",
        "cursor": {
          "ref": "bb4785af-6216-46bc-ba68-4b782a61efb7",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "73ba18e3-6de5-4312-8bdb-05f10f12ab31"
        },
        "item": {
          "id": "4fe1f458-d02f-4583-9420-29cfa8e1c88b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "136afba7-7909-40ca-a27f-2ab18f9166fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940f3f1f-0ace-410c-9a44-ba29aecf2157",
        "cursor": {
          "ref": "990ae947-1a93-47c2-89e4-8365db37eb1f",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0d7cf43b-5559-4eaf-974e-353c65cda113"
        },
        "item": {
          "id": "940f3f1f-0ace-410c-9a44-ba29aecf2157",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6b8dba69-3bcd-4482-8242-6e2437b9e094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8dd76f-56ae-4330-9de4-3e39a9bf34cd",
        "cursor": {
          "ref": "202ac53d-30c6-4bd8-9211-e097e7d7322a",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "43a5c23a-af30-4744-911d-d9f7eed8e767"
        },
        "item": {
          "id": "be8dd76f-56ae-4330-9de4-3e39a9bf34cd",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "6d1a6213-d6aa-48dd-9b2d-efa931eb2a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d1f6df4-c4e8-43a7-856a-a967837eb94d",
        "cursor": {
          "ref": "6dbb0e3a-b254-4e88-bba5-f6a98348c605",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9660096d-7dd6-4f5e-a77e-f1beaa036b54"
        },
        "item": {
          "id": "4d1f6df4-c4e8-43a7-856a-a967837eb94d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b4f985b6-d993-4e7d-a8f9-e030ae0dbb87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f049f442-06a9-439b-ba4b-0ef87603ce8e",
        "cursor": {
          "ref": "704e3b38-2b43-4d13-bbbc-3f669678b9be",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2f945489-7019-4861-a36e-17282b223435"
        },
        "item": {
          "id": "f049f442-06a9-439b-ba4b-0ef87603ce8e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1eb5bf68-3296-49ba-93c2-adb0ac8bbc59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34954cb0-68a4-448a-89ac-cb3604a273fb",
        "cursor": {
          "ref": "7fb25321-5eb8-4689-9e4f-1769796efc2a",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2c02e351-479f-46f7-94dc-9b3fa18faa18"
        },
        "item": {
          "id": "34954cb0-68a4-448a-89ac-cb3604a273fb",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a156c67e-af15-474e-bd8d-a1780119e105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9831af0b-21ca-43dd-9645-d40733190a29",
        "cursor": {
          "ref": "7115e0d7-9e78-4ee2-be9a-a1164ad11048",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "876e75c9-f739-4e65-8789-02667b4a6469"
        },
        "item": {
          "id": "9831af0b-21ca-43dd-9645-d40733190a29",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "aaff9deb-1f7e-4946-9afe-477c2943a359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69f229f-23df-46f7-b89b-a0d9737ce5a3",
        "cursor": {
          "ref": "45c9e5ce-1a34-4895-9f8d-21c543078eee",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "11b074e4-a922-4bb7-b4cf-845609257d16"
        },
        "item": {
          "id": "f69f229f-23df-46f7-b89b-a0d9737ce5a3",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "00d2740e-96d8-4e80-902a-6fb399c0874f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c132b26-e9a3-4503-a51a-979a3ff0e3c3",
        "cursor": {
          "ref": "1bdbb892-d4d7-4e07-aa95-574f536761e5",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "cd031c8a-4909-4a05-9861-0bf4e60c3f27"
        },
        "item": {
          "id": "0c132b26-e9a3-4503-a51a-979a3ff0e3c3",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "219692c3-f286-46a6-9cd5-07d704ba30c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105aa570-9d22-4b76-8aea-1980b589ece7",
        "cursor": {
          "ref": "a4755ca3-9986-452f-a13f-daadda978572",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d5789a9a-2fc5-4491-980d-74e5c5d0acf2"
        },
        "item": {
          "id": "105aa570-9d22-4b76-8aea-1980b589ece7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6460e414-d2d1-4a06-a124-3172b717d8ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4868b1a-3780-487f-b4a4-36afbdf5cf12",
        "cursor": {
          "ref": "e2dc39aa-da22-4d2c-bc1a-dff23510fcdd",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0c6a6b86-9ef7-4a2e-bf13-c8bdc9790bf9"
        },
        "item": {
          "id": "e4868b1a-3780-487f-b4a4-36afbdf5cf12",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "42d43954-14d4-4a12-b3b8-6d60f25a3d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90884227-bcfc-4271-b2b8-9265849e7721",
        "cursor": {
          "ref": "a4b94779-0f4f-458c-98f9-561392a2b2ab",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4c42c175-ace2-4689-a8b1-9fe63a20be2d"
        },
        "item": {
          "id": "90884227-bcfc-4271-b2b8-9265849e7721",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ddb86d5b-5424-4e79-90d0-b23c0c616e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f21e97-d3c5-465f-ac36-4d76f3824b3f",
        "cursor": {
          "ref": "72b79653-f6e5-4baf-95f1-9dbde9e2f462",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f3eccf6c-10fd-49f7-908e-424c91f26839"
        },
        "item": {
          "id": "d7f21e97-d3c5-465f-ac36-4d76f3824b3f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "72369680-ad99-4bda-a1b0-62657facc945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "411348ab-c004-4a06-a8e0-630053137297",
        "cursor": {
          "ref": "3aad6fae-559f-4cc0-bca2-14ee3360fcd3",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e129ee8e-7526-4928-8a08-d9c445b9f389"
        },
        "item": {
          "id": "411348ab-c004-4a06-a8e0-630053137297",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "16cf6d03-9c76-4d82-a97b-ee04648894dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd723820-74d9-419b-aa70-f6383b60b1b2",
        "cursor": {
          "ref": "ab24a488-278c-413d-8d54-cc7a589f89b9",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4ecb85f0-e357-404f-8d91-530b9c04214d"
        },
        "item": {
          "id": "fd723820-74d9-419b-aa70-f6383b60b1b2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0a4aca36-9d11-4d67-997f-06f0d543e13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8afa4c-6b34-49e3-b0b7-c9936e6199bb",
        "cursor": {
          "ref": "11be870e-53d8-4653-9c55-66f1bcd01c9a",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7ccde659-f16d-4058-adcb-3839c1506fbd"
        },
        "item": {
          "id": "9b8afa4c-6b34-49e3-b0b7-c9936e6199bb",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "14d52142-0e38-4b37-8b82-2d13d9a70221",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 26,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2984f834-1576-4fb8-9c10-5970080e8d99",
        "cursor": {
          "ref": "257a3903-1470-4b7b-adfc-4723110323f9",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1ac90717-5d32-4985-a925-e370ec214487"
        },
        "item": {
          "id": "2984f834-1576-4fb8-9c10-5970080e8d99",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4acfb3b0-f39c-42e7-9acf-6859c0f2b274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d89c13-3934-4fb5-a672-af35f5f77771",
        "cursor": {
          "ref": "7531b28f-64bc-4e13-b3bd-6e52e16a39d1",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b80fd667-fcee-477e-a203-7b62a7483f03"
        },
        "item": {
          "id": "84d89c13-3934-4fb5-a672-af35f5f77771",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "34b4c796-05c4-498c-94e3-d6ad192690c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d50d54-7879-4982-a4ba-aa4942ff28a2",
        "cursor": {
          "ref": "ba77af8f-7e41-48ff-9e4f-8ffe14837830",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0e958754-8ef4-4e67-88cb-7fca8bee0e6a"
        },
        "item": {
          "id": "30d50d54-7879-4982-a4ba-aa4942ff28a2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "21b725c4-548f-4d07-8d99-28eda75bca3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb2d744-0ddd-40cf-839f-33e2e671c83a",
        "cursor": {
          "ref": "b1beaaac-f1e7-4be6-a78d-7990aa6d12e0",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "bb4ee19b-79af-45c0-ad2b-936f6750d658"
        },
        "item": {
          "id": "2cb2d744-0ddd-40cf-839f-33e2e671c83a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "33e16049-d9ef-4cf2-b3c9-f6f48108fbc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12948941-5b28-4e5b-be0c-e9c01d115d34",
        "cursor": {
          "ref": "a5d62c4f-f028-4cb3-97b2-c4345914139e",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e79a8747-8d6c-4200-8da4-9e3940d9a1b7"
        },
        "item": {
          "id": "12948941-5b28-4e5b-be0c-e9c01d115d34",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ac3abc11-8184-46fa-904e-2e05aa69e08a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e9cdae-ab38-492a-aa2f-18d3cb5e2ad1",
        "cursor": {
          "ref": "b93bfb92-1459-4454-8a16-73bdd91a9c00",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "46001fc5-b5f5-4bb3-8a85-12d8751162ea"
        },
        "item": {
          "id": "32e9cdae-ab38-492a-aa2f-18d3cb5e2ad1",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "44fb8307-c08a-4133-adea-e390ee8210a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5683f09-66f0-4434-aea9-9386a8ecc124",
        "cursor": {
          "ref": "17a07323-406b-43af-9f95-647bc7ad4924",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1c4189cc-f237-4eef-a5ef-57368f8e8490"
        },
        "item": {
          "id": "b5683f09-66f0-4434-aea9-9386a8ecc124",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8b842e25-fa5d-42fe-9116-8fe7f7118918",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 21,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2918d03-c9b4-4374-9404-277634b19b30",
        "cursor": {
          "ref": "4010f2c5-6783-498f-8b56-4ff64087e872",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e6d73f50-661e-4655-8fc9-2f7fb9ac5705"
        },
        "item": {
          "id": "f2918d03-c9b4-4374-9404-277634b19b30",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d5982619-b75e-452f-ac88-1409812c74ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41f50c4-b714-4280-8594-a41f92ba4bad",
        "cursor": {
          "ref": "0225c4f5-1a63-4a7b-90eb-8dc677bce0cc",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5fedbb31-918a-40e9-83be-6feb42e357b9"
        },
        "item": {
          "id": "d41f50c4-b714-4280-8594-a41f92ba4bad",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e4aea7f0-4bb2-4fe8-bbb7-ab33dcc25ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a4927b-117f-4672-81d3-a4cc8c9f4ef2",
        "cursor": {
          "ref": "bb2f1468-e204-490c-b4a3-70120950597e",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4708fa3f-0f5c-4da5-9651-0e15205cc22e"
        },
        "item": {
          "id": "11a4927b-117f-4672-81d3-a4cc8c9f4ef2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e4374eb6-5821-4e81-9413-e14dd52cdb0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7bb6b8d-b261-4c5d-8a94-94c83e47363d",
        "cursor": {
          "ref": "81c94289-b1f5-4c7f-ba8b-7ba438df1ba4",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f31315ab-5bf6-480b-90c9-fa692746eecd"
        },
        "item": {
          "id": "d7bb6b8d-b261-4c5d-8a94-94c83e47363d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "fe18c886-031b-4e03-a604-93a117387c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c75d5e-401e-47ac-836a-9c472d167cc3",
        "cursor": {
          "ref": "99bc538e-0ace-492a-8abb-00becfa20b62",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ab043c22-4a02-4619-baf2-0a9b53e47831"
        },
        "item": {
          "id": "f9c75d5e-401e-47ac-836a-9c472d167cc3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "272d082e-f84d-411e-8c3d-eb2e93a84795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5f6b3a-4586-4d9d-87a0-b28ea3799b04",
        "cursor": {
          "ref": "d3b71eb6-3bb2-4ab2-9a15-7bb82482ab86",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c83b1078-d4fa-4722-9361-1a987f9361c6"
        },
        "item": {
          "id": "5a5f6b3a-4586-4d9d-87a0-b28ea3799b04",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ed3febe3-9fc5-4a9b-b6b4-6cefff2cfaec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75571d35-af5f-4b5a-a6b0-89b7b19503b9",
        "cursor": {
          "ref": "9ca19eca-8e32-422e-a868-19b448bdcd1c",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "aa36edd3-9276-42cd-981f-d57fc62dbd0b"
        },
        "item": {
          "id": "75571d35-af5f-4b5a-a6b0-89b7b19503b9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c109b476-a43f-41ac-8691-071fcab19a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426bfbc3-807a-4b3b-b485-babb29346aea",
        "cursor": {
          "ref": "99bde8a0-50e7-4c5b-ba66-24353d4be93b",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "90d95b24-5e21-4d42-9ce6-61f9ec0cd4f0"
        },
        "item": {
          "id": "426bfbc3-807a-4b3b-b485-babb29346aea",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e94df8a9-abce-4d5d-9020-ae31525d733b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5d48e4-6b08-4cdc-ae5d-66a5ab338c8e",
        "cursor": {
          "ref": "caf5b2c7-4fb2-4471-a8da-0bde61cde2fc",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9cc99c12-d399-4d3e-bf68-8d190c773074"
        },
        "item": {
          "id": "ad5d48e4-6b08-4cdc-ae5d-66a5ab338c8e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b9bf4f93-06f2-46dd-b0e1-09c08d4f56fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049c1226-f1d3-45c1-8907-092af7025436",
        "cursor": {
          "ref": "c497ebf0-8e90-4fe4-b16f-db40b6129ded",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1f619d36-bb14-42c1-8a20-ac8e9bfb3141"
        },
        "item": {
          "id": "049c1226-f1d3-45c1-8907-092af7025436",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "dfc82a43-e584-4de4-a016-bc5f30d2e26a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54381792-45bc-46bd-b0b0-b69257bc8f65",
        "cursor": {
          "ref": "2047c248-d468-47b2-9c0c-da11da706557",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "68755479-c2f8-4f05-89e7-c7797e03875e"
        },
        "item": {
          "id": "54381792-45bc-46bd-b0b0-b69257bc8f65",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d3cd5fd7-be7a-4f44-9a13-702ffc4e5d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9443f6-cf96-41fc-9e37-f739389b608d",
        "cursor": {
          "ref": "b4a7c6d9-8456-47f9-93a4-1fe5fa7b46c4",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "90d25e83-aef9-4a7b-87b4-8728117ded09"
        },
        "item": {
          "id": "9c9443f6-cf96-41fc-9e37-f739389b608d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1487d6a3-2e1b-4e4a-b3af-bc2b260313ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af787e6-6d40-439d-ab6e-f61f8f59c205",
        "cursor": {
          "ref": "bbdc3b78-011d-44f8-8344-a80def00fdd0",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ee571722-7ca2-4065-b40f-6276d1e26c0f"
        },
        "item": {
          "id": "2af787e6-6d40-439d-ab6e-f61f8f59c205",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "87814e08-a545-4145-8a53-4f836734058f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "093d0646-7d1c-4550-a5d3-63e5dc08b789",
        "cursor": {
          "ref": "08d062d1-b1e7-4965-a705-90fe0a2f4329",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c51f6dbd-7181-4ac5-b49e-6549fa1a43c1"
        },
        "item": {
          "id": "093d0646-7d1c-4550-a5d3-63e5dc08b789",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "25bc4adc-e4f6-496c-8473-cf6f8375ba7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f1fb46-cb1c-4188-b34c-d5099d50ed84",
        "cursor": {
          "ref": "b53b3ae5-d67f-4cd6-a890-13040c3847ad",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "50afa885-e1be-425b-86a1-7e07a2d1865c"
        },
        "item": {
          "id": "85f1fb46-cb1c-4188-b34c-d5099d50ed84",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a5c5c0a3-de60-4fe8-b58c-ca79850c28b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834d7030-26b6-4e99-9c96-858aec5a31e7",
        "cursor": {
          "ref": "4009b0fe-3b84-41ef-a4c3-c2c0799475c7",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c1b227d4-b980-40af-9312-3108f89b8bc8"
        },
        "item": {
          "id": "834d7030-26b6-4e99-9c96-858aec5a31e7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f8073fe1-bd2e-429d-b4e3-d7e2afbb48ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c0e180-ab16-48f3-a705-ccfd4d65e16e",
        "cursor": {
          "ref": "9d2ea5c5-d992-4251-bd08-2dccece6257b",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1b571e3e-f605-4bd5-8ee4-d7424ea8283c"
        },
        "item": {
          "id": "93c0e180-ab16-48f3-a705-ccfd4d65e16e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ee623727-8938-48bc-8fdc-6bdcce73a807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9269d5c7-bb78-4d89-b1be-8b1f43fd44fe",
        "cursor": {
          "ref": "f95fd514-5e1e-424a-9106-cf3f50180402",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "20b8d6d4-cb68-48ff-aa37-0aeccc6a7680"
        },
        "item": {
          "id": "9269d5c7-bb78-4d89-b1be-8b1f43fd44fe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "cd651689-87c0-45de-a1b1-edc1fc153b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32aa032-55cc-4839-8fd8-283e1e4af727",
        "cursor": {
          "ref": "53598c48-6f48-490f-b471-cd05921cb675",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "db3aa7af-d8dc-4270-a687-cf7c0a9afe39"
        },
        "item": {
          "id": "a32aa032-55cc-4839-8fd8-283e1e4af727",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c846c0a4-73ee-4d9d-8084-18e38ddd7ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a206b7ad-38dc-4777-a614-53cd14ea258a",
        "cursor": {
          "ref": "7cea2db2-9e64-4f20-8de3-879a15aa173d",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ae2b2cc8-a139-4f27-9b52-e3aa773a266f"
        },
        "item": {
          "id": "a206b7ad-38dc-4777-a614-53cd14ea258a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6d99d017-939a-4588-9983-2ce4694dc4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc697ee-0df6-41cd-ac6d-b14754dc39ee",
        "cursor": {
          "ref": "65821ef3-d174-44c7-8f55-ad8b4062901c",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c2a31035-fa30-446b-bded-d122609aa917"
        },
        "item": {
          "id": "4bc697ee-0df6-41cd-ac6d-b14754dc39ee",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2226f955-b7ab-4eb0-91bd-ac4250da44a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18930dc-f024-4f28-99ae-f0e16883526e",
        "cursor": {
          "ref": "9fb093e1-ec9c-4aae-bf67-a06933110315",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "cdf2a95e-2056-41d9-8f15-2b4fbd751a78"
        },
        "item": {
          "id": "f18930dc-f024-4f28-99ae-f0e16883526e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a5fa2d0a-3a86-4424-bf57-4ab5a5699b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2d219e-43f0-49dc-9c68-dba6a18eeeaa",
        "cursor": {
          "ref": "2a566f2e-e17a-46f9-bb73-54475fb13a91",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "102db564-0120-4466-b4fa-e8e1666ea1ed"
        },
        "item": {
          "id": "bf2d219e-43f0-49dc-9c68-dba6a18eeeaa",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7a5c137d-fdc0-4e68-949b-3aa367662eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb93bb1c-8880-4ea1-8c5d-33b2913ceae3",
        "cursor": {
          "ref": "73fb0fea-52e8-4a60-9d03-70d4e2b923e7",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7525b4df-9ae4-40b5-ac73-e670318503c0"
        },
        "item": {
          "id": "eb93bb1c-8880-4ea1-8c5d-33b2913ceae3",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "abab1a63-4e08-429d-af33-289c4608e760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ca0a5a-035e-4f34-8145-8ba12919a3f3",
        "cursor": {
          "ref": "fbd5783f-a019-4eb5-aff5-98a81a750923",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "54a29584-e9e8-4d17-bff8-1fbf00133e06"
        },
        "item": {
          "id": "00ca0a5a-035e-4f34-8145-8ba12919a3f3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2cb68924-480d-40a0-b96b-111e023b909b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f78900-3218-4897-8b0f-385c4240bb66",
        "cursor": {
          "ref": "a331d857-6ef6-4c1d-8b7a-83aefd4e6576",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b61e558d-0e05-43a3-976d-b271979dcde2"
        },
        "item": {
          "id": "70f78900-3218-4897-8b0f-385c4240bb66",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7cb01dd9-e3be-4be8-8e54-c5c2e58657d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "157e09c6-8683-4b6b-ac61-096fb0001712",
        "cursor": {
          "ref": "faa29a61-8ec7-48e1-99e8-782cb32f0afc",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ab9dd0b2-a9d6-4a87-ae7b-f76735a0cb99"
        },
        "item": {
          "id": "157e09c6-8683-4b6b-ac61-096fb0001712",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "45dab120-bec8-4abd-8759-f20c54e1758e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9591772-48a9-4c1f-aeb4-b4085f6f61e4",
        "cursor": {
          "ref": "3afbe30b-6a31-4b33-aa68-b82bc9d83574",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0d5e91bf-00d8-4bb9-80d8-bc6a4bc3d11e"
        },
        "item": {
          "id": "a9591772-48a9-4c1f-aeb4-b4085f6f61e4",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e211c5cf-ee32-493a-927b-2a2907609436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89152247-0dd1-43b6-bf3c-67624dbe7e52",
        "cursor": {
          "ref": "53d0f360-cdb7-45ba-913e-239fa91b6543",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7791d19a-68b1-42ab-b8f8-1fa772e063d3"
        },
        "item": {
          "id": "89152247-0dd1-43b6-bf3c-67624dbe7e52",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7b9391be-3b64-43f6-b453-8e00ec8ed080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84d9e3c-0764-4c19-99fc-6243dc46be50",
        "cursor": {
          "ref": "1dc3b893-fdb0-4ad4-a7c8-605b0b6b92b0",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9b663b28-a589-4cdf-81f4-e53546ca32d2"
        },
        "item": {
          "id": "d84d9e3c-0764-4c19-99fc-6243dc46be50",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "dcd9665d-7e6a-44d1-ba51-75f1904628f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024313cf-5fb0-4bc1-b76f-e44c548d5f83",
        "cursor": {
          "ref": "591762dd-75d4-4fcc-89b1-6935b4552976",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ddde2810-dd91-4048-97ef-ae9ba4a584aa"
        },
        "item": {
          "id": "024313cf-5fb0-4bc1-b76f-e44c548d5f83",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "eb9d5a0d-0cb9-486e-8e9d-0b9cf4b93f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda6af13-097c-455a-a48d-23e2869365d0",
        "cursor": {
          "ref": "8bdcf045-c6f0-46ae-84a2-30c12ce17c89",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7c7b0fc0-7c8b-4af5-b13c-84ea285f6dd1"
        },
        "item": {
          "id": "fda6af13-097c-455a-a48d-23e2869365d0",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "df956ce2-2420-422f-a8c6-58ab3bf2b15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da10f3d5-5458-485c-baa7-70b9db675c1c",
        "cursor": {
          "ref": "7dde962d-f7c6-430f-90d9-49afbbbb67e5",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "eba5d8d0-4db5-44cd-8ed8-ea563ae1142d"
        },
        "item": {
          "id": "da10f3d5-5458-485c-baa7-70b9db675c1c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f077c6d7-111d-4d22-ab4b-f7f74a24b193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5905c1c2-b9ea-4ec2-9e4a-ce7a81c4adb4",
        "cursor": {
          "ref": "0a100246-8704-46cc-9cd1-15c9af07a605",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3ab5dd42-6fe1-41b3-98cf-5bb6f3505444"
        },
        "item": {
          "id": "5905c1c2-b9ea-4ec2-9e4a-ce7a81c4adb4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "91dc70cf-32d7-4448-9209-0732f5966e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d12375-8265-409e-9792-da7fe00a2cde",
        "cursor": {
          "ref": "1658341c-4f85-4090-b4ec-cfb6325227d5",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "64cbc6ef-1f9e-4cc9-b357-1138b89ea1eb"
        },
        "item": {
          "id": "23d12375-8265-409e-9792-da7fe00a2cde",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e1be88d3-febb-4dd4-879a-6007029b9d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e36acd-072e-464a-b297-7c029ae4a791",
        "cursor": {
          "ref": "c68690bc-4ccb-4724-92be-b0211019c88d",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "91339725-008c-425a-8b69-61047ef07bfa"
        },
        "item": {
          "id": "d1e36acd-072e-464a-b297-7c029ae4a791",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6b4fc2ed-6b73-4219-b167-f85f88e0072e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa29208-ad64-4722-81a9-e1b1a117c08c",
        "cursor": {
          "ref": "c1f8989f-70f8-4ca1-96aa-22ed94676087",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "fadf52ed-7ba7-420c-9f5a-1f2953034690"
        },
        "item": {
          "id": "0aa29208-ad64-4722-81a9-e1b1a117c08c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c7606fc0-fcbb-457d-a99e-208f08def158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da452ae-c249-4519-9a76-7c4106443b99",
        "cursor": {
          "ref": "b49997bc-0590-4a1e-8379-3b96db05c76b",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "bc5cb3f6-93b9-46c5-88db-8f38de811b7a"
        },
        "item": {
          "id": "2da452ae-c249-4519-9a76-7c4106443b99",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "fd65065a-7b22-4083-9c46-c9286415a729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17c002f-7060-4fd5-8b4a-06fe60e41b4c",
        "cursor": {
          "ref": "de1933ff-e91f-432c-a470-90fe2610b012",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e836b41e-949d-48a8-bd00-eee84fe40aff"
        },
        "item": {
          "id": "f17c002f-7060-4fd5-8b4a-06fe60e41b4c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1feaf622-fade-485f-8f45-223e81f3cff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90fba2f-0669-4a5e-8315-fd8a949bb502",
        "cursor": {
          "ref": "31ef264a-7e53-4d95-8bad-52b46a24608e",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5b8188e4-7193-4a9e-8752-ce5699c2e444"
        },
        "item": {
          "id": "c90fba2f-0669-4a5e-8315-fd8a949bb502",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ceeb1e75-8e8c-4d81-914e-3c10ca3c4ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d7d09e-f3d0-4d73-bf9c-1f4809f8cfdf",
        "cursor": {
          "ref": "f3c50e6b-3c6f-45c8-8636-de3bbae579f6",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6214059d-765d-4ed0-aeee-b60f6752be57"
        },
        "item": {
          "id": "48d7d09e-f3d0-4d73-bf9c-1f4809f8cfdf",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b58b78e8-4cfa-4ff7-a8f3-d3b0323a1642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff9925e-8f7d-4558-a70c-4d025d59c35c",
        "cursor": {
          "ref": "b89c6de6-dbc3-4d3e-bd3c-49881c6711a3",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d4d3ace1-7a44-4654-b717-b7ad59f9ca0d"
        },
        "item": {
          "id": "1ff9925e-8f7d-4558-a70c-4d025d59c35c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "35541ba2-6b96-4029-9e06-316d8d7d9f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ba423b-a277-4dbf-b55c-28523ef7934f",
        "cursor": {
          "ref": "8c7a6fda-1199-42ab-a269-cdb07927c994",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2bc1188b-04e3-4052-9aa7-3dfa0c99e266"
        },
        "item": {
          "id": "e9ba423b-a277-4dbf-b55c-28523ef7934f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "501fb8de-4165-4e7a-9fe6-e0d21e4ec8fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de3a03a-085e-4d77-a5d8-e6f70103cac0",
        "cursor": {
          "ref": "73aaa70b-76b5-4346-938c-862006ce1ffb",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f72e7678-5f34-4d6d-a0c2-2c7de3739be0"
        },
        "item": {
          "id": "3de3a03a-085e-4d77-a5d8-e6f70103cac0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c2f28b42-361d-4623-974f-8e8b7ba70ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781a4314-2436-43e1-9081-df1a83102e5d",
        "cursor": {
          "ref": "251a55b2-fa3e-4929-b8b6-e427af0ea986",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f4203542-8456-4678-af33-d15d24a35127"
        },
        "item": {
          "id": "781a4314-2436-43e1-9081-df1a83102e5d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4e63bcf8-a0b1-40e4-90cd-efe4b6f766f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d134500-0a29-4ce9-b5d1-5a493ae6399f",
        "cursor": {
          "ref": "5b981a32-e312-4c80-95e8-ab6a700bc243",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "cd24b9d6-2a6a-4758-af40-77353dee242c"
        },
        "item": {
          "id": "3d134500-0a29-4ce9-b5d1-5a493ae6399f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2d9cfad5-65b2-4ce0-b7cd-4c6460c793d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb3c5a7-f55a-47b4-87f7-6a99030d46e6",
        "cursor": {
          "ref": "463fba5a-718f-47cc-96a7-3bde6dc429bc",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1eaa0600-0bad-448e-b696-097defd8f1cc"
        },
        "item": {
          "id": "5cb3c5a7-f55a-47b4-87f7-6a99030d46e6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "440cc832-54ae-4f96-b3a9-c35c51346fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b435473-fdb3-48df-86b8-d014582a9756",
        "cursor": {
          "ref": "e83f924f-8c29-4c43-a111-a553a2acc4ae",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2b720a7b-4668-492d-94fb-33b552158e37"
        },
        "item": {
          "id": "2b435473-fdb3-48df-86b8-d014582a9756",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d683e5e1-6c49-4caf-9474-5cd31c26e987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f64bf46-0097-4e5d-a63a-327e484163d9",
        "cursor": {
          "ref": "f748a39c-a415-4a97-8b5e-7e539b715822",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ede8448f-6d43-4b3d-811d-e075860832b7"
        },
        "item": {
          "id": "8f64bf46-0097-4e5d-a63a-327e484163d9",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "99735435-cb66-4bd2-904f-5a93003ae4a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4394c70-0d13-4ae5-ad18-34ab77849ec0",
        "cursor": {
          "ref": "5333796e-0ad7-4fcb-8684-dd5fcc5487de",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "23259794-39d3-4f43-8b46-d5b84180f7c6"
        },
        "item": {
          "id": "a4394c70-0d13-4ae5-ad18-34ab77849ec0",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "047cd9cb-6d64-4897-bb50-d72e748935ea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22da32b7-7fca-49dd-b4c6-6c0b7d6f8cbd",
        "cursor": {
          "ref": "60cdfce3-651e-4453-876b-2104ae55068d",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "18eae097-a12c-4397-bafa-d226fd799a0d"
        },
        "item": {
          "id": "22da32b7-7fca-49dd-b4c6-6c0b7d6f8cbd",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ed1dde0f-2f26-4ec4-878d-193dd6019a2d",
          "status": "Created",
          "code": 201,
          "responseTime": 38,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d374e5-f63b-443c-ae28-7b5ef02db5d2",
        "cursor": {
          "ref": "de3327ba-d756-43ff-8145-44a6feb870de",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9e6bd52f-a832-4ba2-9106-f35fea41569d"
        },
        "item": {
          "id": "79d374e5-f63b-443c-ae28-7b5ef02db5d2",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "8d05c0a4-d88e-4d6d-bcff-226ed0a1c5b8",
          "status": "Created",
          "code": 201,
          "responseTime": 95,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf22142-5d6d-46d9-b118-80d7d61bfd95",
        "cursor": {
          "ref": "4d39a855-38e3-466b-9329-8bdd046e1d75",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "67dd8a42-c7ae-4d75-8211-6a6b72d5e5c7"
        },
        "item": {
          "id": "6cf22142-5d6d-46d9-b118-80d7d61bfd95",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "bbddc65f-86f4-481e-acc3-f49c9cd6346a",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b55d71-2f63-4294-bf53-fb8ad3e2cc79",
        "cursor": {
          "ref": "e42cae47-9570-42c4-aec5-4740091ac349",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f44104f6-86d3-4579-a451-91cba7819c31"
        },
        "item": {
          "id": "f4b55d71-2f63-4294-bf53-fb8ad3e2cc79",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e3f1bb41-f631-467d-981c-f82e440340bd",
          "status": "Created",
          "code": 201,
          "responseTime": 35,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ef011e-f792-4c2e-bc66-9692f7208967",
        "cursor": {
          "ref": "c4c00f08-0e27-40e1-ba01-41e6bf8f62b9",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "93a822fd-6e2a-4148-b12f-d4bb9825717b"
        },
        "item": {
          "id": "f8ef011e-f792-4c2e-bc66-9692f7208967",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f4d39920-2422-4a52-b941-98b72e8ff1d1",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f091c4d-fe24-4c24-9344-cc8c4266bf68",
        "cursor": {
          "ref": "ba0f2560-a420-4aac-bd07-e5209d2193ee",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "cf1830b1-79d1-4662-a0d3-b583ee6d0120"
        },
        "item": {
          "id": "1f091c4d-fe24-4c24-9344-cc8c4266bf68",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "541fdde0-3904-4e0c-b384-da93602ef12b",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47b36be-4c9d-4e50-9d3d-578975de8c3f",
        "cursor": {
          "ref": "65dfcd65-208c-4d6c-82a6-fc696eff12c0",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f51d41f0-4506-4f35-a958-b5a13b9a1ebe"
        },
        "item": {
          "id": "f47b36be-4c9d-4e50-9d3d-578975de8c3f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "45e6db5c-3a56-4fd7-92ac-7644fd6a06e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21db38aa-216b-4547-bcc5-771be8e7a0ac",
        "cursor": {
          "ref": "c3210c5d-66d5-4316-897f-3314570e751d",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "038a2495-49e0-4cb1-b7ed-1a7fc6f4b0ab"
        },
        "item": {
          "id": "21db38aa-216b-4547-bcc5-771be8e7a0ac",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9949c541-2ad3-450d-969f-6a7b8978bcac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dddc3d52-9c7f-4284-a27c-740873e9d9d3",
        "cursor": {
          "ref": "43a30a31-dd75-49fc-82a1-e3ac444a5541",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "25b26fe5-f144-4f21-8940-25c48223f7fd"
        },
        "item": {
          "id": "dddc3d52-9c7f-4284-a27c-740873e9d9d3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0c23655e-e3df-4896-b7a5-47d78fdb7745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ee8df1-b808-4998-b641-96aab91bbcbc",
        "cursor": {
          "ref": "7d6928ff-ca96-44b8-8a38-fbc50d901415",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a3be44d1-ca8f-4fac-8010-a089d768414a"
        },
        "item": {
          "id": "03ee8df1-b808-4998-b641-96aab91bbcbc",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "81334b3e-f709-4c44-931c-37a43511fe28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0fc5544-c407-4387-803a-618ab8672546",
        "cursor": {
          "ref": "ebd1b338-f061-4f17-aaaa-65bf6b7faf43",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "82986ec2-6227-43b6-8fad-1c81e3f3f5b6"
        },
        "item": {
          "id": "e0fc5544-c407-4387-803a-618ab8672546",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "44285e45-25c7-4cf3-985e-b659f8eda797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f58c6c6-ced7-4f38-8cc2-ee238db78b29",
        "cursor": {
          "ref": "a0b84ea6-6608-40e9-ba9d-cb5be43d9e34",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b1796b59-c4ae-470d-b10c-8f79f2d31172"
        },
        "item": {
          "id": "9f58c6c6-ced7-4f38-8cc2-ee238db78b29",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "abb31ddf-b607-457e-a920-b3a6721dd540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8922de30-9cd7-4b15-bb30-1ecedea66b6f",
        "cursor": {
          "ref": "cc790a0f-3a37-4a66-b69b-1c1456c1de95",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "27a8952c-1366-427e-b10e-f590abcb0580"
        },
        "item": {
          "id": "8922de30-9cd7-4b15-bb30-1ecedea66b6f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8e9d90dd-f191-4c26-9174-44b877e9a191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72cae95-6bc5-4922-9b6f-25ce56db32b6",
        "cursor": {
          "ref": "9fd58ab9-ee2b-49eb-96b5-552803b39e3f",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "df9b27c0-4309-4799-a5fc-3a26a58f47b3"
        },
        "item": {
          "id": "b72cae95-6bc5-4922-9b6f-25ce56db32b6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "81ffbff6-9f3f-4d5a-9d6d-363e96525a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9e9ecb-96f0-443c-ae33-45a8ffaf8242",
        "cursor": {
          "ref": "c2fd2a1f-f19d-474a-a473-5e4c2a7ba037",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "855f3515-71ba-4436-a66e-8f90fdc020f9"
        },
        "item": {
          "id": "dc9e9ecb-96f0-443c-ae33-45a8ffaf8242",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bc9e4747-1d14-4a38-8115-c4b0051e64cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef93d57-8893-47f4-854d-a15176f42fb0",
        "cursor": {
          "ref": "5f4a83d6-a9a5-4a11-a984-bec9e73c2a2e",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a13efaa6-821d-4d02-8f89-130123744772"
        },
        "item": {
          "id": "1ef93d57-8893-47f4-854d-a15176f42fb0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d19bfc7a-533a-4569-a411-9387cfda87f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba8287f-04db-4cd6-8521-35d433199611",
        "cursor": {
          "ref": "7c01151c-dd8c-42e3-8c75-2d958afd833c",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0f104373-d4d0-4d0a-8254-a816e6b6b57c"
        },
        "item": {
          "id": "cba8287f-04db-4cd6-8521-35d433199611",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8f85c7fc-f4e6-468e-a8be-701209a084ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9170d87a-e566-4d55-bfa2-963f14d4da23",
        "cursor": {
          "ref": "536ca410-7cc0-4107-9f76-be454671d8b7",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "94b1c505-7fd1-46a1-b0f8-bf663cf388ae"
        },
        "item": {
          "id": "9170d87a-e566-4d55-bfa2-963f14d4da23",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "83a84f1d-19da-4896-9861-70e3d0ad701d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80121553-09ca-46a5-bb70-fb87bbcf9749",
        "cursor": {
          "ref": "cf526377-48b7-44f5-a405-f0578915be95",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ea2ac7c4-59ab-451b-b544-36fb3292ec8f"
        },
        "item": {
          "id": "80121553-09ca-46a5-bb70-fb87bbcf9749",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "46515e86-2b53-41bd-bd41-e03b144d5f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe8c322-779d-4470-9045-ab5502229a60",
        "cursor": {
          "ref": "76bf600e-6a21-40c9-9138-e318ed28ca29",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7d49e3d5-5d45-42e9-8e4b-c0101b073e9c"
        },
        "item": {
          "id": "7fe8c322-779d-4470-9045-ab5502229a60",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "94375cd4-dc76-4264-8e5b-08215c8cb481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5675880a-f331-44f8-82f3-b903cb85758a",
        "cursor": {
          "ref": "d45a38ce-c241-4d49-ab4e-c1626239e415",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "930ed62b-045a-4288-bd89-c180178865dc"
        },
        "item": {
          "id": "5675880a-f331-44f8-82f3-b903cb85758a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "094715c5-902c-404e-897c-4d6f879f4c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14000967-7281-47fb-bbcc-3bdcb5630a64",
        "cursor": {
          "ref": "c264511a-918c-49c1-881c-c6a0a15dba96",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5e199b13-8a40-4f57-9e8e-14238fe5b302"
        },
        "item": {
          "id": "14000967-7281-47fb-bbcc-3bdcb5630a64",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4e6cb49c-7a7e-4d8b-88c0-b015dbebce16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e1c48a-36db-4d54-a5db-cd26cf35dfdf",
        "cursor": {
          "ref": "86efae58-9157-4a87-8c26-f9e1af119d63",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1b0a440a-3c58-4896-ae31-086677c430bf"
        },
        "item": {
          "id": "96e1c48a-36db-4d54-a5db-cd26cf35dfdf",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b9cbfbb5-ec59-4943-aa1c-feeb830622f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef9f676-9013-4406-90b8-9acdff6fc070",
        "cursor": {
          "ref": "0875b7a4-ae18-4393-b137-f22a0ebb98e5",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "34ffeffd-7ab6-4ae4-896f-4425f85b8e09"
        },
        "item": {
          "id": "8ef9f676-9013-4406-90b8-9acdff6fc070",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7a926785-98c1-4a4d-a060-55c10e91c475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c47413-9af6-4efb-a4f6-ba9949d1b8d2",
        "cursor": {
          "ref": "7a67e370-e7fb-4e69-bf97-800400a82df1",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5f14a5d8-c840-44eb-a03f-f09ebaa5c163"
        },
        "item": {
          "id": "e3c47413-9af6-4efb-a4f6-ba9949d1b8d2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "40948a89-3962-491a-8579-ccafc9ca4845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e434a711-b0c7-4afa-ad27-161c562daf86",
        "cursor": {
          "ref": "3eab8423-e5c4-4739-b7b8-04fc4cb030d3",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "49bd1e59-2b63-43eb-8f19-1bda10eecabc"
        },
        "item": {
          "id": "e434a711-b0c7-4afa-ad27-161c562daf86",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "be74674f-483d-4843-bc71-012b4c86a7fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22d2aa1-2232-4aac-b9e2-c24b4762233c",
        "cursor": {
          "ref": "7d098efa-ce1c-48bf-a9d1-be5614a7e69f",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "030451b6-a2c6-40e0-bcf2-42ca08cc9f87"
        },
        "item": {
          "id": "a22d2aa1-2232-4aac-b9e2-c24b4762233c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9785c438-31cc-4bb8-84a9-4d1545ddafb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca5b6da-943f-4800-871b-ac09e712ca7a",
        "cursor": {
          "ref": "c4f2c927-c92c-4041-a3d7-b19c44647370",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3a85c44b-746d-4075-8622-1dac3f99a995"
        },
        "item": {
          "id": "4ca5b6da-943f-4800-871b-ac09e712ca7a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2354ca9a-fbb6-4bb2-aec9-f2bc4746eb2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49861e86-b47b-46c3-9826-f5b78bc9e04d",
        "cursor": {
          "ref": "1fdc07e2-d181-4e27-b169-6deff043d655",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "bdcec93d-886b-4ce2-8fb9-8f2dde4d989d"
        },
        "item": {
          "id": "49861e86-b47b-46c3-9826-f5b78bc9e04d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d47b1d85-220d-41c1-b76e-3fdb29e815f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e492d66c-627a-467a-96d1-b58b3b3871dd",
        "cursor": {
          "ref": "17ed00e0-de15-40b9-b77b-49602a787ed7",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4465bcaf-5543-41f4-a25d-1ea75369dc8b"
        },
        "item": {
          "id": "e492d66c-627a-467a-96d1-b58b3b3871dd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4bb0d5f8-b318-4d47-b918-d7fa9762707e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76685ea1-c7f9-4d6c-acfe-b29e43af9825",
        "cursor": {
          "ref": "594d4ad7-bf94-4f4a-be0e-cb89144198ac",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8c7ba533-4b2f-46c0-bbaa-039257c926c5"
        },
        "item": {
          "id": "76685ea1-c7f9-4d6c-acfe-b29e43af9825",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0dbdd44d-4fb9-4c64-ba4a-719052259e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc940e16-a971-4491-be46-bc89c26f5126",
        "cursor": {
          "ref": "a263eefb-0ffc-4995-8890-52afef5ac808",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "eefc36a6-9026-40b6-a1be-93e49e4bae29"
        },
        "item": {
          "id": "dc940e16-a971-4491-be46-bc89c26f5126",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "26a74b67-4864-4fbf-bf97-219c394ab4d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0840679-e9a5-424a-aa05-cfc5efdfa36b",
        "cursor": {
          "ref": "efd25126-334b-4ddd-8fe4-614cbed15e02",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e62e3615-0543-4449-a761-27f57bf828b2"
        },
        "item": {
          "id": "a0840679-e9a5-424a-aa05-cfc5efdfa36b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0ed4f9b8-478c-43d4-b4cd-04719b1654ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864251ea-decd-4bf2-9680-86b3f3f43469",
        "cursor": {
          "ref": "7affe07d-4759-417e-a069-56bbd5b93c97",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "64ed293d-2919-46a9-b2a4-5b6c1952011d"
        },
        "item": {
          "id": "864251ea-decd-4bf2-9680-86b3f3f43469",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4276dc2f-1221-4c47-841e-413ee98638ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b190374-3c67-4347-aef7-bf22206ae009",
        "cursor": {
          "ref": "187a8577-b5e5-498c-8c46-35eebea8bad3",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "43b97019-04be-4018-958f-e6dfded51960"
        },
        "item": {
          "id": "1b190374-3c67-4347-aef7-bf22206ae009",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ae7602d7-68d6-4db4-957a-60d76d04a9d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794277aa-c1d4-45fe-bf46-f78c18e8eac3",
        "cursor": {
          "ref": "ca1f0c5c-1d09-41cd-a704-2b0c631a21f8",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3bcd0229-f2c1-4f01-84f3-5aaa4ef5729e"
        },
        "item": {
          "id": "794277aa-c1d4-45fe-bf46-f78c18e8eac3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "06ba67ad-0fcc-40ef-ba55-ae16c155e3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51af33dd-40cb-4c7f-868c-e1d2bfc99188",
        "cursor": {
          "ref": "013b2aeb-0cc8-4b2b-994c-33ed34b07fe4",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2e8cff44-e403-4c53-bcca-d636682606d4"
        },
        "item": {
          "id": "51af33dd-40cb-4c7f-868c-e1d2bfc99188",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e7c7368d-052c-4544-a767-b48e8c13dec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2541ed0d-94c6-4925-b947-8bc133d160a1",
        "cursor": {
          "ref": "971d2bdc-2c17-4ab1-9e50-c434b67eb450",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5d32bd9d-0702-441b-8f95-9a05f53b06b7"
        },
        "item": {
          "id": "2541ed0d-94c6-4925-b947-8bc133d160a1",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9577f232-ad9c-4e3e-b0d8-ee013c4b064f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b7989f-0c16-4c3c-8b81-ad04759ae229",
        "cursor": {
          "ref": "1026dc0d-70c8-409f-af00-e9f7e94d52c0",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "711f5b7c-6428-42b2-9816-8e1afa598639"
        },
        "item": {
          "id": "16b7989f-0c16-4c3c-8b81-ad04759ae229",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8f9263b7-4cef-4e39-9b43-62fd7e333692",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3574e459-7d27-403f-be01-463cc6aade67",
        "cursor": {
          "ref": "b65f3a98-8c91-4e1c-93b2-cbb99360082a",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "17058f51-e7ec-463c-915e-ebe8d9effece"
        },
        "item": {
          "id": "3574e459-7d27-403f-be01-463cc6aade67",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "98ca945d-c75e-4b36-a194-bb52898df9eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367149c2-f7cb-45bd-bd48-874feb258a75",
        "cursor": {
          "ref": "3bff2f0c-c2d2-4d8e-aedb-ff66897e01ce",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b67dd0ee-83f6-4a37-8225-754c0715c86c"
        },
        "item": {
          "id": "367149c2-f7cb-45bd-bd48-874feb258a75",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6724b1f5-2500-4ecb-946d-3bc16f3b0703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeeaa5aa-0f2d-4c2e-958d-58e034e5051b",
        "cursor": {
          "ref": "6eb4788c-6327-4b37-bbfa-073e4b37a414",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "dba5b0ce-5eeb-451a-9fed-2ba34e3d1c0a"
        },
        "item": {
          "id": "aeeaa5aa-0f2d-4c2e-958d-58e034e5051b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "809fbad4-daf9-4fbc-82b3-aa2e081fbb7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5824814-a837-487d-b87e-989292613ecf",
        "cursor": {
          "ref": "2ed67c52-8e21-440d-adf5-bb2d385fec5c",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6f82d87f-98d1-4c26-b8ec-5cccbf750495"
        },
        "item": {
          "id": "a5824814-a837-487d-b87e-989292613ecf",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "225ad857-2663-4635-9fdf-db7a8c2f8894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1402ec-5c38-4f0e-b87b-84d77cef0169",
        "cursor": {
          "ref": "a796e383-a57c-498f-a3f6-a99b591c4b8f",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ade29e74-2581-4be8-b8f2-f0bb47f504fd"
        },
        "item": {
          "id": "bc1402ec-5c38-4f0e-b87b-84d77cef0169",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "defe419e-251c-4c48-9c1e-eed1a39af8ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def205d1-2b62-44d1-a8af-e3faef1f4f71",
        "cursor": {
          "ref": "c463da63-d67f-44bc-9283-140c0db407d8",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "fff3e293-9d62-4dc1-97af-2db734675dba"
        },
        "item": {
          "id": "def205d1-2b62-44d1-a8af-e3faef1f4f71",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a8814fb5-16fd-4f49-abbe-971ff0fca461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5cf9e22-c9ac-4708-b030-d3c348037a90",
        "cursor": {
          "ref": "c02d4fd5-44a4-4af0-8189-cf86ef169fc1",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f8024ff2-9038-43c4-b48b-c2eecfa920a1"
        },
        "item": {
          "id": "a5cf9e22-c9ac-4708-b030-d3c348037a90",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "644ffacb-120e-4ab3-af36-3917c7f2eb9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897a039e-912d-4c0a-9db0-cd4233b9aa25",
        "cursor": {
          "ref": "d41e74a6-e14a-4d24-86b2-8012cc4f47da",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6fdd22b2-a6f9-4ff8-a8dd-7de3668aa909"
        },
        "item": {
          "id": "897a039e-912d-4c0a-9db0-cd4233b9aa25",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0144045d-56a3-443f-b0fc-ed2a61aaeb9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236ce269-0030-423f-9f5e-82fcde0d5e20",
        "cursor": {
          "ref": "c37227a3-503c-4c41-89a7-fd993a812b2b",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fe5de8d9-a5a2-486f-aa83-8c8a04327bf7"
        },
        "item": {
          "id": "236ce269-0030-423f-9f5e-82fcde0d5e20",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5afcba88-382d-4d8c-9e13-d186193ebcd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae6ce98-e8a7-4c7c-bc86-16895a15fd64",
        "cursor": {
          "ref": "b82f16e1-9f2d-4339-b221-57f86db27154",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d280d102-5c8c-4209-8b4e-04dc4dd36fe0"
        },
        "item": {
          "id": "aae6ce98-e8a7-4c7c-bc86-16895a15fd64",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5820b0cd-2760-4ec1-b8a1-a488dfe5f33f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f0fb3d-eec3-49a4-94aa-c140e3ad843a",
        "cursor": {
          "ref": "4e7e6ea2-dbd7-4c87-a2a6-216a9fa0e153",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "fe3a337d-610f-4743-b505-cea7353db030"
        },
        "item": {
          "id": "15f0fb3d-eec3-49a4-94aa-c140e3ad843a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9801295b-50b5-482f-8aec-85af94e35664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a996324-4e8e-43cf-8c74-ac50ba220c6b",
        "cursor": {
          "ref": "91a92a67-8fe9-4886-b841-408de9b05308",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ebcd19fa-63b9-4f27-9fa7-483b0bd2881b"
        },
        "item": {
          "id": "0a996324-4e8e-43cf-8c74-ac50ba220c6b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "da80e377-714e-43c5-bc75-cad076c369b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb0d634-b75c-4aab-99d5-9c612df26cca",
        "cursor": {
          "ref": "9ebd6219-50f4-4060-b532-42b638865c00",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9fc17c96-5cf2-4d30-88f2-a8c77be5b72b"
        },
        "item": {
          "id": "bdb0d634-b75c-4aab-99d5-9c612df26cca",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3c679c00-10c9-4c88-aad7-dd4db1a9e50f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcec51bc-1b3f-4acd-a88d-9690727c0f3c",
        "cursor": {
          "ref": "c90b9eef-859e-43c3-aa76-3d42adb35b77",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8357689e-33ad-4979-adc2-534ca7f1733c"
        },
        "item": {
          "id": "dcec51bc-1b3f-4acd-a88d-9690727c0f3c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f7bbbe88-15b6-4afb-a194-2913bcc4ba61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7bc5896-edc1-4f06-ab50-cf78d377c30d",
        "cursor": {
          "ref": "664995ac-bac3-4275-a957-11b86a148d17",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f7cd50b6-cb27-4004-8b48-1617ec6f483f"
        },
        "item": {
          "id": "e7bc5896-edc1-4f06-ab50-cf78d377c30d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e5391974-7465-4df0-9e0d-4e448c99ca77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128ae31e-36a5-4bb3-a4be-c10b010e9e66",
        "cursor": {
          "ref": "712d3654-89fa-49a3-837a-4cfb025ef308",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "bf19c3a5-bb59-419b-880b-2b2c5b614a1e"
        },
        "item": {
          "id": "128ae31e-36a5-4bb3-a4be-c10b010e9e66",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5c707873-06a6-4817-994a-cefe8813ddb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c133c47-3e08-4058-b99c-3d4201f1555f",
        "cursor": {
          "ref": "f12c7d19-72d5-456f-8e10-af03445d913b",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8a403098-674d-4a9e-9dd0-36b5b2b17c18"
        },
        "item": {
          "id": "3c133c47-3e08-4058-b99c-3d4201f1555f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b81ec503-10cb-40f6-865e-acea5d947a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc46f56a-583f-4943-8276-12d5d1eab0a3",
        "cursor": {
          "ref": "8f15a348-f613-437f-899f-a1ae8ba07f75",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "57500722-76ce-4919-9d22-822450e11eab"
        },
        "item": {
          "id": "dc46f56a-583f-4943-8276-12d5d1eab0a3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a8a47f00-6fd6-44cc-b72f-ff937d250acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1191d7cc-7547-4c93-8029-004deaac3005",
        "cursor": {
          "ref": "49b686f0-43c9-43ce-8b75-dd551057df2c",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8d50b50c-f0b7-4a84-874f-46b0a73c7fff"
        },
        "item": {
          "id": "1191d7cc-7547-4c93-8029-004deaac3005",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6fa793f6-bbb8-4e94-b403-05872b387fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba51b30b-7071-4830-aaff-951aeb141635",
        "cursor": {
          "ref": "683ba7a3-ef18-4f76-a4e2-3a8f912e9e58",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2781ca56-cad7-45af-a107-dc55bb5b1aaf"
        },
        "item": {
          "id": "ba51b30b-7071-4830-aaff-951aeb141635",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4ee82af4-37ee-4b53-be93-2f574c31204b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb7ac0e-13fb-4976-a6ca-0053349487e8",
        "cursor": {
          "ref": "110a58e1-2df8-40bd-bae7-c0dffcfc894f",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "72007ac0-1ccb-492c-b06c-46363dffda9b"
        },
        "item": {
          "id": "7fb7ac0e-13fb-4976-a6ca-0053349487e8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d663cb7d-e104-4db7-8e1b-d3483113e2de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629a8114-1fd9-4c1b-8415-e2b70bf39d2f",
        "cursor": {
          "ref": "4868954f-bbd0-4907-b834-b2b74f61312c",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "824625b2-8700-4bce-85bb-a4aa8b061f3f"
        },
        "item": {
          "id": "629a8114-1fd9-4c1b-8415-e2b70bf39d2f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7e7eff8e-8719-485e-af09-c769eb03e024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c14ca2-9068-4b68-995a-d29d3a675390",
        "cursor": {
          "ref": "7da0180f-90c2-45e8-9e87-ecb03e967223",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "823cc96a-02a6-47f3-8137-fad36ab34478"
        },
        "item": {
          "id": "e5c14ca2-9068-4b68-995a-d29d3a675390",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b9f8472b-39a4-49b1-9dd0-e1cbaeab6ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa9f009-e5b9-47b6-b1cb-2ec613f9e27f",
        "cursor": {
          "ref": "2742b2c7-8abf-4333-9f9f-d15a6fd91231",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f3f2eead-ca00-46ac-b075-79be943abb5c"
        },
        "item": {
          "id": "7fa9f009-e5b9-47b6-b1cb-2ec613f9e27f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4fd711ce-270e-4274-98b2-eba2a8a5ee3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd925b51-d362-4101-b5fa-b531e519d2a2",
        "cursor": {
          "ref": "aca5334b-2b6b-4bdc-874d-5a11f9485b79",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6706b214-3da9-49ae-975f-edbde98cf8dd"
        },
        "item": {
          "id": "bd925b51-d362-4101-b5fa-b531e519d2a2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9d83e274-8fb9-4948-bb3f-aa2cc5044f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1b0f6f-4725-4aa0-9ef6-42e8854556e1",
        "cursor": {
          "ref": "6fa5223f-2e78-4f8a-b556-759d47b3a583",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "16d3a50f-ee08-4f4a-abb5-e84a2c37eb77"
        },
        "item": {
          "id": "db1b0f6f-4725-4aa0-9ef6-42e8854556e1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3860e1dd-84b0-4b00-bad6-2366d5fe8995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab093e7-2576-43e8-af08-8e0f48eb7f9a",
        "cursor": {
          "ref": "da9b6d62-5add-4dbb-97a3-c4a318bda313",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "19a10dbe-b0a2-4cc2-9ba9-5e3f115309d1"
        },
        "item": {
          "id": "1ab093e7-2576-43e8-af08-8e0f48eb7f9a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d80fd8a7-6d22-401e-b1d2-13b270669e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0ed38f-0190-4829-bb99-4141a7232795",
        "cursor": {
          "ref": "e92b795b-af25-4242-820d-6af259e88f33",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "63317a31-072f-45bd-a0e8-e0656beb2fdc"
        },
        "item": {
          "id": "3d0ed38f-0190-4829-bb99-4141a7232795",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5c02d10d-4c14-4591-a235-9ccacc47324b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fc5cf7-af26-4e66-943e-ab9e42b2b650",
        "cursor": {
          "ref": "64307785-0495-43f8-9eeb-4a0f4caf0214",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "fe812da0-95dd-48c1-8322-259fa500d755"
        },
        "item": {
          "id": "a5fc5cf7-af26-4e66-943e-ab9e42b2b650",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "27390416-5291-4535-8335-d8cc61d7039f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f03ec00-8cb6-4316-a165-fc007261f707",
        "cursor": {
          "ref": "9db323b2-6c10-4c02-bcf3-50a61a5413ae",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ae7ed950-5104-49d7-8497-4eee3dc201a0"
        },
        "item": {
          "id": "5f03ec00-8cb6-4316-a165-fc007261f707",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b80811b9-0fad-4c7e-9c55-30f07ade3bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aacc883-cde1-459b-91bc-8147da44ee33",
        "cursor": {
          "ref": "e4eaa8f4-f4f6-478f-bfe3-8a61e8bf3956",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "bdcc0e50-6006-4feb-810c-deaa57f7e88a"
        },
        "item": {
          "id": "2aacc883-cde1-459b-91bc-8147da44ee33",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "69628f86-3229-4928-af51-3383dd348a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21cefa0-3f9e-4739-adf9-6f1a4ad22d9e",
        "cursor": {
          "ref": "da0104d4-a927-4d00-a818-206114f4cfcf",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "45635080-ee29-4bed-a8e6-d37143838e8c"
        },
        "item": {
          "id": "f21cefa0-3f9e-4739-adf9-6f1a4ad22d9e",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "fafaa15d-dd8a-43c6-818c-55aa8374d1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ced1502-81d7-42a8-9de9-3024eb39aabc",
        "cursor": {
          "ref": "d4deab1a-d319-4a36-a58d-e604cfac3771",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e0a9f9af-3d65-4403-8afc-e8ab44c4cd2f"
        },
        "item": {
          "id": "7ced1502-81d7-42a8-9de9-3024eb39aabc",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "152069a5-4c87-42a1-8308-ffdbbbde3019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98052ff9-5267-4574-aedf-58be3289da8f",
        "cursor": {
          "ref": "fc51f2a9-a5aa-4bcc-822b-d265328f36ef",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "302dec65-361b-4f6d-8c05-cfaa0935d815"
        },
        "item": {
          "id": "98052ff9-5267-4574-aedf-58be3289da8f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4390e4b1-1e67-48dd-9486-3569f011e0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63724e8e-5b3c-441f-a137-a32d0814ec21",
        "cursor": {
          "ref": "f7da9887-befa-4a0a-a897-1d861bbb3293",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9a72fdfd-31d2-4ebe-997e-dbb53ebfd3af"
        },
        "item": {
          "id": "63724e8e-5b3c-441f-a137-a32d0814ec21",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a9bf9ab7-5846-4b4c-ad1a-378f9e270c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65df5889-c539-4c56-83f8-6564127cf4ef",
        "cursor": {
          "ref": "15cbb703-35dd-4e5c-b0e5-ee466f1671dd",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a689fc8b-ef0a-4758-9cf4-488b477b731f"
        },
        "item": {
          "id": "65df5889-c539-4c56-83f8-6564127cf4ef",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "8f9d7b58-90b2-4b9f-a4ad-427d329588a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810ad6f9-b5f6-497e-9c63-a293ca01379e",
        "cursor": {
          "ref": "2d0fd2fd-41d8-41bc-bf82-9b53071ba47e",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6955442c-b836-4a5c-9054-8e6f146fde67"
        },
        "item": {
          "id": "810ad6f9-b5f6-497e-9c63-a293ca01379e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "db4bd11a-e317-4a06-8853-5dca661c63a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c099b81b-5682-46b9-8bf1-1026159d4699",
        "cursor": {
          "ref": "8ee4114d-38de-49f2-8f7e-10ea3b572078",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4af857e5-38e3-4cfe-b3ee-cbd7f6800924"
        },
        "item": {
          "id": "c099b81b-5682-46b9-8bf1-1026159d4699",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6b3f4baa-9c63-4829-bc66-a6fdaf0192b7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b55e10f-4565-45ec-ab40-d8494a81532b",
        "cursor": {
          "ref": "c5f0e7b0-f726-4182-be7b-3b0a79d21b14",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "cf58ccba-e8ce-45d8-8cfc-f710ce47c6a5"
        },
        "item": {
          "id": "7b55e10f-4565-45ec-ab40-d8494a81532b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c4a3a5d6-abb7-4573-af67-1b477d2650c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c308c8db-3202-442f-b500-a33732a4e377",
        "cursor": {
          "ref": "0724b348-1ff9-4e8a-b444-1816221caa3c",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5d40dcb2-1a0f-4220-bb8d-326cc8d05a74"
        },
        "item": {
          "id": "c308c8db-3202-442f-b500-a33732a4e377",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "7660cf5d-eb02-4525-822f-29e7e6aae2fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eef3f1c-ef38-4970-a9e7-93ab1651aa4b",
        "cursor": {
          "ref": "dec0909f-d671-4193-bbd1-84832943e487",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6d324adc-c8a0-4479-851e-35f12716425c"
        },
        "item": {
          "id": "2eef3f1c-ef38-4970-a9e7-93ab1651aa4b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "981a0528-f373-499b-bc16-eb5c2609975e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1c1c37-fbd7-4a56-b73e-29aa291b4a43",
        "cursor": {
          "ref": "62d9fd96-08a8-4673-ab40-30d7315cc6e3",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4c12f15e-c923-475c-a2a9-c8aa89081ddb"
        },
        "item": {
          "id": "9b1c1c37-fbd7-4a56-b73e-29aa291b4a43",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f395edd8-4a69-4b46-a4c4-50c58a721a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198bb6ee-5632-4cea-bfe6-1d0421c5bdea",
        "cursor": {
          "ref": "8affa2ae-ae12-4fc8-9396-992577198d3e",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7cb00fe3-6d36-42ed-9bbf-ad582429dd96"
        },
        "item": {
          "id": "198bb6ee-5632-4cea-bfe6-1d0421c5bdea",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ed945758-b8d2-40e9-85f9-473c1db530c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c39e33-786c-47ec-85fe-6ad511d71911",
        "cursor": {
          "ref": "7c51c6d7-1f80-41e0-8ed2-160655ebdd6e",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5a55d374-21f6-4747-ba0f-faadd92dedd6"
        },
        "item": {
          "id": "a6c39e33-786c-47ec-85fe-6ad511d71911",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "13a4cfc3-fccc-4bfe-ac03-3164a9e3ec41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ecb507-7f8f-4a82-8e82-83a134ef1253",
        "cursor": {
          "ref": "b0017bec-fc3e-4b93-b682-3d2bdd03c1ce",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a5936f41-8d9c-4b3c-a012-494c6e643a04"
        },
        "item": {
          "id": "10ecb507-7f8f-4a82-8e82-83a134ef1253",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "71670ee2-e26e-48d9-91d4-00d4903f03c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c847d3ff-368d-41f5-8b90-7ac72b8c6054",
        "cursor": {
          "ref": "15316c19-faac-4808-8f49-fe18911588e3",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6776315f-5f9f-4c8a-a057-53e304e06c8b"
        },
        "item": {
          "id": "c847d3ff-368d-41f5-8b90-7ac72b8c6054",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "21c97338-bbc7-4b45-8978-45943707d5a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5729778d-ea41-45bc-af93-73fe5f13d84a",
        "cursor": {
          "ref": "4d0e537b-c759-4e20-8857-89c44768bc56",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "94793eab-82d0-47a7-89f3-f3e553851f30"
        },
        "item": {
          "id": "5729778d-ea41-45bc-af93-73fe5f13d84a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "dccc909a-bda5-4caf-bce1-4c2668f060ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ca6224-a98f-4b33-8e41-8f7ed12001dd",
        "cursor": {
          "ref": "fb8c7ddf-cf92-4569-98c6-1dd52ab346bd",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "fca621fb-9aaf-4c17-a649-55e18bc21529"
        },
        "item": {
          "id": "f3ca6224-a98f-4b33-8e41-8f7ed12001dd",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0f8112f2-78c4-48a5-b8aa-434100f8c122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3fe6d4f-e05a-46b7-a475-9a13f3c58bb3",
        "cursor": {
          "ref": "847e9ee8-2fec-4656-b580-f80061670e2f",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b5989699-708d-4c8e-a3df-16f2e790f4c2"
        },
        "item": {
          "id": "f3fe6d4f-e05a-46b7-a475-9a13f3c58bb3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b8beba6b-e1a3-4072-83f8-cbe44529f570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e10a967-f651-42bb-9389-a416cde74052",
        "cursor": {
          "ref": "b61a7b1e-df5c-4aab-b304-bf790551f177",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "47167374-ae1b-423b-a7a8-8e6998e21e9e"
        },
        "item": {
          "id": "1e10a967-f651-42bb-9389-a416cde74052",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3398ad17-9f7b-481f-a7c1-7e2c1e909a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481082dc-fb21-4ed6-b063-05af25619bab",
        "cursor": {
          "ref": "08f73ef7-d76f-4759-8544-4bc0bc3072e6",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d0eaf3d0-16ea-4f3b-9c86-c67f6dd5f187"
        },
        "item": {
          "id": "481082dc-fb21-4ed6-b063-05af25619bab",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a1c4c4f4-dad3-4bc3-9527-b1d013052e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e982112c-c10a-4ac0-9081-19d0d384cf3b",
        "cursor": {
          "ref": "545f79c1-5153-469c-b211-f504204bfce0",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "49944b33-5771-4d9e-bc67-ba5fbfcd4141"
        },
        "item": {
          "id": "e982112c-c10a-4ac0-9081-19d0d384cf3b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "55147d45-b04e-46c1-aa78-4ca123c15213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56796a7a-c14e-49ff-8246-4dc516070e84",
        "cursor": {
          "ref": "d0d89557-49ca-4ce7-8380-bba2fd0243dc",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2bbfd7c1-2cee-4170-a0f0-a3528be209be"
        },
        "item": {
          "id": "56796a7a-c14e-49ff-8246-4dc516070e84",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3462b7c8-98cc-49e3-9641-6be28b3d6081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db07bcf-b003-4cb5-88e8-4e009078e396",
        "cursor": {
          "ref": "cf430b92-a0c5-48d8-b2e6-aa8062b86f97",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d2ec1ca9-a2a5-4f58-9a0d-425908d99095"
        },
        "item": {
          "id": "0db07bcf-b003-4cb5-88e8-4e009078e396",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "49e81b1b-975d-470e-891b-5938884cde65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1350ece1-7ca2-4d3c-a64d-a7d3475a543b",
        "cursor": {
          "ref": "cddd087b-9d79-4700-873a-af5e95209c8e",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "845774c3-de1d-4656-ad0e-3a569d3f54a0"
        },
        "item": {
          "id": "1350ece1-7ca2-4d3c-a64d-a7d3475a543b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c6692d02-e32e-49e1-ab76-ce92b55ef4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68e8102-ad7f-4d5d-84e6-b5b91929e836",
        "cursor": {
          "ref": "57214e90-2d61-4797-b430-3dde8a40efaf",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6a22bb00-c673-4cb1-97eb-ed2d52cf019e"
        },
        "item": {
          "id": "d68e8102-ad7f-4d5d-84e6-b5b91929e836",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "95cd91ba-64ca-4559-be6b-a340ef43ce35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b825ff81-41dd-4139-9c89-fa2671a162eb",
        "cursor": {
          "ref": "fcb08d4d-cb9a-4810-a520-6484e7a25805",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "58acf774-2b80-44fb-a957-2f0dbc30b347"
        },
        "item": {
          "id": "b825ff81-41dd-4139-9c89-fa2671a162eb",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a35c5923-5eab-4127-8108-8bdd07adc22f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d03a577-1b12-4d31-8fee-c26b4e77617a",
        "cursor": {
          "ref": "b551b42e-c772-4b88-a0b2-5f5e84daeade",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2e7e598a-25f7-4269-9007-9f2c7e0f0ec1"
        },
        "item": {
          "id": "9d03a577-1b12-4d31-8fee-c26b4e77617a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b1e99ed4-a3e6-49ee-9e3b-c48727ffe71f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796f1566-a807-4529-8e7c-f524374d7ca4",
        "cursor": {
          "ref": "99141e93-5811-4d1c-8bc9-b205e43a78c4",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9780e412-8659-4ba2-af91-f6d362685400"
        },
        "item": {
          "id": "796f1566-a807-4529-8e7c-f524374d7ca4",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a692dc20-50a4-49e9-ad37-f2b3d7413c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1fec23-c3aa-4f69-ba3c-28dd7c49170b",
        "cursor": {
          "ref": "ca1931b7-5e9b-4b0c-8860-17409311b4e5",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "04d2999d-c770-4c75-bd11-2d6d8172264c"
        },
        "item": {
          "id": "1a1fec23-c3aa-4f69-ba3c-28dd7c49170b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1d03456b-298a-40aa-acdd-bd7ae3ff34f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86a4f27-c249-4ce3-9aa9-52bb632a44e0",
        "cursor": {
          "ref": "df83d9ee-0585-4189-aa09-941b729035d0",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "92108693-c192-4ebe-99fe-1ea4b59f3d16"
        },
        "item": {
          "id": "d86a4f27-c249-4ce3-9aa9-52bb632a44e0",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c6c77c91-b900-40b7-ae8f-0f435a977223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1eadd62-7586-4cf1-924c-baaf534d9b52",
        "cursor": {
          "ref": "d4f0343f-4864-45df-98c3-b08b91d11762",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "3530dceb-db73-4ee7-addb-79fbb161ef38"
        },
        "item": {
          "id": "b1eadd62-7586-4cf1-924c-baaf534d9b52",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "52fcf3b5-1008-42c6-8e47-6f8abb48a376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad304bb-e77d-4353-8493-d044a29cca0b",
        "cursor": {
          "ref": "6f20a49c-3e55-41d3-bf37-130461609b19",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3c13cded-d796-48b2-9650-a66a3866ed27"
        },
        "item": {
          "id": "dad304bb-e77d-4353-8493-d044a29cca0b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "514cde13-0b66-475c-a1de-6f9af03e40df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 211,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd26ab5-c83e-4516-b862-a7f2f8b159b3",
        "cursor": {
          "ref": "7bc3f184-123c-4f29-8c5b-a4a552760aff",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5dd74ef2-8787-45a1-b656-c20cb03c8265"
        },
        "item": {
          "id": "afd26ab5-c83e-4516-b862-a7f2f8b159b3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ba00bca3-a6f3-4faf-8b8a-10afc54ade15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32943209-2a46-4cf9-a88a-0012393b7267",
        "cursor": {
          "ref": "7f32657e-60a1-4ed9-8c95-d9be480900eb",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "70aab225-7b74-427e-a9e8-27728f5ff611"
        },
        "item": {
          "id": "32943209-2a46-4cf9-a88a-0012393b7267",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "951e4325-e99e-4f1b-92d5-59a8520d6fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22eb6ffa-c8b2-4d02-821e-9b1e4897ef4b",
        "cursor": {
          "ref": "aac49ead-6501-4a5a-b7c6-f4dcfc6c75f5",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2138764f-343e-4754-b1e0-24e69880bcfa"
        },
        "item": {
          "id": "22eb6ffa-c8b2-4d02-821e-9b1e4897ef4b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4adfd358-6756-4fde-97e8-0fb043a76212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a877cc01-4f65-4173-bc5d-8b2c105de1e8",
        "cursor": {
          "ref": "eb1b5747-dc49-4d10-b4af-8da443f8caf9",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "bbe78872-d6ec-4db4-aab9-7984d25fa379"
        },
        "item": {
          "id": "a877cc01-4f65-4173-bc5d-8b2c105de1e8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e6a3bbdc-a8a0-4223-acfa-c84027cc5552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e646afd-8775-4f5d-adf9-46be70213e4d",
        "cursor": {
          "ref": "9fed289a-bee3-4932-bb49-674f2494d671",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "16ff6bf9-bdff-4f4c-9515-420d8bd462ca"
        },
        "item": {
          "id": "3e646afd-8775-4f5d-adf9-46be70213e4d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "fa09bda8-d18f-4ff5-84e4-6c966f068b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f18dff-66e0-4665-bc51-b9f3262d0bb5",
        "cursor": {
          "ref": "d7512eef-e112-4cf9-836e-cc70147078e9",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c6043065-a226-4eb3-8175-79751c0dabd1"
        },
        "item": {
          "id": "70f18dff-66e0-4665-bc51-b9f3262d0bb5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d29c50c1-bc2d-49d1-8c71-00c7811edce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3a9cd9-a95e-40e8-a3c5-1d74fdec0c4c",
        "cursor": {
          "ref": "086c892b-cb48-40a8-a291-83b52488ddf5",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "12092942-6a26-443b-a043-583f0a3f75fc"
        },
        "item": {
          "id": "3f3a9cd9-a95e-40e8-a3c5-1d74fdec0c4c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "62c96f34-dd08-4538-b396-403c455308bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b1f9f3-2f0e-4a52-a087-51e9e96db8a6",
        "cursor": {
          "ref": "17d9952d-f493-481d-a9b3-94e4efbc27ae",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "dfc23682-6f6b-470e-9c7e-217b2f99b757"
        },
        "item": {
          "id": "35b1f9f3-2f0e-4a52-a087-51e9e96db8a6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "75bd5c59-0def-43f9-8fb5-b38830eded30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39bc77c3-7035-45e3-9c76-bf5190347677",
        "cursor": {
          "ref": "9d8d9057-021b-421e-8f8e-b4a6bbf2fe3a",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "07ba8f9d-0abe-44b3-b488-58ff76558f39"
        },
        "item": {
          "id": "39bc77c3-7035-45e3-9c76-bf5190347677",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "415009b2-739b-4d55-ae67-6c4923999f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c03442-30d9-40a7-bc55-f7e5f0c95654",
        "cursor": {
          "ref": "3effa966-3e1c-4862-a006-e377eac63e4a",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "944fae0e-712b-4bc2-896f-01b6a149af18"
        },
        "item": {
          "id": "f5c03442-30d9-40a7-bc55-f7e5f0c95654",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b6979715-3af6-4a9e-bd0e-1b96e9d9714b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c410304-9768-493c-b18c-4ee0c8733517",
        "cursor": {
          "ref": "cc9fa322-9f6b-4b59-b9fe-dc95fc7ce2e8",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5d643232-7d70-4bd7-8cef-5693120ba6a8"
        },
        "item": {
          "id": "1c410304-9768-493c-b18c-4ee0c8733517",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1464c0e9-2d92-4a5f-b917-61e24def41fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aeaced3-1534-4260-bb2a-6c37b72fece4",
        "cursor": {
          "ref": "816fdfba-32da-4269-981d-67715d2b9ca3",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0f526edf-b700-4832-9654-4ff5adaed527"
        },
        "item": {
          "id": "9aeaced3-1534-4260-bb2a-6c37b72fece4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "506d331a-8576-408e-a863-17711e595d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf59040-9ca5-4f00-96f7-9c3fd4d269b5",
        "cursor": {
          "ref": "3128bcf1-2d05-4eb8-aefb-d61eebe19d20",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "211c0c1c-1a49-40bf-8e05-169e3979d856"
        },
        "item": {
          "id": "7cf59040-9ca5-4f00-96f7-9c3fd4d269b5",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f82cb2c0-9ad6-4a65-8824-8253236b6ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7ce225-6e84-4d31-91bb-94f788c9dbc0",
        "cursor": {
          "ref": "e1748e07-6320-4ed9-9826-b9e70e673dfa",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4306448b-e6e0-4d39-8e3e-4547dbae9fde"
        },
        "item": {
          "id": "1e7ce225-6e84-4d31-91bb-94f788c9dbc0",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "294674a0-89df-436b-a63d-7576b73ab114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e576fca-316f-4abe-8017-f0aeb54c8c94",
        "cursor": {
          "ref": "71123baa-da04-4acd-9ad3-572ee6ebf77e",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ad5fbf48-b328-4cbc-a40d-9e87b0581784"
        },
        "item": {
          "id": "9e576fca-316f-4abe-8017-f0aeb54c8c94",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b3ba34b6-d70b-4816-a494-043acc010bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80da070-730d-4c6c-be71-68cb5e899297",
        "cursor": {
          "ref": "4be95093-295e-49f1-a9c0-aca2fad962ce",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c18bff23-f9f9-430b-a38d-834970bd0a37"
        },
        "item": {
          "id": "e80da070-730d-4c6c-be71-68cb5e899297",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1bbc3e42-6a2d-4c1b-bb63-fc7eae77c8f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4490beb7-2144-421a-94fb-7f70bd14bec2",
        "cursor": {
          "ref": "f8d5e66c-927d-48c7-8342-474417ca40cb",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "118b23a4-f6d8-458d-ab3f-85685f8e6659"
        },
        "item": {
          "id": "4490beb7-2144-421a-94fb-7f70bd14bec2",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b2d5236a-afde-4424-b521-2d41a14c2379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20696e4f-339f-40a9-ab35-b178eab8e97c",
        "cursor": {
          "ref": "5e85be7b-e484-41a5-a8c1-ebbf19f2922f",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3ffdd20e-7ea7-43f5-bd6e-338c8ad80fa8"
        },
        "item": {
          "id": "20696e4f-339f-40a9-ab35-b178eab8e97c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7662ba10-10d4-4471-8300-9b817b5dca7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd4350e-c725-4fbc-acde-736ec673af8c",
        "cursor": {
          "ref": "2036d711-2a00-4b01-befb-514b5a720c9a",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "48dfee7b-1493-454d-815e-060b2aee859f"
        },
        "item": {
          "id": "0bd4350e-c725-4fbc-acde-736ec673af8c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9bd45b0e-b09d-425b-89f0-45a9abaf19c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a33c68e-c67a-47d4-86d5-cd967924e7c9",
        "cursor": {
          "ref": "a2d58147-af7c-43d5-b812-1ff4bb271fbd",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "89b810aa-a66f-4617-b6cd-86b750d48434"
        },
        "item": {
          "id": "0a33c68e-c67a-47d4-86d5-cd967924e7c9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6daf4642-e0e9-4041-a8c5-25bd6f92cbd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88072df1-1c36-4705-abd9-5dec63e97bde",
        "cursor": {
          "ref": "08322bc8-e971-42fb-a523-4f82b3efb8ab",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "eff51507-b85a-4042-a167-a061d56d40f4"
        },
        "item": {
          "id": "88072df1-1c36-4705-abd9-5dec63e97bde",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7d40ef82-d55f-44d0-a02d-a3c327604dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2152894f-304e-4710-af36-3c658172cccd",
        "cursor": {
          "ref": "27d658cf-4f3b-43bc-b666-05ad524dcfde",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d7dc67d7-740f-4b20-977b-7d587962cd7e"
        },
        "item": {
          "id": "2152894f-304e-4710-af36-3c658172cccd",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "05eab3ee-b62f-4600-92ce-3c537dcfa84b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47baf555-b15f-49af-b655-6421ddc3cac8",
        "cursor": {
          "ref": "3642d55a-c893-459b-8a64-f304736ede8f",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "fc06781a-3346-4eac-bcdd-9f3ae2bfabf7"
        },
        "item": {
          "id": "47baf555-b15f-49af-b655-6421ddc3cac8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "692dca83-7a14-4edb-894f-673985e0d667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c40968b2-7a23-4a88-9b16-6c4dca9e04ff",
        "cursor": {
          "ref": "daccda4e-ae7c-42e4-9e0e-b00d5952cf07",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "44c664d8-52b9-45b6-85d1-1b7ca261ad61"
        },
        "item": {
          "id": "c40968b2-7a23-4a88-9b16-6c4dca9e04ff",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "48e846e4-ea02-4f47-936a-2915187f8392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b024ebf-8470-47be-907b-27ed0b8aab65",
        "cursor": {
          "ref": "40169872-446c-41e4-882c-d1a5e9092b11",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "20bcf725-2925-4a9a-8677-b5e0d549deac"
        },
        "item": {
          "id": "5b024ebf-8470-47be-907b-27ed0b8aab65",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1854da70-7664-4f31-ac12-35be0a7eef74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a23baa-1ea9-4be4-aab3-0a971005bd8e",
        "cursor": {
          "ref": "81f43e9a-a057-4e27-8e8a-76d8c55eb0b9",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "85237a9d-a93e-4b2f-a9fc-cd16f8380339"
        },
        "item": {
          "id": "d7a23baa-1ea9-4be4-aab3-0a971005bd8e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "36ae1058-1b4b-4eaa-a974-6c6411edceb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8063435-9e39-4b73-a99e-9bbe53a53f90",
        "cursor": {
          "ref": "8fbbd52f-cc48-4f7d-9d32-ac0b9005c752",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "db39273a-0d86-4211-8c15-e2c110b7725a"
        },
        "item": {
          "id": "d8063435-9e39-4b73-a99e-9bbe53a53f90",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3f08a509-ac5a-43fa-945f-d0a36e1e1a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70727a8-62a9-4098-8889-d4c0c86294ca",
        "cursor": {
          "ref": "7881b358-5fb3-419a-95f4-d31b6fe3f006",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f88a7a7f-938c-4401-96ce-b10611cf6caa"
        },
        "item": {
          "id": "c70727a8-62a9-4098-8889-d4c0c86294ca",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b0fcbee5-fc1a-4f76-9e9a-4ff0b1e364a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a96f7c-1072-4578-ac07-c26a7022f983",
        "cursor": {
          "ref": "667c47ed-7f2c-4a00-b124-3f1ec5c87c25",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7431d60f-18d3-4163-80b9-def5792555e2"
        },
        "item": {
          "id": "78a96f7c-1072-4578-ac07-c26a7022f983",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ec7bfa0d-0357-4863-bec2-f220c0f5315d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8294f1a-0afc-47bb-847d-64da4f90fdc5",
        "cursor": {
          "ref": "549f050e-5800-46f0-be33-f9f607aa84cb",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3926e8dd-5214-4df4-b943-f908c0c41b65"
        },
        "item": {
          "id": "d8294f1a-0afc-47bb-847d-64da4f90fdc5",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "88003982-b3e4-4b27-8378-773e08cfb890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b903b91-c96d-4897-b6df-8a38fecd35f9",
        "cursor": {
          "ref": "a12b961e-3400-4aa4-b08f-3a9708ac9342",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ee3ca8f0-851f-4b6f-83c2-a0f12454a915"
        },
        "item": {
          "id": "1b903b91-c96d-4897-b6df-8a38fecd35f9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "6e77f22d-4734-443e-be9d-7514a964138e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9333689-49b7-49ac-8057-8c722baf882e",
        "cursor": {
          "ref": "1b7aed3a-3214-4670-9d3a-cd2db1df2f80",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6e121a48-9059-4f2e-a28b-a15eea476feb"
        },
        "item": {
          "id": "a9333689-49b7-49ac-8057-8c722baf882e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "2bc64913-d61b-4d40-829f-df2670893874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d38f3e5-bcb9-431a-a7a1-aa4b60622c90",
        "cursor": {
          "ref": "bd760ef0-389a-456a-a336-0593f5ac0c17",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "39cfd700-a28c-4970-8b6d-902fcc8d156c"
        },
        "item": {
          "id": "8d38f3e5-bcb9-431a-a7a1-aa4b60622c90",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "93164226-7b30-4f23-9d5f-82cae3982bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbd49d1-8fe7-4fcc-bd05-9b025b8da485",
        "cursor": {
          "ref": "cdeeed91-4275-433c-a06a-df7e4548a97f",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c375d098-e23c-47c9-92c0-941fadf7ea41"
        },
        "item": {
          "id": "5bbd49d1-8fe7-4fcc-bd05-9b025b8da485",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9a59ce5d-f850-4240-a8b4-45145ab7354c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58305cf5-c7d8-4894-9c9a-88897d2fb58e",
        "cursor": {
          "ref": "19e59e98-5d13-4de7-a90b-c8311854fb1b",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3fbb54b9-1a36-40e2-b607-a0f405f0d075"
        },
        "item": {
          "id": "58305cf5-c7d8-4894-9c9a-88897d2fb58e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "cfa351e4-126e-47dc-a854-bf30ecc2e343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe21696-c8a3-42d4-a149-97b81b0f81d1",
        "cursor": {
          "ref": "00ec7af2-394a-441b-86f3-b0939582c984",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8026571e-aafc-4106-8410-c47a0097806d"
        },
        "item": {
          "id": "dbe21696-c8a3-42d4-a149-97b81b0f81d1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1734b2da-486b-4c4c-bf26-6d2806aea5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d7a9e2-9b0a-40c3-8785-9f00c02b8334",
        "cursor": {
          "ref": "c8d962a8-1666-4339-94a7-b1ca9443e597",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "69bf7b48-9af3-43ef-9154-3229dc25031e"
        },
        "item": {
          "id": "c0d7a9e2-9b0a-40c3-8785-9f00c02b8334",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6441b484-ca58-4138-82a6-5259ce055aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e281a8-c50c-4c47-813f-93c2ed3c753f",
        "cursor": {
          "ref": "2e86a780-e777-4e62-b054-675c64c240b3",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a3cd8fa1-3161-4bf6-974f-466de773cbbf"
        },
        "item": {
          "id": "68e281a8-c50c-4c47-813f-93c2ed3c753f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "33a65e90-6624-4518-a067-924f5340dcf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0adf6ab0-24a0-467b-9096-5fbb40c0cb60",
        "cursor": {
          "ref": "070d4342-5989-4c3f-93d5-354947bc609b",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5982d042-3edf-4d59-86a6-2085516b3fe5"
        },
        "item": {
          "id": "0adf6ab0-24a0-467b-9096-5fbb40c0cb60",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3e294b9f-2bd0-4a50-afc7-b71dd6b8a8f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e093f4-da11-4029-8a56-4a21cded406f",
        "cursor": {
          "ref": "b0331718-a1b6-4634-a6f5-ea080560ad1f",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2d178699-9654-4a27-ac2a-fde7e6034662"
        },
        "item": {
          "id": "a2e093f4-da11-4029-8a56-4a21cded406f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "84231a72-fa93-428e-98bf-0cdff92b9b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99354b7d-770c-4f91-a4f4-598b512587fa",
        "cursor": {
          "ref": "fda44b77-1d35-46f0-98de-f08b71db8778",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ecd19d12-0399-4c74-9ad8-15a3f55e75ce"
        },
        "item": {
          "id": "99354b7d-770c-4f91-a4f4-598b512587fa",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "bd0414d1-e203-4144-b89d-0c444e3e89c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d7c5ae-a0b0-4508-8ae2-48863722a500",
        "cursor": {
          "ref": "26fe96d1-d312-47ec-98b9-1cd5bb32f36a",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "cdc406e9-be3c-42e1-9737-d6e7dec746a2"
        },
        "item": {
          "id": "b1d7c5ae-a0b0-4508-8ae2-48863722a500",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "446fd42a-41cd-408a-8416-4e0254804e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e495ddb9-91d8-4b55-a9c5-4dffd50046ec",
        "cursor": {
          "ref": "0aa741c1-35fa-4ead-8edb-3a53927b6857",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "bf9e8112-488f-40d2-8790-ef9db502cefd"
        },
        "item": {
          "id": "e495ddb9-91d8-4b55-a9c5-4dffd50046ec",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d980acfc-3784-4511-95a6-537063fdb3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bc3778-fdfd-455e-817f-60df97230dfb",
        "cursor": {
          "ref": "9128439e-5f2a-4b3d-8cd7-a21123f712ae",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "552af540-4b72-45d2-b2f1-290bacf899ad"
        },
        "item": {
          "id": "a6bc3778-fdfd-455e-817f-60df97230dfb",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8199f481-7084-4411-825c-a04b6ed21806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f70113-7191-4e12-b2fb-82d42c426baf",
        "cursor": {
          "ref": "7d352327-ae4d-4b24-a5c3-7d6e42281467",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7ad62860-82ac-46b9-ad07-45c1cc9dad27"
        },
        "item": {
          "id": "49f70113-7191-4e12-b2fb-82d42c426baf",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "79e7f263-b119-49c1-9634-63fe410e48ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4add50-956b-4a09-ad1b-3d797d91b60c",
        "cursor": {
          "ref": "fed79948-d5f1-4a75-9cce-1e1c430f6a65",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "5779f7d4-c9c8-402c-9ebc-f5a6139440c9"
        },
        "item": {
          "id": "9f4add50-956b-4a09-ad1b-3d797d91b60c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2b6685e4-cf5a-448b-8eb9-67f19297260d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62035557-1796-441b-9e3d-85ae2d3493c5",
        "cursor": {
          "ref": "ad4bbc65-4408-4add-b516-220dc242857c",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "fb1692f2-3bd0-41b6-846a-b0ede1387d75"
        },
        "item": {
          "id": "62035557-1796-441b-9e3d-85ae2d3493c5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c6efd07c-24d8-44d3-a3eb-12926e58dc95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c869a4ac-9f4e-41dc-ba64-0db6e922a8a4",
        "cursor": {
          "ref": "5b371a5a-661e-4aaf-9776-baa320a7c7e4",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "090a4ea5-8319-46a0-8ba0-ca42dacb7e28"
        },
        "item": {
          "id": "c869a4ac-9f4e-41dc-ba64-0db6e922a8a4",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "783c555d-af5f-48fb-8bbd-1f9577054e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16d0b90-3e47-4c9e-b2a1-b5d92e1d2286",
        "cursor": {
          "ref": "2234ac0c-3d3c-4486-b394-1df1d8ddf0a2",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "74746dbb-3016-4b4b-9028-97a8eac8047d"
        },
        "item": {
          "id": "b16d0b90-3e47-4c9e-b2a1-b5d92e1d2286",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0ca48261-1723-4961-8423-0d0d7b6e97fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24812d7-d04e-4b03-a795-1d850832436c",
        "cursor": {
          "ref": "d7d589d5-b6b0-4e81-bab3-126f09d34b67",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "8eadf6e6-77fa-48ef-8f74-95a80cc30be4"
        },
        "item": {
          "id": "c24812d7-d04e-4b03-a795-1d850832436c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "cc372e7f-7ec2-4bb2-a574-acdfbcea4b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf6be4c-b6a5-4d6b-859b-b8ff33914401",
        "cursor": {
          "ref": "8f64a5b4-3d73-4110-9fc1-2ddf1fb3ad37",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "7efea079-6b98-44f1-a2fb-4918e7af5e21"
        },
        "item": {
          "id": "2cf6be4c-b6a5-4d6b-859b-b8ff33914401",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "74e48940-d6f5-402d-843f-9db21c5ca080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c470af-11a3-4bb9-9769-597216504859",
        "cursor": {
          "ref": "91c12948-a1c3-4d19-9430-b4cf3b5dd9fc",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "9982d02a-29f1-4077-a7fa-22923181602a"
        },
        "item": {
          "id": "b7c470af-11a3-4bb9-9769-597216504859",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3068b8f1-fbe0-43fb-b2a5-b916f97f09b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f6973c-cc90-4b74-8b52-a229d8a1ab7a",
        "cursor": {
          "ref": "53b41389-d753-45a0-9c65-25672cd6a01a",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "a926cd8c-f484-4a91-9bd8-6fb429f52f10"
        },
        "item": {
          "id": "56f6973c-cc90-4b74-8b52-a229d8a1ab7a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "dc6ed8be-feb4-43cf-9f96-79577e2a974c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2ecd5f-7f96-48a1-8ce5-fa627a40680e",
        "cursor": {
          "ref": "af9b4754-13fd-477f-b910-da6f6a9222c0",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "54203376-bcbf-4c19-b747-6f087d5cb6e5"
        },
        "item": {
          "id": "6f2ecd5f-7f96-48a1-8ce5-fa627a40680e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6878404f-aa12-4c00-82b0-42826f49cfc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e0e66d-f17a-404a-bcfc-aba73db6ff39",
        "cursor": {
          "ref": "ecdde3b6-ff33-4b7a-93e6-073f73f0b9c1",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "20cd09be-a7ad-4dde-b38f-d5efac9e08f4"
        },
        "item": {
          "id": "22e0e66d-f17a-404a-bcfc-aba73db6ff39",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "21f3f055-35d4-4ecc-8ea9-883d68b9d689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2c00d3-1e76-4a56-a913-3e91675d35c2",
        "cursor": {
          "ref": "975b6b70-b1b4-400b-8149-7fe9e1df76e1",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "d64fdbea-6a39-4d0f-aa60-0d6a8b283131"
        },
        "item": {
          "id": "6d2c00d3-1e76-4a56-a913-3e91675d35c2",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2b76255b-ad03-4e1c-8ff2-10feb3ee7034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12017c54-9ba6-4a08-bfa6-3e7aed96b240",
        "cursor": {
          "ref": "04dcc91a-d4d3-41b5-8220-e3b41e2155ea",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "c9f98a3f-f988-4074-9362-2acf816df3a4"
        },
        "item": {
          "id": "12017c54-9ba6-4a08-bfa6-3e7aed96b240",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3297b705-76f0-4fa3-aca5-0bb88f60816a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14d9018-f210-47db-884b-2abcf98e0c49",
        "cursor": {
          "ref": "37bc6aa0-fee8-42eb-ac41-b19b2e02e1cf",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "a3d2b1e0-ca52-435f-98c4-86c57cc6c23d"
        },
        "item": {
          "id": "c14d9018-f210-47db-884b-2abcf98e0c49",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "00d3a26d-ee36-4d8f-ac60-a135e2aae504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94566674-2fe7-4cdc-9d21-b5be758fe7ec",
        "cursor": {
          "ref": "54f28ae2-af4c-4437-9c6e-bb7a008dd8c6",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "5a56ee21-5955-4243-b467-c0f703b92d05"
        },
        "item": {
          "id": "94566674-2fe7-4cdc-9d21-b5be758fe7ec",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f0def918-b86d-41be-9d3b-5eddb654c496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17024a24-9139-4658-94e2-6fc3defbb5ec",
        "cursor": {
          "ref": "8c819d31-7a8c-41fa-b6b5-4d1c0b135159",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "b6866d48-0cc3-4022-a485-944bff07a6ff"
        },
        "item": {
          "id": "17024a24-9139-4658-94e2-6fc3defbb5ec",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "da614797-6777-4e83-ab11-96b0b34c4b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae3aa95-96e6-4715-9e00-d62f26d3bbed",
        "cursor": {
          "ref": "10456257-bbe9-46b4-911d-548c17b2f9d0",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "a5f77a03-c2cc-467f-bc1b-a2d545fa6c4e"
        },
        "item": {
          "id": "1ae3aa95-96e6-4715-9e00-d62f26d3bbed",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7221a736-076c-4565-ab2f-3b32653ee793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63dfef59-c63b-4d3c-8221-82a1a0255ceb",
        "cursor": {
          "ref": "bf4071ed-3359-4f07-a7f4-e8a73e982046",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d70b9499-3957-4b08-9c85-a40c4bf7ed83"
        },
        "item": {
          "id": "63dfef59-c63b-4d3c-8221-82a1a0255ceb",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "20c32d46-e6b1-44b9-83d6-30065a1d459a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e277abf-a0b2-401f-b2e7-a254ebd12ef8",
        "cursor": {
          "ref": "28621d6b-8672-4e11-96f6-be5fe4cc51ce",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "632f4028-a583-4c12-828e-4f411edc7a59"
        },
        "item": {
          "id": "0e277abf-a0b2-401f-b2e7-a254ebd12ef8",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d699ba61-1551-48f4-bdfb-1c20e144f865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09965438-9765-4b6e-b362-20605877e6b0",
        "cursor": {
          "ref": "611f59d2-ba07-41aa-af3b-17859da07055",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "eadeec37-569f-46cb-8b67-0a1203fcd6c6"
        },
        "item": {
          "id": "09965438-9765-4b6e-b362-20605877e6b0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "eada7bc4-5ad2-4dd9-82e9-10a6b2d22d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d6ad05-9c97-4895-a279-2d29a2a929ce",
        "cursor": {
          "ref": "638e7471-e9e0-4bcd-8335-ef56496793d5",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "0eb05f58-6bf1-4062-ad14-473da3ae4b97"
        },
        "item": {
          "id": "f8d6ad05-9c97-4895-a279-2d29a2a929ce",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "387166d2-3614-4409-bd88-73884f046bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f855171-2d62-47dd-83e6-1c28df7b0483",
        "cursor": {
          "ref": "0ceb2d86-33a5-41e7-ba6b-4f9056b32811",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "ce40703c-b126-4b1b-9e80-c7f1c6e10b9d"
        },
        "item": {
          "id": "1f855171-2d62-47dd-83e6-1c28df7b0483",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "24b9f795-9393-47c7-bf16-95b24c574cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb5e0a4-992e-4ba0-be35-41ea7f52da57",
        "cursor": {
          "ref": "5c006819-8f12-4698-8be4-7e2faddd45cc",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "b23278b2-2680-48a8-9683-7702a55d009f"
        },
        "item": {
          "id": "5bb5e0a4-992e-4ba0-be35-41ea7f52da57",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1acd00ba-3ea0-4185-a020-30a8844edf5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e546a675-6c88-4617-a343-c9b5c946e897",
        "cursor": {
          "ref": "fee7ee69-9516-43e7-a34f-af69e717a731",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "8e456473-41de-488b-b804-e51f49fcebb7"
        },
        "item": {
          "id": "e546a675-6c88-4617-a343-c9b5c946e897",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "758352fc-e892-4493-9096-006edfd57c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e72b0c6-884c-4324-b231-c7941aa1e34f",
        "cursor": {
          "ref": "73e6375d-1344-4b62-81e7-07786237c8bc",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "4b7d638e-24fa-4c2e-927d-7a80c56b627b"
        },
        "item": {
          "id": "3e72b0c6-884c-4324-b231-c7941aa1e34f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ba287c90-6515-4321-afd9-2e3b6bfdaeab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196ffafe-b331-46c8-8fb0-362a23fc0a2d",
        "cursor": {
          "ref": "07575569-c04e-433f-83df-d37c9cfcf43d",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "0b965a62-9829-4cd0-932e-2168c3aad3dc"
        },
        "item": {
          "id": "196ffafe-b331-46c8-8fb0-362a23fc0a2d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "94964682-6454-4205-b60e-6a4d47b6f46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0484fa7-1c5f-49af-b94c-4a4cf3433959",
        "cursor": {
          "ref": "c981a530-9444-4d3b-b749-bd2c30a1c2f4",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "ceb9db4e-d3c6-4801-985b-5bd2e725f01c"
        },
        "item": {
          "id": "b0484fa7-1c5f-49af-b94c-4a4cf3433959",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1fd3d1c2-69f1-4bff-a648-50f207108ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6fe520b-e274-4702-b407-82ebde994ef4",
        "cursor": {
          "ref": "52572d60-ea92-488f-8640-fb06ce77c2db",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "fb1e72a7-29bf-4a57-809e-ff3c369261f2"
        },
        "item": {
          "id": "a6fe520b-e274-4702-b407-82ebde994ef4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b78f54dc-e8b0-4040-9862-9395f8fd88c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0458c6e5-bafd-4bae-acaa-0510cf174277",
        "cursor": {
          "ref": "c3150283-dfa2-4741-8cc5-e7fcb50a11e7",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "c690099f-792d-4af0-a943-e2b97f35613e"
        },
        "item": {
          "id": "0458c6e5-bafd-4bae-acaa-0510cf174277",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7d4b7a3b-a6ab-405b-8e61-f59f46cff75d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6216ca97-a67f-4701-910d-3123cf378e45",
        "cursor": {
          "ref": "c6f6151a-4f5c-4143-9f96-561812a68b1c",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "6158d818-fc1a-46dd-b9d6-8f9258cf7b42"
        },
        "item": {
          "id": "6216ca97-a67f-4701-910d-3123cf378e45",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c6c57aa6-68d5-4ede-ac18-8af64db8899e",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e8ca0c-ede1-401d-bf4f-87a33cc09fbc",
        "cursor": {
          "ref": "f96a391d-cf8e-4c0f-bb70-1d5605848825",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "eadff057-4470-49da-9796-02513a3d90b4"
        },
        "item": {
          "id": "c2e8ca0c-ede1-401d-bf4f-87a33cc09fbc",
          "name": "credentials_verify"
        },
        "response": {
          "id": "84d59b96-12b8-4113-9a4f-33627942c83c",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "546d26e7-2a96-4b7e-8df3-924949aef016",
        "cursor": {
          "ref": "ebb4e4e7-b987-474a-8ff1-4e1d371d5b06",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "106a8dc0-7bce-4977-ac84-a2b7df7bf2ef"
        },
        "item": {
          "id": "546d26e7-2a96-4b7e-8df3-924949aef016",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "05760bf0-59fb-40ce-a8a1-8dadfe221687",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "815982ba-70d2-4692-b428-943e00e15d91",
        "cursor": {
          "ref": "62ca4dc1-6a92-4b06-bc58-f3df6c378958",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "995aed1c-f969-4b0c-938d-5ee92446430f"
        },
        "item": {
          "id": "815982ba-70d2-4692-b428-943e00e15d91",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b263a1ac-433f-4ada-8688-17a0ce2aff61",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815982ba-70d2-4692-b428-943e00e15d91",
        "cursor": {
          "ref": "62ca4dc1-6a92-4b06-bc58-f3df6c378958",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "995aed1c-f969-4b0c-938d-5ee92446430f"
        },
        "item": {
          "id": "815982ba-70d2-4692-b428-943e00e15d91",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b263a1ac-433f-4ada-8688-17a0ce2aff61",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b36810-9ddf-4200-8f84-8a4a0ce57e4d",
        "cursor": {
          "ref": "fffa77fe-d83e-40f1-9c5d-eae0bd9af613",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "342ce49d-411a-4304-9694-25c2c78994df"
        },
        "item": {
          "id": "24b36810-9ddf-4200-8f84-8a4a0ce57e4d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e2fc14ab-bc7b-4ba8-a41f-b3dfb6d2751c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e750ab9f-9fae-4e72-8ee5-78e37d24a890",
        "cursor": {
          "ref": "3aa25ae9-afb0-4833-a101-fb0872e5d82a",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "b4abcbc3-70d0-42be-88c7-2a947ee18025"
        },
        "item": {
          "id": "e750ab9f-9fae-4e72-8ee5-78e37d24a890",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c96acccf-dfaf-453d-8228-4e69fc40271a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}