{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ba516483-4496-4ef9-a6c1-0b665a96445d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ccf10185-b677-4c98-b7d2-7f0da107baf9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "884f0da7-28a4-49e4-8da7-d836e8e90d49",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0232007b-a517-41c1-9196-afe3b18cc33c"
                }
              }
            ]
          },
          {
            "id": "533a10e5-8340-4143-a1cd-144af5321652",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "78d6df06-3d16-4842-a123-cbaa40c57a6d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b300a253-6589-4fe9-a194-1aeeee649b18"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6fd183a4-ec86-495e-9fc9-f2f6afa095e8",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8f844a84-8db8-4c31-99f1-b3010581be5a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bf25b422-5193-40d9-b15a-114153edb13a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8dfe9ff5-92b8-4018-8305-45e9dd9b3b8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f2e98bc0-d2e1-473a-8842-8a0aa7a5e09a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "40565b6b-9a1a-47b7-bf05-7a3726105f20",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b122c888-d1dd-4791-a37a-5b063f0f859e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8ccb5c68-fc58-4e9a-aedc-eae213136873",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9153105e-d1ab-42ad-a5d7-66c0fa259bc0"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19748285-992f-4037-a08e-1520b3fa5bb7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a3c177c7-30ad-4e05-8bd7-439ec81552af"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "28200ec8-0189-4a75-9159-9142e38e9716",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a40c087e-0229-4a18-8fe1-a6c1c1176c68"
            }
          }
        ]
      },
      {
        "id": "7f2fc0c2-62f0-45f1-9a74-1d43cfc2d291",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d6fc76fa-5efe-4f7f-8923-083067bfb68b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cacdc3e6-269e-4bfa-9ca4-5f5a61161b1d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5d380bd7-39e4-4144-9604-880efb7c4626",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3b8eb0-5361-447b-9b0f-45168319896d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b23cd8fa-d4de-4d88-8134-9a647f9a0e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e495e9f6-824d-40e7-9467-f35ba95a728f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d02e365-7203-45fd-94cd-845dd5b83906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd17e63c-a755-490b-803c-4f4fd3276a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bece18c-f735-4551-89b9-c0c13d641b50",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f63cd4-54a6-4fea-818d-89310d313da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c26c0043-5103-428e-9837-a7f5a740e301"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "30d8a353-369c-4ff1-b3ec-5da031a62968",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ff7d955-dc6b-40e0-af6e-b9222016edaf",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8af7683-4250-42e7-a84d-474b9a1b2cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1556295f-ad57-4e54-90a6-22433aee07bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4adc542a-5bcd-4a88-9adc-f29fcda5e441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f75b238-fd05-4ea8-8805-4d690d76b567"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "88d03b5d-fa28-41da-84db-6d25fe32a7bb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a1f3736b-6987-435a-9da2-633c57e49587",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad58e753-2bf0-470d-b982-6a26d5b11bb3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "70e4ac22-1764-495e-ac68-7c022fcb2fac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09eec170-556a-4275-8dd3-84933e3b66db",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2286ffaa-f40c-4c7c-872b-9a7db306f1d9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c59d76f-b9ab-47ab-9265-9c25ac9f6378",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9aba88ac-cd40-4e4d-8c97-3495c3199034"
            }
          }
        ]
      },
      {
        "id": "27b6f7ca-de50-4ab7-bfcb-784ef1144cfb",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9ee4af6e-e0b7-46c4-abe4-ca51389cf3cf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "13f0d13e-16b6-4f6b-817a-9e7853d25960",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "445af17d-229a-4662-84ae-8b9ded4b1f80",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f92cc1-26a4-4fd5-b7c2-b4514a8d0126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0d4d5d0-5c89-4c46-be0f-d8539e27fe11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3eb190-305a-4102-844e-d391800d3d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a9ed548-99d1-4cda-9308-3f0add35b3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533581ea-fc3b-4006-a4d9-b4353b7c1bef",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d72d40-8279-401a-8213-c2af9add1948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9f55f66-59e1-4c30-a9e3-2359a339f196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df57aa68-2a35-4564-8a59-c54c965dc3dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86db7dc6-3ef7-45f7-923f-29ee5f290346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec02e983-026c-4502-94c6-8fcb3eb7b562",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55794ab-b09b-42b6-913c-bee8fe7d297c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f158e5-16a7-409c-bbbf-5d75c67bcd8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4abe08-dd67-41c2-958d-36320ddb1400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7cbc38ed-7fe3-413a-add6-01fe2eebb634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c675e4-57cd-4df7-8147-3b7352769546",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6bf72e-66d3-4b66-8f44-7150220edcf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dea24146-4cc5-481c-93cb-2c2dd4073501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4c50f8-9e47-4598-a0ce-476d349d9932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c74efe93-2d57-4801-bfae-3ff40ed7f12e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cba195a-7d44-4c96-99c6-d05d78049ae3",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43a7ea2-c3ff-4bc7-bcd7-5c729ececc20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8c09b09-0508-4df2-b8c0-5357c163aaea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e8f9d2-4576-4245-a5f3-66c3b159caaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58be9f54-c32d-499d-85d7-980cc4beb77f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8115f5-9a97-4efb-a7d4-cb43381acfd2",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d91b6cc-9c8f-4b25-872f-9348b4863e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0a53fd-8ec0-47a4-a05c-0522cee54652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9514b6-1b99-4623-9d68-2ca1233465b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbe2cbcf-998e-43a9-bc2f-71129f577c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ec3e33-b1e2-4cc5-a120-ab88e7e3dae1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d3a1f5-d3c1-4fa5-ab4a-8a0246451480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a652e496-4b2c-4807-af94-123cc83f9950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4996f3fd-bc0b-4601-ba86-159ca2c51a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4317a273-0dd0-4d20-892a-c8a9cd3c9266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf7fbe1-71fa-462f-9062-52ec4538de92",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "567d766b-fc79-4bd0-8ceb-f32b61372594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aefbfa01-7a83-4c3a-8950-db034b8304f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a96d6eb-b93d-45fa-b038-3c91cd90506f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7b92067-e95d-4edb-8fdb-ebbf90ef7600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31775590-4b61-42f3-a347-deabefeaf8a0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c773cd-8d62-43ed-be7b-19222d5633a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9077648f-1de0-430b-9fad-d85a92b5078f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5444b1dd-605c-4809-8803-ad2181729173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64a47882-6101-4bf5-93bf-f5423bee9963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738dfe61-2701-441b-b5c8-76b607fbfd20",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "026aa3c8-3d41-4899-94f2-9003bb1b0470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace1e617-7b85-466a-b358-9a43ddb9cbd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b39d31-a587-4e84-8c97-1edeadb664b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23284038-221a-46bb-a2c1-474850f0e0a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37322063-1ce4-4d76-98ab-71259b7c7828",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71561bb3-107b-442c-bf7f-3c4d0bd767c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbfd970d-c981-475b-9a7e-64065751d541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a6f626-1350-478c-97b9-8cd50d69c92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b02eb94-8588-48bc-8c50-263cda74bd6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c05f12-3281-4489-8634-7d4f9ffc1c6b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bcb930d-7063-4bca-b791-f54fcbfa433c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9846774-87d2-42ee-a4ee-228010acd137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc69914d-f6b3-4237-b2fd-7b1694e15c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fdb19e69-4060-4607-8b2b-144987621ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd6c965-52d4-4c71-836b-3eebba67ee9f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7904c436-4c4b-49ee-9023-706cc9fe3df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2d1f7f2-0824-4589-91d7-425da08b4375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5722716f-2e8b-4073-9424-d6301f28db7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10f015af-5861-4f50-a02f-105646ada859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49178a0f-5b77-4e3b-885d-c0a2108da61b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "339a473d-2e61-4f90-a74e-aca28ced8dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eba85cf-c4bb-4bcf-91e0-878a42f54139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1704b5a2-2cd9-44e4-82af-98dfe896b666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "086bbaef-e605-4f18-85d8-041e5c8b7e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6670be9c-36f5-4e73-805a-b5deec731035",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97feb705-506c-4cfb-8a32-3e70e1d71ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "682ea019-f797-4d60-ba77-df245828ffb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b472da-ef96-4087-8719-574ccec4a8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4fba7745-049a-4aa1-b73f-579ae98a25c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9734db95-c41f-4516-9221-b6b1463680e7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "299f6363-b6d2-430c-9cbe-4e74470239d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de276829-f8e4-48e4-a0ca-3cbe762b810f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb07c8ee-82c6-4463-b227-bed5a16be1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02375ae2-9552-46f5-93da-5ffa17908678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5008a387-5a31-4827-a5e9-f2f32e62d3b7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5cb0a8-b2b8-4a73-b0c6-10ffcde85671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d8f0ba0-ab15-4e21-83cb-e66374d7b896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36be80d5-b34c-49aa-9968-a636f368c372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3aaf4e2f-a917-4f2d-84b0-f79109d4e3c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed655d85-498a-4a46-a227-48f9223b0ffb",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "184a2cf1-3002-4add-8283-0513f4ab2854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66180806-9c47-427a-a8e0-b02b29dfa0dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b48e606-f049-4ffb-93a4-3e450b1a5fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "96b0606b-e998-4246-b685-b9b498427cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae485591-f383-4c33-bd92-e4f2c087f27b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16825c6e-36e7-4a4f-a1f6-f74577b08688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c1cdbf0-1f9e-4345-bc64-185c5da79f84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712b1920-20f3-4686-a355-9e8674e5d4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "15843d1c-d16a-417a-909c-86666864fb7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc40bbd-6e6d-44ea-bca6-3a444b35874c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36547bf1-6370-4808-b5f1-07e579010f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bd760a3-3f0c-4887-82fd-823654a266be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "031bf658-897e-4239-b8fb-3723ffe7ce4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "268d4e21-3958-427c-aae3-c2aa1ca1b499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1001c152-33eb-475f-b0a3-1400ce1bd655",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deda65d9-f3f7-4b01-9612-a92edea92645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e03a60b-c114-472e-b369-699c294c4bb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9dc99ab-486c-40e1-b0d0-1dc909cd4ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2546c3df-b669-4a7c-9b21-1a4c8a072f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8e3c84-8ba2-412e-b4fd-27475c3ace83",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec5af2f-474c-4ca8-abf8-db47f3ad20de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a7e7e4b-e60d-4c69-b667-d61887b00367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b690b4-3d07-4ade-9c6d-b6ecea7de31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9eeae15d-501c-4885-aab1-ecf9512502be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b5d37d-4a97-4af0-812b-970314ac9240",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d9ab3ca-0fd6-4bc7-8305-f52a09a6f7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ee35e18-a4a4-483c-9bc4-65ad6d98fd18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5054d6-264b-4e64-99ef-6d9f2edaabb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0c185b74-30d4-4cb2-9b4e-47eddebd9c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618026a2-9b4c-4552-a54f-0fdaf69f340c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41819d3e-17da-4265-8d4c-20a7833e7990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "932978f5-cb77-42e2-9613-0bc949390459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511704b9-f3fc-4af6-9863-0085146d3abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e0c6c2a-d30a-4fb5-92f0-643a542a066a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ed4ba8-97d4-4aea-90f8-b4412663c5f2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b70e27-fec2-40b3-8bfd-6a6113116a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ffdfe2-e4fe-40fa-b8c4-8f5e96c595e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e84f00-7371-4553-9146-8de3663687f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "54d63194-cb7c-4a61-aa7b-2229380a15c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "884395c5-147c-4c7c-8c06-ee60cf29abc6",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec99d030-af4d-4634-a5fe-85d202b44253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4809e0b-e438-4172-9a38-7a6b27a4f88c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e7efcb-9542-4e3d-8c54-c00d166afef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b67a075b-8d5a-4728-9b5d-2ce0386e60de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b1bab36-90a3-4a55-95a8-7266425c7766",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02abc910-4e4f-4881-9910-3083f628026f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32eab554-1121-450f-8468-2fbfd387b83e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd112fd-3c91-4723-8437-58a94833aa54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8faddd0-98eb-485c-bae0-ceafede844af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6101d9-6fad-4040-bf26-f85187ba68fb",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868f531e-a8e2-4020-bc36-1fb71dbbfe13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2b88382-2194-4a58-a608-b6d718d823de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "591f605f-72f2-43ff-8c83-a4e7c205cd13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d13e877-d6fd-498e-865f-5df1c4ae70fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc8e350-b735-4f83-bbdd-5e99992614aa",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf7facf-75f7-4920-9fb4-8ded4054a587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "103ba58f-2dd3-44cc-b381-f346efaa4d42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847a0deb-8e19-40ce-a6f8-a05d636a137c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5964de4e-22f6-4e13-b7db-75a045536423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729afaa0-2ae7-40ed-8795-cb64e4eb239d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73dce87-2664-419b-80a2-e81b0bd6ae10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f01ac90b-187d-48ba-922e-f3e93c69f29e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5130c0a4-90f3-434b-98e4-dc20aed8a117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f6afc7a-1a14-4cff-91df-33ff5ae278cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90525c4d-4c6b-48bf-9137-047b9deffba1",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "469d5c36-2923-4304-a3f8-b59d9d21072b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76df68b8-8e5f-4eb2-a405-f39e2ff622ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6223dda7-3547-4d19-b082-921ef983c873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "81368bdb-5640-4062-914e-f49d1f405f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e850fbf2-38a6-48ff-b64c-ff4c003539b0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91d0c05-1b36-4183-9af4-79598a0c1554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a136623-7f06-40af-973e-15011714c450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475a448e-ddd1-46e0-a185-39032f105179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bfe7f30-c842-4c2b-bc61-5b92432a2f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ed49bd-dba1-4379-818c-211a40c430db",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e912884a-a6bd-4995-a6bb-87f0a373c29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29d8a6c7-1b59-45b4-90db-6614614a6490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67581eb9-a5c3-4f78-b8c5-b2a0ae702f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e32f62b9-ae07-405d-97c9-f1c940af11a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10923c5-5439-42b5-92c8-0eeb8658b357",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56cb12ca-a90d-495e-a28c-b30a6297ffe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01ab2240-c33b-4bec-aaed-9f6fc9be403a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28171696-ebb1-4ab4-bc8f-c7e586f030e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5398a18f-e072-4fcd-bc97-e21f7308af87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1f8484-960f-405f-8fae-0ef6f8bd5f5d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7e0c63-2687-4ce6-80c9-abb2955dd3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d62eb517-9dbf-4139-a18c-af665c9d6528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bee32c2-7046-42fb-860e-aa3251886aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "311ff131-037c-4f13-97a6-da8897f8ee13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5849966-0917-4d8f-9216-cffb0e823328",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5dbb8e4-1ee7-4e1b-92e9-0a178f8d0120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c01a97a-0ca9-4601-9c80-c9ecaeb4605e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98aebb27-d43f-4577-8845-538b7c235da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "16219b6b-2e25-4914-9579-264dbdc245f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be902e98-f0c3-4931-8c75-41a3903c3991",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d767fd6e-1c9c-468b-ae2d-b6aa0d38c283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff0a794-6929-4bac-9b70-44bfddac6e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1341af1f-7c2d-43bf-bfdb-f64032e32416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b9452c7-b1a8-453c-be7a-d7026a80ff32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b44e65-59dc-4c47-9d52-6bcb743b5ebd",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954914c0-1311-4bbc-907f-e6b0d74334d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd2efaa8-76ec-489d-9617-150263257662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ce0476-1be3-4e8f-b2b6-1a5c7c130ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "841b7d37-3403-4b3e-baef-2b40f86626cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71a7cd8-fe9d-4910-a2e7-bd8ce2b03db0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2fe932a-614e-4a5b-9887-277d36d99a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95fbc6c5-266a-47c1-b7e5-c3cccf73801c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16630487-d096-457a-b2ae-b68f57844288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcf80c2b-b5c1-47cd-82e1-b2276987cbd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4353f5c3-e9d0-4642-bf49-34a57940f61f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34fe60f2-0e46-4ab1-b836-131ffb7effac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a669d52-a1ce-4a0f-be1c-ecef1857cc12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c631807-8a65-4900-a5d2-0c95ed4e2ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5cc3dbe7-69ec-4d0d-9702-b7980e0e9019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e9662b-a953-4d7c-b80c-7b5634f9b6ad",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6555794-7453-45e2-ac96-10613f662e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81931edb-d1a1-4339-b72d-1c008b8ce059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a5a439-2276-404a-a5a5-7d57bc95d370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a851903-36ae-4328-8925-f4fc9d07f070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc847751-e283-4167-8783-de9a9b60907e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2340be5-9a12-4e26-8491-8fe63b01ad50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e598d552-b3c1-421e-a3bc-4bfdaa98fe73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de2e712-9681-4011-9b0f-c82f4acfa559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "189a4f35-538a-4fe1-89a4-16d25710676a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a9d97c-dd9d-40c5-bddf-e2e07ca7222a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ad489a-017a-422c-a5b4-49751e102d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "732d86bf-f23d-489d-a912-8194939212e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad7b692-8e19-47a4-a93d-9e7c40cb2d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2781f4a5-3152-4b39-a9e8-fb7971f956b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4140980-7786-4852-a405-1a32cd803fbd",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a647844-6468-488f-8b8a-4762b35a13e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceee4f4f-c979-4026-b5fa-ded5a6cd6848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198f5fa7-17fa-492e-8063-ea1ca88b6537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "032f2853-8d26-405d-af17-2989d5beeeed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66dfd9e1-ca76-47b5-a244-1dd73aa7e0b5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c17c098-3461-4103-8f5a-04f8b53e7fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a439760b-f6ec-4f67-827d-abcba6a22924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca9ba38-ec3c-48a1-9da3-088ea4411d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d35fbfb-e963-4f63-bede-1ef7fade835f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e850be-ef89-4225-95fc-21916e9f220a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a87f35-4be5-45cd-a829-fe46018f31f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da04a639-4e16-48bd-b9c0-8e35eff8038c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d95f7faf-fe02-4739-a3c8-141812d45ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "08056574-ede3-4293-ae7c-55da0f98ebf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f470c1-9f26-480d-8fae-3653dd9b313a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6abbb268-f958-44a3-8971-e4dc20cda0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "476fea97-5611-47a3-9c53-67e58e2f90db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101da642-721d-45a1-a2c6-950b3fb4ba3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "39ae2b43-a5f2-45cb-9515-3ab892705fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90bae649-796d-46c5-a764-678a9238ce30",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "441bdfc3-59b3-4157-b1a1-8fe40716e111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68a38d5d-775a-4b6f-8201-2bc5b36aca89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920a5092-8d03-4f95-abc4-9ff15a654ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e882782c-6cea-4ad6-8127-e90563699f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f82a1ae-1e7c-492b-af24-d3c8ad0c8076",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13f98c1-7525-446a-8b65-ff33daa5681c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "055ffb24-022d-4b88-a4ca-3f565be71935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356ddf52-6250-4137-bfbc-40b9a24c155e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "46a227f1-0444-4250-8f1d-b6288b702051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d9b2e00-e317-4024-a1f3-738312aaf8a2",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd7aca5-8268-443c-9f55-af85d573f36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4b3a12a-3e7e-4860-a5cd-a8f229c307c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88fdcee0-64fe-473f-867b-c0ef5013d562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6476c6eb-7664-42e7-8558-a1f6d09217ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0763c5c1-2c66-4ae2-934b-fae8697f7dfd",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a0e967-2a16-44d1-bea2-f757eb6e0f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc83e0a3-3066-44a9-a64b-bde4e09bbf85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b87e430-4349-4ffb-9135-46a190ba7e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "eda9036a-b438-4a34-bfbe-7ab1be936181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53bcfe36-0e06-4c4e-90e6-1b5dd6f918a9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8e1ed1-f1dc-4cd6-ad77-8e6ee84e2eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f32122-75c4-43ab-9538-28c1333b2eb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09598f05-a812-4652-a80b-af26b28269a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2189ba90-d964-4c53-950e-a072ba0366d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9319dd-6429-4c8d-8e6b-b62a17a95c61",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "460b20ac-b2a0-4869-991e-f892d4be6e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48ef343c-19be-4be4-98c2-99cc99ec34e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b5771a-4105-4bfb-a1f8-0a07b23852e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1823e4fa-4b1b-47d4-b7ec-8adffd337cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef9884b-68de-43b3-ae6d-ef589481386b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12712b4-0829-4c85-8be9-1b4f8ca04d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea0e3f34-ca25-4cd0-93e0-ea8182f8f988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485d4b62-f6df-45c6-ac7a-c6c09fbb8dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52fdb52e-3556-4028-a7be-259604fcc52b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5585be26-6cdb-4cc9-afcb-18528dd092b2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4980dc-9d6b-4d08-ae75-f932d74e4463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ab1cb13-c5a0-459f-9909-11841a6d2f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152c49ae-3602-43cd-9f2b-7a24f9912053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "991e74c5-4077-4529-8584-65775ffd8db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d07f56c0-380a-4cd9-b400-11edf09a0d62",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a558a531-a1e1-4774-925c-8a84c96f135b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db509104-b04b-484b-83b6-04a21a476fa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e3e5f8-cb43-48a1-9798-907dc67ce308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7e80a9c1-78b6-4f6c-b2e7-9cd12236070b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e347f8b-f257-4125-8c14-f076390fbd13",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c47d76-60ca-4409-8b8e-f2fc2c600455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ee9d531-7e07-4d44-b0ea-cbef14eeb86c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9913d0b2-6cbc-4e75-8d96-e6e12b443ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "027b6649-78b7-4035-b5b1-e63210805dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532867c5-0aa6-4487-8a05-fd2d64065a47",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89523118-2505-46c2-a05f-12f1dd4c1697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e74f9988-95de-4334-9a3f-09a4ad5a3beb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67d2ec1-f905-4c75-8556-69e9d0a7c02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd58ff40-d0e6-46f4-94ea-5db0f59ff866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2745fd-63e3-4c92-879b-daf1ca277aa7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83fbbeb5-7048-4a5d-9b89-af962f0f0bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31e7a949-f5eb-46bd-9631-461f3906bf03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af19806-aa58-434b-8bd2-e53d8307933f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9505415-19d0-4541-89b3-3b8aad7d354d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7817a6-41b2-43a2-95c9-cb3f8b4bceaa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b3eea4-a12c-4d20-a6b6-4efdd572ef6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eecd06ec-57e6-47c1-813b-02aeaa12dcce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb22b70-b6cc-498a-827d-d075c1a4bf8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "17bed3c9-043e-4eeb-8494-80cd3bddde54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e753dc34-720c-4b0e-9308-457080853e52",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2e940a-5bf9-4430-9288-db4084c8bcec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29965599-012c-4c9d-b846-9ceb662c5c7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2b738d-c892-4955-9135-9073e40fafda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9223043d-39b1-4ed8-ac6d-19a104b3e9da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7bb01e-6928-4c32-a263-238ad8c1720a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7f188c-4152-4fff-b460-2b5dbf19436f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b33c73fe-1443-4488-aa5f-8fee594cf650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83ab9df-94f0-43e9-b558-96577239862a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "436bc9a4-e38a-4b45-b2d5-d4fed60d6593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26593c80-1ed0-413f-a341-c72d3823ef9d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95afbe99-9000-492f-97db-10e7bed10f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4e02a7e-d253-4bc9-9dd9-9806d11f0ef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c06a58-10ae-488b-9eff-1b821b8839e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7062fdc-3288-481c-9d45-e274109fcd37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ae16b1-667e-4c73-9c04-55ef7af223ae",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd95db1-6216-4474-9869-b6383031b900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f5e6f8c-80fc-4f64-8ea2-dd6ce32660a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcffe457-0fd8-4988-ae8c-e0e9fb8dfeb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e480227f-dde1-4f19-9cf9-57d4d5b96fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd32cc6-87d7-4f7a-a1cc-75c098f7dffe",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e686c88a-cd6b-4140-9d75-8ae51321c4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b2933b-001d-4c1c-995c-38ab09b32e3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5cb28d-d5ad-4529-8d6b-0993dc220f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a122fda-16ea-4af4-96a2-846c8934ee41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b09fd9-0eab-4631-8893-9c314a5b8d47",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37275d6a-bc31-4d1f-9088-2c1c8435e383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fbef7f3-26ab-47e1-98ef-3c6082f189d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985314e4-c70a-4fdb-97c4-4880c31814e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c53601e-bcde-493d-8241-35e363ba7a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9f2eb3-246e-4c99-8b1e-d0c46d6df1fa",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab95366-ede1-4069-a526-323d4570c804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c394853b-9581-45ab-9504-7012b9fd7c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a6fee1-9fe7-4796-8ae9-557232b2a057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "983dd6f3-6212-4da4-8288-f5d72414ce30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff90d837-ef87-4894-b27e-9f3dc760eec2",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e97169-c0e7-456c-a91b-ac719c88f1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de8fefe4-ca8d-4efa-bf19-6c1377d99468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56e12c2-aa55-471d-9660-58ecc3334dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad91cefa-fc4c-4251-ad11-19bead19540e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15765e7d-ab50-4f80-a4fc-89b8aab985d7",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8a7fc3-f31e-49e3-9adc-3b16a2490244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a4487ab-76ac-42c2-ad91-0c318764dc37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b25929-a8bb-45a9-8a14-84ff00f697a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7459bff-236f-463d-963f-f6a2f8d23d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ae508d-b2dc-40d6-a0b2-78ed7385abf9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c928be8d-ad9a-4fdc-b8f1-04c597a2245d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e6e49dd-bc45-48d8-8d6d-61745636c58e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4a67e3-d6fd-402b-b6a3-9c732dc451da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a93273c-d998-4c05-a85b-231f68fb6006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d555d947-6848-4af4-98d3-a30514506138",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51b8672-a81c-4f2d-9cb1-aec70f42b700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "283dc799-1703-432e-87c9-8030fb1aa1be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af74a810-df52-4239-8e80-1fb78ff3a0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3df3017e-2fb7-462b-b11a-0a4f2bfc91e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6db731-b9eb-4d81-bc51-b89a558a629b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6a1a34-a3a8-497f-8bf3-f11b685eb349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2024747a-f0bd-4666-9271-3e89f27d18e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c34f5e5-68a0-4d5d-9ad8-3ed845baab3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "09b6a6c9-f9d7-4f3d-b382-adc131babb1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4c3c25-7391-4716-be26-079a08727b5f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe515e7-be0b-496d-bb6c-20433a3f745a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59298d7e-e709-49a8-8cb9-f4e3441b4964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa85ec6e-ec78-46dc-8ad3-dbbd15a0d114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb7721e7-cf61-4c52-a1da-a2fb6ea8819b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37bceafe-2a36-4644-9440-554e00079bbe",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f631e16-5c7e-4f38-9bb8-55eda3c3955c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4e548a5-94b1-4523-a781-6c4a8fd70e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e1e5b2-697a-4db8-9fd7-f414cdf2c203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1f48add7-e9c6-4489-a290-06e66a195f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038a588f-2ec2-465c-a46d-d2f0f9de3115",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7c085f-f9b3-4c6b-8a8b-fa114517764d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f9ec35f-9919-4c63-a134-c0af30a84a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3ac37e-d642-4118-8cf1-487757ae44ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d489fa1e-64e3-4487-888c-a1e381e1adf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebe0731-b017-479e-bd78-d14f3008a5fd",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a69132a-df16-4774-af5b-29881fead7c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86ef29c3-e558-4ef6-90ce-7108edcce454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "566455ee-bc73-4778-8f7f-944623a03b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3737510d-e0b6-4481-b015-29c4a9c9d06b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a45ed4-6b03-4a05-b5c9-40b15f78c182",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8380ac0-1665-496d-9183-d2577d297039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aecbb88-a837-4ba4-987c-0e3698e6904d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2981cf-f972-48af-a8eb-f1dc105e2bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "079c7bcb-aba9-484c-8c62-fed40e72b878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4721bd06-ec2b-4b5e-acc7-cdcbff3b6cc8",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "999148ac-7222-4b84-b910-b54671dbfec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78af4fdf-19b8-4c8b-bf55-e6c577468fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02cc0e06-6dde-42d9-b39e-a5c899b5e58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2591ba12-fe9c-4150-9dcf-9636f7db7385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c08331-812c-4ea3-a25e-51f7078e8d9d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2e9b85-811f-45fb-a0ce-b123ff65fb9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6505c568-ae55-452e-951c-b843863f66ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0e95a1-91b3-4143-a502-b15abe52c695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eacf18e4-ccc6-4552-8e78-4d14e0c7c3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30acd754-5dd0-4a32-86fb-ad1b5f6e05bb",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a0bc98-e99a-45c1-bda1-3e9419fc8184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2966295c-510e-4d59-8fb6-5b1ef9b09b03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31647f37-a039-4e8b-81e0-1039ae63a409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3423b8b3-8c2e-4ad1-bfa8-0470b63d9f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3cdc4ec-1a0f-4cd4-882c-6c82aa6ced96",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1e733f-8582-40b8-a7f1-0d2088f03748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff43142e-6423-4837-9990-0de360b1e8df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5b6485-a006-4039-81ad-f000923c2104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9382b53-a4d2-461d-acc1-df0b26846c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6512cc74-c4f4-4d4e-96df-604e96fa1775",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d11327-ca13-4623-a596-9143823d2596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75f944b2-467a-4cff-8fbd-ea5bacbc7669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02453fd-0739-4bb0-9c90-fd3957f01ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4779afd1-3d4d-44d0-b2c3-809944e9ff32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b16d2d-b89f-44dd-82dd-578d681a379e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f9343f-69c1-4290-9f59-b5a6a1d853ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc8ff53-8ce8-4d37-b462-f0109255d23a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d00df9c-6965-4d30-bb87-beb85da2195b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "386da57a-c03c-4195-a8b0-9d63cb2ff269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b748ae-29bb-420a-9b5c-5de34408314b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b94202-2479-4539-b6ba-a1afb071aa9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e30bf537-82a6-4193-8322-9a89c81123a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637f7fab-9d73-4bda-9b04-c65437ec930f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbf57d8c-31ad-4d78-b5a0-46d712c847ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa0f121-947c-41ca-a0fc-5eefc8f35a3d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cca3f2c-60ed-470f-bd93-30224b687c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1630a60c-e72a-465c-829f-b595f7ce00c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0079fbd5-9964-4b20-8d69-848d221d0abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb79d72-9f5e-49ec-8bba-2a734fe43fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3d14ed-67d8-447d-9fed-1dbbf279c007",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "800d90b4-88f6-4e53-afb7-38ff2737fa7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cec4e7d-965f-4c4e-bd94-6fb21f96682c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc3532f-588f-4f6e-b81c-a838520bf38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ef5277c-b670-499f-b0e3-aa78fa185207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee226ea-9985-4eeb-aa4f-4f48e3ddb559",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2916c93-4cdf-493d-85e7-9c1025eb4e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a5cc6a-5730-43b3-b558-8d8fea21f327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9258586a-100a-4204-b100-688125796c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "33f044cb-b0b2-4178-85f0-12829e3a4308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86cbc605-02b7-4e52-8e5b-7cb8da161176",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "434823e7-abd1-4183-9937-82554f6e0d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ba5c09-c3ff-4ba8-a9f5-9179848daa29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b20dc68d-5006-412b-a713-5d3125f28066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "131790c1-3bad-48ab-84fd-fe69a2ad4125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262a87d5-68de-42d3-b49c-b1f771046123",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "191ba7f3-d781-4e30-998f-94227634918d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78795c59-c548-4195-a8dc-92facb0ee656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc58a12-327f-4b82-88b9-a4f3565a8547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7737fac2-a0b3-4c7b-86f5-491b78426f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3fd895-6567-4afc-a21c-350b791b8d00",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b62b67e-11da-4fd8-8970-bdf705d2d97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72666a7c-6dca-4e50-95f9-abdb63f260b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ccfab34-9396-453f-bb86-ef65d53df63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc51c70-5fb2-45fa-a7e4-bca5fa8f0d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4345f497-13ad-4104-97b3-001618efa885",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4736cd-1d65-41cd-a62e-d58c7173fb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2339c67d-d8a3-4bf3-bc26-94bfcbdac92c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e569676-085d-4ff1-91c0-b50e30274af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d570175a-fd1a-4a52-bd1c-c90df7576709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5858730d-eaf8-46d1-a091-37b52ec58ca3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "875118fc-f87f-4708-b204-4aea911d7eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0c814d03-d3d1-42cc-b3ce-df7d7b265709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c63f48a-3ac7-4892-b9bf-a6393f7ab155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2652e51c-547d-43db-8f27-6431fb7e092c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fe288e53-25cd-4002-add4-36361782f81c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "36592a51-7a1d-4219-9ca1-ee3332253aaf",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a496b432-d259-4eff-9e1e-b3af81faffb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "92360693-e4d6-46d7-92a2-5efb4c0a8c25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fbe0adf-884d-49b9-a387-45407b40f6c2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22dee3bb-9d30-4a84-9181-d533ee52304d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9e203ee-8f3c-4168-80a7-d3482955fe10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "487dd8ec-3ed2-402f-b30c-dd468458605e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8849565-cdbd-4e9e-897f-6f37c3ed0707",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3563793f-4b58-40de-a6bd-29fca79f16ca"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0ebe23b3-d1bb-4dd6-b963-3822e1b36b58",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "edb59174-4725-4945-8750-31823ec625a7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "093a5eea-0308-4c11-a058-e701bfddadff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a457e9eb-b8d8-4db4-afdf-1e72072c171d"
                }
              }
            ]
          },
          {
            "id": "6fb905a1-1a3c-44f4-85aa-5144790377c6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c51f85c9-197b-4b33-9036-f66f4ef2b92a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e5be4b5-eb81-43a4-bdf8-92a2616a2530",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "feb8e1ba-2758-4ee2-8430-79c2c0005ea7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d69f284a-4cf7-4bf2-9340-e451080388b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7c992834-e7a7-421b-b220-6e6225c66278"
                    }
                  }
                ]
              },
              {
                "id": "db127ec8-ae16-4849-b4e2-4c7e40bda673",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "04c23a69-102a-4ded-92e2-a75441fc5e1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "735b69a6-7783-4fb2-9cda-e301a2aadde2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfb60df4-ae98-4932-bc2d-53759e8e001f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "79f0e012-1e19-485b-937c-35ee9824437e"
                    }
                  }
                ]
              },
              {
                "id": "de29e8e9-d648-4a09-af30-5f9d428bc9bd",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "320e8bdc-3561-4dcb-8749-36b2862b64ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "08c4edfc-7318-4887-9738-cd1c73acf25b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4015ca87-c1fa-4d05-b83b-cbb4aa2d23ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "74a3d4fb-89db-487b-84b0-02b797e75497"
                    }
                  }
                ]
              },
              {
                "id": "31fede18-5ce6-480c-b359-554a122a0066",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "39d2c4a4-0043-4fef-9639-972f3a3300fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "56e64147-9e8d-4b61-86be-581333394bf5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93d8f21f-227a-4f86-9b96-77d916ba01e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "93065822-017b-4456-8b57-c19f2bc033e0"
                    }
                  }
                ]
              },
              {
                "id": "7b372387-41ca-4d82-8fe1-6e00ad5965db",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5c200ec-6520-4c35-a9ec-6553d0f8a0f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e628428-8bc4-4f40-9d3b-c57332f50186"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67e05f66-9b0d-4101-9038-e2edd8a61d9a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3cf10b50-ea40-457d-b5a1-854754546a36"
                    }
                  }
                ]
              },
              {
                "id": "abea689a-ee64-475d-8a9e-a15d8ee3e540",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e351c9ee-56dc-432c-8e8d-31fa6feb72ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a48ee367-525d-4e33-a010-36fa6ef3b818"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "abd73b76-71c2-48c0-8d1a-a350a8e36600",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "945cc885-77f6-4470-9b40-66254d40e432"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1f78366d-9c8a-47bd-a544-212fd9fa0fad",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1a00a4bc-ad2d-435f-b6b0-aa1f601b31f7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7e4b9c88-4b2d-4232-a1bf-bcfac9f54f9a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3b245452-9fac-4a33-83df-60b34646efa2"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8cd55512-f5ac-4a8e-8dd6-3347a5199f5d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e95f4be3-f2ed-4483-9e9f-534be716cbcc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "448c9069-fafb-48eb-a289-286523213851",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3a985907-fa57-4eb7-8fb7-53ad338962c5"
            }
          }
        ]
      },
      {
        "id": "4ec3e8c1-37b4-425d-a5b4-7db721948ad0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e26a8a2d-c027-4606-ab80-3fb03167ef06",
            "name": "Negative Testing",
            "item": [
              {
                "id": "809ba1e5-f64d-486d-a4d1-93365a6729d5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "153b9743-b652-45bb-80ab-ff0a347bf296",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c26a40-dc7f-4cee-8a8b-f9fdd5d27c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04178aba-7a83-4163-a4c8-6adadc8d0b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a83938c-b9ec-45a0-89aa-4e499300f712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "97564448-2f52-41a3-a360-7f2545d513a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312efea2-fccc-43b6-85b8-b7cd12829b51",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ae1538-435b-432f-b973-62461accd988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb296b39-ed29-4736-a377-42e20ff5d619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441a8d2d-eb55-4172-aaff-c3af0524af3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1729e380-7783-438b-b996-3f2fe81e45c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573c3d41-92a6-4a3f-8e89-0a7a2e06e5e5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2cbe85-3268-45c7-94bf-38246bcea1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8b47a54-9332-4fca-99a1-6cccbde414d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79374fbb-478f-4e03-b0a1-4661813a53d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9390ea21-0828-41d2-affb-2d572ff5944b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17340196-9d0f-45f6-8e39-cf0814020865",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1facc849-4b54-44ad-b277-e0b8ff6cf3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d13916f7-1530-4bff-a825-1cfefac1a5f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a6d3ab-85ba-46dc-ad39-0f5df7cfa127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "576d717b-f8dd-4ff7-a93d-bab25430656b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe66cda3-c56b-476b-a2a7-b0facd16b214",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33470e30-1ed8-4110-8117-9fa4e84df467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "340eb0bb-fcac-469d-a37b-0acb1f8241fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9855b0dd-41e0-4174-8e2b-c49f4eb90061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e724133-dc09-4215-9454-6cdac0a57548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7640c71-5991-458b-8080-b240b5ec8bd3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a245cb-27a8-4d05-a7de-256445c0a2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1ad3e10-f1ca-4b53-a0af-b477e0bf55b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26dbf1e-443e-471a-8bd3-ab1bea0ace3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d2ac2bd-baf2-4c4f-88aa-1faa49575692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ed60de-6745-4a1d-a38f-4440498f1be8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f27f3df-f860-40f9-b303-e76321fd653c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e498d7e-e5f6-493e-923e-5e1429141ca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17cb1ee-a675-43f1-a9ca-f32d7d7d39ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2b2a292-8e70-42a8-9610-dc7b11bbce9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ba4b2c-5c46-42b7-9d49-eabf2e0bfe5f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b620f39e-f24f-41f4-969c-d0ea32f56666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "266dfec1-1211-4707-8e70-680adcaf4efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e7f945-6497-476c-a3df-288fef85a4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a6f641c-adf4-498f-81f6-a24c4bd5ca0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fada904-e953-43d2-b00c-bb2ebf418178",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0d7ec8-2663-458c-8222-1820b7fdfb56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3525a316-24e4-469a-9c5a-8f4ea902dca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b817c480-5221-42a3-9919-a4dc5e924ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76122151-901b-433a-90bf-2834cf39c56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3c291a-7b5c-43b4-8c5b-cea41d5b9f24",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93300af5-b111-49c3-bbd6-98ff0596be24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "707b46a3-0132-4265-89ec-90b8965c5151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f754b1fd-0942-4069-8375-b4df893f0ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25eb5bbd-bfe9-42b4-9c36-3267376f5d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde54bce-f1cd-4007-92ae-285b99ef4f9c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35fafc2-2d66-49af-8e72-2773d9963603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "251f3806-3dc0-416d-a79a-db9a682f7ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78405767-c849-4d02-9d12-f4875acce422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ef2fc5-793c-4fc0-bb7e-6d5bf48481b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2728ccc2-18f7-4cbd-a43a-5d5ff0198f0e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1706f5-ece3-420b-8727-a4bde9884880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "056e9491-1b73-4028-92da-ab6b18e6076e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16389009-f4dc-4e85-a95a-86057a8fa2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b98c6d55-b398-4ba3-bee8-10ff2441b562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37289a0b-f638-4c2f-9a89-f8c6465c31fd",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88d3261-46d1-4d65-b5cf-1da3b23de008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a9da61c-659a-4088-a2ab-fc5d7d3e710c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4a4861-4a25-43ba-9a57-ef46e2b9506e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc82835f-0ac3-4887-bc1b-18919f679a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443a5e0c-3a3b-4dec-a3cf-3ab0131733f8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6415da6a-5cd1-401e-8f67-7026d245c1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bad1a91e-8eb9-4bb1-9a2b-36eba8e7533a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a7931a-cf5f-4f42-9a0a-50cf1e99c512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "35a86c24-bf97-4a9d-b08a-267f54b29f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f80b176-37a4-474b-b5a1-6a0e6f960b03",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5d83c2-2652-4636-9acc-0d7ef6929d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93fc59ab-f650-4a3c-b968-c9a937797a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98877ca9-92b7-4b63-877f-c4e3ab8e1cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "36cba72b-59e4-461f-a7a9-2024faf7e906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11ef40b-5a8b-4aa7-a985-0418ba40703f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4915bbf-61f5-4100-a220-62e388f8f8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c84c60d1-feb1-44c3-b516-1eb9debba7fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b50f90-59d6-4722-b4f9-64155eba7c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f596303-6bdc-4200-b478-aa2eaa88b27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586a3009-ff43-46e1-a903-e369db30412e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c28f95f-86d7-42b3-a50e-a90eed4a4cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b5639d-c057-43f7-91b8-f9616aac7741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3539557-050d-4cd9-b045-11e39946dcdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "34fbc0ec-a3f2-49af-a294-a45b2d0d8e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e217fcfc-382c-4da9-a86b-6b407b61f8d4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb79b88-b3ae-4102-92bf-8dad6da7f77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99a7a4bc-f082-4542-95ef-03aecad611c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d8d842-79bc-4eab-abf0-6bf4c8289244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb355fb9-bf5f-413f-9efa-e53d33cdb6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dcc318b-1280-4d8b-8cb5-24e290e8163b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e0ed8b-7dca-457c-99c3-ca4d30f1c2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "118091f1-b846-4be0-816f-535b746aba54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faeb9154-5282-4cbb-bd17-3af2a86d1b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38221389-c3a5-49f3-8ba0-c493e3dbae69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8b8bc4-e43a-4693-bd69-0d4b6d906f4b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ee327f-d614-4ad0-a305-d84f21c20014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a04dac91-33b2-47f6-9412-dd015a840818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007de7e5-d070-4208-a6bd-edb29b88933f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2baed57b-25fe-468f-abbe-81b4111b2b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9f3124-279f-4796-b3c4-2c5cddbc1ddd",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6ad422-3900-4316-a0a0-1d9613d60085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b48371d6-862c-444e-b6e0-9b475c265467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02efa833-a4b3-49a3-87d3-3811f1bef309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f2b7205-7c48-4b9a-9c6b-9eb53020a72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63bb7e3a-0b3c-47ec-b027-41dad94d0e2d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9825eef2-aa2f-403c-a17f-69bbbff8dc80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e305ebf9-b59f-456e-be3e-86e32b249655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25039c5-604c-4a65-88fd-1c5474b16b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bc1e838-fe20-439b-933c-ec8bda6b1756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d3209b-9b19-4699-b298-5b8e39c77546",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd2781b-ca98-4469-9de5-5b589b2670e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bca0721a-4078-4d00-a05f-efdfc5bce887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b76865-1e38-4849-9412-dfc264602ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d3b0ac6-1da0-4c0e-952b-19401f044005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce51be61-70ba-445f-af36-9b8edcc48e6e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d772cc5a-1245-44ab-9fe7-83437e6b1553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7450da4d-7046-4e04-a4ed-6ac9c1dc1c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7717426-5821-4c97-a26f-c5c1ed51867e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1313fdd-14a6-4b18-acf7-24ff995c7e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5be300-f1fc-4dc5-a81b-d102a5fa797d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "234bb961-e1c8-4639-b5bb-ea63681dad2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4f36900-ce6b-4758-9b6d-b0a922dc3f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5674f2bc-ed4d-40bd-8611-67f82a9aa706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7226ed7-8e58-4a6e-b951-1f6338b36962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89da0ca8-2e7c-4904-a080-6961e84dd391",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ddfe5b-9d16-4045-9cb5-587714199f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36d91b8a-4338-4236-b4d4-82b5a9b0f27b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95908b39-084d-48b4-ad82-293ea787d5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c24c16c3-9856-4615-a965-329d387da7a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774acdb7-35c2-46de-b376-50375bcaa740",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9ade30-7ead-4cce-b59d-6320fe2b6383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb7fde74-852f-48bf-a234-e3423a6e2dad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "badd1f6d-b62e-44bc-9d9c-fcb35feb8a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e5b75be-301a-4a9d-9729-dcdfa82c39ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0fad3f3-a3d0-44fb-81b2-2406f150e844",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9058c1e2-9463-4ff8-8a08-3caa86899dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4b48c29-a008-4802-bcee-e3883e6184ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d372f050-59aa-42ce-9110-2b020345d0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed34c37c-6245-44be-ae4b-3db622d1b21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967e23b7-5a1c-458c-99a2-fe934763f3e2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e1474c-7557-450a-8366-30b831194664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cf48405-aec4-4771-87aa-f0d6a4eaeb47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a37783-56c5-43d8-b99b-7167b2c7ecee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6919b358-da2f-4eee-8ee0-e7451b788e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c086c0f5-a68b-4fed-9be5-6d681d5006b0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c563808-b51b-4cc2-8478-2a101b140ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef2ba4ad-35d9-4c6b-9ca8-afae23ad4a9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d27c9c-a843-4790-a785-885203afdb82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e453947-d30c-47b0-a6cf-829f09019be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668f0bdf-07a7-4138-a87f-000dd127929c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03650b0b-079e-45ff-b0ec-b64efee79812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89e7a4f1-d05c-4268-9670-6626b1261e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79bd8773-c2ed-44c6-862e-075e11e493e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2829e61-8368-4d3a-9ba9-62c67be515f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0951fa5d-bb95-4cbf-b69e-fa2e84f6246b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19040d27-8fa0-401d-8ff7-e82b2236bc10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8245487-624c-4618-9a02-cc99b6108f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57a6d0c-754c-42dc-8c78-16615811f9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4d717e7-6b23-495a-83a4-63e27a42573d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bd9699f9-34a6-48e0-b06e-624d9f91a012",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "da217e8e-e8f4-4261-b5f9-30edec5fcdb0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5422588f-9403-4778-9931-85d4b26b684a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "45cef162-317d-41fe-a3c5-878ff1dedbfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b8c426-d585-4564-91be-a0d63555ca44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "acddec58-aa8a-4bae-8e38-382e5b4c2e67"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22222b23-1125-4de3-9eb6-5f970664b689",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d58e6bb-531e-46f7-95dd-5127fca46da3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "512c6543-9c5e-4d8a-af55-82649aa61a08",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95da6cbc-c385-42d9-bb41-0e694a13bbf0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "84cd9557-6fb9-455c-87e4-1f6715d3e474",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b0a13ae9-37ce-40b9-8ba5-d81db1584db8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "96950bff-ceb7-4b6e-a2a1-95231db7fc8b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d62fde3-7484-4533-986a-2cd2e9ff35cd"
            }
          }
        ]
      },
      {
        "id": "4beb4d7f-0d75-4794-845b-cb0ee4d3223f",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "63e381b5-a191-4b34-8b0d-4e69843f9a8a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dfe967f8-f411-4a66-bc6b-7baa084f984d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4902469a-6a1a-4ec9-b657-bf654d1c174f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb927f7-28ea-4254-af24-b02a1729ade4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99c38baa-f5fb-4bbe-b25b-fcb197dfada8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e87ee7b-92b4-4c9a-aaed-3f1eb45cf890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "daf6472c-55ad-4894-b099-a70a5c9f2e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b6b84f-b2e1-4990-822d-996fb96b573b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48feed9-6cde-4e6c-bf69-d7bfead919ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e6e445b-7089-4306-b9a0-1bbbd032cb53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a171db8-f5e7-4303-83f7-8a38412d99f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4b5b44a-279a-432c-b295-71267e4909a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6a839e-df16-4d7c-ae13-494473bb5cd8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c56ce4-13d6-45cf-99f5-1644e780553c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e14164e7-52ba-4e8f-8c06-0a7cfb10380f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55faf700-f85a-47d4-95cf-f5a214e0738f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1cb3573-115b-4c2a-b3d2-26fc1d7bfa39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa58c10-67a2-479a-8078-c9d196eadd7e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8188fdd-6aa9-43b3-a69e-45468fcf1776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5824d704-d696-4e48-b32e-97dffc7fc93d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77fff19-a8b3-4091-af19-7b6738c158d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b9cd5af-b16c-4dfa-9f60-54153d818f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd65021-313b-4b36-8462-fe1d45c9d90c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63fc46b-2d5b-41ed-af90-eb3f4836165d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f56e4d8-98fd-4b86-bbb1-b96a1cf94f7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e50201-2dd9-4520-a512-f453b9d06756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "226973b4-f07a-47da-a2d7-818ff3a7a6f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b22be8-b6ec-421d-ba8c-5462e8631bff",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3d6a9b-855f-48d8-8888-49b3b7595880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa438ee9-0ba0-4dd4-83e3-5afdfa931856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec9fd82-3f67-4998-ac8c-f08aabbc4d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "78decd9e-4c12-4c09-a1b2-05ff67160b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146fa485-027b-4f40-b6ef-c6636b4f53a6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99358c3-4e09-43d0-af51-cd4c2bddad8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "182c5f06-c4f4-4cf1-8803-c93881640831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe68dc8-4c0c-43ae-9843-17fc5868500f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "19e053d2-cd5e-44b0-bddc-d1e9e265e30a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f2e4f8-1fbe-4def-b248-6f4f708a8baa",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b6842f8-d74c-4b9f-84a2-681ce348a768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c27fb6f-6c78-4bff-ba1a-9a2ffddcc114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a3b8d9-d92e-41bc-91fc-81252f281fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc992d7-df9e-4854-8325-e22e93c6f1cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10260037-becf-4c46-a4f5-8b6b92730949",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b23e5c-f6dd-4405-bd00-2dfb268c2476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14a08665-58c2-4a6c-8bd1-c878c544e63f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764827dc-1289-4cd9-9838-41b90a9aeb57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "887b29cb-166b-4d29-8d10-d4d3a482c618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b39c8d-e0fb-40bb-baaf-1bf60005c2f7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c82feb3-e4e5-44bd-91cd-5d8253c7cfe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7e277af-32fb-4e54-bd18-b534ef54058f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5435a1-fce9-4b27-ba4f-2a496c79ee3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2b83cdd-bfef-41a2-ab26-2f5545d82dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a34b52-f570-4f1f-8855-5d9d58983878",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7229d584-d264-452f-b8fe-29f306d14c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff0fce1e-9e16-4791-8348-f7cc0e218b90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb23eb62-152d-42dc-b5b1-1c4a25bf1149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "81e7afca-0b48-44af-a69c-b925e69e598f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012faeb3-f7cd-4fc8-ad95-a5224937e37a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12601cd1-a039-4326-9905-298814526b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3963ef4-d172-40ee-b42c-d2513fe3e74d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f9c2e92-4e22-44f6-a6c0-ad27494c18ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9729484d-6d0e-47d7-9f94-9521467088d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c142a53b-ede4-42db-9cc5-16d5661801d7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9fa479f-1288-4085-ab0c-ed5ef44c16c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d83a7e02-59b2-41c9-b3dc-e4e5afb0d5e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd563f0f-a85c-4e80-94a6-83b18a33b222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "77ad520f-1a70-4abe-b2b1-7c4052b9e849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c53b82f-7b44-4677-8554-918132ed75d0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa91ab1c-a02b-4556-820c-9c024869a65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "322530d4-898d-49f8-bc57-2a6e285482e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa7fd43-d424-4317-b185-7d87989b8f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e839a80e-5ba5-43dd-b3b4-a9f455f5766a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c34e9c-c4f1-429c-bd44-49197e98b5c7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e3dd50-893f-46fe-98cd-8b0badba812b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebe92613-40de-485c-9833-6a1c0269bb22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b727d8dd-4743-4c27-89f1-0e32194f515f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c52edac2-737f-40bb-aaea-f60a62144aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85059324-b8c7-48ad-b31b-745c6efde7d1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e7f289-0f38-4f4b-9e45-8a471e28b08d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc7e3621-df40-4cd8-8c2f-2e73d9627463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1f39f4-687a-4d63-907d-ec4251fd7b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e15e989-4854-42f3-91b2-675becd1d13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79c8ef5-3694-4161-94b7-1534c0878b37",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ffefff-79db-44b6-ae0c-7197ec2deb92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b67cc3b-c977-45b0-ba04-8ddf862b7ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8362c12-31d8-4ba0-9390-d3e0f765c4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9202c381-ad37-4b0e-957c-a36485ed11d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b13684-5dd8-48db-986b-ad1e177f5efe",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "854cb6f0-5113-4b69-bcdf-915d2f0d9a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84186ef4-4a14-4f40-b76f-48fc17fd901d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9f6c70-3861-4767-8751-101c524211ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cd032cb-8760-4ede-a83b-ea61fe299975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9de1697-7649-4836-92c0-9be6ea883353",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "347b3d44-9581-4268-bb78-8e5dda88e55b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb7e6503-b295-4fdc-b5e1-c05ae05fb797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "678ffef1-9338-4fc9-bc41-7cec09fd2c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8bc756a-da12-41bf-b467-988936f03afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59586b3c-7dd1-4ceb-97f7-e2124a28b061",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59d5c0c-02c7-4a62-990c-591f7a188803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a4e26e8-d63d-4b74-8955-0904dffb1711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed5dd2f-dd54-483b-aa1b-ae1e45b803ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59bffb3e-a541-4331-a5bc-cfdcb2be8c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f6ea07-ec94-43dc-ae26-280a10e1960b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0435d6b4-d067-42b9-b1f3-5482f2f7ed21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfc8575b-226e-46ff-8ba1-a15ee5f14b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0221be68-db24-4b45-8532-7ce596f8cfd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "577e08d7-93ae-490b-a2eb-58524cfe6f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b36a4e5-ef3f-4f1d-9434-589afb1a8911",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5f1668-3b17-4bb2-816a-942d5cc70c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8862c2db-7524-4dae-9c31-51bc9b0dcccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9cc128-d0ce-413f-a623-18c016fa6c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f3520ec-136c-43c1-b7e0-61deb9ee63ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ef3b92-c632-4c14-9297-8ad3ed88fad8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e2f515-cadd-4bb9-bf16-c7f5ca26c611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "056b37d6-e2f4-45a2-a614-d90ce40d49d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816a8501-6159-4b97-9ba3-58fa8c0acdbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd1f4424-0346-4385-ac2e-775e831b17f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974a2b4f-4ebb-46e6-85da-d59bc0a031f3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af7617f3-7688-46a9-b9c7-cc4f73402955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6aa4cb4-8450-4b6b-8ccc-3dea2fee623e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c6f0ed-5340-4993-b416-0cdb4672abcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d07cb770-d9f3-49ea-99fc-50fb5fdc3c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d9da6a-13ad-4b34-9983-cd08aef8e22d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "263c587b-98c5-427a-bc95-65ecc0649107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d1f64bb-696e-4c82-90cf-81ff116d2096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb6b003-e48d-4a1d-acf1-c849d06048f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89d01a08-5fbf-41d0-9bd8-288efd13b126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b5d1eb-bc49-4f27-ab8c-7f7c69692cec",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6101685a-2fa5-4102-94bd-ef2e91d1f769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d433a054-ae5e-4f02-902e-6eb241c58f74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc16c643-a2b4-4d96-ab2d-1b3f21202411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67a888e7-5c1b-4751-affa-6efb2d4a36ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f52799-0257-4447-9d4a-45efafd78b36",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8f619f-483b-4fd3-bf13-e4bb34e69c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51c0fbff-7b84-4510-b336-a5d06478187c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4227ec9-2110-441d-93a5-ca408ee5a078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c0a820a-c374-49a3-9a74-6489d39a9126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "004ea9dd-402c-4283-a31e-2039794510fd",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "591b2461-9ba9-471f-9588-8bd8457b8ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3839151-3b47-4b9e-b2f3-35a114b19b11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c89f88d-241c-43c3-b14b-262233ee85d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88356c8e-adaf-4c3b-b860-675393874b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6088600-2103-4574-853d-dd02f3c5aafe",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d98f83-cda8-41c9-8c5b-451fcbf3c46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "330b9a6a-4cc5-4ed4-9198-3946b9e4702c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e512f0cc-cfd6-40aa-b13e-f57c4cdc74aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bb54c53-c2d4-47a6-bdbf-552617d9a426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d3b9e8-6457-47f4-9c3e-ba23c05850dc",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b07bf7-21c3-4c98-99db-cee549f7ff66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2941efc-a40d-4d76-a703-6163e78513a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e2a3529-e6fa-4290-8c96-53aaee479d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9f9bb50-41ca-4f04-9d58-023a9e5406a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b6ab69-7110-4674-8003-21b032ab1342",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e2e857-c360-4138-a541-022401ab47b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "081cb950-20e9-4748-8d6f-b1331c694f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c30ddc-31eb-42cb-b9d8-7dbf517d1831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "112061a6-05ac-483d-b0c8-6d8535623587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c9e537-a4a6-4626-bbb1-4fa457a7b854",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "075c1f2d-dee2-4153-a870-3a2faaf4c4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d6a1c0a-4bef-4e40-a9e6-c71cbc3d1670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773b42c0-1226-473f-bb5a-f7ab41467db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9402f4f-7120-4030-ab79-60c296297e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa32172-eccb-41f7-a807-506e96007320",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94625a84-c484-453d-9236-64967ecbda71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2096b2fe-176f-4a1a-a517-af92bf343236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42c5356-082d-4111-8d11-c13ad702f849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0f58124-826c-4b1b-b607-26f4c9b211de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cbf2bb2-495d-47e8-8819-9520024a1d47",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ba0348-931b-47a3-91e8-875e5ea41c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f3406ba-3ea6-42c5-ba9a-69baa0471cfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f436c0f0-c2da-446b-ba14-794fb2317a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63d117c2-63d3-4017-be44-c5b1a90ef516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b592a3e-1c85-4447-bd63-ee0bb06524ce",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f73c01f-84cd-4b97-8b38-733dc32c0688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "314d942b-fe0f-433d-92f5-17538c5111fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92887ecd-a971-48d8-8830-4688119d2282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85ec11ca-44c9-487f-95a3-15934ea9b35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4a58bb-3eda-470f-a85c-9aec5dd2204e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89279a8f-b57a-4b11-8736-5c3cf28a582d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eefe4dcc-793e-4c50-83cc-58db5d7fe776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df21200d-3026-4298-aecf-fc6a55e5fa45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97cb9d48-3a2d-42e2-8315-9da3b2661681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4d4e6e-5cff-4226-8387-4c2371ca524b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1d363d-5cc2-4e2a-9861-887bd73e845e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb8a6158-7beb-4932-b681-0c025d8630ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7743a09-f82c-42ec-8f88-1275512cc54b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2656bc19-409b-4b92-be4d-85771c033929"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "33ff0f6a-5083-4212-ae0c-725fed95c9b7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "319863a5-b8c2-451e-a4fd-0ef6ca3b97f9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f366cd5-49ab-4e4f-b955-9679ed7b4efb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3faff26a-b1f4-483b-9a7b-909ee49381a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6043c8c-c6b5-4ae1-844f-eb6da24056d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5c03598-15b3-4f98-a46c-8c1725a7183f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c46b9fc-120a-46d3-bc6d-fec83c0a412d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "456c51ed-cd26-4685-b242-dd433ce1405d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c4205ea-2466-4b3f-afe0-c503dfad0af3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "faf38bae-9f54-4223-b8d1-552ee56c3d50"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "80172683-c930-4107-afaa-a5df24c260cc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0abf592f-b664-4864-9d91-bed9314acc1f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0bf8969-adb0-4735-97ad-912561b6fdda",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b65236f5-7a65-4385-9e04-05699c04ca06"
            }
          }
        ]
      },
      {
        "id": "9b8bbeb6-5144-4765-abab-25821c6da5a4",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "dddc06df-e0e8-47f9-91b8-460422b15ca0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fe36492d-76ea-466d-a36c-d2d831979d02",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c4e3e574-3d06-4b88-97ca-b498950f93af",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d4a14b-2e70-48dc-9fa4-5c49bee43086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70aaa627-78b0-4937-bb06-908444c4cef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e53398-5411-40c2-9960-a7a5828d344f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f01f6a-66da-4b99-8d4c-075ab46b57b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f14e8be-c3dd-4a91-9759-43b3380714d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590c57f7-8bbb-4761-a01b-63073c7a2f4f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b6f1b3-f094-4136-9ca9-0e741da03161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14816b24-06d3-48ca-8d1b-2d5870efd56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a9f53a-aa4a-464d-8e8c-b0363936f759",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0beff35-f50b-4782-b9a5-e5c602cd3ba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "190346f1-d522-49c0-a0a4-4b30c4e37445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7ec535-99df-4c29-b917-63e1554126e6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24350519-a452-4188-b5aa-3f527605a76e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b55d8056-fd7c-4eb5-8c03-f47039b7ed78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2c56f4-06fb-470e-87a8-e8c5d7e2d331",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84fec88a-778b-4eb8-9f42-d80daf0bc997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c71a69c-82fb-45c3-9829-7c81081da211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea10df6-d3c3-44e3-86d3-055c963f457f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad0087b-979d-486f-a34f-5c7038ee4113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6836e3f-3e49-4de0-84f6-b0d7dbf9572a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4999e0-ee73-443d-9df2-d3624b2a60f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d3e158f-e85c-4a39-ac11-f0dc7e8885c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5db274e-f0ef-412a-b8da-00ad4975c759",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36dd032-5c22-47b3-a5cb-4fc9e8edf907",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69939f1d-0806-4a46-9951-d7a2874a1fc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b4a9a3-f6a6-4cd3-bd75-f107eec5a7d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ed1a46-a6a1-45dd-8f5c-5b6281f43c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b61cd440-2166-4da9-8b84-48e1531babe7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52829167-dc03-40ba-b720-bc9020d98978",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3a00f5a-0fbb-4aeb-ab82-5080c63d98c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f16b30e-0dde-435d-9627-9d4bab78b43b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07933905-e9ca-4660-ad6a-b459cc5007b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ca49dc-ea48-47fa-ba07-1f585d2cc9e6",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e6edfb-bbc3-4d48-853a-b736d806746c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d45e0c8-c953-4971-a7a8-05383f85d31b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "612dc1f8-0e03-4943-8fb8-57f753be667c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25140f95-f08f-45fb-b538-76caedfbf50d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91eea5e1-3463-47e2-8d86-41c896265886",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9a32e3-767d-414a-a271-b08188ba6040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90d3e41c-d395-4d2f-a8b0-3fcfafc8bb8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3819b941-303d-4e18-8f76-64a082500230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c09e24df-47f5-4794-b9be-77824e1a293e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea64b33-0dab-4dff-b5e6-c6ab37a93701",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b32a110-1ebe-4960-ab5e-a66e34885936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "474a7d5f-1f0d-4fe6-962f-c1f1a622dc69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f8398c-fb9b-4717-9520-8d11e5e388f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b33d53d9-079b-4736-b1fe-0b98cbc56adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "645988d4-8f2b-409b-bd78-428ca8acb81f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2a2909-8a68-4f62-a86f-9ce2d290b1d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc721d94-4646-448e-b714-69b873ac5f64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45d7337-4342-4a1f-97d3-b83fa5074ffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dc4d12b-4fa0-4d78-bbdb-dca6217c4c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7304b66e-197d-4370-aea3-a5aa5034a910",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66eaf52-1c7b-42c3-b6eb-ea882d669c24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7de8b9d9-fee4-485f-ae14-b789294b7ff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc66c954-566b-4b48-a201-49b74940098a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c5593a5-151e-444a-96c1-e71fe0206bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efff60b4-b389-44ce-8d0a-b16222789cc7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3400739b-b558-4225-a729-ecab904be1a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec5f7c12-b663-4c7d-ae81-d10911bd9e7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4c3c0f-c3a4-42f3-8404-32b780718346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2586beb7-8a25-4b25-a21a-1d98e9881f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f8ff7d-ca07-47a6-ba21-b63b46bae866",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a78d2b5-78a0-436c-8ce0-046878ce3683",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "091c0948-d21a-4614-a4a6-f5e803b55815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6fa348-5f85-4ab5-8baf-6aec4f1d39b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a7d752-33c4-4f0b-805f-3f2dfdc181e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f7d918-a58a-4558-a212-1e05d4b5789e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff63fd47-dff4-4cd6-aadf-378a01d3cb99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ada1932-bebd-4f7b-9673-57a301c9e6d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e307fefb-4e2a-47ee-ac5c-9a87a4af387a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14f3f5b7-75c9-4ae4-bb05-ec779267e577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "136f89ed-0e95-4872-b469-6f310527fc9b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6c9235-b5b7-4f4d-9f8b-c9306ff495c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0265f472-2617-41fa-8cd5-50ecb9b3589b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1fe120c-9b7c-4999-8843-b7c1ceb2e0f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cac53dbe-9496-4512-b569-7057d250771d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec48d23-d644-412e-8db8-2bdf2be07389",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414ff34e-501d-4b30-b617-17cbde4a3ffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62ac66f0-516e-4eb2-8607-705001e6f09a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "841ba078-0bb2-45c6-b340-3027b400e938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bca88f40-0c3d-4d3f-8a25-89db33911c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43757efb-5749-4356-8643-13b119d2540f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80db1fce-7865-40b2-8f26-7ebae26c117d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dc1e983-fe5d-4884-94ea-b03dbc78601c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86dbe6df-73bd-425c-9553-10505d81fed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a52f0b3-d0da-4eff-92a4-7e26f71ab9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512e922c-a544-42f7-9903-8a6111a71b7c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c378b136-c46e-4e62-a561-936a7b39407b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65faa706-787a-427c-ac3b-f678d5bc8e72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f72a069-b556-41cd-8bc5-097ddabae317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00fe4a2b-da89-4003-9a53-df0b68559955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b740cd-d19b-452c-acbc-9e4d3707b535",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45deddac-06f7-49ab-ab5e-18a144e2fbc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "089479df-7387-4043-ada4-59473c2aa628"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3908130b-6a53-49a2-97f5-f89e09d473b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b7ea221-59c7-45bb-b8d4-67841b0c55c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68b670c-b100-415a-a685-33f6d6161e08",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05da9fe8-d1ef-46c9-a5d8-28c934d203d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cda0b3d3-e06e-432a-bd5a-2407d426386c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dadd56e2-f8ae-4a54-ba61-05aac3af0374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b81488e0-a8be-4bd3-9519-ede33227e427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade04354-fd3e-4668-bd39-a809a4509d51",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e263521-c21c-4eea-971b-634383ac63cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7954029c-0ced-4f6e-a0de-7610f0eabc04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ea01c0-33c5-41cd-b05f-d4f7dced061c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b476688e-a503-432e-950a-200f2568a3e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54eff84-f83f-4511-bf06-a33e221a4ae9",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7980365-c360-4c4a-afdf-86d20d607f53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22fa9811-8f08-4c05-b33a-2ffd9b1cbe4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b356a9-8ffc-4b79-b3dd-7e1d9fffe78a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd358405-5f4f-4898-a136-ea0cd3a6aae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48cb6c3-31e0-405b-90c3-ec61cadffd13",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cccba8b7-a349-4411-82a3-3d63f2db99ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f97d56e3-1f0f-455f-af68-65576fe92068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe533406-8fbe-4638-bebf-016231664b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9282379-ac5d-43aa-a048-0d685ae1581f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d952dc73-7b4f-4175-9166-3fe499232327",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb5aa121-9fa6-4a25-b4b0-49dd72118375",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07aecfdc-5bcf-4a2b-993e-b33eeacf1c50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fbc2247-4730-4114-acb4-6f24def8d6a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "669c3e99-00e7-4589-b002-aa6e021b1e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce24667a-7b78-4d6d-9b07-d14226edd9db",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44f3319-56aa-455a-a753-909709cb0f2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0580c97f-6419-4a89-a4ec-f4eb3e2fc6db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ea4e93-7568-4439-aece-266441a6362f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf323a87-b21d-47ef-9184-eced77076178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ebb09ca-4586-4185-aeba-e631538cd8cc",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e93edc-7ea8-4b5f-8331-ed001764a421",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56f88600-c362-4345-97b8-616984866eac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aff3649-a2a8-44e2-9c59-8466f5ee00c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45867b49-b135-4e04-adc6-5c2358c154ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92057898-ce99-493b-85bc-1af7af1d8a42",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dfec38a-275c-4185-a7ff-5a118f9bf409",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b0ea2cd-6436-4120-b772-2a5227237439"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39824e03-8b73-425a-8a4e-cf75fd1984a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d96f6bcc-26ff-455c-9690-5ec4404117a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823e9fd8-fee4-4304-8fc4-ba5c8dec9609",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1294e8dd-2013-41e2-a036-3be383ccd812",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c80af709-f4ea-46b6-aa2e-aa0d145ef5d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd6c512-f98c-44b2-af73-e850aa374a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "131cc5ff-cadb-4c32-b117-46742834b240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e7b1df-98d1-4089-aebb-33395770d350",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e92077bb-4ffe-4f33-bd96-914fb147ce94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a79ed0b4-beb0-4208-ad25-be076893a65f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb4c3b1-2e24-4601-8891-014d3411a644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12a7028d-e2dd-4249-9d2b-654358913ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4442ccb2-4aaf-45a8-ace0-e3f1abc5993d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3468f55a-3d82-4f9d-a604-5a5e02e8ead2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d78d08da-c850-4e3b-ab74-ae219c57f5f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "940331d6-0c87-43cb-abd8-a869aa849fab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64c90ada-51dd-4c46-a93e-1a829162a2b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e24b5e8-8923-4a3e-8926-d120d54fc80b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd5a475-fae0-4d93-b9cb-9c124b4e0526",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4735dbd-7f83-4a46-bb89-29988f2f7157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05955ec-ba86-4a7c-bd49-8da80985f40b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5a016df-5739-4eee-b122-6099b5454c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d250329a-99ce-48c2-845d-6623f77d8746",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ae49c0-3dfd-4e6b-9226-371860bac1ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa5962f-ed69-43cf-9ebd-4da465196ad0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa9cbd8-ef64-466e-8be8-8cd4aed8f34b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93ec7488-8870-4cfe-8a91-80791a403672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6503f8b6-0002-46f7-acd5-1b6dcb29abb5",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d69927-e095-4c7b-8064-a4fb14b0fbe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ab728d3-6525-4cb2-8632-6a5b4111d8d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b361d64-609c-4840-b1ec-388eaff7c98f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98a76f42-1aa2-4f5b-b930-08c7fadff178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b7b5c7-b8a2-4e89-a0d7-8bcc1e27b29d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7562c76a-0d61-4cf5-88c6-c752ac8de6b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f180759-9dbf-4b71-8e3e-ed151f4bf6e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56361052-ab7f-4850-aee5-c26f6ab0dc1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee50dec3-67fb-495c-a603-7ff3b5871f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2227db9-5500-42b8-b355-00f8abd01c58",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319fe6da-cd9e-40f4-8db1-557f909cddc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b57a4d65-f796-44d8-b0a7-ea3f05f5f065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7ef8f6-ce03-4a93-a713-9c5bee3f1b96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0818375-d999-4c1c-86ac-46daebeaa1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "213cafb3-9f61-47bf-8977-d9d469e5d9f0",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1cebd2-533c-494b-b560-b0d2b477af02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "613a350a-2eae-4a9b-bfdd-c1fa64b1f855"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f4f193-d78f-4cfa-8589-526fc8c5037c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbd30f9f-85c3-432f-bc0f-78a5087c9aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc30c97d-081b-4f8e-a234-9e6e89517e76",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d510a0d-f71d-47f7-ab46-32a81e427abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff951eee-232a-450d-9087-c3c4203d742a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e190ab9-2729-462b-b157-48adc9ca8ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d774ee2-6948-435e-9e3f-45d4a79f4136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "127d116b-e523-409c-a595-36fcb0ce8f56",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cdbae8b-d968-486d-937f-6edfe24e5f4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a929ac6-0a71-4706-9dcf-0e2a38228c9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12f940b-a65d-4246-93f5-267684a9aa77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d81e9e3-ace1-49f3-adc3-a490ebfdde2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11ce16b-42ee-403d-acea-4d0f9012ae73",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e257b90-da2a-456e-9525-0700b048797b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30c44a5e-c052-4e17-973b-9c674fd52a6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0705046-dce5-40bc-9e20-4e5e132dc105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc8fbaf3-1eab-4581-86bc-65017c7115ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91012fb5-9d02-42ab-84d1-753e47c24a98",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6862369b-9122-43e2-bd2a-195b43042124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a3accd0-e167-4cb3-afea-a2b589d1e4cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ebb66b5-8ed8-4e64-9b7c-5b0d5203271d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e1959cf-c265-4df2-a70c-4f25178f787f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38487c0a-8213-4eb3-bc94-62991af36450",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4fa622-cf5e-4b12-a03a-35e97b755a67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8759a6a2-b5c8-42c3-b2d9-5f29e45e650d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea7c272-fd15-4820-8085-83e94950c7bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61c822e1-445a-4ef8-a3c8-fe4b80b43ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8068c982-b1a4-4e31-9afa-1b1f7a134d1a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aecadc84-7f48-43a9-81e9-c188522c3232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9902b05-2d56-49ae-a22c-57efdd7d5c32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "636dbf4c-fa11-49de-8957-f1c8970a92a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea0189fc-f054-42b3-9164-eba5960fed3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730148f3-f498-49ca-bf51-6fd5daaf0ef6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efcad8b0-5add-4025-ba9f-006f67260bb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bd863af-45e5-41b7-b70f-3b89364c8506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd34ba8a-66a1-4d9e-b658-d23bca9d11ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "782997ba-f6ae-42ed-bbbf-87b5faa342d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a11df34-b6e1-4b9e-87b3-ebaa6bd60789",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe734993-ae72-49e8-97fa-fc08ec1dd0ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01d418f1-558d-4c9c-bb16-c996ce85d5e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89d2ea7-6410-43c4-8890-649131729e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75cfbe2d-d2cb-47b5-8a9a-e38059b5a5be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feabcb9a-01b7-462f-8b0e-f410163d1e50",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7463d55-1b41-4395-84b3-52aa2a149ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f133662-e4b9-46c4-a234-3052741c5fcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6af9cf2-dc19-4c6a-ba19-cb36c0137346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9260bdf-eb8e-4ce8-946b-e387432f3760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f020b2-8370-43fb-86cd-9255344fed0f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f843cd-d1b7-4f3a-aafe-459239d75850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "090e6e43-709c-4f24-a031-8777d6b52a90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8b9702-1f82-44e1-bbd6-4a223253c303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08f37011-57da-46ed-a4e2-f25bef7b5b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5250a043-7840-49f9-8f53-f61c80b91c6c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1dc8616-4801-4d60-a62e-163684d7e2ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a486236d-5b84-43fd-a801-579799437ced"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6edaa74-8c27-4ab5-835b-1cbf20ed8772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "207a7b46-46c6-400c-a438-cb8b0846a5a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c12a245-96f9-4ec4-a7fc-3e9e6cab0ff4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6759da-9453-430d-8aed-ccd44c536ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dd73e4e-0740-466f-8567-6c116e870e54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddcb45e4-0d74-49cf-9039-5abf0a0c6396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d65abd57-e9ba-45a8-9d7f-1df017a90a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35dcc08-3389-44a1-bef7-f70d5105cb06",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbbae275-db32-4172-aae4-bc6782b22f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc2e22fc-04fc-4e77-b495-93e579747260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1c05f7-7b8b-40d2-b7a3-f626518df855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f4a58b0-4ed5-4747-b971-a7b96d032ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd403b8-bac7-474f-aadf-9671775b240e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af8df3a-27ab-494d-8d51-1a74efbb7a05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e88fd8f3-62b0-499b-b0f8-d93374ac30c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25f6b8c-a6e5-4f53-ae09-3abf44aa0783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b98fa3f3-fc94-41ae-95b1-7dea06d77d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c8eb63-a366-42cc-9ad0-240f587244be",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16076d50-3009-4246-9061-3a34d1155659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe06df85-f2e8-4627-9fea-ffb7d41ef75d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56e15f3-c61e-4e45-b081-ae135114363e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9a95052-48c3-4c6e-bf86-1b5332f71b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae5ce29-fdf8-4e30-8e49-d8753f0d485f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db723a0-9342-4a54-aa90-55b5635af1bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d5ce75-f666-444d-9b95-202912f73468"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c03212-d8ed-4dc5-8c79-c9ae7dbe18a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "379edb43-d575-4465-a4da-e8880f122add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92d626a-ba1d-45dd-9daa-8dbe2248b097",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aacfe84-0877-42f4-a693-dcbda5ecb859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e80b8939-25dd-4973-a0b2-1d010ea62b2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41682db-ce4c-4d98-a120-4e2099481bf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22599fa-0cac-4022-890a-e66eed3d1cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1cf329e-b27f-4805-b789-9bea1a54832b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b38f6c-00e4-4ea7-8fa4-5898a2e4603e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73563d1a-e19b-4dc7-b214-9a3aaba92517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30ebcc8-3edc-48cd-936b-9de1d3466843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "596f3ee1-42f1-451c-91db-d2c5c495485c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1970d314-86e7-4679-93b5-fdd88edd7e4a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f94a2c8-819d-4bd8-a5d6-c3b999c8c3a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c8bac1-bcf5-4370-8746-f6ad54da6de4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01908026-b055-41e4-ab3e-8094695d1faf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d30a26-1c2e-425b-8c6d-a1e26d8bca62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b431dbf6-6c71-460d-9cbb-30fa0f5170b3",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4914d7f7-3eb3-48ec-a076-25e1b050ffb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2120407c-fae7-43f4-8f4a-a21ee24f8c4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "828b8312-045f-4c9e-bd83-dd368cd2fc30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "150330a7-283c-4992-b61b-7b0e1d1af4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5a52e5-61f3-42ec-adad-ad085d43d446",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d1655e-5df2-4ebb-a1f0-b79705417c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "592db9b0-fc41-4d0d-98dd-a948c5b3781a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ddbe61-955d-446d-b5fb-62cc61cf8a95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44d26034-353e-45e4-89be-be94a3eb1956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2b07d9-f8cb-4025-b7a3-4a0480cf90f2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2b4854-2bd3-481d-8e98-559b0027d757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c12239b-294b-490c-9a84-53359c7a97a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24c0979-a6e6-46c0-b9d0-17a67f44497f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c820da-411b-43fe-b00f-428a02ce4f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b8a057-21f7-4488-a6a3-1bf22d3bdc95",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c49ec076-be0f-46dd-a315-a99027c3ca92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "016df80c-33c9-43fa-8497-a7b507237167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6326f225-2149-4fe0-ab3a-d788d6329e24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12603fa5-870e-4fed-beb4-b86b0bd1a43e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae351ec6-30c4-48d2-91bd-7d89b53185b4",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0fbc489-28f8-4d65-8240-6cb2d8f4fccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b60f57b1-b9e9-496e-a2d9-e4c1dd8891b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b0d0c0-b645-41da-9953-cdd2ccec1b06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6654942-fdcc-4f8c-8ff3-4bd6ba9aa968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14419a47-bb45-49fd-b07f-d3d1f68e2e56",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc24359e-f999-45d5-b4e7-57b079e978b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d794c64-e891-4e5e-950e-5551fcf33842"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a6d839-3bf0-495e-be6e-deadfa386d75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6079c13-c170-4c4e-a6a6-b403123893ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf47913-2ebd-4403-b8cd-187f7c176d25",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ae7020-05d2-436d-b557-d53284de35d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d289e11-6986-4c7d-9e3b-7d76e7059761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4b86b5-a6cd-4c38-a8fd-3ed3c3577b7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "219511b5-f8e7-4fbe-bc2b-8686b121319e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3411e3d3-bc5a-46c7-835f-0b55d2ea9451",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34d8cf7-e5a7-432e-b666-fc55ab707ff9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3df8bee-5606-4548-b181-2151217635a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2eb873d-30dc-4fa0-b2be-12e1d5491787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95b2ba30-ac19-492f-bf4a-74fadfb91b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a070ae4-e0da-46a4-a46b-1f110f8baac7",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c91472-c98f-4096-8a6f-333e707eaa3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "171dc5a6-e39b-4f29-bd15-21bbf7447597"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c434cbc-3e30-46c6-bf02-b8565bb425c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "151a1b66-a20c-4825-a1c6-fe345e0c6122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa105111-88e1-4d5c-8bf1-2716e1646c05",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0749900-2a70-40aa-a5bc-cdc5e9414bf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3089458-09d9-43bc-8439-fff66f2f020c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79b96c6-7254-4cc3-8613-920e5cb0b1ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fc13da1-5eb0-4a3b-a070-42c80a74c725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aabb28c-0230-448a-be9f-02249b5e4c95",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47408e00-6770-4edb-8059-30fb82c6bc32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e5b3603-5eb0-47ad-8944-97ed52593c30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3dc1c4d-af8f-4627-b88e-d2cc3484f150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b87c4d5-c819-4583-9e08-4358b4e5f565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f110cb-033e-4edf-9105-7e6ef731bdd3",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47823cc-2372-4a57-8fcc-cd63b82bdbf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d14eedae-4679-44f1-b6d6-43d23d96e86b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aefc7ff-404a-4ccf-98fc-05d738ef1173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e610f6b-69c6-4b23-bb47-fbe751924b04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f894e27e-6bff-4aff-8a4e-fe62c9d61431",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eddaf02b-91ed-4731-ab33-0d8053354307",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4aa04d47-2088-4875-9f3f-838192c09e5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cee8f64-2125-477a-af77-af81d02d5185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a579177-17ed-4f75-9480-ccfa43a8f7dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf01d65-0a1e-481e-aebf-f52d4688e09d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc09f97f-8d00-437f-8023-f9949ae65a6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a832f65-3e88-4227-951d-420f4d9b1711"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5e3489-d787-422d-af29-50787cb21aba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb9f986b-ad30-48cb-b95b-2697ca6d1177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df59a077-111b-454f-9c78-8bf47e82255e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789768c8-0f4f-429f-a6a7-f679a6a55edb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3da81126-fdcf-4406-b21e-582ee58a33e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3f8b2b-b7b4-4551-8fdc-602553062a46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4f5a7a7-f6da-44e3-a8f5-88fb1833096c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814537c9-d3e4-41d6-bea3-5a23eb327a88",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a402b445-f793-48dd-a711-589875697133",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c083de47-972e-4c69-8759-68004f62dfcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda37336-e498-498e-961a-51fb063f1f82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8288330f-798f-4ec0-a8e6-6b7af3135fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9f5598-14c6-4b50-8fc5-beb11a3ccde9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c07063-72b6-4bd2-ae55-5c5e5ceabf55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a28458bd-acd3-44ba-aa25-ac60889d925e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d32d289-79c6-4586-95ab-e2dadb73a295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaadd6de-9149-4eb8-a7ce-e2c5a2140398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a565ff5c-38e6-48f2-92f7-65e09917fec5",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6bba1c-76a4-4950-97c7-8373b3ba60bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3924a2a0-68fa-4ecb-a895-311fef259ece"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a6c163-7145-4732-9483-dfc092ae22ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2e8f88e-c037-43c9-92ae-ec9942baf0a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a794d15-b16c-4901-a69b-ff5d8892ff56",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88aa369b-1bd9-4b76-9f26-fa517c54f94c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "520a312c-e4b0-4475-9587-9f946d228bc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e0a7b1-adf2-4d9e-b75b-1c1a8cc60293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ed5ac76-56ed-4d18-90b1-6f7f1b1ac712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33b731e-1ccf-4bee-80a2-8da04cd0ce00",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab890e29-c66c-4984-8c58-6ffc36129efc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25b8a1cc-81df-457a-9ad4-eef50bde55f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad69220d-5605-4c2c-80ad-1028c02e5594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f29260be-575a-41dc-af82-3e23db3439cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2229b9cd-3914-4f38-a702-aa65680e1bc6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c20c9b2-43f5-4b3f-b43b-76766604d87b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e746c8d1-b828-44a5-95d9-3b8087ca4dbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ef5c10-b5de-4ce4-a7b3-66ae73d90233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca96cdb1-1eb5-4495-9a4d-93629b901d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fcc6dcf-724b-43af-8e59-57d12eca63ab",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8690a59-8662-4f7d-a258-2e460ec2142b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea2ad8f7-ad71-4c36-82c4-d46b6d31ee08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "149e168c-d52a-4d40-8cbb-59c15176568b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0d917a1-b67a-4d3f-afed-f8fd70dc5a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023c1957-4776-400c-8f6d-16309450ad5f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c75095-2acf-4b84-a604-b3704e145966",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4165394-58f4-4384-a8c0-24006d77bd18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2abcd4b8-aeaa-4d3b-8208-ce09594dac79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9af06092-1f5d-4380-9248-bdc6da37430f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c98ddc-1a1d-43e6-8977-ad5a6872b77c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "333b6c2d-aead-47df-b0cc-b77c4460f58d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b83c899a-1585-4594-8ef3-9880083e3fd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d941b6-57e1-4d24-83aa-c4e2082215ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "911992aa-43bd-4ca5-b20a-8b5b2c59ac49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d1b0e3-2aac-4a89-aa79-a466a962454a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4987f255-b539-4c85-9efa-1bbd32fb9227",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9db41ecd-4aeb-40c1-a2d9-c43972a3cf18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6752ddf-0f0d-4d82-bf71-e3c2ed861398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e88a16b9-ae21-4d0e-9abb-792373154c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5caab87-c2d1-4d92-b495-0e3665c37ded",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5479e85-225f-4ad2-b29d-190489e26516",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ee15034-7079-49f7-8184-431dc4b9f0c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4b7a7b-3887-4c9b-a0ab-f86062929372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23080539-f0bc-4cf8-8461-c8aaa69b9e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e69c616-b472-47ff-ae8b-40904dae36f2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8435ce2f-e054-42c1-9e8c-4432aee2055e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94373dec-b121-4e9b-99d9-5ecd63319140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f25af2a-8f0b-43a5-91db-9eece79fe1a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44dd0a87-f318-4606-a803-32c3605685b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9cf8db-5135-4d35-9202-d6f6370b7939",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdabf864-8fdf-4e33-b3d8-304935f9569f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5391a704-4514-4fce-9bf6-425e7400f51d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21b0545-921f-44ed-b784-99d6a543c10b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef034ec4-cb4e-406f-be16-d9785229e8dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89578ac0-4c74-4a04-b33e-fd17e35fae82",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33fb49e1-d603-4ee1-a65a-87130ee98779",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db0275d3-277c-46b7-8d7c-59a51cf23a03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07183f1d-326f-44a6-ad3b-7dda4459c076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "632b6155-49b6-4992-a40e-b22dcdd3f158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c75d8f-6ffc-4401-90e5-88b6a7de10d7",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ecbee2-8a4c-45f3-891f-22e7e14a13d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24b5b492-9329-4b3e-8f8d-691339e7b7a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9c2d1c-8eea-48cd-9642-6c5b184c7836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37c2a873-d134-44e4-8d5d-19acfbaf117d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1462e22-2f84-4dcc-aebe-75a13dc6579e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df886a2b-cc32-4081-9f69-be43bd6edd18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "191b6346-2113-4cd5-89ca-5ef9db6ab554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e1a766-a8a3-4dca-ad93-05d309fbd89f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d76c5127-3b82-4c27-80fa-7444162a8a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68946b8e-cdcb-4f25-b590-7f1a87ebafd1",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4325fc9-f780-4ace-b8f7-cb9cb81c981d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "349e4b1a-0c76-4c45-9c52-dfef25787037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2316ef78-37ae-413e-ae00-af4f11c71863",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e6c08f2-7273-4673-b1f0-4d670ee81b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe2aa89-d669-448e-b6a8-1537bdf40598",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7322a2-04d9-476f-94ff-0ae17741fd90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd2c73f0-3f50-4a4b-bc39-21d4b540e30d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5725d00-9168-43bf-82bd-93c08fcec8bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c9a2bc1-68a2-4ae7-9ef2-a0ad72e55dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1827c5-f357-4526-bfc2-f5e8c76df76c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35e0e92-6185-48ac-9f0f-5a9ef0e5764c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37ef3b0b-1d35-45b2-baa9-8a827cf2cb8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bcf02e2-f00a-43da-a05e-bb01b6404355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e7359ca-4074-4e9e-9aef-b68a7857facd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90509afd-ed2f-495d-a52e-11c2721acf1a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9543e6-e810-4a69-bada-86ddf6cd3f61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aafb0562-ac94-4732-907c-78548629bbf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe50723-2f77-4be9-9b74-f650cc29f448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78f3354e-9d9b-4fe2-a66d-9e972437ffa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f09c5d-3a4d-4e40-869d-36de67a7f1c2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0e15c7-806f-488e-8b92-73fbbc2a1077",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0900484e-840d-4436-884b-8bb63dd06fc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9885e4a7-5517-44e1-910f-997b0d6d2b08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc7acfef-f34e-4dcd-8df6-0f3b4edfdf13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80a849c-da00-4d76-9330-79fd6b0c5f45",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f26ee3-1b46-46e6-b05a-d5ee842c215b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "641e7016-add3-4bda-ba3d-2971f94646e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4bf29ff-a0af-40a2-bd5f-f5fdbd1a1477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3555eb3-c69b-45e1-86d7-ab0538f5e969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7bbf030-9486-490d-9a61-6fe5c896b08e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704909a3-ce01-4121-a18c-9b2387ef27be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d5cb681-5e73-4770-82c4-8dcca898baf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebae4983-06ee-444c-9d03-779a6e6e030f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06c77224-76c2-483c-bd52-c754419a9be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d51e54b-ec5b-40bd-8459-3234c3845ed2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d30c03a-e40f-4f1f-9856-580a4efa6b72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d937cfe2-35a6-4410-b536-e4de7744dfbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe1d523-9722-4b42-a251-ca01c3739217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0723772a-8fc4-40a3-b4c9-0b74c2b04f0b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cc20624-13a6-48d4-95dc-0e67c51786a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "235fd7a9-fb07-4c50-b64e-88875f46452a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "39135cf4-74e4-412b-8c5b-2ac7a4574ada",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4b80ba3b-d8cb-408e-bc23-611b7069fdf9"
                    }
                  }
                ]
              },
              {
                "id": "82c0fbbf-6080-4ea1-8279-c4289fc8995a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "752c35a4-da47-4c5a-be2b-f7a775d68ab2",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eab1c7e-8970-41cc-bac1-4867ef732ded",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1c842510-ae29-46bf-9e34-e96cb4da1933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21b6914-2ba9-4801-9c25-cdf6f1e22fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "806cfe55-ba74-496d-b829-19fbb6cada02"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a97bf6e-482e-46eb-8d50-691df0224d01",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d7b7569-c73f-448f-96c8-7946221793bd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2e10423-537c-41ad-9797-ffccc15ea329",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "764c8b8a-6970-41dd-85a5-af185fce65e5"
                    }
                  }
                ]
              },
              {
                "id": "c0ec36e4-7342-40e7-8058-448d319cde38",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5458b144-19b7-4d6a-854c-bcd15ee7bded",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0adae888-570e-449a-bbde-7c3cdab012dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "939178e5-836a-40a4-80fc-c6dea8e743a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7cc4c99-cc9e-4fd8-ae0f-bbbcae878667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "836a8304-c6e6-4d57-8a2d-759bd1131b5b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9f6a513f-34f7-440d-9c02-abbd2c8333af",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ea70e255-ccba-4077-9417-3805af64b66a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2db0ef08-3130-4754-a3a5-1007cb20f722",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b0e1eca3-f5f2-49c1-9740-6e775c95e4d0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7fb87621-e973-4349-9bb1-8a5154fd3d60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46092868-e3ed-4715-a7a3-b0139c604d0a"
                    }
                  }
                ]
              },
              {
                "id": "9000e4fb-26c9-4c22-b9c8-96a1437b40b6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "258e5727-6adc-406c-8746-eb79523a079d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c5988fd6-a4cf-42ef-bb6d-78e188184d87"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e33ed8d-ceef-4198-9f0a-2375c06b9101",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "941db99e-8c22-42d5-9971-84e0655cbb1e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38dea56e-9236-40a0-981d-0bfb6760b679",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "797bc34f-1296-4b2f-8388-d543651fd01c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c8987f21-f3df-4e4f-923e-56bf149d711c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f96e051-c308-4de1-8a50-d84d1972666c"
            }
          }
        ]
      },
      {
        "id": "a551ddd3-1259-4f41-b219-2c842863f0e0",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f5704826-90eb-4c68-8702-ce069f3ddb84",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0d8313f3-375c-4efa-99fa-629161eea6bc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aaeef1c5-1ae2-4ab6-8909-0f4a9ecf38ec",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d774e9ab-d0d4-49cf-9fa4-515250c7f89f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ef1f60a1-8726-4794-ad5f-af748c59c15b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5781700e-b17f-4e33-8e2f-c31ec3826b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1418b910-9b29-4fae-9f54-c007fa176c0a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1da004cf-7244-47bd-a66d-24e0e81d7e73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "500d7afd-3255-4bb2-bf50-f7c6d0b4d61b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bafb1be1-cdc5-4aa4-a437-3c97997a2194",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b708fa18-496e-4c05-92f2-21ebadd1f44b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e2b37b90-a50e-4dfc-ade4-3b1a9711a5be",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8013b0e2-4b2e-4025-ae68-17e943af426b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ff92eb35-e6a0-4e7d-9a28-306757824c86",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "999ec91d-ae97-410c-b7d2-728177dca65c"
            }
          }
        ]
      },
      {
        "id": "2aa304f2-8459-4faf-a77a-e63b1abb2b25",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "aea096bd-4a30-4dfd-b21b-cb11f8e8f342",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8143c129-9791-450f-839b-d2ed55054964",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ae20ff08-20df-49f9-bda7-551e03f975f0",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ca9f0d-436e-4147-86d3-67836b2fe82f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "811a68ae-538f-401c-a6cf-dc671ee0d2d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3621cc26-83f0-4c8f-8817-67ad8bc2bced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19c168f4-a519-4c6a-8396-155256c5bcd8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "320922aa-df22-4c95-8a9e-bc19278d98ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00fb72b5-6158-468c-b944-eccef2cec7f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab2de9b9-0ce4-4adb-8ca3-dfb687c1899b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6018e616-2a22-4a3d-9861-bf072555c450"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "056008b8-0dbd-4c7b-80f0-4468327030af",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7223a935-7a2a-45d2-9172-6e5157b1e9f1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00a0cd17-39f7-471c-a6a7-ca1b6c5ef934",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "23f36774-6e86-4b06-b00b-feb03af83593"
            }
          }
        ]
      },
      {
        "id": "34f03878-39f0-4d09-87a8-b451f9a36ee0",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7096fd5f-f5cb-4c28-97b1-be76fcc7a5fb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e291fb5b-5463-49c4-88cf-4285a3c82ebf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "26cf3c36-dfcd-4fd0-bdc3-b4f2d75e7b38",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8441997c-4aa1-461b-9c83-ffdf3f7a2f7a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "532f5d67-f4f9-439e-ad37-ec0442762723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13957fd9-e299-48a9-922a-25dbf54f77f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d306ae8-552a-4f99-9caf-687fef1e424c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "772b6585-5bde-4909-afc0-9d87a26d2807",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7bb3689-696f-4a35-9f4d-21dafb7dba9f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "32038ad9-5563-46f8-93e2-7605b2327b38",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7080ba8c-9a2b-4b8b-8246-04ea4fab2375"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d141821-416a-46a7-8ba6-08ce7af19ba2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5afbbc71-4041-48a5-abd9-dd198b3fa420"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb081d32-1458-42d6-bc82-9580e48c61e8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "63f2847f-0024-4611-9042-1ae9c5ce82ca"
            }
          }
        ]
      },
      {
        "id": "f176ea07-bb4b-4c2e-9399-39ec5c9b200a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4440e271-1240-4857-a9bc-59c0b5732534",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8c0db59a-9026-4c1c-81fa-abd680dc0816",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d74473f6-f05a-4e0d-b60f-b39c24117a7b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "757e18bf-d507-4047-ba2a-8b9288e5a398",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e5e1be6d-ee34-4846-8471-611cb1347543",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 100.69366197183098,
      "responseMin": 6,
      "responseMax": 5026,
      "responseSd": 459.39006696031345,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1694910913174,
      "completed": 1694910953473
    },
    "executions": [
      {
        "id": "ccf10185-b677-4c98-b7d2-7f0da107baf9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8331d713-f47c-4946-b65c-2fdb63584ddc",
          "httpRequestId": "4a2aa4fd-2bb8-4556-922c-029b70e8a27a"
        },
        "item": {
          "id": "ccf10185-b677-4c98-b7d2-7f0da107baf9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "aee3586a-ed18-4899-a3ed-4802477506ba",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 0
        }
      },
      {
        "id": "533a10e5-8340-4143-a1cd-144af5321652",
        "cursor": {
          "ref": "b92844e7-022a-470c-9711-fef90c7f2d77",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a0f1291a-3421-4713-950c-d46d8872c6cc"
        },
        "item": {
          "id": "533a10e5-8340-4143-a1cd-144af5321652",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f7b95226-e67f-4e8c-aa2c-869e62d936f1",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "bf25b422-5193-40d9-b15a-114153edb13a",
        "cursor": {
          "ref": "aee6835a-1016-40a7-86f3-25c3f50007b3",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9f33f5c5-ebb8-4891-a944-30efb7b98735"
        },
        "item": {
          "id": "bf25b422-5193-40d9-b15a-114153edb13a",
          "name": "did_json"
        },
        "response": {
          "id": "831c71ca-df5f-4818-91a3-78af81addbb5",
          "status": "OK",
          "code": 200,
          "responseTime": 324,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d380bd7-39e4-4144-9604-880efb7c4626",
        "cursor": {
          "ref": "9de6d52d-7015-4473-ac96-9482714082b2",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e5e814ad-e2ee-4c6d-a7d8-1f8fd6465f1e"
        },
        "item": {
          "id": "5d380bd7-39e4-4144-9604-880efb7c4626",
          "name": "did:invalid"
        },
        "response": {
          "id": "1bde7470-107d-477e-87fc-7397f9fa38e2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2684,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d380bd7-39e4-4144-9604-880efb7c4626",
        "cursor": {
          "ref": "9de6d52d-7015-4473-ac96-9482714082b2",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e5e814ad-e2ee-4c6d-a7d8-1f8fd6465f1e"
        },
        "item": {
          "id": "5d380bd7-39e4-4144-9604-880efb7c4626",
          "name": "did:invalid"
        },
        "response": {
          "id": "1bde7470-107d-477e-87fc-7397f9fa38e2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2684,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e495e9f6-824d-40e7-9467-f35ba95a728f",
        "cursor": {
          "ref": "0108db17-0cfa-4b83-a3ce-88464539e9ba",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c0bceb87-f385-4b40-aa98-de4635e733d4"
        },
        "item": {
          "id": "e495e9f6-824d-40e7-9467-f35ba95a728f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f296a15d-746e-4756-80b2-bee74a92f77b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 51,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bece18c-f735-4551-89b9-c0c13d641b50",
        "cursor": {
          "ref": "eb2bc0bd-4a1b-4921-8db2-9db4b7fbe772",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "12a584b0-184c-4d32-ad32-484e64e5f588"
        },
        "item": {
          "id": "7bece18c-f735-4551-89b9-c0c13d641b50",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "fb7fc014-6afb-422d-b43e-e6cfc7f09f51",
          "status": "Not Found",
          "code": 404,
          "responseTime": 34,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff7d955-dc6b-40e0-af6e-b9222016edaf",
        "cursor": {
          "ref": "238677fb-bba5-4da1-9aea-ac3b706b3e67",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "90e9bed6-ad7f-4977-9b0a-d3eade5a6dd5"
        },
        "item": {
          "id": "5ff7d955-dc6b-40e0-af6e-b9222016edaf",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a977f9f0-b12c-4127-aab9-cf9b2d76084b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f3736b-6987-435a-9da2-633c57e49587",
        "cursor": {
          "ref": "3f756fa2-34a0-4d31-96e0-addc56a1d1b1",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c9380f21-80b1-4de6-9497-47a2e0a99b46"
        },
        "item": {
          "id": "a1f3736b-6987-435a-9da2-633c57e49587",
          "name": "identifiers"
        },
        "response": {
          "id": "f8566ae8-5ec3-49d2-a0d2-d0d93bd6d46b",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445af17d-229a-4662-84ae-8b9ded4b1f80",
        "cursor": {
          "ref": "67e05880-1961-43e8-b349-e2cdc553ec38",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1e5bb8dc-1b93-4e2b-80c9-664e9fd5e218"
        },
        "item": {
          "id": "445af17d-229a-4662-84ae-8b9ded4b1f80",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "aeb61b96-2885-4a2b-82fe-3eb87229b041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533581ea-fc3b-4006-a4d9-b4353b7c1bef",
        "cursor": {
          "ref": "9e1c311a-e841-4f9f-bb54-6a9e2977a7e3",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d68a0bfe-1189-4e6f-98c0-c30e4031f43d"
        },
        "item": {
          "id": "533581ea-fc3b-4006-a4d9-b4353b7c1bef",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7b4964a2-2d04-418d-92dd-03abfed3b26f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec02e983-026c-4502-94c6-8fcb3eb7b562",
        "cursor": {
          "ref": "bcc840c7-3972-4add-981d-a88b6c4f59f5",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9c29a499-4a54-447a-b96c-9f4d293536df"
        },
        "item": {
          "id": "ec02e983-026c-4502-94c6-8fcb3eb7b562",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "945833f8-8a75-4e52-bf97-e289b4250987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c675e4-57cd-4df7-8147-3b7352769546",
        "cursor": {
          "ref": "08ed84ee-a764-4d91-8c57-5694a6f099bd",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4a000447-d9e5-49d8-83f7-14d3b654dbc6"
        },
        "item": {
          "id": "46c675e4-57cd-4df7-8147-3b7352769546",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "730b251e-6ac2-439c-af76-2518f7ad6a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cba195a-7d44-4c96-99c6-d05d78049ae3",
        "cursor": {
          "ref": "f3ec5f7c-84b4-43d7-bdf1-a533c5ab2d30",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "57ed2c29-41e0-4938-9d55-3fed469dfafe"
        },
        "item": {
          "id": "1cba195a-7d44-4c96-99c6-d05d78049ae3",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "00b4352c-4473-4742-a6e3-67bf0d8f0afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8115f5-9a97-4efb-a7d4-cb43381acfd2",
        "cursor": {
          "ref": "645afb98-1316-4c5c-8647-a58191a2502c",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0d308518-1e45-4ddc-8ccd-7bf2604fff5e"
        },
        "item": {
          "id": "5c8115f5-9a97-4efb-a7d4-cb43381acfd2",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7b15bf5a-1b59-4fab-b9f4-6cce2a829117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ec3e33-b1e2-4cc5-a120-ab88e7e3dae1",
        "cursor": {
          "ref": "61bf8023-e141-4f11-94fe-a3c8b7324387",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "75c62799-ccc7-4a64-b5ca-384998cdb138"
        },
        "item": {
          "id": "f1ec3e33-b1e2-4cc5-a120-ab88e7e3dae1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9973de52-62f5-4807-9d89-28da76aaa310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf7fbe1-71fa-462f-9062-52ec4538de92",
        "cursor": {
          "ref": "7277da12-bc36-43f8-a327-ccf0d6dc91b4",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5b02f39a-6b25-4fd8-b770-dc79914e8176"
        },
        "item": {
          "id": "cbf7fbe1-71fa-462f-9062-52ec4538de92",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "986933cd-178e-49b5-8e69-9a7a880de48b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31775590-4b61-42f3-a347-deabefeaf8a0",
        "cursor": {
          "ref": "c1992b5f-207d-427b-be7e-4d3804a873b0",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a1c8a096-35ac-4bf0-a19f-22ccbfaf8942"
        },
        "item": {
          "id": "31775590-4b61-42f3-a347-deabefeaf8a0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f6304946-f671-471c-bc81-f97ed4ac9c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738dfe61-2701-441b-b5c8-76b607fbfd20",
        "cursor": {
          "ref": "489c0c5d-1b42-4415-b86d-cb281ce257cc",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3b02234a-07a1-4466-8045-d9d997b1345c"
        },
        "item": {
          "id": "738dfe61-2701-441b-b5c8-76b607fbfd20",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c4d2755f-510b-409b-8ae4-3832776e37ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37322063-1ce4-4d76-98ab-71259b7c7828",
        "cursor": {
          "ref": "0bcd8256-a14e-4166-a32c-ee66a52a6874",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a471ac7f-159c-4063-bc2b-e44a0fe209ba"
        },
        "item": {
          "id": "37322063-1ce4-4d76-98ab-71259b7c7828",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d7318253-7ea3-41ac-95ef-9963bad0d7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c05f12-3281-4489-8634-7d4f9ffc1c6b",
        "cursor": {
          "ref": "fc29c1e6-7fe9-4f13-9d3a-43c705e5d19b",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8e5cfb19-0ecb-4d8e-8fd9-83d0bd01ccdc"
        },
        "item": {
          "id": "b0c05f12-3281-4489-8634-7d4f9ffc1c6b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f9c59118-4c76-4707-bcc6-35ef84c2a210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd6c965-52d4-4c71-836b-3eebba67ee9f",
        "cursor": {
          "ref": "a1a91ca3-ce02-4723-8af1-bb080463de09",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "780c47f3-584d-4b06-917d-769c90db611c"
        },
        "item": {
          "id": "5cd6c965-52d4-4c71-836b-3eebba67ee9f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3418f5a9-18ca-4aaa-928e-3c3906b03ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49178a0f-5b77-4e3b-885d-c0a2108da61b",
        "cursor": {
          "ref": "999382bb-99a0-4c4f-b178-f6ccbbdaf690",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4ee4ca0b-05c0-49d1-9892-c67a4e57c34c"
        },
        "item": {
          "id": "49178a0f-5b77-4e3b-885d-c0a2108da61b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "04c187ea-f47a-4776-a90e-9c2c7998c83b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6670be9c-36f5-4e73-805a-b5deec731035",
        "cursor": {
          "ref": "761e2939-17ec-4d5a-a673-49ebc8f7f424",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a50b1e99-106c-4118-9821-1c678080dc53"
        },
        "item": {
          "id": "6670be9c-36f5-4e73-805a-b5deec731035",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "87834a1b-236c-4b12-a403-193bb1ee4401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9734db95-c41f-4516-9221-b6b1463680e7",
        "cursor": {
          "ref": "e659dbda-dbb9-40c5-bbd1-d277d96e0bdc",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0a5cbe17-51e5-4ef8-885a-eb0deb3b4bfc"
        },
        "item": {
          "id": "9734db95-c41f-4516-9221-b6b1463680e7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "126d233b-9b02-4a09-8bf9-7178dcca528a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5008a387-5a31-4827-a5e9-f2f32e62d3b7",
        "cursor": {
          "ref": "617eabd9-b970-461b-abd6-c91f66c3eb3d",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e0fd6b14-5481-4a00-abbb-84e4967e3576"
        },
        "item": {
          "id": "5008a387-5a31-4827-a5e9-f2f32e62d3b7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "bd34e8a8-1153-467c-9b6c-f7eb95dabbf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed655d85-498a-4a46-a227-48f9223b0ffb",
        "cursor": {
          "ref": "b46b8b5a-fa38-4a31-b489-5387da51bd80",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "147a0a3b-d04a-4b56-baf7-08b05fe35ef2"
        },
        "item": {
          "id": "ed655d85-498a-4a46-a227-48f9223b0ffb",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e08dec6a-07b4-45a2-a75e-6a9c7efae85a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae485591-f383-4c33-bd92-e4f2c087f27b",
        "cursor": {
          "ref": "11148eb1-ca5c-4e26-a703-9d7aa30f18e5",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4ca4a399-7f08-4dfd-90bb-560255b83126"
        },
        "item": {
          "id": "ae485591-f383-4c33-bd92-e4f2c087f27b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "86d0c05f-7edf-4f52-819a-fdad48ddff96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc40bbd-6e6d-44ea-bca6-3a444b35874c",
        "cursor": {
          "ref": "22a841e3-92d7-4104-803d-821a0ba88638",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "08a821a5-fea3-4787-ac98-b08a75993da6"
        },
        "item": {
          "id": "4dc40bbd-6e6d-44ea-bca6-3a444b35874c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f9398679-ac73-4fa2-9368-a82c4c779e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1001c152-33eb-475f-b0a3-1400ce1bd655",
        "cursor": {
          "ref": "673a9f05-6b24-4c41-bcf5-b2ff8b50aeed",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "774bb4cc-f086-4f76-90a1-dfd8ae3d40e8"
        },
        "item": {
          "id": "1001c152-33eb-475f-b0a3-1400ce1bd655",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "fc295e69-7517-4bcb-8bd1-0fdd1ccc87cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8e3c84-8ba2-412e-b4fd-27475c3ace83",
        "cursor": {
          "ref": "fde0f7cc-1269-4b00-9e62-dedf232538fd",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "07bdd566-d0b0-445e-af63-67389791fc22"
        },
        "item": {
          "id": "dd8e3c84-8ba2-412e-b4fd-27475c3ace83",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "88697799-dc73-499a-a4d4-66145a8932e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b5d37d-4a97-4af0-812b-970314ac9240",
        "cursor": {
          "ref": "8299c657-a8c0-4929-90bc-549b27bba3c7",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "64793ea9-53bb-4622-8a90-9e35838ad350"
        },
        "item": {
          "id": "b2b5d37d-4a97-4af0-812b-970314ac9240",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7597e85f-91cb-416c-9bd2-e64db7dfb957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618026a2-9b4c-4552-a54f-0fdaf69f340c",
        "cursor": {
          "ref": "03e742bc-6155-44b2-89e0-43ceff13e4fd",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f5f7503f-d61e-4ddd-99c9-4409528d6bcc"
        },
        "item": {
          "id": "618026a2-9b4c-4552-a54f-0fdaf69f340c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e8b6826c-df5f-4919-a2be-b0afc1d457e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ed4ba8-97d4-4aea-90f8-b4412663c5f2",
        "cursor": {
          "ref": "98da03ef-bcd5-4756-8306-cb010333c9fb",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "acebc7ca-955c-46bc-93b0-8c33c37752a2"
        },
        "item": {
          "id": "e5ed4ba8-97d4-4aea-90f8-b4412663c5f2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "08b81a8b-0578-4d6a-8872-dc6d6179b2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "884395c5-147c-4c7c-8c06-ee60cf29abc6",
        "cursor": {
          "ref": "edc8b768-dafa-40b3-95b3-4e3edf8178a5",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "11a38078-3441-4cb1-820d-666e05c577c0"
        },
        "item": {
          "id": "884395c5-147c-4c7c-8c06-ee60cf29abc6",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d35e4f74-fb7a-4600-9958-9517549c6f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b1bab36-90a3-4a55-95a8-7266425c7766",
        "cursor": {
          "ref": "6bce607c-6032-4f75-a53a-f269e0049986",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8c8204c7-5f4d-4ae1-8717-fa74f7ee8f08"
        },
        "item": {
          "id": "8b1bab36-90a3-4a55-95a8-7266425c7766",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "26522a90-abc3-4a6e-9afc-b9be09472e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6101d9-6fad-4040-bf26-f85187ba68fb",
        "cursor": {
          "ref": "ff846996-f2c2-46e5-8f85-7674514ef8bc",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "075b6f0a-3f8e-4337-ae7d-cec592a63c47"
        },
        "item": {
          "id": "fe6101d9-6fad-4040-bf26-f85187ba68fb",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "25bda80b-c994-4b7f-b28d-93c117fcd5ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc8e350-b735-4f83-bbdd-5e99992614aa",
        "cursor": {
          "ref": "5b9e44d1-03d3-4bf4-ae9b-1fffa1376835",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2b837427-1d1b-4a6b-a8c8-814e885e26e6"
        },
        "item": {
          "id": "5bc8e350-b735-4f83-bbdd-5e99992614aa",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "366a1932-b4f9-45f5-854f-abf59006689a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729afaa0-2ae7-40ed-8795-cb64e4eb239d",
        "cursor": {
          "ref": "67f94055-59f0-4faa-be18-31eff0b513fc",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3dd126c3-5c70-41b0-a5d2-bdf0639f578c"
        },
        "item": {
          "id": "729afaa0-2ae7-40ed-8795-cb64e4eb239d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8709dbf9-374f-4b08-969c-f31568727ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90525c4d-4c6b-48bf-9137-047b9deffba1",
        "cursor": {
          "ref": "37143dc0-b095-4b59-b852-72fd0bdfee8c",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "af60e4af-f25a-4894-a4bc-4bcddf6707de"
        },
        "item": {
          "id": "90525c4d-4c6b-48bf-9137-047b9deffba1",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b36a952c-8c00-4112-86b2-6d7f4430dc86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e850fbf2-38a6-48ff-b64c-ff4c003539b0",
        "cursor": {
          "ref": "5c29b079-00a0-402b-83e4-40dd8324e46d",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "287866c3-b01c-48c5-9eb5-dd3daffe3fba"
        },
        "item": {
          "id": "e850fbf2-38a6-48ff-b64c-ff4c003539b0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0801d7df-a759-4d14-ac75-8bfeb3b3f3b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ed49bd-dba1-4379-818c-211a40c430db",
        "cursor": {
          "ref": "aceb48fe-0cf8-4f34-9fd3-752680d161a5",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3f1575c8-4684-46ac-a3db-ae4aa9c442ca"
        },
        "item": {
          "id": "08ed49bd-dba1-4379-818c-211a40c430db",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "93aae2e5-8e62-4b4c-8d21-317fb2a8d0ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10923c5-5439-42b5-92c8-0eeb8658b357",
        "cursor": {
          "ref": "6ab191b4-d94d-40d6-a5ce-9ab9a3c4a16c",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "1d5435b7-677a-48c5-b3a6-6b857bb5c4c6"
        },
        "item": {
          "id": "d10923c5-5439-42b5-92c8-0eeb8658b357",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "cf694e55-7336-4c53-ab4f-b1896b21e9f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1f8484-960f-405f-8fae-0ef6f8bd5f5d",
        "cursor": {
          "ref": "edaf72ab-af79-4dac-8cf2-1b9f508c94d8",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fbabd171-070f-4339-8fdb-5b502e386813"
        },
        "item": {
          "id": "6d1f8484-960f-405f-8fae-0ef6f8bd5f5d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b143eba0-2dd0-4bc9-b2e2-3a7ce52159ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5849966-0917-4d8f-9216-cffb0e823328",
        "cursor": {
          "ref": "e4288caf-8f86-4030-b233-58dcff6d32e4",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "04226156-0611-4954-9a5c-bb3a13698afd"
        },
        "item": {
          "id": "f5849966-0917-4d8f-9216-cffb0e823328",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "10a80744-bf3e-41e1-8c64-50a630fe97d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be902e98-f0c3-4931-8c75-41a3903c3991",
        "cursor": {
          "ref": "71eada3e-fddd-4e67-8890-ac100c2919ac",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a19b83bc-ee8b-4141-aa4a-b4bedd9dac71"
        },
        "item": {
          "id": "be902e98-f0c3-4931-8c75-41a3903c3991",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "acec0bbe-aeec-4760-866b-b3c3cc8fcacf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b44e65-59dc-4c47-9d52-6bcb743b5ebd",
        "cursor": {
          "ref": "56aeab2f-649a-4a24-ad1f-2e5d1d041c8c",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d4684cd7-571c-436a-bc8f-4002423507be"
        },
        "item": {
          "id": "31b44e65-59dc-4c47-9d52-6bcb743b5ebd",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "065a3bc7-fce3-4a0e-93f5-ff73857c48a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71a7cd8-fe9d-4910-a2e7-bd8ce2b03db0",
        "cursor": {
          "ref": "8b1f4a6d-7a0d-4f2e-964f-3346aa5f285a",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a61867cc-c02c-4e02-8039-adb520cf667e"
        },
        "item": {
          "id": "d71a7cd8-fe9d-4910-a2e7-bd8ce2b03db0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a914873e-d7d2-4464-a515-d82b21e4d07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4353f5c3-e9d0-4642-bf49-34a57940f61f",
        "cursor": {
          "ref": "15617498-4195-4afe-8a56-b191b5686a9e",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b455be58-09a4-42ba-be21-9263b77c98aa"
        },
        "item": {
          "id": "4353f5c3-e9d0-4642-bf49-34a57940f61f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "305e4391-38c9-41de-919f-3855f088af0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e9662b-a953-4d7c-b80c-7b5634f9b6ad",
        "cursor": {
          "ref": "64a82e48-0b04-4cf2-8b1e-654a4587bf43",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "bcdd40c3-165f-4e7b-bc5b-8e91ce2f879b"
        },
        "item": {
          "id": "82e9662b-a953-4d7c-b80c-7b5634f9b6ad",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b9d3b4e2-3cef-4791-9984-c682f4937de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc847751-e283-4167-8783-de9a9b60907e",
        "cursor": {
          "ref": "d2b3b933-c518-4530-9e01-acf4d0c0eb4b",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4c1ea9ca-8117-4684-93dd-2d431f9e1212"
        },
        "item": {
          "id": "bc847751-e283-4167-8783-de9a9b60907e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d78fdebd-2a39-4e41-9ea1-5b0020a7d4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a9d97c-dd9d-40c5-bddf-e2e07ca7222a",
        "cursor": {
          "ref": "9daf22e7-b39d-4590-8157-a3f9f8e1a640",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "666e8323-2b33-4e64-a70c-3aea74fcf9f8"
        },
        "item": {
          "id": "76a9d97c-dd9d-40c5-bddf-e2e07ca7222a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "35deedcb-a299-4132-b623-18e64984b74d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4140980-7786-4852-a405-1a32cd803fbd",
        "cursor": {
          "ref": "2ef33486-40f4-4b81-85b4-2227e38edf5e",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0e314650-77c5-4d8a-87ef-6e5692058311"
        },
        "item": {
          "id": "c4140980-7786-4852-a405-1a32cd803fbd",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "672aa8aa-12e9-4894-969b-7e90f1c15ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66dfd9e1-ca76-47b5-a244-1dd73aa7e0b5",
        "cursor": {
          "ref": "24ec382f-6c54-483c-a28a-a0525975351e",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "aee5f5c9-873d-4600-bf1a-d998b27fbfff"
        },
        "item": {
          "id": "66dfd9e1-ca76-47b5-a244-1dd73aa7e0b5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "24f4a09f-95ab-4b45-90a2-981c6cd16a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e850be-ef89-4225-95fc-21916e9f220a",
        "cursor": {
          "ref": "dcfe2703-cf3f-46c5-81fd-9e477e022088",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "063968b3-f3ab-4333-87bf-dffb4159789f"
        },
        "item": {
          "id": "a7e850be-ef89-4225-95fc-21916e9f220a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "71319842-2dab-461d-a652-e0743339026b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f470c1-9f26-480d-8fae-3653dd9b313a",
        "cursor": {
          "ref": "64141e7a-e413-48c5-9b7f-791dc44b6469",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c0131b9d-85ec-4483-9032-0dc9d743721e"
        },
        "item": {
          "id": "b4f470c1-9f26-480d-8fae-3653dd9b313a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f26cbbd6-655c-4e60-b9cd-0189039ee4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90bae649-796d-46c5-a764-678a9238ce30",
        "cursor": {
          "ref": "071b9d56-ce27-4291-bf0c-ad2e20d91b0c",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1628d440-42fa-4f6e-8a99-b09a23c1ffad"
        },
        "item": {
          "id": "90bae649-796d-46c5-a764-678a9238ce30",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "050c89a0-5c2c-474e-a226-fdf3ce828066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f82a1ae-1e7c-492b-af24-d3c8ad0c8076",
        "cursor": {
          "ref": "db23eab7-2c48-409c-b200-4f87e81f37f7",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "579d9918-332d-4c96-bbea-e04714c20d93"
        },
        "item": {
          "id": "0f82a1ae-1e7c-492b-af24-d3c8ad0c8076",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c84d7426-20cb-449d-b632-1fa26e891912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9b2e00-e317-4024-a1f3-738312aaf8a2",
        "cursor": {
          "ref": "f24abd5b-c384-42ad-b657-9cfb19f66ddc",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "80413aa7-985c-4b12-88c1-6fad007f4621"
        },
        "item": {
          "id": "7d9b2e00-e317-4024-a1f3-738312aaf8a2",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f721f859-3dc3-4c88-84da-bbd484e7ca51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0763c5c1-2c66-4ae2-934b-fae8697f7dfd",
        "cursor": {
          "ref": "6c346a50-81fb-4ebf-b5e2-8db0e5b87917",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5e4cd3d8-bfb5-46d8-8817-c76a63a131ac"
        },
        "item": {
          "id": "0763c5c1-2c66-4ae2-934b-fae8697f7dfd",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "94cd52c9-a3bb-467d-8749-9171977687ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53bcfe36-0e06-4c4e-90e6-1b5dd6f918a9",
        "cursor": {
          "ref": "262587a8-99cc-4a25-a064-5365335ed83a",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2025cd2a-9ef4-435c-ae9e-fb714bd863cc"
        },
        "item": {
          "id": "53bcfe36-0e06-4c4e-90e6-1b5dd6f918a9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d4d28352-9873-4e4f-a1f0-af5785df0d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9319dd-6429-4c8d-8e6b-b62a17a95c61",
        "cursor": {
          "ref": "619e5a20-4b40-4255-86dc-2b74375594d9",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "12bfd176-dd12-4e90-b76f-1736d5437fc5"
        },
        "item": {
          "id": "4a9319dd-6429-4c8d-8e6b-b62a17a95c61",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3616ac9a-8d80-40e1-92c7-18031a092967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef9884b-68de-43b3-ae6d-ef589481386b",
        "cursor": {
          "ref": "a84f9c99-fa2a-4a49-8fdf-814d2e4d267f",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8d640cf0-50e0-4761-ad03-a7f7642f831f"
        },
        "item": {
          "id": "8ef9884b-68de-43b3-ae6d-ef589481386b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "24c24ea5-aa90-481e-8f9f-26c43fe62e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5585be26-6cdb-4cc9-afcb-18528dd092b2",
        "cursor": {
          "ref": "ac32e66b-56a7-4211-b952-b41fcaa7246d",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a5a68900-53cb-4e1b-9ec0-f7e85ab41ac6"
        },
        "item": {
          "id": "5585be26-6cdb-4cc9-afcb-18528dd092b2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a2923f25-a439-4a98-b318-927bbb4e4512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07f56c0-380a-4cd9-b400-11edf09a0d62",
        "cursor": {
          "ref": "c9ee30c6-da22-4d7f-a930-3d1d426444e5",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f05c8966-0ad9-4db8-8a76-b92aa455e3b2"
        },
        "item": {
          "id": "d07f56c0-380a-4cd9-b400-11edf09a0d62",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6b31e47e-9450-4947-abc5-7cda126702e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e347f8b-f257-4125-8c14-f076390fbd13",
        "cursor": {
          "ref": "05071949-fe2e-46e8-8080-ed0cd7c805b5",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ff1aaa59-df3f-4383-81aa-38cd6f040654"
        },
        "item": {
          "id": "2e347f8b-f257-4125-8c14-f076390fbd13",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "67dce206-a99b-4afc-8600-2221dafd3ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532867c5-0aa6-4487-8a05-fd2d64065a47",
        "cursor": {
          "ref": "fb9adcf9-119e-4598-8903-1c3cb96755ca",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d1850568-5a60-46ad-a410-1615b2c7e8ca"
        },
        "item": {
          "id": "532867c5-0aa6-4487-8a05-fd2d64065a47",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a0cdaca2-3534-4297-9660-1a251be1558e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2745fd-63e3-4c92-879b-daf1ca277aa7",
        "cursor": {
          "ref": "3234d718-c26e-4b3f-93a9-875a8a5e8a87",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "65e4c3b3-2c2d-43b9-ad6e-a0c06570608a"
        },
        "item": {
          "id": "ef2745fd-63e3-4c92-879b-daf1ca277aa7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "58d8c570-788d-4119-a5a8-b1633a06ea70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7817a6-41b2-43a2-95c9-cb3f8b4bceaa",
        "cursor": {
          "ref": "8e4a7f53-d286-407a-a8b9-afa74bf4c936",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "16588df4-e2ef-4840-a81e-adffe72a4729"
        },
        "item": {
          "id": "1e7817a6-41b2-43a2-95c9-cb3f8b4bceaa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e1bd4ce3-e96c-47be-a8d0-12f27d90f4bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e753dc34-720c-4b0e-9308-457080853e52",
        "cursor": {
          "ref": "4fbef005-d049-480a-9ee3-29613b09f852",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c4d94b61-4f97-4c69-a6e0-b4b7617a17fe"
        },
        "item": {
          "id": "e753dc34-720c-4b0e-9308-457080853e52",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "83e6e237-2b00-4e27-a273-13ce79000e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7bb01e-6928-4c32-a263-238ad8c1720a",
        "cursor": {
          "ref": "99ae90a5-6069-4c3a-8d6a-b6dfb6ce34df",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3ba24033-6f7f-4eef-a3ea-33537196fda6"
        },
        "item": {
          "id": "1a7bb01e-6928-4c32-a263-238ad8c1720a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0f1417f3-6b47-4f78-9ea1-78bfb87894b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26593c80-1ed0-413f-a341-c72d3823ef9d",
        "cursor": {
          "ref": "8463f94a-227e-4a1b-b7a0-447aeda39286",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b76daa61-7058-4b11-8877-9066aa91a582"
        },
        "item": {
          "id": "26593c80-1ed0-413f-a341-c72d3823ef9d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7103061d-95ec-4b66-87c9-708e9a637052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ae16b1-667e-4c73-9c04-55ef7af223ae",
        "cursor": {
          "ref": "4da30df5-6db6-4cb6-b82c-f15cd96a8659",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "4a3974c7-a72d-4797-8a7e-bed57d5bdfa9"
        },
        "item": {
          "id": "07ae16b1-667e-4c73-9c04-55ef7af223ae",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "103bfe5f-f4bb-4947-9bd2-220cd96002aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd32cc6-87d7-4f7a-a1cc-75c098f7dffe",
        "cursor": {
          "ref": "c1c3c19b-b8ce-4940-b414-16c912ffbaf0",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "33cc98fc-8e61-487f-bbf6-40827174c3e6"
        },
        "item": {
          "id": "5dd32cc6-87d7-4f7a-a1cc-75c098f7dffe",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "470558d8-af21-4706-8e07-af809d62cc09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b09fd9-0eab-4631-8893-9c314a5b8d47",
        "cursor": {
          "ref": "d578fa1f-7305-4753-85c5-1009563095e9",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "55cf97a7-3584-4b83-b39e-bbc13039fc70"
        },
        "item": {
          "id": "71b09fd9-0eab-4631-8893-9c314a5b8d47",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e5277f10-825f-4ce3-bea8-1f3ddcd624ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9f2eb3-246e-4c99-8b1e-d0c46d6df1fa",
        "cursor": {
          "ref": "62d5ec72-48f5-4220-be2b-f1f259d173b0",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d6b23cb7-0556-4f16-848b-e9046daf1672"
        },
        "item": {
          "id": "af9f2eb3-246e-4c99-8b1e-d0c46d6df1fa",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "da5ed168-bc6b-4b74-b0a1-79856302c679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff90d837-ef87-4894-b27e-9f3dc760eec2",
        "cursor": {
          "ref": "a2527222-3614-4626-a7c4-6b8599a1ea5e",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "598862f1-af27-4975-93bb-9b85b06351dd"
        },
        "item": {
          "id": "ff90d837-ef87-4894-b27e-9f3dc760eec2",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3ffc1bdf-c58a-44cb-95d1-a21bc04c10ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15765e7d-ab50-4f80-a4fc-89b8aab985d7",
        "cursor": {
          "ref": "ed904ae4-7e00-48ef-b35e-71ed83c5dc84",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2262ffed-fa0f-499c-bed6-40f535a21fb0"
        },
        "item": {
          "id": "15765e7d-ab50-4f80-a4fc-89b8aab985d7",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f0c7e761-a873-4f77-90fb-7ffa2755acf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ae508d-b2dc-40d6-a0b2-78ed7385abf9",
        "cursor": {
          "ref": "e7659bf9-69b7-469e-abdf-474714d0a775",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "74e0a407-ff9a-4127-b4c8-534fa0baf504"
        },
        "item": {
          "id": "13ae508d-b2dc-40d6-a0b2-78ed7385abf9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d8a75e7f-440b-4bb7-8a14-97fd2cfcb396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d555d947-6848-4af4-98d3-a30514506138",
        "cursor": {
          "ref": "b2ab368f-f33b-4b4b-98c0-1fc8fc845929",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "62cc3cfb-69b1-43bb-ad0e-7b1a1292b171"
        },
        "item": {
          "id": "d555d947-6848-4af4-98d3-a30514506138",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4c642fe3-a7c5-42e1-a0ef-82a00ae25e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6db731-b9eb-4d81-bc51-b89a558a629b",
        "cursor": {
          "ref": "17988f25-0500-46eb-9d2c-35ea3bde8e10",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9c72d0e0-b128-49f0-bc69-a3319b77f086"
        },
        "item": {
          "id": "1a6db731-b9eb-4d81-bc51-b89a558a629b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0708863c-e4d7-4d04-af34-47908a0fb6e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4c3c25-7391-4716-be26-079a08727b5f",
        "cursor": {
          "ref": "5a1102d0-8f48-43cf-9ea6-c300efa8153f",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f27aeda5-a24f-47ec-83e8-30964786f82e"
        },
        "item": {
          "id": "fc4c3c25-7391-4716-be26-079a08727b5f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "163408bd-8cd8-4ebc-871c-e87a1a58e901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37bceafe-2a36-4644-9440-554e00079bbe",
        "cursor": {
          "ref": "1473426c-cf99-4d5c-b211-409c0a12355e",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f137957a-87ba-4fd1-88ee-56c44d1ec2f8"
        },
        "item": {
          "id": "37bceafe-2a36-4644-9440-554e00079bbe",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ee0b41db-c33e-4b7a-b4aa-87fa055e8380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038a588f-2ec2-465c-a46d-d2f0f9de3115",
        "cursor": {
          "ref": "48327b0e-20f8-4a71-a8ab-ff1bf6b392eb",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "279def7c-550e-4c69-b7f9-8b07f4980086"
        },
        "item": {
          "id": "038a588f-2ec2-465c-a46d-d2f0f9de3115",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5125c382-796e-4f15-a542-30295b24fa2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebe0731-b017-479e-bd78-d14f3008a5fd",
        "cursor": {
          "ref": "8a052f0e-21cb-434d-9e04-15ee785e93df",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b26a8262-8979-4d8d-b02a-054c03e02b13"
        },
        "item": {
          "id": "2ebe0731-b017-479e-bd78-d14f3008a5fd",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9f92c52e-2fba-4b40-bdde-3148aa253a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a45ed4-6b03-4a05-b5c9-40b15f78c182",
        "cursor": {
          "ref": "5d8991cc-afd6-4fd2-b1af-6a44e3d78997",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e68e7bb7-3507-420d-9079-b1146d48882a"
        },
        "item": {
          "id": "19a45ed4-6b03-4a05-b5c9-40b15f78c182",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "220dd05f-4bbe-4d89-9e0a-70fe7f32342e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4721bd06-ec2b-4b5e-acc7-cdcbff3b6cc8",
        "cursor": {
          "ref": "f54f6bbd-72ca-4829-9598-80be32a6dcda",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "902774b3-9778-429d-b6da-ea3381cef640"
        },
        "item": {
          "id": "4721bd06-ec2b-4b5e-acc7-cdcbff3b6cc8",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a0dd8589-f47f-4f80-b432-fad44eda1619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c08331-812c-4ea3-a25e-51f7078e8d9d",
        "cursor": {
          "ref": "5e69da62-f216-481a-b034-b9b13eb8a0dc",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "9962d917-33f2-4f6a-8d24-213599e91d18"
        },
        "item": {
          "id": "45c08331-812c-4ea3-a25e-51f7078e8d9d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7cbae667-4b03-49a1-a9af-d7b5cf3b4ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30acd754-5dd0-4a32-86fb-ad1b5f6e05bb",
        "cursor": {
          "ref": "86babf81-7adc-4aa1-ac5c-4025105d9b13",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "55c0124f-f735-4126-bd6f-57fb1897a79a"
        },
        "item": {
          "id": "30acd754-5dd0-4a32-86fb-ad1b5f6e05bb",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6c0dd24d-3e92-413e-b302-12d538ff8c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3cdc4ec-1a0f-4cd4-882c-6c82aa6ced96",
        "cursor": {
          "ref": "bd9c4210-dc5e-459a-9a78-06b453ed0886",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a1d1c773-890a-4948-9193-bf20407a6c0f"
        },
        "item": {
          "id": "c3cdc4ec-1a0f-4cd4-882c-6c82aa6ced96",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6e86ed29-48d6-4109-b8fe-f920503e0f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6512cc74-c4f4-4d4e-96df-604e96fa1775",
        "cursor": {
          "ref": "5ce8b9d8-d569-457a-ad37-ed8e082b97d7",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1a8c5f24-f9c8-487c-ad63-8262df814227"
        },
        "item": {
          "id": "6512cc74-c4f4-4d4e-96df-604e96fa1775",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4577e626-a47d-45ac-aa7e-ded4b0939ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b16d2d-b89f-44dd-82dd-578d681a379e",
        "cursor": {
          "ref": "5809e287-3d0c-448a-a9fb-e57653608aef",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "abce0d5e-a61f-4fad-b615-4ba2bfcb551b"
        },
        "item": {
          "id": "39b16d2d-b89f-44dd-82dd-578d681a379e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6902dc8c-eeb7-40a4-8087-0a5ce1242752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b748ae-29bb-420a-9b5c-5de34408314b",
        "cursor": {
          "ref": "a876fd69-b6bf-4851-9c71-1d937125e81e",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d6627976-6757-4a30-b4aa-466ad14940fd"
        },
        "item": {
          "id": "27b748ae-29bb-420a-9b5c-5de34408314b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "149e09ec-ac7e-4e5e-9054-b6889f3d2c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa0f121-947c-41ca-a0fc-5eefc8f35a3d",
        "cursor": {
          "ref": "3e53c353-c9dd-4dcd-8f18-396b9eb5da2a",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c58543e3-ebc8-4b62-aa3b-46e7e7f2910c"
        },
        "item": {
          "id": "6aa0f121-947c-41ca-a0fc-5eefc8f35a3d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f7271cf0-68cb-4df3-a9c3-ed75be967806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3d14ed-67d8-447d-9fed-1dbbf279c007",
        "cursor": {
          "ref": "248d65ba-0928-4773-a0e4-d865a41d5fa9",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4b56f76b-d3da-463f-b8e0-b6651ac2fec3"
        },
        "item": {
          "id": "4e3d14ed-67d8-447d-9fed-1dbbf279c007",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f4417790-55c3-41e5-8ce7-52a0cc99f484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee226ea-9985-4eeb-aa4f-4f48e3ddb559",
        "cursor": {
          "ref": "72559e70-cf17-4b40-8104-001f910511dd",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "080091a9-a9b6-4d39-bcdb-9557fc76fdae"
        },
        "item": {
          "id": "aee226ea-9985-4eeb-aa4f-4f48e3ddb559",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2b53e47f-c36f-4a2d-b01b-1f619415a5b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86cbc605-02b7-4e52-8e5b-7cb8da161176",
        "cursor": {
          "ref": "f9b60c3a-c396-4b9e-b781-de8626f50ff7",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "05d33deb-dda0-4e7d-8b26-812757189ac4"
        },
        "item": {
          "id": "86cbc605-02b7-4e52-8e5b-7cb8da161176",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "aa4c6640-e3c7-47bb-82d1-b06385f6a2cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262a87d5-68de-42d3-b49c-b1f771046123",
        "cursor": {
          "ref": "d8045f22-e6fb-416e-b4be-9f7d45c3f75c",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ac1d5a8b-f872-4078-8551-05ff58d0a3bc"
        },
        "item": {
          "id": "262a87d5-68de-42d3-b49c-b1f771046123",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ca8d6376-1c5d-42b3-9670-efa86c8bb5b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3fd895-6567-4afc-a21c-350b791b8d00",
        "cursor": {
          "ref": "9026f050-1277-4ee7-9726-ea214e2833d9",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4729f1e0-5c63-4038-9310-40a2ebd194b1"
        },
        "item": {
          "id": "0d3fd895-6567-4afc-a21c-350b791b8d00",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "29df3e31-aa15-4499-985b-17012b02f4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4345f497-13ad-4104-97b3-001618efa885",
        "cursor": {
          "ref": "ebf5e909-8fe9-4246-b881-e75f01c04ce4",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f77e2514-11c2-43d0-9fb0-a37b578002c2"
        },
        "item": {
          "id": "4345f497-13ad-4104-97b3-001618efa885",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "47e52d42-2bba-4876-9354-d4761f859a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5858730d-eaf8-46d1-a091-37b52ec58ca3",
        "cursor": {
          "ref": "8affc967-169b-4277-8542-8e8a198f5891",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c347421e-0e2a-4d1c-8083-b84a9b69bc4d"
        },
        "item": {
          "id": "5858730d-eaf8-46d1-a091-37b52ec58ca3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7fdfa57b-b3b9-41ac-b589-68b0e52f0623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36592a51-7a1d-4219-9ca1-ee3332253aaf",
        "cursor": {
          "ref": "b562700f-edad-425c-b641-182ee6f6aaed",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "44b93f3f-f581-4e57-8c0e-c9ca283dab1e"
        },
        "item": {
          "id": "36592a51-7a1d-4219-9ca1-ee3332253aaf",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1ebee87b-e341-4788-84ed-546d1cd367f8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c51f85c9-197b-4b33-9036-f66f4ef2b92a",
        "cursor": {
          "ref": "bb229513-a5ea-4f4e-84d6-2785064b6fde",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "628eba69-5ee9-4e6a-a796-74e8f03ac669"
        },
        "item": {
          "id": "c51f85c9-197b-4b33-9036-f66f4ef2b92a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f71bdd5a-7761-460c-adb4-acbf30c75d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "db127ec8-ae16-4849-b4e2-4c7e40bda673",
        "cursor": {
          "ref": "b578856e-a2f0-4ee2-9136-335292993973",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1836cec4-70e8-40d2-a016-c70d27ba3464"
        },
        "item": {
          "id": "db127ec8-ae16-4849-b4e2-4c7e40bda673",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "34cf7b5e-f0e8-4278-95a3-7ac1ea4bdffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "de29e8e9-d648-4a09-af30-5f9d428bc9bd",
        "cursor": {
          "ref": "85f8ff35-acf8-43de-9721-a98162d43332",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "47779987-2c7d-4512-ae92-054cf49a0cbe"
        },
        "item": {
          "id": "de29e8e9-d648-4a09-af30-5f9d428bc9bd",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7f0309b4-5bb9-4e59-84fb-9ca113ed1cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "31fede18-5ce6-480c-b359-554a122a0066",
        "cursor": {
          "ref": "3a4d1057-e887-49f2-99da-41f4c19d019f",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a140ebcc-3d5c-477d-86ed-9ecfd04c035b"
        },
        "item": {
          "id": "31fede18-5ce6-480c-b359-554a122a0066",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "33277487-a40f-473f-902d-975cacd1a874",
          "status": "Created",
          "code": 201,
          "responseTime": 5026,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b372387-41ca-4d82-8fe1-6e00ad5965db",
        "cursor": {
          "ref": "dd597318-e971-48a4-b3f8-8f2aff161fc8",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a1bafbfe-1315-4dae-9068-21e13214367e"
        },
        "item": {
          "id": "7b372387-41ca-4d82-8fe1-6e00ad5965db",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b2d95340-c422-497a-aa25-743c944bfac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "abea689a-ee64-475d-8a9e-a15d8ee3e540",
        "cursor": {
          "ref": "ea66bbce-6b2b-4ce1-b3e3-d374673bfd5a",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "cc5e9a9e-4151-45a6-b6e0-0d347171593e"
        },
        "item": {
          "id": "abea689a-ee64-475d-8a9e-a15d8ee3e540",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "71963544-f55d-4c6b-8ff6-a25e31580227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "153b9743-b652-45bb-80ab-ff0a347bf296",
        "cursor": {
          "ref": "cdbb738e-c1e5-47cf-adf6-efb96ba973cf",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ec8104bb-ca45-410b-9075-5d7af0c2a890"
        },
        "item": {
          "id": "153b9743-b652-45bb-80ab-ff0a347bf296",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f78de84e-9000-4c59-9c0a-201df38337bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312efea2-fccc-43b6-85b8-b7cd12829b51",
        "cursor": {
          "ref": "69c87fc3-1804-4e9f-a8b8-c7869dcabce3",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b5a92bec-9453-4b55-9599-fe8c4101c90a"
        },
        "item": {
          "id": "312efea2-fccc-43b6-85b8-b7cd12829b51",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "68e9fad7-2b7f-48d8-ad6d-942eecb2b30b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573c3d41-92a6-4a3f-8e89-0a7a2e06e5e5",
        "cursor": {
          "ref": "83afaeda-5a8e-426c-a4bc-7c6937478153",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0b64b7c5-3e41-431d-82a4-8025f2900d20"
        },
        "item": {
          "id": "573c3d41-92a6-4a3f-8e89-0a7a2e06e5e5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "49cb1a94-209a-480d-bed5-6acf9713f807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17340196-9d0f-45f6-8e39-cf0814020865",
        "cursor": {
          "ref": "d835b789-4b0d-457e-a7db-1f25e2b1e1af",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f449ddf7-8e66-4c85-8ded-68d91d05e244"
        },
        "item": {
          "id": "17340196-9d0f-45f6-8e39-cf0814020865",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9ead2fc6-4e27-4462-be60-8eefc5db027a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe66cda3-c56b-476b-a2a7-b0facd16b214",
        "cursor": {
          "ref": "0e9e4432-377c-4e87-8f98-85ee58435f2c",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "de8bb245-9150-4f7e-8e45-66bbffc1d278"
        },
        "item": {
          "id": "fe66cda3-c56b-476b-a2a7-b0facd16b214",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f4c395b0-b86f-4865-9148-16e4cfa0aae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7640c71-5991-458b-8080-b240b5ec8bd3",
        "cursor": {
          "ref": "9798021d-36ac-4174-a5f1-e33988521c63",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5b74e8fd-cf11-4162-88cf-0664558a5a7c"
        },
        "item": {
          "id": "d7640c71-5991-458b-8080-b240b5ec8bd3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ffbbe53f-ace6-439e-ae23-50fd40d1d02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ed60de-6745-4a1d-a38f-4440498f1be8",
        "cursor": {
          "ref": "231586cb-2344-4752-bd6d-0d1fd2bad0ae",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "275223fa-dd4f-4092-8e0f-0cbc92cae68e"
        },
        "item": {
          "id": "c3ed60de-6745-4a1d-a38f-4440498f1be8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0a2681a6-53c3-415e-9843-5dd47a0fb37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ba4b2c-5c46-42b7-9d49-eabf2e0bfe5f",
        "cursor": {
          "ref": "a5eae5b8-33b8-4660-98fc-51595b4ec362",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "dbd19300-6250-45dc-b7ea-1e5bd9cc9cba"
        },
        "item": {
          "id": "21ba4b2c-5c46-42b7-9d49-eabf2e0bfe5f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d0508237-23be-4fb4-89b6-dcc2d604cfb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fada904-e953-43d2-b00c-bb2ebf418178",
        "cursor": {
          "ref": "01ca1b20-2e9d-416a-a3c8-c18afab355bb",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9e3c96dc-11a0-4a1a-bd6b-83579ae7696f"
        },
        "item": {
          "id": "1fada904-e953-43d2-b00c-bb2ebf418178",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c6cff72c-9e26-468c-9524-b339f4462455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3c291a-7b5c-43b4-8c5b-cea41d5b9f24",
        "cursor": {
          "ref": "878631db-5c8e-4b79-8f93-7b86d1cd2824",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "104b86f1-f7ac-4992-af06-8e7609ddcfc5"
        },
        "item": {
          "id": "5e3c291a-7b5c-43b4-8c5b-cea41d5b9f24",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "35a3dd3c-90f9-45e3-bb91-6b22a04b7528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde54bce-f1cd-4007-92ae-285b99ef4f9c",
        "cursor": {
          "ref": "dc5907e3-846c-44d0-984a-0d129f874214",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d5346f7c-7999-4488-bb2d-7bea45394330"
        },
        "item": {
          "id": "bde54bce-f1cd-4007-92ae-285b99ef4f9c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6b6c72bf-2adc-4759-8fe8-36fda5b73ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2728ccc2-18f7-4cbd-a43a-5d5ff0198f0e",
        "cursor": {
          "ref": "4794011d-61b0-4b6a-8f7b-d4733022bce8",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b7543c9c-480e-46c5-81b8-ec5a391820c3"
        },
        "item": {
          "id": "2728ccc2-18f7-4cbd-a43a-5d5ff0198f0e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "83a15946-98df-4166-880d-888bd3f5bb8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37289a0b-f638-4c2f-9a89-f8c6465c31fd",
        "cursor": {
          "ref": "49a289c7-24ca-44b1-b72d-51abb94da1be",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c582ac04-df26-4527-9e6d-1f79fbbf6186"
        },
        "item": {
          "id": "37289a0b-f638-4c2f-9a89-f8c6465c31fd",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d8da8baf-b6f6-4df2-a9eb-64de9514b663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443a5e0c-3a3b-4dec-a3cf-3ab0131733f8",
        "cursor": {
          "ref": "839b5df4-2ced-49ea-85c4-0fc8fee7c28b",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a8598b64-8fee-4e1c-8f38-db7e77ba98cb"
        },
        "item": {
          "id": "443a5e0c-3a3b-4dec-a3cf-3ab0131733f8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "58bf75c1-213d-453f-86c6-7ce79f4fc946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f80b176-37a4-474b-b5a1-6a0e6f960b03",
        "cursor": {
          "ref": "1cfc8699-985a-4572-82af-7cb76e28673c",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3652c47a-840c-430f-a923-1bddc0be3165"
        },
        "item": {
          "id": "2f80b176-37a4-474b-b5a1-6a0e6f960b03",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f86f30c4-ba62-43cd-8662-86585bb2935a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11ef40b-5a8b-4aa7-a985-0418ba40703f",
        "cursor": {
          "ref": "ea0def8a-3114-4b7b-810f-9e1b3031fc3a",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "41a74192-eee3-4279-af6f-a83f98d67074"
        },
        "item": {
          "id": "b11ef40b-5a8b-4aa7-a985-0418ba40703f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "feed7719-2b0c-4edb-95c2-aecf26cfb826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586a3009-ff43-46e1-a903-e369db30412e",
        "cursor": {
          "ref": "6659a464-3b50-40b3-94a7-29abbe73a38c",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "99064842-530e-489a-9e69-f4df5b75be36"
        },
        "item": {
          "id": "586a3009-ff43-46e1-a903-e369db30412e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "33249080-0cd5-4a1e-b41b-014cc316504a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e217fcfc-382c-4da9-a86b-6b407b61f8d4",
        "cursor": {
          "ref": "3415c72e-719d-494d-9ad0-da4d9d3818cd",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "59b11cdc-a5d2-4442-a71a-506b07382d41"
        },
        "item": {
          "id": "e217fcfc-382c-4da9-a86b-6b407b61f8d4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fce20ed4-3324-4d05-af46-a4681e63e4d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dcc318b-1280-4d8b-8cb5-24e290e8163b",
        "cursor": {
          "ref": "ece7f818-d70f-498e-b5ae-e17c250d88a8",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "016958c4-7834-453d-b4b3-6017ecdfec8f"
        },
        "item": {
          "id": "8dcc318b-1280-4d8b-8cb5-24e290e8163b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7ce84d2c-c791-4d60-9e93-e846f7574af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8b8bc4-e43a-4693-bd69-0d4b6d906f4b",
        "cursor": {
          "ref": "d6c51c27-eaa7-4e08-a0ad-58e12997c7a4",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5fafa3ac-5f16-4838-959a-a6cd422d210e"
        },
        "item": {
          "id": "0f8b8bc4-e43a-4693-bd69-0d4b6d906f4b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "526fe82e-430a-495c-9854-db071af71e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9f3124-279f-4796-b3c4-2c5cddbc1ddd",
        "cursor": {
          "ref": "260d891c-f913-4267-8f0f-bc347b20134a",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "07a122d9-789a-4044-b965-17ed141ace6e"
        },
        "item": {
          "id": "5f9f3124-279f-4796-b3c4-2c5cddbc1ddd",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "72b16243-ccbe-4434-ba04-37267cd1a8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63bb7e3a-0b3c-47ec-b027-41dad94d0e2d",
        "cursor": {
          "ref": "1738d353-87d0-4fe0-a5e2-329a0f924302",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c27108ac-7396-4e3b-81c3-14725c73f540"
        },
        "item": {
          "id": "63bb7e3a-0b3c-47ec-b027-41dad94d0e2d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1d6da2dc-c03b-49de-b5a3-4eecfd17add7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d3209b-9b19-4699-b298-5b8e39c77546",
        "cursor": {
          "ref": "3652e538-19a6-4b14-9ff0-2ad1ef66425b",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "05483f8a-3bb7-40bb-b434-333117b62904"
        },
        "item": {
          "id": "16d3209b-9b19-4699-b298-5b8e39c77546",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c8ef46a5-fd44-466a-88d0-01de5145b919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce51be61-70ba-445f-af36-9b8edcc48e6e",
        "cursor": {
          "ref": "452a0432-5927-431f-91f9-640a6271c3c4",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8f974915-6484-4144-8aac-7a087e866c1a"
        },
        "item": {
          "id": "ce51be61-70ba-445f-af36-9b8edcc48e6e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "031f317f-7922-4400-a2d4-f55f462eb461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5be300-f1fc-4dc5-a81b-d102a5fa797d",
        "cursor": {
          "ref": "6fc3cf3e-3b62-4b97-8996-b5b5574bc91b",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0f421baf-ab05-4c95-8fa0-728c91909733"
        },
        "item": {
          "id": "2d5be300-f1fc-4dc5-a81b-d102a5fa797d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "61bbde1a-212f-4650-b670-e115e8967c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89da0ca8-2e7c-4904-a080-6961e84dd391",
        "cursor": {
          "ref": "d73bbbf7-cf9a-420c-9e3e-4038a03195c8",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5b7d573e-1089-4aee-837c-fce6ad7b6903"
        },
        "item": {
          "id": "89da0ca8-2e7c-4904-a080-6961e84dd391",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "918ff468-9641-4333-bf53-86f6251ce418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774acdb7-35c2-46de-b376-50375bcaa740",
        "cursor": {
          "ref": "cf2ba472-9041-4949-acb0-464ae5832ffd",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "86bb581e-2c99-49b3-853d-51f3783e164e"
        },
        "item": {
          "id": "774acdb7-35c2-46de-b376-50375bcaa740",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "80a91664-27df-4bdf-b3d0-5f0d1767d194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0fad3f3-a3d0-44fb-81b2-2406f150e844",
        "cursor": {
          "ref": "34b1f3ce-d511-41f4-96ac-129391aa0f7a",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "08945e7a-987d-4a71-aff4-a849eea4ede6"
        },
        "item": {
          "id": "f0fad3f3-a3d0-44fb-81b2-2406f150e844",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c2d6adcd-17ea-4702-bf83-45be0534b362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967e23b7-5a1c-458c-99a2-fe934763f3e2",
        "cursor": {
          "ref": "3b286384-dc58-4340-a83a-0579b4016afd",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "dd1015b1-8dd8-4eec-a20c-c804326ab84f"
        },
        "item": {
          "id": "967e23b7-5a1c-458c-99a2-fe934763f3e2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "404d824f-411c-4d60-9337-92a2cbde9bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c086c0f5-a68b-4fed-9be5-6d681d5006b0",
        "cursor": {
          "ref": "8f5a29d1-91c8-4b9f-aa20-eb87156e7b54",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b6f9ae13-3c38-45c0-80cb-1226f747795f"
        },
        "item": {
          "id": "c086c0f5-a68b-4fed-9be5-6d681d5006b0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "093ac3bd-f78a-42c7-9ae9-161c1151720d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668f0bdf-07a7-4138-a87f-000dd127929c",
        "cursor": {
          "ref": "6e2fad33-5a33-4dba-899a-5287df841335",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "37978df6-860c-4ab3-88fd-0b97f7ad4d45"
        },
        "item": {
          "id": "668f0bdf-07a7-4138-a87f-000dd127929c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b9d402c5-86a3-42da-8e8a-103acbb60545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0951fa5d-bb95-4cbf-b69e-fa2e84f6246b",
        "cursor": {
          "ref": "7b968597-7fa2-4bbd-b1f8-61b6c2f868f2",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7032c91c-475f-4447-8c56-f60b11673f39"
        },
        "item": {
          "id": "0951fa5d-bb95-4cbf-b69e-fa2e84f6246b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a609db2f-79c4-4b58-9233-d0e1ad002c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da217e8e-e8f4-4261-b5f9-30edec5fcdb0",
        "cursor": {
          "ref": "5908b02d-e1ef-49e5-ae16-ce2054b2dd34",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d8429e73-6545-4650-a8c0-9c0378476448"
        },
        "item": {
          "id": "da217e8e-e8f4-4261-b5f9-30edec5fcdb0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "18ed7c53-32b9-411e-8956-2ea606fb5e50",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4902469a-6a1a-4ec9-b657-bf654d1c174f",
        "cursor": {
          "ref": "53ff248e-b18d-4fb9-bb47-8219856530ea",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "50154ebb-ac1b-40aa-b9f8-40a9318634b5"
        },
        "item": {
          "id": "4902469a-6a1a-4ec9-b657-bf654d1c174f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "56f8d8f9-fde9-4926-abcb-41514a9fd8eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b6b84f-b2e1-4990-822d-996fb96b573b",
        "cursor": {
          "ref": "a664021b-fa35-47c8-b92a-fa6079d5ee7c",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a3a6ad4c-2fe2-4084-9613-7ae94136b06a"
        },
        "item": {
          "id": "c9b6b84f-b2e1-4990-822d-996fb96b573b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c4dcabff-b202-4bf2-9efe-b3cb01c99d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6a839e-df16-4d7c-ae13-494473bb5cd8",
        "cursor": {
          "ref": "701ccc19-7796-4c23-9c9a-5f9155e069ac",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2b47d473-72b4-4081-bd53-25346e9b7e86"
        },
        "item": {
          "id": "6e6a839e-df16-4d7c-ae13-494473bb5cd8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0dacf2a0-9683-482c-96d9-e79ca9aac148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa58c10-67a2-479a-8078-c9d196eadd7e",
        "cursor": {
          "ref": "359bd105-92c3-415a-9ee4-4500d373ed8d",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4e922a86-0b08-42d3-9396-ecdd35d3638f"
        },
        "item": {
          "id": "1fa58c10-67a2-479a-8078-c9d196eadd7e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a5e0a9da-aed4-4ac3-bc6f-64c9d7d97734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd65021-313b-4b36-8462-fe1d45c9d90c",
        "cursor": {
          "ref": "4a54e688-af6d-4352-a1af-1092f9e6dd4e",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ef9b3155-454c-4892-aefb-3b874d040fdf"
        },
        "item": {
          "id": "5fd65021-313b-4b36-8462-fe1d45c9d90c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ad1061bc-00ac-466f-abd3-40271615914f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b22be8-b6ec-421d-ba8c-5462e8631bff",
        "cursor": {
          "ref": "e6deefee-c807-492e-ad05-e9f0ff468dfc",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "53431613-e7eb-4de5-9036-74422e234123"
        },
        "item": {
          "id": "06b22be8-b6ec-421d-ba8c-5462e8631bff",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a303979f-f4f5-458c-828b-d6954f89f6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146fa485-027b-4f40-b6ef-c6636b4f53a6",
        "cursor": {
          "ref": "dbd25a53-a94f-4d2d-9973-55939d13b05d",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e056e9af-16ec-472b-9278-fb0cd01250aa"
        },
        "item": {
          "id": "146fa485-027b-4f40-b6ef-c6636b4f53a6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2f570ba7-61df-4646-81cc-b82ca85d9b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f2e4f8-1fbe-4def-b248-6f4f708a8baa",
        "cursor": {
          "ref": "e367dca4-da71-44e3-a4b3-e282a549a61d",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "67f091d0-0d07-442e-b2de-2e40bf0fca43"
        },
        "item": {
          "id": "66f2e4f8-1fbe-4def-b248-6f4f708a8baa",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "fc3bd938-d8b9-4695-a408-9a96fc79c99b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10260037-becf-4c46-a4f5-8b6b92730949",
        "cursor": {
          "ref": "a3dd513f-3f05-4f87-97eb-840ee1e0022b",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "efe8567c-357b-4d63-806d-9626220fa7f0"
        },
        "item": {
          "id": "10260037-becf-4c46-a4f5-8b6b92730949",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9a2e68dd-1fc9-4bc3-bfdb-b888a7c9ec27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b39c8d-e0fb-40bb-baaf-1bf60005c2f7",
        "cursor": {
          "ref": "b570d94f-84cb-4d9e-adc9-c95be987e584",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "459e3206-db88-4a0e-aad0-4ac225131ce9"
        },
        "item": {
          "id": "b9b39c8d-e0fb-40bb-baaf-1bf60005c2f7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2cb0ff69-7dbc-43e1-b770-d69e0572249e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a34b52-f570-4f1f-8855-5d9d58983878",
        "cursor": {
          "ref": "94562460-9210-48f0-8e4d-7959110d324e",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c77b5aa9-86e5-4444-9238-7c0a1e38a15d"
        },
        "item": {
          "id": "f6a34b52-f570-4f1f-8855-5d9d58983878",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9b2a69ff-1bc4-4079-8d7a-7edebd93ced3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012faeb3-f7cd-4fc8-ad95-a5224937e37a",
        "cursor": {
          "ref": "245ba2d5-c4aa-46f7-ba50-3f0374674224",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "570ac9e6-fc4e-4274-9ebd-f5249311b255"
        },
        "item": {
          "id": "012faeb3-f7cd-4fc8-ad95-a5224937e37a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d196a980-536a-4f68-9ec6-7f250cd9eb12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c142a53b-ede4-42db-9cc5-16d5661801d7",
        "cursor": {
          "ref": "310215fd-3a5f-4564-8363-33aa1f39eb24",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "08d06bfc-41fb-4edf-9319-a2838a04a16e"
        },
        "item": {
          "id": "c142a53b-ede4-42db-9cc5-16d5661801d7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6acf62cf-e88b-4d64-a5c9-2a47869497e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c53b82f-7b44-4677-8554-918132ed75d0",
        "cursor": {
          "ref": "e7e4e4fd-aa9a-4b6c-afa7-c602af0ed685",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "81a56e3b-858a-4f88-ad06-1a8fa8c67297"
        },
        "item": {
          "id": "7c53b82f-7b44-4677-8554-918132ed75d0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d399e4c4-bdb9-47ba-9f39-de9dea6ef690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c34e9c-c4f1-429c-bd44-49197e98b5c7",
        "cursor": {
          "ref": "bbb41db9-7316-4b10-908c-f6cf2ecb7e16",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "47f9f0a1-ff96-4cd8-9b7e-f58503cd8bc8"
        },
        "item": {
          "id": "25c34e9c-c4f1-429c-bd44-49197e98b5c7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bc255782-54c6-4c33-a709-16538be572f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85059324-b8c7-48ad-b31b-745c6efde7d1",
        "cursor": {
          "ref": "3b93fba5-03fb-4f6a-ba2e-36e54c2b388c",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e00c3613-7b5b-449e-8e39-3e8bcc18aa8b"
        },
        "item": {
          "id": "85059324-b8c7-48ad-b31b-745c6efde7d1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ad1a98a5-6b42-47fb-9781-7649911d0a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79c8ef5-3694-4161-94b7-1534c0878b37",
        "cursor": {
          "ref": "9038933d-38f3-4fbf-8b01-a60715a5c551",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "966a2ad7-e904-4260-9eaf-09540f776de2"
        },
        "item": {
          "id": "a79c8ef5-3694-4161-94b7-1534c0878b37",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f2391093-9b49-4ed6-af10-5cab44ca56c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b13684-5dd8-48db-986b-ad1e177f5efe",
        "cursor": {
          "ref": "3a0e9e8a-7258-44c4-ad89-079fd8706903",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "066150e8-bcd1-4b69-9366-7fff3ca601d2"
        },
        "item": {
          "id": "28b13684-5dd8-48db-986b-ad1e177f5efe",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "175461de-b6ce-484c-9551-03d8c7894371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9de1697-7649-4836-92c0-9be6ea883353",
        "cursor": {
          "ref": "f9206181-92d5-488f-9cec-4fa592146e70",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d920f080-c381-4f40-8ccb-7fb43abd18b2"
        },
        "item": {
          "id": "b9de1697-7649-4836-92c0-9be6ea883353",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7dd3d0fc-bef1-4b50-a0ca-997a2317cdcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59586b3c-7dd1-4ceb-97f7-e2124a28b061",
        "cursor": {
          "ref": "7b3a9be2-f788-4fdb-aa88-caa0050f656c",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2793e71d-b4e8-488e-aed6-8e5affe77dbf"
        },
        "item": {
          "id": "59586b3c-7dd1-4ceb-97f7-e2124a28b061",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "624dd6e9-1e64-4f4e-a7ac-6931eee44733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f6ea07-ec94-43dc-ae26-280a10e1960b",
        "cursor": {
          "ref": "81e8c294-1624-436e-b9f2-f20ae168fa9f",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b48d847e-7c7d-495e-bcd2-72dade55b7fb"
        },
        "item": {
          "id": "d5f6ea07-ec94-43dc-ae26-280a10e1960b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "21280f8b-bdb0-432e-baea-452d3e9f5ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b36a4e5-ef3f-4f1d-9434-589afb1a8911",
        "cursor": {
          "ref": "23a0a1da-ac30-47f2-bc19-79db8d58de8b",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "94863795-8bba-426e-8b93-aad039215c83"
        },
        "item": {
          "id": "6b36a4e5-ef3f-4f1d-9434-589afb1a8911",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3cce2a95-fde2-49f2-8eda-8fc4a01b3e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ef3b92-c632-4c14-9297-8ad3ed88fad8",
        "cursor": {
          "ref": "ebfeb223-53f0-455f-a246-64bee7bf7380",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7480c9da-71b8-4ef2-87f2-6d56c6a04efa"
        },
        "item": {
          "id": "c6ef3b92-c632-4c14-9297-8ad3ed88fad8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e511921a-fa1a-4a32-8b07-dfc605ba6e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974a2b4f-4ebb-46e6-85da-d59bc0a031f3",
        "cursor": {
          "ref": "ac3d41bd-45b1-468a-9062-dcc9f576d59e",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f947ad54-9d0a-450f-807b-b09a274dabbd"
        },
        "item": {
          "id": "974a2b4f-4ebb-46e6-85da-d59bc0a031f3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5ea54d97-472b-4f43-b4be-39cbdfd973f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d9da6a-13ad-4b34-9983-cd08aef8e22d",
        "cursor": {
          "ref": "fd368613-c29c-486a-8fae-95ee25d094e5",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4aa11b11-22de-4352-b173-461a2e4fcf1e"
        },
        "item": {
          "id": "f1d9da6a-13ad-4b34-9983-cd08aef8e22d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2b34bad1-8dde-48cd-b483-e58d779655aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b5d1eb-bc49-4f27-ab8c-7f7c69692cec",
        "cursor": {
          "ref": "67cb64aa-75be-4ebe-9f1c-f1c31aba05e3",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e8dbec36-93fd-48c7-b04d-9a8735830c0f"
        },
        "item": {
          "id": "e3b5d1eb-bc49-4f27-ab8c-7f7c69692cec",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "de2acf97-c1e8-408e-b229-bab552ac81f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f52799-0257-4447-9d4a-45efafd78b36",
        "cursor": {
          "ref": "f63ce67d-d2a9-4fea-bd16-e6cf2c46a36f",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2b2bb5af-e1e0-4534-a01e-fedaaa29d4ef"
        },
        "item": {
          "id": "94f52799-0257-4447-9d4a-45efafd78b36",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "36a10792-e4e9-4937-a345-4e5cb19b67ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004ea9dd-402c-4283-a31e-2039794510fd",
        "cursor": {
          "ref": "332c5615-c13a-47f6-be4c-08e2c8818e60",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c34747bc-c742-40bf-963e-555f567fdf78"
        },
        "item": {
          "id": "004ea9dd-402c-4283-a31e-2039794510fd",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6ddc51db-ceb8-4660-8e6b-ca10ef110243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6088600-2103-4574-853d-dd02f3c5aafe",
        "cursor": {
          "ref": "9de971b5-b37b-4154-baf9-754f5142b379",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "80f852fb-7efa-4ab6-841a-7e76a0b2f9dd"
        },
        "item": {
          "id": "f6088600-2103-4574-853d-dd02f3c5aafe",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c262c5fe-2fc5-416a-98ee-9fa5d784402f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d3b9e8-6457-47f4-9c3e-ba23c05850dc",
        "cursor": {
          "ref": "e656bf4d-6f8d-4f94-86a3-5708a640d9ea",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "aa37c3ad-0f2a-4344-af3d-c75b4238ab70"
        },
        "item": {
          "id": "33d3b9e8-6457-47f4-9c3e-ba23c05850dc",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "318999f3-8727-46c3-86eb-f74f8f275f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b6ab69-7110-4674-8003-21b032ab1342",
        "cursor": {
          "ref": "18a060d1-90d3-40cb-8d4f-a7e772b1147e",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "938b4637-64d1-465f-a727-5c0e3b320640"
        },
        "item": {
          "id": "c3b6ab69-7110-4674-8003-21b032ab1342",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f9c08d7c-6fd2-453d-b77d-ae6bd2b5723b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c9e537-a4a6-4626-bbb1-4fa457a7b854",
        "cursor": {
          "ref": "358a56ec-af33-4f2e-a965-6fde93dbcfef",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "62aa12b3-838b-4255-8f8c-acb903438d35"
        },
        "item": {
          "id": "90c9e537-a4a6-4626-bbb1-4fa457a7b854",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "632b42f4-3ff2-4124-9459-839500046891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa32172-eccb-41f7-a807-506e96007320",
        "cursor": {
          "ref": "8cb98e1f-df53-4d85-9a26-bb391548a24a",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ad89458e-d6a9-4041-8d26-205db8744a3e"
        },
        "item": {
          "id": "3fa32172-eccb-41f7-a807-506e96007320",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a4689709-d017-4bb4-954b-5027931e6b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cbf2bb2-495d-47e8-8819-9520024a1d47",
        "cursor": {
          "ref": "e93a8f62-e7a4-40da-bee9-c70c1d01d648",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "73d0e01c-2a0a-4aeb-b5ef-cb451d4851dc"
        },
        "item": {
          "id": "6cbf2bb2-495d-47e8-8819-9520024a1d47",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "8a77cf7b-854f-4077-9af4-5f236e39dcb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b592a3e-1c85-4447-bd63-ee0bb06524ce",
        "cursor": {
          "ref": "580b7ad9-ac03-4b46-9855-dee81a10fd36",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "67930c6c-2e0a-455e-8698-96da759b8167"
        },
        "item": {
          "id": "4b592a3e-1c85-4447-bd63-ee0bb06524ce",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "04a43dc5-dffd-4393-bff5-fc1bf4131290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4a58bb-3eda-470f-a85c-9aec5dd2204e",
        "cursor": {
          "ref": "f1cec1c5-eba9-49d6-b98d-6e37e3b5ea60",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1509f502-333e-4c74-b761-eba63167dc55"
        },
        "item": {
          "id": "5f4a58bb-3eda-470f-a85c-9aec5dd2204e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a06dccfb-9f10-44a0-a093-8f7761d34c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4d4e6e-5cff-4226-8387-4c2371ca524b",
        "cursor": {
          "ref": "970d50f9-71eb-4502-8436-2eeb14859bd9",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e7d2ac07-62b2-4694-822d-163873402478"
        },
        "item": {
          "id": "ed4d4e6e-5cff-4226-8387-4c2371ca524b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "97495338-a2c1-49c8-9bdc-3485faef4e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319863a5-b8c2-451e-a4fd-0ef6ca3b97f9",
        "cursor": {
          "ref": "1f17b67e-73a2-422b-9228-7ec69715f1f0",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a7d0002a-6f2f-4edb-885d-6ea8ab041e85"
        },
        "item": {
          "id": "319863a5-b8c2-451e-a4fd-0ef6ca3b97f9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7f55d2ab-8124-43ba-a91a-4aa898dfbc64",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e3e574-3d06-4b88-97ca-b498950f93af",
        "cursor": {
          "ref": "2d4ad434-92d8-46a2-9ca2-fc163bc69c9a",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0dd1e399-f0ae-4dac-bd77-b25bfd5e2a78"
        },
        "item": {
          "id": "c4e3e574-3d06-4b88-97ca-b498950f93af",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "08f9f4e3-d8b8-4b91-be42-501bbe1c76c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e53398-5411-40c2-9960-a7a5828d344f",
        "cursor": {
          "ref": "19e362a6-862e-4ceb-bdf5-d7b29607a65f",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "50fd4ef3-efb8-4da5-b6fc-a7b829763a05"
        },
        "item": {
          "id": "d9e53398-5411-40c2-9960-a7a5828d344f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "768a5877-cac3-4e97-bdfd-c3e7eedae81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590c57f7-8bbb-4761-a01b-63073c7a2f4f",
        "cursor": {
          "ref": "67501bcd-2ec0-4ea7-8133-943209640f3a",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4eb8e2c9-de84-4ccd-930e-19917aa7a9e2"
        },
        "item": {
          "id": "590c57f7-8bbb-4761-a01b-63073c7a2f4f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "91ffd40a-1289-4bd1-9fc7-821003979179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a9f53a-aa4a-464d-8e8c-b0363936f759",
        "cursor": {
          "ref": "78ab5795-cf8d-40eb-876c-1090bc183a11",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "77511f8b-9014-4288-92bf-7951e24327b1"
        },
        "item": {
          "id": "25a9f53a-aa4a-464d-8e8c-b0363936f759",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e762d740-f568-4b9d-bd6c-17dfd9c120a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7ec535-99df-4c29-b917-63e1554126e6",
        "cursor": {
          "ref": "ee35f4fc-30b6-4456-96cd-fde7db1088c9",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "be623211-d134-48e8-a04a-58a5afbf7322"
        },
        "item": {
          "id": "1f7ec535-99df-4c29-b917-63e1554126e6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "db92d6dc-edbd-491a-a18c-e33c0a303997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2c56f4-06fb-470e-87a8-e8c5d7e2d331",
        "cursor": {
          "ref": "0f8870d6-9ce7-4d60-907b-482989eea41c",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "dd29e9ac-864c-446c-9860-9e0820082a0d"
        },
        "item": {
          "id": "9f2c56f4-06fb-470e-87a8-e8c5d7e2d331",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "fbeb5438-0a3b-4628-827f-6aec7aeba32c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea10df6-d3c3-44e3-86d3-055c963f457f",
        "cursor": {
          "ref": "8869e27c-1538-41d4-a88d-3304b6e5d891",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c042aa79-441a-4f36-b959-748cbbff89a4"
        },
        "item": {
          "id": "dea10df6-d3c3-44e3-86d3-055c963f457f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c3526ef4-414d-4488-bac2-04c441f62f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5db274e-f0ef-412a-b8da-00ad4975c759",
        "cursor": {
          "ref": "861ac94a-e579-4f24-b78d-28fe60e95d6c",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ed8e62c0-ceb6-4be9-a4f8-0dec66b5337b"
        },
        "item": {
          "id": "f5db274e-f0ef-412a-b8da-00ad4975c759",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "35b5c7de-4284-4a16-be3a-86e7a0567ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b61cd440-2166-4da9-8b84-48e1531babe7",
        "cursor": {
          "ref": "fbddf973-62eb-4868-ae57-6a6068a60587",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "80df8dd3-10ae-443f-b347-d37b495cb23e"
        },
        "item": {
          "id": "b61cd440-2166-4da9-8b84-48e1531babe7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6c709d0b-945e-45d0-b30a-f2e278d46330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ca49dc-ea48-47fa-ba07-1f585d2cc9e6",
        "cursor": {
          "ref": "be5cc117-efeb-4423-a8ad-71dfb8f179ba",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6d44308b-f9c2-4a53-a99f-6ece91234c70"
        },
        "item": {
          "id": "87ca49dc-ea48-47fa-ba07-1f585d2cc9e6",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "948f1c18-5067-4716-8bf3-513bb74801db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91eea5e1-3463-47e2-8d86-41c896265886",
        "cursor": {
          "ref": "8c4892e6-9db5-458f-b341-218ab6979ba9",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e98dd998-3876-4658-b709-1471b8dcc295"
        },
        "item": {
          "id": "91eea5e1-3463-47e2-8d86-41c896265886",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "96174ac8-4800-46ac-aaa6-98c8e7fd369e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea64b33-0dab-4dff-b5e6-c6ab37a93701",
        "cursor": {
          "ref": "3e619b00-b2f0-4e9c-ac33-fffc5345b516",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "79b4c5d2-f895-4313-99e1-6a839a9ae1af"
        },
        "item": {
          "id": "3ea64b33-0dab-4dff-b5e6-c6ab37a93701",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c5d0ed39-6932-4560-9b49-f813b26cca05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645988d4-8f2b-409b-bd78-428ca8acb81f",
        "cursor": {
          "ref": "15408125-071a-4525-92f0-e09b3e157ecd",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f154e1c4-be55-4859-9439-241060136d11"
        },
        "item": {
          "id": "645988d4-8f2b-409b-bd78-428ca8acb81f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d6630604-3e62-42de-a51f-0fdf72f4e919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7304b66e-197d-4370-aea3-a5aa5034a910",
        "cursor": {
          "ref": "3b94cf5b-d268-4a24-a717-b72918090573",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "942615af-2497-464c-9112-59cd8ec568ec"
        },
        "item": {
          "id": "7304b66e-197d-4370-aea3-a5aa5034a910",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "65755e36-8b72-4cca-b9e9-1e5bd68cd709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efff60b4-b389-44ce-8d0a-b16222789cc7",
        "cursor": {
          "ref": "d2e0180d-2c94-4419-91ad-f70c735b1265",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7a55b21a-e1ec-4113-a351-f04e15387369"
        },
        "item": {
          "id": "efff60b4-b389-44ce-8d0a-b16222789cc7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7e9ef6f7-26bd-4531-a8f5-976780f7daed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f8ff7d-ca07-47a6-ba21-b63b46bae866",
        "cursor": {
          "ref": "fecf7ac3-d970-491c-88e2-5177d4cb72e8",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7fe55bde-3eb9-456f-92c0-6cee3028b4a8"
        },
        "item": {
          "id": "e5f8ff7d-ca07-47a6-ba21-b63b46bae866",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "94badd98-9e06-4674-acea-2d3688e4350a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f7d918-a58a-4558-a212-1e05d4b5789e",
        "cursor": {
          "ref": "7fabfe2e-ea77-42bc-aae7-d07a3f39a82f",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5bf2d3e6-eead-40a8-92a5-359fc7a2e102"
        },
        "item": {
          "id": "13f7d918-a58a-4558-a212-1e05d4b5789e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "bab286bd-10e5-4a74-a286-8563d203c8b8",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "136f89ed-0e95-4872-b469-6f310527fc9b",
        "cursor": {
          "ref": "9c70b341-8eae-44c8-90a9-bbc0bb85edb7",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1d77fbb0-0214-448f-b606-e1dc810beb5c"
        },
        "item": {
          "id": "136f89ed-0e95-4872-b469-6f310527fc9b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9b479fbb-29c5-4af2-89c5-262c61ac5e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec48d23-d644-412e-8db8-2bdf2be07389",
        "cursor": {
          "ref": "1a81b751-3014-455e-a0a3-471beeada526",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f6c85656-48aa-4cdd-bca7-d4dd2df606d0"
        },
        "item": {
          "id": "4ec48d23-d644-412e-8db8-2bdf2be07389",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "689dba30-bd0a-4d5c-b9df-e9649396880e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43757efb-5749-4356-8643-13b119d2540f",
        "cursor": {
          "ref": "175ca87b-8290-45e6-8c51-227508aead8b",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e3665d62-884a-43a8-a34d-8959eb8f22be"
        },
        "item": {
          "id": "43757efb-5749-4356-8643-13b119d2540f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "59b9ff87-f064-4982-9fa1-f24badbc34a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512e922c-a544-42f7-9903-8a6111a71b7c",
        "cursor": {
          "ref": "3f3d3d00-1989-4511-836f-5e78baca980c",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "fc2b5944-a5bd-4307-ba81-a3667b172b63"
        },
        "item": {
          "id": "512e922c-a544-42f7-9903-8a6111a71b7c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2353d801-993b-4c2c-9189-b4c3b60eee36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b740cd-d19b-452c-acbc-9e4d3707b535",
        "cursor": {
          "ref": "2ec60d8c-4962-404e-846f-c27c6e5e7115",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b51ce707-940c-4e32-9a55-4aeb0bc321f9"
        },
        "item": {
          "id": "a4b740cd-d19b-452c-acbc-9e4d3707b535",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b644edf5-03aa-4a29-803e-ceb56079eee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68b670c-b100-415a-a685-33f6d6161e08",
        "cursor": {
          "ref": "be55d702-9e7a-468d-94f3-35a59ed76f0f",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f078d1e9-d111-479c-a99c-4f3053591da8"
        },
        "item": {
          "id": "d68b670c-b100-415a-a685-33f6d6161e08",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a31ca9c0-294b-4300-9a8d-520b6f099006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade04354-fd3e-4668-bd39-a809a4509d51",
        "cursor": {
          "ref": "5315eff1-4812-4b99-b0d3-f7a601cccf16",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c9f9ce7a-8439-471f-b8cf-683e5cc4a258"
        },
        "item": {
          "id": "ade04354-fd3e-4668-bd39-a809a4509d51",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "03266e24-ccfb-4631-ab18-31470bce15de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54eff84-f83f-4511-bf06-a33e221a4ae9",
        "cursor": {
          "ref": "eeafcd55-d273-4301-a6f1-0ecd6a91541a",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e8cf7d10-8744-44b0-bfe2-106b15db0b32"
        },
        "item": {
          "id": "b54eff84-f83f-4511-bf06-a33e221a4ae9",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ff734aa3-e07d-49b5-851a-5459f51ee29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48cb6c3-31e0-405b-90c3-ec61cadffd13",
        "cursor": {
          "ref": "b1cde043-30a9-428b-b8d5-7fecc53b4953",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7b236d94-2e1e-48d2-b2e8-773edc345c1a"
        },
        "item": {
          "id": "a48cb6c3-31e0-405b-90c3-ec61cadffd13",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e617e0c2-d2f8-45a8-987b-c6a673cc2bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d952dc73-7b4f-4175-9166-3fe499232327",
        "cursor": {
          "ref": "d2eda04e-d7b2-4e45-9a38-0b014a367734",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9620bbfc-cbb5-44b3-8874-649af38aaa46"
        },
        "item": {
          "id": "d952dc73-7b4f-4175-9166-3fe499232327",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "fc2dedcf-7eab-46e0-b645-79e8c3d17b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce24667a-7b78-4d6d-9b07-d14226edd9db",
        "cursor": {
          "ref": "e8ff770f-5567-4f47-80e7-9309da907698",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "98a80440-07c2-45a7-954e-5f0e54356379"
        },
        "item": {
          "id": "ce24667a-7b78-4d6d-9b07-d14226edd9db",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "29943df8-2ec9-45f3-956f-c506ca091ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ebb09ca-4586-4185-aeba-e631538cd8cc",
        "cursor": {
          "ref": "a221ea14-895b-4e3d-973f-f25b2a79e8f7",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "42beb076-4460-404f-b3be-4ec8bac4e386"
        },
        "item": {
          "id": "0ebb09ca-4586-4185-aeba-e631538cd8cc",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ecb2fbe4-c7b7-4fba-958c-eb5d23d0e8d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92057898-ce99-493b-85bc-1af7af1d8a42",
        "cursor": {
          "ref": "b54e0cbf-8d97-4aa3-9ccf-46fc03a01548",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "28fbfc77-d69b-4a8a-ac32-2bea639e2054"
        },
        "item": {
          "id": "92057898-ce99-493b-85bc-1af7af1d8a42",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6c316abb-b776-4bdb-9165-da93131f02d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823e9fd8-fee4-4304-8fc4-ba5c8dec9609",
        "cursor": {
          "ref": "72bdcc40-21ec-444e-a42c-1c9faadac7f6",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "378bba2a-ba45-4b43-927a-18061916778d"
        },
        "item": {
          "id": "823e9fd8-fee4-4304-8fc4-ba5c8dec9609",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "67bf23f5-3f3e-4477-b369-d4cd93099db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e7b1df-98d1-4089-aebb-33395770d350",
        "cursor": {
          "ref": "2dc38655-af04-4d19-8281-1a0858ca5a5a",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c83221aa-83c9-456d-84c8-e596d5e291b4"
        },
        "item": {
          "id": "20e7b1df-98d1-4089-aebb-33395770d350",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a5aed7f3-1412-4345-b5ee-de644a04f9a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4442ccb2-4aaf-45a8-ace0-e3f1abc5993d",
        "cursor": {
          "ref": "0d032fe1-629a-477f-a2fb-c0e32eca1ec5",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3370cb69-568e-4d6b-a416-1c947fe8cb52"
        },
        "item": {
          "id": "4442ccb2-4aaf-45a8-ace0-e3f1abc5993d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "da6701d7-c93a-44c3-bbfc-718bce8f2cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e24b5e8-8923-4a3e-8926-d120d54fc80b",
        "cursor": {
          "ref": "29c9d389-5730-43de-8c3a-af5efe55fffe",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2acbb490-72fc-4d22-9bff-8ef174b73525"
        },
        "item": {
          "id": "5e24b5e8-8923-4a3e-8926-d120d54fc80b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e81c7968-c076-464c-8a83-5cc2a8011387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d250329a-99ce-48c2-845d-6623f77d8746",
        "cursor": {
          "ref": "2f409387-21a8-4cf3-b2b3-71dd3938d0a4",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "714f1be5-72e8-4848-bedb-37903e823dd2"
        },
        "item": {
          "id": "d250329a-99ce-48c2-845d-6623f77d8746",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7b18d5cf-c2a6-4ba7-a5f2-dd491be76502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6503f8b6-0002-46f7-acd5-1b6dcb29abb5",
        "cursor": {
          "ref": "59d94e62-34b8-4fcb-baa1-373e68c0af15",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "16e029a0-a54a-472e-a2f1-029746ac64c8"
        },
        "item": {
          "id": "6503f8b6-0002-46f7-acd5-1b6dcb29abb5",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "eff64960-8769-48f9-8e13-19efdf7a2244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b7b5c7-b8a2-4e89-a0d7-8bcc1e27b29d",
        "cursor": {
          "ref": "18248cc9-02f2-4d26-aa67-a045f2cff633",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0b4cf312-646f-4d23-9432-a54da724c7dd"
        },
        "item": {
          "id": "78b7b5c7-b8a2-4e89-a0d7-8bcc1e27b29d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c38cb730-6255-470e-a3ce-9f7194da716d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2227db9-5500-42b8-b355-00f8abd01c58",
        "cursor": {
          "ref": "83737926-ae12-48f8-9f1a-474f46e083b3",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "27dfea24-11a5-469a-9889-2c50e787f6d0"
        },
        "item": {
          "id": "c2227db9-5500-42b8-b355-00f8abd01c58",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "88a2e3dd-4491-4535-b71a-89b937129067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "213cafb3-9f61-47bf-8977-d9d469e5d9f0",
        "cursor": {
          "ref": "dd1d3f82-0912-469b-9051-9cd89fd1c737",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5f0aed5f-cc7d-44ad-a5fa-c709a5dbde21"
        },
        "item": {
          "id": "213cafb3-9f61-47bf-8977-d9d469e5d9f0",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "18b4cfd3-9b74-41cd-9550-97032c2367d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc30c97d-081b-4f8e-a234-9e6e89517e76",
        "cursor": {
          "ref": "383438e5-feb1-4efa-ae3c-0927f0597cd8",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1fd93a8e-73b1-4bf4-9975-579d82ccadf1"
        },
        "item": {
          "id": "fc30c97d-081b-4f8e-a234-9e6e89517e76",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b69d5e15-c1c2-4b02-95ba-ad3f0c2f7817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "127d116b-e523-409c-a595-36fcb0ce8f56",
        "cursor": {
          "ref": "f32d3c14-74d1-4fa2-8d6d-8e3d807fba9d",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a79ca602-14bf-4aea-be43-65869c4ce983"
        },
        "item": {
          "id": "127d116b-e523-409c-a595-36fcb0ce8f56",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "05cc845a-f479-44e9-b7a5-f41637340e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11ce16b-42ee-403d-acea-4d0f9012ae73",
        "cursor": {
          "ref": "3ba33f10-d13d-42d0-98c8-52364658b3da",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "378d01e8-1be4-4442-a418-9f742cb9faad"
        },
        "item": {
          "id": "b11ce16b-42ee-403d-acea-4d0f9012ae73",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d792bd21-53d6-4d1c-adcd-2080fc1e17b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91012fb5-9d02-42ab-84d1-753e47c24a98",
        "cursor": {
          "ref": "71c4e827-9efa-41f6-8f0f-a8b64ddf809a",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1a94af33-3513-456a-ba42-e97e65cb8844"
        },
        "item": {
          "id": "91012fb5-9d02-42ab-84d1-753e47c24a98",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b307b3b6-46ba-43be-83ff-c338082e6b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38487c0a-8213-4eb3-bc94-62991af36450",
        "cursor": {
          "ref": "861d0939-d4fb-43a9-9bf2-1f9da4e8d636",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "de4c257c-1ebd-43d5-83b8-6888790a4394"
        },
        "item": {
          "id": "38487c0a-8213-4eb3-bc94-62991af36450",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "82ae8868-d187-4989-9f83-1140b524350e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8068c982-b1a4-4e31-9afa-1b1f7a134d1a",
        "cursor": {
          "ref": "3a6af8e9-b249-49d0-b830-271f5d965590",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "656fc944-decc-4e85-8f18-36601cd78bc5"
        },
        "item": {
          "id": "8068c982-b1a4-4e31-9afa-1b1f7a134d1a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b53fadec-3c22-4fdf-8251-69b6b71b5927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730148f3-f498-49ca-bf51-6fd5daaf0ef6",
        "cursor": {
          "ref": "73af2319-47d9-421d-9d2d-eb3e87c74a48",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1e6e3187-eaa6-4bb6-a80f-40d3c3e09513"
        },
        "item": {
          "id": "730148f3-f498-49ca-bf51-6fd5daaf0ef6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "282b64c6-0924-49ce-81d0-745c230bce23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a11df34-b6e1-4b9e-87b3-ebaa6bd60789",
        "cursor": {
          "ref": "d2e8760f-b545-4af4-9e35-920d835c37a5",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "79fed3ee-1ff6-4512-8449-7df8ac3af157"
        },
        "item": {
          "id": "2a11df34-b6e1-4b9e-87b3-ebaa6bd60789",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "905c1814-e297-4e6a-90d5-ad1686ee4d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feabcb9a-01b7-462f-8b0e-f410163d1e50",
        "cursor": {
          "ref": "61d2dab8-62d6-4141-9bd1-2e005e8cb4d6",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ca343f12-a2b3-4774-9933-733c09310233"
        },
        "item": {
          "id": "feabcb9a-01b7-462f-8b0e-f410163d1e50",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ae9fb96b-39a0-4e32-9831-b377ea911d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f020b2-8370-43fb-86cd-9255344fed0f",
        "cursor": {
          "ref": "d8d5a6c2-7f82-4e94-b4ce-e53403c2ea03",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "54fb2b3b-75e8-4bed-be0b-87d692bea109"
        },
        "item": {
          "id": "84f020b2-8370-43fb-86cd-9255344fed0f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8889c4b1-2d6c-4e57-aab8-e9aaf38c5ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5250a043-7840-49f9-8f53-f61c80b91c6c",
        "cursor": {
          "ref": "ccb9ae3b-8a73-4db8-a265-502773ab2f98",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ae7a51e5-4dce-439b-b75a-db222db0eeda"
        },
        "item": {
          "id": "5250a043-7840-49f9-8f53-f61c80b91c6c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "021da88a-2250-4e02-a8cc-63e36dd0a874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c12a245-96f9-4ec4-a7fc-3e9e6cab0ff4",
        "cursor": {
          "ref": "fff158ed-7e8c-4250-89ce-996c1fd1602c",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a28395c8-b1f3-401f-974a-598618e374b2"
        },
        "item": {
          "id": "5c12a245-96f9-4ec4-a7fc-3e9e6cab0ff4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "73c19faa-cc70-45ec-b2bd-8a2da58b2db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35dcc08-3389-44a1-bef7-f70d5105cb06",
        "cursor": {
          "ref": "08e35ea3-b0c1-4022-9623-56931470e610",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "584fba65-ab91-4b24-8dbd-016feea91205"
        },
        "item": {
          "id": "c35dcc08-3389-44a1-bef7-f70d5105cb06",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c4702fec-c378-4346-ac7a-2c4875797104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd403b8-bac7-474f-aadf-9671775b240e",
        "cursor": {
          "ref": "27a26512-4723-4b60-9bac-e4dd3491e520",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d365605e-b5bb-4ac7-8c5d-b4ea94ea97c1"
        },
        "item": {
          "id": "7cd403b8-bac7-474f-aadf-9671775b240e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "99d9494a-50f4-49c6-9f95-bdd1c903939c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c8eb63-a366-42cc-9ad0-240f587244be",
        "cursor": {
          "ref": "871d144b-3791-4816-a583-0d8b08133823",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f09e579a-3c83-481d-831b-19fba71bf909"
        },
        "item": {
          "id": "37c8eb63-a366-42cc-9ad0-240f587244be",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "73ca220d-7eb9-44a6-a5ea-8b785ae65f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae5ce29-fdf8-4e30-8e49-d8753f0d485f",
        "cursor": {
          "ref": "653608ec-2d7b-4761-b9f7-378f051ee583",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "904af5e1-a3e1-4531-a89d-8c5c50d78cca"
        },
        "item": {
          "id": "1ae5ce29-fdf8-4e30-8e49-d8753f0d485f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "89e59a8e-8567-43e2-8ef7-a7bfbc8c1d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92d626a-ba1d-45dd-9daa-8dbe2248b097",
        "cursor": {
          "ref": "1fe95ec8-c2e7-42e9-8da4-cce09e9f1e14",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c6e10cd4-5800-4a55-9d8c-6a4f1d4c26b6"
        },
        "item": {
          "id": "c92d626a-ba1d-45dd-9daa-8dbe2248b097",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "53f5721e-b677-455f-91ed-77a7218ffdd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1cf329e-b27f-4805-b789-9bea1a54832b",
        "cursor": {
          "ref": "f611cf5f-966e-47c4-abd3-460c48f6df29",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "cb0d9761-db32-43de-bfb5-e0a9c08528e3"
        },
        "item": {
          "id": "c1cf329e-b27f-4805-b789-9bea1a54832b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4d96a678-57ef-4c05-96b8-0b74eee2da57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1970d314-86e7-4679-93b5-fdd88edd7e4a",
        "cursor": {
          "ref": "a801cee8-d004-4602-9f2c-076563c42db4",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "04e00047-9587-478d-9c04-aedd8e4fa2f1"
        },
        "item": {
          "id": "1970d314-86e7-4679-93b5-fdd88edd7e4a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1cee2d1d-8e5a-4298-aefa-1a04662ef170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b431dbf6-6c71-460d-9cbb-30fa0f5170b3",
        "cursor": {
          "ref": "6f1e8a10-77e9-4764-8702-4a02185bd8ec",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f77b772a-45ed-4a3d-abe0-0ebf3adea2c8"
        },
        "item": {
          "id": "b431dbf6-6c71-460d-9cbb-30fa0f5170b3",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ba8b63c2-8bc2-4386-a1a8-510cd6b620f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5a52e5-61f3-42ec-adad-ad085d43d446",
        "cursor": {
          "ref": "3cd9f46d-b5e1-4f42-b202-dedb69251f45",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9f15ab67-683b-4d74-982c-b7792bddb047"
        },
        "item": {
          "id": "9c5a52e5-61f3-42ec-adad-ad085d43d446",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5db28ec8-c6d6-49de-8aef-7a7122dd1e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2b07d9-f8cb-4025-b7a3-4a0480cf90f2",
        "cursor": {
          "ref": "f856ddce-2d6b-4aca-b267-e2569cbe9628",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5053c309-f6ec-4688-8c9e-2aefee3fc730"
        },
        "item": {
          "id": "7d2b07d9-f8cb-4025-b7a3-4a0480cf90f2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d187deaf-eb13-47bb-87e8-a0ce59280d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b8a057-21f7-4488-a6a3-1bf22d3bdc95",
        "cursor": {
          "ref": "002830b8-f32a-4e8a-88bf-6c08aad8adce",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7d655fc6-769b-4fac-88da-34ce4d747b23"
        },
        "item": {
          "id": "83b8a057-21f7-4488-a6a3-1bf22d3bdc95",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "18461be1-b2ce-475c-94d7-5fd9bbf9ebb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae351ec6-30c4-48d2-91bd-7d89b53185b4",
        "cursor": {
          "ref": "fbc0cc83-db89-48ba-ba0c-7ed82d37c247",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c652c8e3-8f0d-435e-a81a-0ef48dce8ada"
        },
        "item": {
          "id": "ae351ec6-30c4-48d2-91bd-7d89b53185b4",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4570a0d3-aff3-4f2a-a51c-9f0f1c1fef35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14419a47-bb45-49fd-b07f-d3d1f68e2e56",
        "cursor": {
          "ref": "83e4c436-a8f3-4207-8cdf-d63d15d4f8d2",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "bb86d301-71ea-4566-92ef-6f33e55bcf0b"
        },
        "item": {
          "id": "14419a47-bb45-49fd-b07f-d3d1f68e2e56",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c666f92e-9449-4b61-a230-d6a086fc72e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf47913-2ebd-4403-b8cd-187f7c176d25",
        "cursor": {
          "ref": "ac98b614-57e4-40b6-bdeb-9cf4ec8301c2",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8dbd3823-ad07-499f-8a4a-d38e17ca5b9c"
        },
        "item": {
          "id": "fcf47913-2ebd-4403-b8cd-187f7c176d25",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1349de95-4ff2-4d85-b584-501bcd94ceef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3411e3d3-bc5a-46c7-835f-0b55d2ea9451",
        "cursor": {
          "ref": "c400b077-673c-4cd1-9eb3-0cc8e5b5dd2f",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f00f0b84-cb82-4bb9-b74f-fa9ec3e2ddfc"
        },
        "item": {
          "id": "3411e3d3-bc5a-46c7-835f-0b55d2ea9451",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "eb6e8ef9-ff76-4623-8c15-2a28d13a9d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a070ae4-e0da-46a4-a46b-1f110f8baac7",
        "cursor": {
          "ref": "5f582355-5795-419c-a35f-d4dbc1bcae96",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "285cc84d-ab52-4805-b81c-32076bef2887"
        },
        "item": {
          "id": "6a070ae4-e0da-46a4-a46b-1f110f8baac7",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1ec263da-aa62-46d4-b80b-3de7ac454d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa105111-88e1-4d5c-8bf1-2716e1646c05",
        "cursor": {
          "ref": "7d8a5dfe-647f-48e0-895f-10a1701cef64",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "23135548-c7a4-4b17-996e-4c2e482ed8c6"
        },
        "item": {
          "id": "aa105111-88e1-4d5c-8bf1-2716e1646c05",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "77d96642-a456-445c-8cfb-66e9c5604a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aabb28c-0230-448a-be9f-02249b5e4c95",
        "cursor": {
          "ref": "2cec8f5b-b5dd-43d9-bbd9-92cde32e1e9f",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "322a35c6-7b8e-4ee6-ac6b-aace592012d1"
        },
        "item": {
          "id": "0aabb28c-0230-448a-be9f-02249b5e4c95",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2dd9cbe1-df9e-445e-8478-e8b345570c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f110cb-033e-4edf-9105-7e6ef731bdd3",
        "cursor": {
          "ref": "c630a543-06cd-49eb-99c1-8cb1e1d11b9d",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b4075076-f32a-4fbc-a5e1-fccf6a8d0d44"
        },
        "item": {
          "id": "e4f110cb-033e-4edf-9105-7e6ef731bdd3",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "16c01597-704e-4396-a696-f0a1dba6a9a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f894e27e-6bff-4aff-8a4e-fe62c9d61431",
        "cursor": {
          "ref": "66e454c6-36e8-4702-a2e9-784f7883ed3d",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c7ca9262-1940-442f-8831-ffeb308e6453"
        },
        "item": {
          "id": "f894e27e-6bff-4aff-8a4e-fe62c9d61431",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ab9244f8-c9c8-4067-9ebd-ae839b908136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf01d65-0a1e-481e-aebf-f52d4688e09d",
        "cursor": {
          "ref": "2a932344-9934-49c4-b1d9-5233fba9afdb",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7edc5651-6ccd-4026-9ddc-490980170bd5"
        },
        "item": {
          "id": "bdf01d65-0a1e-481e-aebf-f52d4688e09d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "66e5bedc-f9db-4ddd-a8ad-a0808abdc933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df59a077-111b-454f-9c78-8bf47e82255e",
        "cursor": {
          "ref": "221748f1-c59b-45a5-8303-c26ed45f96e2",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b2c9693f-8eb6-46fd-b771-7f5aa267ef8c"
        },
        "item": {
          "id": "df59a077-111b-454f-9c78-8bf47e82255e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "486837ce-97d5-433e-b08a-7d1d29109e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814537c9-d3e4-41d6-bea3-5a23eb327a88",
        "cursor": {
          "ref": "e878ee36-f096-479e-9c35-88d1d8493284",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "1f0250fb-facb-4a70-bbb1-46bf4a5de021"
        },
        "item": {
          "id": "814537c9-d3e4-41d6-bea3-5a23eb327a88",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "eb1b7877-e5f2-4861-926c-23f3ce4cade6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9f5598-14c6-4b50-8fc5-beb11a3ccde9",
        "cursor": {
          "ref": "7e5790b3-7fa0-4574-af59-a0d8946c94e7",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "7186c037-6ce6-40b2-9487-df587b5c18f6"
        },
        "item": {
          "id": "ee9f5598-14c6-4b50-8fc5-beb11a3ccde9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "54fceb7c-c441-4743-8a22-96a5ae2bf1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a565ff5c-38e6-48f2-92f7-65e09917fec5",
        "cursor": {
          "ref": "34aafb8e-e3ff-4efe-b815-03bb2a976dd8",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "d859c5d5-67b8-414a-816f-cf89d04ff1f1"
        },
        "item": {
          "id": "a565ff5c-38e6-48f2-92f7-65e09917fec5",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "02e9b15f-5da1-40c6-a77b-ffab3350948f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a794d15-b16c-4901-a69b-ff5d8892ff56",
        "cursor": {
          "ref": "73792404-d543-48ad-ac63-1adf66d9656e",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "322e7048-6c60-4f54-81ac-7a923eef60b2"
        },
        "item": {
          "id": "7a794d15-b16c-4901-a69b-ff5d8892ff56",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "db4f5901-d783-451e-95bd-061d69e4764e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33b731e-1ccf-4bee-80a2-8da04cd0ce00",
        "cursor": {
          "ref": "e891504f-5d82-4b45-9155-b0035b99ce4f",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "968e10d6-4824-4805-b044-93921ab5f661"
        },
        "item": {
          "id": "b33b731e-1ccf-4bee-80a2-8da04cd0ce00",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "223dfe12-41ff-4cee-8ac0-006e6347a139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2229b9cd-3914-4f38-a702-aa65680e1bc6",
        "cursor": {
          "ref": "609eef67-a17b-480d-b160-262aae0692b2",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "39543fd2-abde-422f-943e-8c02698e2475"
        },
        "item": {
          "id": "2229b9cd-3914-4f38-a702-aa65680e1bc6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e6fa4979-5857-4e97-a0f0-21338935f1d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fcc6dcf-724b-43af-8e59-57d12eca63ab",
        "cursor": {
          "ref": "6f1c994b-9d12-48f6-97fe-e882d8b009fb",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "6db5cc90-bcca-4fd2-abbf-5d3c47dbff38"
        },
        "item": {
          "id": "6fcc6dcf-724b-43af-8e59-57d12eca63ab",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3f152b4f-088e-4121-8f63-19c15a4c640a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023c1957-4776-400c-8f6d-16309450ad5f",
        "cursor": {
          "ref": "91fbed44-e673-4ab6-9121-2b0ab8edc660",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "2d8342ca-0587-4c0e-b9de-d943b43ec5e3"
        },
        "item": {
          "id": "023c1957-4776-400c-8f6d-16309450ad5f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d27201fb-74fd-4810-ac10-2ede793d97d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c98ddc-1a1d-43e6-8977-ad5a6872b77c",
        "cursor": {
          "ref": "ab47da12-4e4e-4cd0-8b03-497bce16aaa5",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "8207bfad-639a-4106-9271-ffbb7cb130bc"
        },
        "item": {
          "id": "87c98ddc-1a1d-43e6-8977-ad5a6872b77c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6bff20a5-a73c-4427-9d0a-4ac183f6c6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d1b0e3-2aac-4a89-aa79-a466a962454a",
        "cursor": {
          "ref": "9bdba451-9ceb-4e30-876d-03b01c32d2a3",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "3b5645a6-1a9a-4069-a946-04c9d9500332"
        },
        "item": {
          "id": "a9d1b0e3-2aac-4a89-aa79-a466a962454a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b96b19f6-5f13-4fee-afec-decf5877ac60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5caab87-c2d1-4d92-b495-0e3665c37ded",
        "cursor": {
          "ref": "f702d57b-6dd0-4483-9779-58cf2e5482d3",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e461abf2-6d73-4256-a57c-c3759d03d0c4"
        },
        "item": {
          "id": "f5caab87-c2d1-4d92-b495-0e3665c37ded",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a2a1b1aa-b48a-43c7-b94e-3c01edc17b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e69c616-b472-47ff-ae8b-40904dae36f2",
        "cursor": {
          "ref": "b249f147-c522-41c1-818f-1e123426aef6",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "7c7083d0-d5d0-48c5-a4eb-4b75f69f7836"
        },
        "item": {
          "id": "9e69c616-b472-47ff-ae8b-40904dae36f2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "64090926-c089-4448-adbd-f3e71eed6c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9cf8db-5135-4d35-9202-d6f6370b7939",
        "cursor": {
          "ref": "a1cc8f89-a133-40ef-bf97-9d65f7f887bb",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "489eded6-fd6b-4d90-9590-520ec2bac297"
        },
        "item": {
          "id": "4c9cf8db-5135-4d35-9202-d6f6370b7939",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "02955bd2-cc87-43aa-a0b4-fb0b2da673d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89578ac0-4c74-4a04-b33e-fd17e35fae82",
        "cursor": {
          "ref": "9af65d4d-c0cc-4f1d-bdf1-ff88d7303b49",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "b2200c1d-32c4-459d-8357-953981971c85"
        },
        "item": {
          "id": "89578ac0-4c74-4a04-b33e-fd17e35fae82",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "73f6ff10-0f3d-4bda-88ca-e4b298361362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c75d8f-6ffc-4401-90e5-88b6a7de10d7",
        "cursor": {
          "ref": "57774e89-6d4a-46aa-a574-348c8975b38c",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "178de3c6-f321-45ef-9d2b-02234cd0392a"
        },
        "item": {
          "id": "e5c75d8f-6ffc-4401-90e5-88b6a7de10d7",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e9e2f244-348c-4f62-a93f-790748a7f380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 852,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1462e22-2f84-4dcc-aebe-75a13dc6579e",
        "cursor": {
          "ref": "d6a18cb3-55c5-49d8-9a72-204148720dcc",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "eacf0b27-94b5-4286-a2a0-c32ce0106453"
        },
        "item": {
          "id": "d1462e22-2f84-4dcc-aebe-75a13dc6579e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "29597010-2b21-41f8-b59d-27061123ebed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68946b8e-cdcb-4f25-b590-7f1a87ebafd1",
        "cursor": {
          "ref": "4b996f9f-60df-4966-b255-f6c887c7699a",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "6adf33c9-a40d-40fa-9db2-a10b2742bef6"
        },
        "item": {
          "id": "68946b8e-cdcb-4f25-b590-7f1a87ebafd1",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1573b521-4c1f-4cfe-a457-c63913abedfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe2aa89-d669-448e-b6a8-1537bdf40598",
        "cursor": {
          "ref": "6b4e517d-0121-4a19-abdc-565da516dc97",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "dc95a064-9f6d-4e38-94a2-c491f2cfb6ed"
        },
        "item": {
          "id": "4fe2aa89-d669-448e-b6a8-1537bdf40598",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9d03b2eb-824b-41b9-a1d5-3c134fd5473f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1827c5-f357-4526-bfc2-f5e8c76df76c",
        "cursor": {
          "ref": "71fd1116-f60a-4763-8073-886c217e8e14",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a38f3f47-8d7c-4756-a186-7bb20f7944a6"
        },
        "item": {
          "id": "db1827c5-f357-4526-bfc2-f5e8c76df76c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4b8678e6-58c0-426b-9835-57ba0b5b2609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90509afd-ed2f-495d-a52e-11c2721acf1a",
        "cursor": {
          "ref": "17cc34fd-e506-4aa3-84cc-b17d600e1293",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "17cf3e18-a08d-40b1-aa15-81dd0e8000db"
        },
        "item": {
          "id": "90509afd-ed2f-495d-a52e-11c2721acf1a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "5d83108a-027d-4ed7-b47a-94b3229d2f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f09c5d-3a4d-4e40-869d-36de67a7f1c2",
        "cursor": {
          "ref": "57d1fdf2-d6fe-498b-8e51-c8e7651f9bd2",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "06adf80d-208b-4543-82fa-1065639e16d1"
        },
        "item": {
          "id": "c8f09c5d-3a4d-4e40-869d-36de67a7f1c2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c6eb66e5-c116-4b0a-bf68-30b0a94e3a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80a849c-da00-4d76-9330-79fd6b0c5f45",
        "cursor": {
          "ref": "f682ffc6-132c-4d15-bcf7-2e694e2b364e",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "6bce6ff4-70de-4332-8e78-37312ef891f0"
        },
        "item": {
          "id": "a80a849c-da00-4d76-9330-79fd6b0c5f45",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6d9df9a5-3a03-4e79-8997-5991012b7647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7bbf030-9486-490d-9a61-6fe5c896b08e",
        "cursor": {
          "ref": "32566b5f-89f2-44c7-a5d1-4d2872e442d2",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "986b3b9d-f652-4622-b5a2-70cb92977242"
        },
        "item": {
          "id": "d7bbf030-9486-490d-9a61-6fe5c896b08e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8a01a373-d6b5-43d6-8b3f-1e3953bc53bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d51e54b-ec5b-40bd-8459-3234c3845ed2",
        "cursor": {
          "ref": "afca4f47-36e0-4b15-89f8-ce5a64bb4eb8",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "a5b0034e-3cbf-4ed9-b403-e23543dbe3f4"
        },
        "item": {
          "id": "2d51e54b-ec5b-40bd-8459-3234c3845ed2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e3687acd-fd06-4340-90c2-1d686a19bb5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752c35a4-da47-4c5a-be2b-f7a775d68ab2",
        "cursor": {
          "ref": "34a53b18-202b-4bec-b440-a2cf464232cf",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "07cd6384-09f8-4d97-824d-cdeb0441b0e3"
        },
        "item": {
          "id": "752c35a4-da47-4c5a-be2b-f7a775d68ab2",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2fe4c141-5137-4623-8db6-c6daf12def81",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5458b144-19b7-4d6a-854c-bcd15ee7bded",
        "cursor": {
          "ref": "ff72e5a4-0e79-47e1-a954-4bd3e00de01e",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "988d4b77-7555-44a4-bc2e-dc624b4083cd"
        },
        "item": {
          "id": "5458b144-19b7-4d6a-854c-bcd15ee7bded",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d42f595a-7b8e-4684-a9f9-2483a9fa8bcd",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea70e255-ccba-4077-9417-3805af64b66a",
        "cursor": {
          "ref": "e25329f4-a026-47c0-80d5-a3ca2ec06793",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "4e871df8-5c3e-4205-a0b6-7f2059f00c90"
        },
        "item": {
          "id": "ea70e255-ccba-4077-9417-3805af64b66a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "dec63c6a-6300-4523-bb8d-4c55e9a48a7c",
          "status": "OK",
          "code": 200,
          "responseTime": 3687,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9000e4fb-26c9-4c22-b9c8-96a1437b40b6",
        "cursor": {
          "ref": "aee93699-ec51-4532-8a3d-8c16d13df40d",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "34193d75-d843-4d8d-9051-a38330e4258d"
        },
        "item": {
          "id": "9000e4fb-26c9-4c22-b9c8-96a1437b40b6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "78049361-6364-45e8-9ebe-31317918ed1f",
          "status": "OK",
          "code": 200,
          "responseTime": 1973,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaeef1c5-1ae2-4ab6-8909-0f4a9ecf38ec",
        "cursor": {
          "ref": "0f425424-bb17-4b4e-b613-0deb1b8e253a",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "aeaed7b5-b582-4a73-b844-dfae3a3c6813"
        },
        "item": {
          "id": "aaeef1c5-1ae2-4ab6-8909-0f4a9ecf38ec",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e9f2dd1e-16dc-463b-b09f-d258ebc8b8fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaeef1c5-1ae2-4ab6-8909-0f4a9ecf38ec",
        "cursor": {
          "ref": "0f425424-bb17-4b4e-b613-0deb1b8e253a",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "aeaed7b5-b582-4a73-b844-dfae3a3c6813"
        },
        "item": {
          "id": "aaeef1c5-1ae2-4ab6-8909-0f4a9ecf38ec",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e9f2dd1e-16dc-463b-b09f-d258ebc8b8fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae20ff08-20df-49f9-bda7-551e03f975f0",
        "cursor": {
          "ref": "006a5c02-7637-4b9e-b91d-14140f570bf5",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "768fc8fa-8603-4260-b6bd-c343a1ef8a4b"
        },
        "item": {
          "id": "ae20ff08-20df-49f9-bda7-551e03f975f0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1fab84e3-de0c-41ae-856f-0e2bbca67f40",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26cf3c36-dfcd-4fd0-bdc3-b4f2d75e7b38",
        "cursor": {
          "ref": "8e5ee651-9bf5-4b6e-92b6-a6f1a3772bae",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "db6049c8-7c31-4496-9a9a-f1b747761549"
        },
        "item": {
          "id": "26cf3c36-dfcd-4fd0-bdc3-b4f2d75e7b38",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7c02a583-7179-40ea-aff2-b6be7d2bee2e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}