{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d7c2af98-fd1a-49e9-9448-cfed51d80f99",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c5f22486-a5e1-4246-bb81-cb387c957683",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cbd879ab-d354-44b3-abe1-3539ff63a21d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a4a62941-ddb3-4aa2-839f-331abde959b7"
                }
              }
            ]
          },
          {
            "id": "cdca5a35-8be0-47e8-86c3-377c4bd944c7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b90d4cee-abca-4ba1-81da-2032e84e19c2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8a3dba19-f51c-4e37-a2d9-11c2461210a0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d43ae690-9798-4e24-b194-bb8716f42f7c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f52b2bd9-3e73-4ce8-a8ad-357a3eed1f3f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dac0bd66-40a4-43fd-b08a-94746e6a6183",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10f741c9-e4df-4a1e-8198-d6ff9b149e92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6232ecfb-6dad-4a49-886f-80f5d7603101"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "806dc9c9-0c2e-4e5b-b6d7-7007a11f0c95",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1dc0f04d-0bbc-42ad-af68-0e025a422fb1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "134e4308-7617-4074-a616-caf92d83473e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ec14e3c8-a9f7-4b44-b123-c7a1ec71ac7d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f6cae34-67fa-4e29-a902-f624b1e574fa",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5dca38e3-e716-4f90-98cc-0c40655da332"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "10236c59-b5b5-401d-8c99-e2ef8032fd31",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3fe646ba-0215-4ed0-ac34-7d0f41892a1f"
            }
          }
        ]
      },
      {
        "id": "aca5c51b-3d4e-4966-96d6-41f6e44b2145",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2a5eaa64-310a-44d7-bf8a-9ce298086deb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f0afe106-7705-490f-aab8-c26c0b970758",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "70d6d895-affc-43df-8370-b7c0e9f5600e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114fd351-b0c9-4a7e-8ae3-17fd5c9cb67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0eeca35a-888a-415d-8de4-9832d62b1399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db015ff8-2b21-4920-a3de-50378cdf267b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0af4540-5285-494d-a27a-09aa81ed551f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f425438-0f27-46c3-acf7-aca8ec816fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27f5238-928c-4932-a6f5-da1f3e93a22e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17126ed3-4aac-4af0-a1f9-7a99dddd0fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c63c728-e3c1-4c01-91bc-e7b68fa62a2d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fd542a46-6593-411c-850f-fce0119c5683",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3d144c96-ba08-47fd-bd57-5dcd5c041744",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c13182a-fdb5-4d17-a60d-77c941a8e858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "10d07268-46ab-49c2-a774-b3c3307f144b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b2c6b0-bb01-4d0c-9274-024a3cffa5eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c20db2c-fe78-412b-a923-7ae687bdc68b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8084d635-b925-42c3-8c17-b84e918c6af6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5de83a77-729f-452b-85d7-2aad283047ee",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d031c4a-9e0b-4b37-b197-edb898710313",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e2f84d0c-14a0-4d17-96b7-f0a511f74a24"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16e41224-bf81-428a-90b2-bc64d4828cf0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e23b4c92-c522-46ff-8e1a-167fd3e84379"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c5a87e9-97b8-4c88-a711-dce796c52c87",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9933b781-4f0a-4e3c-9581-8de8bb290405"
            }
          }
        ]
      },
      {
        "id": "404274f1-3124-4122-bbd1-1c662be4c8f0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "79d8af54-a555-49b8-8f02-34e81f5a4cf1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "01da7e59-a792-4501-8f40-52b936c7a09f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1a5a756f-94e7-44d5-aaa7-4850f84add9a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f212d2-0648-49fb-8d68-aa88a15aa340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9785d3a6-e167-4fda-be7c-4641135d1cbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a451970-ff98-4ee0-be7e-fbb4291b9b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc6bf7a4-3fa3-4b9b-8965-0926bb041551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf0903ec-b3cc-4da8-8108-4ee0c40efb66",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1ffcc4-7539-4a7d-8cb9-5980dc40c852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58dc590e-395f-4ca3-911b-b0a113fc7a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85d2a48-e5a3-466c-b874-08c5a9b9ed5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26cd45aa-96e2-4afa-a212-dc577160528e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2cd3c38-3a71-4d5e-a6cf-3a16bb1dfc37",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82feb9f9-c0b9-480b-9eff-e68766c388a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7108778-336a-47c0-a02e-b143a5a5255a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abcdde5-e9b5-49e7-a5f4-eaea37013a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34e9131c-ff22-4d3d-88ec-b4a037d4697d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8cf6d2-5b06-43d0-bcf2-48825a669e4b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8f5d33-484f-4723-af4a-117963470c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd438f59-02c8-483b-b97f-7910d30dabc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b6ed71-1541-4dab-9766-6583bcbee3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df122abd-86b7-499a-a982-4eada716d70a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da6f037-5085-4f92-94e8-e48022dfdcc7",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4712735-5fbb-45c3-ba1f-8645c7769e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7ec65ee-bb51-4ff7-bdac-19abbd79a0bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ada7fe-6c43-42cc-b33e-b8ddbaa3f0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0a2fcbe-76d3-46bc-a7a1-e4a7dae03895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270e35a0-bf55-4e44-93d1-c4f86c867abd",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6ccb94-6595-4a83-a3c8-d1a871177212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce4f4b5d-fa29-42fa-a0a9-3ac54c194092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346d9253-ffdd-4cf8-b817-483f26ffb321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b5d1b5a-3403-48bb-b62d-10b138e90a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1dc2b7-dc70-433c-a588-63c56ba1e3b3",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8dfc0c4-7dd2-462d-aefc-6548cd17b2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb7fc27c-8ee7-42af-9fd2-c9390d88172f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00599d3-3945-46e3-b485-2b2ba9523e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2fe27c04-d828-4b46-9611-a6fd7f89c148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb94560-590b-47d0-b315-12e85b1e3429",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2bba681-835b-44d8-b64d-3c33009fd604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a355be-27fb-496e-a93a-dd415b1257e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c88f6c-3f1f-4ba0-959f-f539edc557d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afeccdd1-c628-4f14-97a3-ca358404266b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9162f9a3-5347-4816-b22f-8e609a63af4d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b15233b-e131-4978-8c31-75f30e1286b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5edd9a66-86db-415a-927a-e49e66d14cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c76c29c-f289-416e-818c-bafa15e26d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "132fb0d2-fbdd-4a0b-b513-90c90ca75288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7cba8b-cfbf-4815-b1ed-d155051edc7a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4f9ebc-8bdd-4fd5-a6db-3acffa9ce3c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97624222-1e06-470b-af34-e7d6fe251f44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2036b5-ee59-472b-a498-1c0a6a21ba26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed825ff1-62ec-4e00-8640-7846cb2f3bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47478863-b580-4be6-860a-d7edebca8d68",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56ffbaa-8b31-42da-9aa2-603fae2f3c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e7a545f-a7dd-409c-9f9a-b4750e974d0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13067c49-d4a9-4093-bbfd-d5787e2246be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b6e19d8-b798-464b-aa92-1aaff1df18bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30a6dd0-471c-4d8d-94c1-8097a1fc9e78",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ccd6271-140f-49cd-a420-432ad86483ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9109d203-80a6-4668-8792-bb7ffa6886a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ae758c-47d8-411c-851c-6fb0c79f16cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7242b237-cf5f-4f34-bdb7-4688c752a7e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1f7a4f-2cb4-4949-820b-e4725d9f2d9d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "005a411b-53a0-468a-bb8f-54c61988d4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2f9a0a4-5e77-49ed-9364-163492fabc4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31187011-ada7-4c40-824a-51aaf6a0140e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e938b04-d986-4915-b12d-fa57eced3f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f107e716-568d-4304-8c23-6abf355a4654",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94027f35-810f-4d53-b0a4-8ed8dd1db4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8415d9c-55b6-4b25-85b3-cc6887d73dfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24a4a1d-ab83-4775-b5bd-5f38c895d4e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed65fa37-b506-48e1-8994-3e0d6331a7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc09c9a-fadc-41fb-af0f-e1a114b493ad",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5feb1fcc-b500-4ad1-9ab2-09067369568d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cabc3d1-8864-4ea6-967f-4d6ba3f9a758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee2bc75-2475-484c-9c5d-62352948daa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0fc39422-13b1-43f8-9d55-d8f75fa0884b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de9f0dd9-ae5e-4b5e-8c43-68b6f3402d07",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "046d3085-59e8-48cc-98c6-448e07cab573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "891ca0b3-d25c-487a-9e3c-1cc7b24f1f7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7490d301-1632-4443-acdf-bfd365720bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58baa67e-10b5-4a18-ac64-494a021cb235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc0334f-eea6-4e1b-aaa3-47a444edf835",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0127fd-bb04-41bc-9a7a-5244353eb198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6501d274-1193-42bc-a567-8be98ef93664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5816b419-330c-4851-b285-d687f1410f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a92b52c9-af42-4209-8a5c-5ad30b2558eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744e94c3-a7f4-47c2-b185-0eedb005c233",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "977357ea-39e3-48ac-987a-f66890c7499b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36c42be2-da06-47e4-b458-e166ed6a969b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39108729-ec00-4469-bfaa-a435eb68adb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "769bf638-7af4-45bc-97a4-170e077f2d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880af880-4079-4410-8d91-6e29a8d37f61",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3200188c-0e17-4a47-b469-00147d6a44db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf458022-642d-43f0-b7cc-65591a33a514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ae4579-83a2-484f-ace7-0898e980e119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ad6193a-b627-416d-9642-644cc3cfe972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba931460-1840-47f6-984f-083a8a1f2aa9",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c063d6a-acae-4c8c-9869-a558be425a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "211d62c9-d5ea-47c1-9bf2-ae40013f12a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85efb19d-9e0c-4359-b3b0-72581cf88817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f7b0793-6b93-42b5-a9c4-ed0a7f8074e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1b3ebc-9823-4276-94de-a1fdf404c04c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "526f0083-5085-4894-afd2-54842e7a26dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b45049ea-3d74-4dc9-b2c5-b51400fdde92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "999e6ab4-3016-4566-b418-f61b837373f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37e72046-e64f-47eb-99e6-e65cb864ac96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d0090c-c9f8-4fa3-85c8-40a817ad31b6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d437ecb-8f52-4767-9759-094888a4873d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "741b8eec-715d-40a5-b923-3dea309b3978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3b9511-982a-417e-9e64-1e814fb35e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "67c340a6-d93b-4f84-a916-614265be802c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951a3de7-04df-4e40-8092-7941a49ef921",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb64ee0-bae1-491d-a931-f499c526390f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83df5a05-8c39-4b29-bb6e-7e2f3302be57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63657d15-d344-4990-9dab-71f9e9cd494f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dc0a71f0-3d18-49a2-bec7-1d8c791a0a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c94154-9bab-410c-ad2d-b8a730ce8d64",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd3b760-ca24-4c10-8654-709cdc0b470a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26c04b01-a2c7-43fd-aabd-9127babbc3ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c5185f-44c6-4db1-8eb9-3a04542d3162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdcb2bc1-2485-4e82-86d0-814747ed22d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8dd16ee-9f53-4e0e-a6ad-e079d9390789",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f2b2bf-2b75-467d-bc47-b9c0528a8d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "409f65c1-082a-4aff-8990-c43ee24d30bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0bfaa2e-5b38-49f0-9084-4bfbabb4b9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c415dec-17cc-409c-817c-0aabdb8902ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f82edb-ea55-48d7-b593-dfac06769834",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7323512a-18db-4379-bd56-14fd35064712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "999d769b-92d6-4cb6-a749-ee81b688792e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8b1b71-7d85-441a-bbc5-7b6db306d88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ecdd32d-3731-483d-91ac-62c8faf46d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5411b5b9-2067-44d0-871f-1d3ee614430e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c61c30-1848-4aa7-91e6-b2074dd10047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "361de6f2-524d-4af6-8f57-e160e9541cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d48855-8b59-467b-9a11-28ea06b4fb30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f051a824-5804-4fd8-b5a0-266dbdd1238b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad929ace-1c8f-48f0-87a9-fac9cddf5f41",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc085c65-6ff8-422f-825a-bcbc23fbc5f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3cbe313-b743-48b6-9af2-59d2c6ae8bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682cec8c-6fc6-4bcc-8d3b-864dd684aa4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ebb1c7e-7f1c-44d4-8a7e-2b1605f22bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc135b4-58ed-464b-b424-4d62b35afdf0",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e00aff-c0e5-4bbd-9207-659b8586798f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33172569-88f2-4c35-8ab6-e3155d60bacb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d91f7c6-5662-4878-9fd7-0c330a4323a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "854e1cb9-de6d-4d4d-89c6-26124f7fd7ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0763385-033a-4650-ab39-7d7dd30bedcb",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22b73fa-3e79-4d04-bea6-8ae3114a4d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f91f5ec-7253-4645-b8ae-fb7894936c55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f585a8-5481-4d2d-9d2a-6134332d1711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7477da0-5e65-405c-a0f3-f0b3a7fc2f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b795285e-6a27-4b07-bccd-e5ceda663b55",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7606ff0-73a6-4fe9-a520-8515d239c6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1863171-a1df-42ec-a160-10a47c01607d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9601f634-b680-4ded-82b9-e4b88b408e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "501714cb-1f7b-4629-b0a5-51bf3deef694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef619d3-a256-41cc-ad60-ad98842563b9",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30bdca5-e8db-43cd-b232-d7398b2d7662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "590c0b1d-b31e-4975-8e8c-9f20c611d341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d6452d-c408-46a5-b75c-f540fd4d6234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d647b455-726f-4c90-add5-0aab2acab9e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcff663d-8054-408c-83fe-06801eccb308",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac7584c-393b-4f0a-a10f-9946ffd3388d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fe424c4-509b-4151-b02a-29ae7339e6b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f88fcae-f555-42ea-9bd8-91dfe4576382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f30c8a67-1afd-4666-965e-12fedf9c1b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a50543f-5825-4162-8c56-8edf5a615a69",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56038c12-fcc2-494a-88b6-e4039d1677c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fd6e93f-8d63-40ae-a369-05f2b6697e85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67306c58-b3ce-40ff-8659-a472895509ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98b5a7bf-e249-412d-90b8-2f77fa8fd60f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0fa2479-d6d6-48b0-a7f3-04401d0d82ef",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb12b8c6-21e4-4eb4-ad2a-bfd24171aae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d637f400-85e0-4ad4-9c15-28a20437608f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee58a553-e035-4f1d-b0a5-dae8fddbf80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f6b9bfaf-ea8e-48cf-8df4-3d9e22e423b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77485b6e-6c3c-4414-9107-8c85eee56343",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da6d447-c9d2-4ebb-b3d5-862ad2f738cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01681f73-c4d4-4fde-bac3-9326059bd2fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f6bb04b-cfbd-488c-bfbe-1c19fb08f313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "976d2ada-0de4-4bf9-88e3-35ff763b196e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d431de3c-46f1-4fb7-88ec-cfce8cced6b8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee54ae12-fd5c-4eaf-a5b5-a0aca9cf46ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49e5f34f-082b-4e9d-8b7f-1de41e1e594a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622d09b6-fb04-470f-ba55-87022821b6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "580034d1-f655-4a16-aea1-1f1c11eebb98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4680048a-2447-45cd-a159-a23741aeecab",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfcad674-5ca8-48ab-8783-74791391c1b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5dbb989-7f70-4267-82d7-7789da7c0745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6a280f-37d4-48a3-a7b7-f02257d919fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f6e2de9-df9b-4b58-9ab5-7fc904048758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a44e735-fa87-4e76-bcba-80d6299b0592",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a32063-bff0-44f4-882e-e215523ffc32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c68b00ce-1443-442e-8f9f-7d60e545bf48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4185eee4-1e6d-44f7-85a5-b456393da8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c0b6136-bedd-4caa-bfca-07b514e88fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620c90b2-3cac-4c69-abe4-8ace58b46f4c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5344fdb2-f27b-44a9-b3e7-9d1bf90e8bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "360b7e03-94e3-4879-806c-56ac204e4ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78822467-bffb-403f-afd8-ab50ed255a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "28f095d4-31a3-47eb-b3ec-ce4fc14fa945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86a2c3a-53c9-4b30-a6ad-ea763c48352c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9db9ff-cfe1-4d4a-b7d5-53b482adc7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "312338f2-b2bd-4208-a4f8-f88a30659cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f639d2-8cd3-4f1e-8903-330cffaa3867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "08b5f7c2-93bd-460d-b472-0206241fcd6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee5cbd7-26f2-4654-ae0d-503e5fcea2a5",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c7ce62-5506-4766-a1a2-3372cddedbd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f530c12-d0f5-4b96-aa40-7495b7324e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504831bf-97db-4c09-829b-a151838cb3d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6754de37-401e-422e-9a9a-82b98a266661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f85f802-6129-49da-a499-06e31faa39b7",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1ad37e-31db-4268-972c-9274586b2d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34905772-0120-404e-8677-70c458af93e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2962707-7080-4003-96b7-135b1806709a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b7bb78f-052c-4278-a259-4f3f9ce35fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44407eda-2673-4ba4-932e-369eef86855b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d20fa4-09ad-4313-9f86-2fd44f07feea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3baeb05c-bb8b-4812-acda-66add85a1383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27357b4b-5b25-4d9b-a358-6df66e2ff2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4a87f34-bfe3-4de7-b161-6e7fa8f6cc07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842d9079-1993-4f3c-bba2-6cd1a785c825",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f697af7-f840-4eda-8ab5-6d4377ed8438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f5c855d-385a-4d56-a1e6-8a668d2c3333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec55299e-3638-47c4-a162-b139b2019642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7c3f3b0-5b35-4152-82f8-9d8e497d1eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da7cee9-ca96-4a73-991a-ad45f58140fc",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32450ce4-2dbc-478e-b433-ab61248dd668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c79a9b6-c2c4-4935-a662-fbfea8ace43a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90330e89-d679-4921-9c9d-64bcd6805e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf8bfac0-c795-479b-9783-9dffdee1f87b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee5999c-56fe-4559-a1e2-8e72328f23ce",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1152ddf-7155-4ddf-b864-0c04e41def69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be7c8487-58b8-400d-9d0a-25d7097d546c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0afc31d-2610-4f54-a077-2ac3e2e36999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac950c5f-aef4-44ad-90d7-8cd70d7301ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ef3786-4402-45f6-9b77-b63ce223ead5",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f3ed16-dd06-4ab7-9345-1549dd2ff13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6770ff9a-b45c-4a1a-b32b-024d61325071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071485ad-e27f-4ef6-aa27-eda27c58e476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b06138b-4513-4848-bf77-f5d6cfb31cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95578dc-19bb-4554-aecb-3ee21fcb29c8",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8509053-2902-4f15-8bdb-8d6fd35d79c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d0ddf13-a20f-49e8-b91b-aa08b828af68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c1c1f9-ce9a-48a0-a122-5ff72c78d79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a735684f-4b7d-469d-b004-9d8e63f0e1f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb16fa7-0931-4ad5-9862-2045ff95b061",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94bd048-6f24-4346-9d05-7827b04e16f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd035fee-656e-49e7-b859-a15622526e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ce6920-265b-4f2e-8b96-95e60f89602f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7dc85c4-3768-411d-b9bf-12432bd943c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7808cab-848b-4136-b3a7-060b15cced1b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0807f46f-98bb-4d42-9a42-a9bc47c1e83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef447e11-7320-4187-91cf-4bb4024a793a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8492aa85-8701-4f4c-9e46-aed8fdc299ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b910abca-6055-4d01-b1ef-510f61c6f0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5859a161-38af-4cde-9bce-8611e5dc69b3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df99f36-790d-471c-9dd3-7411314c0f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f9c46f-04b7-4dcc-8ef1-f5b5ac9d2967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7a2b15-dcab-4186-8fbd-c61a1a19e78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab7ed1b3-3a95-4d4e-9dd4-404a1694d1df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1a8b03-0987-4cea-9afa-da14296c0b2d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c087ee45-86eb-404b-abb3-e9b1f91499ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56282afc-4473-43c9-a9d8-5b985f10f544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895dd5a7-942c-4165-ab0e-7bbeeb8d7bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "98fd64f5-74cf-4aaa-aa78-75470d0033ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94100437-6ea9-47dd-9e55-507bc5359b61",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c656a5-0efd-4516-b8b2-6eebdbee7863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e64aae75-7a28-423d-a537-b6fe13fdbd50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e7ca60-7221-4b51-954c-cc2957840cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb56d7a6-736a-45ee-893e-73b8998202a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69dd27bd-48ab-4340-af35-d146a707ed37",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3149f2ae-855d-4810-9315-0af4ee939865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41fb0555-e36b-4c07-b305-65c950b4b8e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258de984-8179-4b21-b28d-4945816b8ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3732bebb-f4c0-4b8a-88a8-2fe483621656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a487bf-d354-4be9-9c80-6615827e533f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ee40a5-f406-46f0-81be-2c95a49b153e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4848f885-fc7f-4af2-b6af-0505a6f6fada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb34e63-74af-48ff-bfab-40898e960087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7a939822-faa6-43ab-8627-40fb6b0c7c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7ced75-3bb3-4570-9384-9a95e10b7d11",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2937d02f-7af7-4e2d-853d-6dec57dc4f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92179f45-c576-48b8-90d3-e0222c1222fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "336f964b-292a-49a7-9215-4d1981c69a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "92e862cf-4318-4538-95b2-9bc5ce70ad51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab8c850-bc83-4477-8b51-5707145c8252",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd967602-ab4a-4af8-a23a-5fd07e341fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb05db3c-3393-4874-bb4f-e3f4c1760b87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6305663f-7a2c-483e-8730-9b68a5f7781e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "29134b73-17f3-4e40-b2d0-9c8782603a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b183b1-64c4-4ba7-ba1b-555c85c71b35",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f857e427-119e-4d05-988f-b0ccb3d3be25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6ffc9f4-29ca-45de-acc7-d16bf565031b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ac6bf7-cbe2-41d9-9366-3a165061a44e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e2cdf1c-0d2f-4049-8f98-bb07a4ba598b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437ba72c-8fd9-4e79-b4d4-39256ef95fab",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df996e0c-a668-4428-90bf-b6e25a256120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c9bf734-d2a4-4f06-9704-8563adb7f16e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d636d0a9-6f43-4fa9-87b4-48c8db43b842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "656e59a9-5b63-4d1e-adb5-6dab42ba86fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e37cd0-3b72-447f-9e60-0c0855ec961d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6684535b-c2a7-418d-8508-1bfe8ef7fd08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eac77b9b-c7e2-4c86-9523-93d3ebc17cc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1b84c5-420b-486a-9e39-a9e7f60d11d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "34785655-62d2-48ab-96fc-33ffd3b2e1c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa67d791-835b-480e-b503-4b34d7bc6d71",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e5f8d3-93fd-4e32-97ce-2a3ecb3924a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d31b8e1-8bb8-4231-a036-c6535cd37fc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba468ac5-5b5e-4f82-a871-49057351432e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7bf1bd3-77b6-4ec5-b504-04e5ed8f3504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f220f63-a0fb-46ef-9895-25ed623936f0",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0591423b-c6c8-46c4-af79-376ffd433252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21c7350c-99bc-460b-a238-5c4b1b4f0c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4c9fe6-c4f3-4ef9-a6d1-f9d066fdaa0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c956bf9-fe77-4e14-8973-8f3356ea00b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a979652-e317-4a8f-84eb-cfbca245b17d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e605e10a-db76-48a5-a1c4-2a2b3e38293c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21146c6e-399c-47a5-91ed-53741656b2ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919006b4-68e5-4c6b-bae5-85d3ebddcb7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2defa42e-a330-40ce-aad0-d2f95dfa4eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9d0399-4dde-4f3b-821f-33dca1435e6c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35876dc-a0ec-4fee-912d-3e6d89d12b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10488c94-d9a9-45ad-86ce-98c75a2d7ace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8fe52c-21d1-452c-9431-3068e24055cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dee7dd9a-2945-4b1b-a05a-391f4dabfaff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d6a3ad7-7e14-432a-ad5e-fee46720c3c5",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "815191e9-ee60-40ed-b045-11a10bb61913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb3c3adb-e771-4d9d-9749-699369fda8ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c8e50b9-c73e-427a-9595-117a591d17ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79b2a1c8-abdb-46ac-a655-bc7eaefac1f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab56eec4-33e3-4808-bed8-0f20f9a52d7d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b818144c-de78-4897-a74a-4afca20ed591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f4a7dd9-6b95-45bf-9397-97d0c0306b79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e119a1-040d-49cf-87c8-c207df6f761c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "95fa5f73-83f5-43dc-99d8-052d0874aa5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4393315-a622-41d7-8c2e-c976a2fccd79",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b666f9e-6dcd-40d1-acc2-f96fba5d2324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6acd6a7-94fb-4adc-9a95-9aa85b43751e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ad1c54-7be2-405e-9592-71f89900b30f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "dda6193e-7603-483b-ac50-46a3b16e0a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4505849-3d16-4c66-b355-d142e7b16c2c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "000a9006-3fe0-4964-bb6d-281eb0c21cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f0accca-c2c0-44ac-9342-35fe96cccf55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67bf06ea-541a-44ef-9a93-93c771c6051e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d952d4e-7b63-4aba-a175-92424fc5291f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b67c6f6-1074-418c-bce6-3dad1c40c260",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb05579e-7bb4-4117-a34e-d588fe901647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ece5c4e3-9112-44a7-b37d-2f4e07d12bd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f59fa9-e8bd-4860-8f9c-d65ee58bcb27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec016246-d335-4b3b-800b-0db09837fd0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d18503-5204-4d00-9627-19562a254009",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d81be6-6f45-4573-94a5-c4685103fa37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3a509fe-5c63-4cae-a5c9-88d752a94515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6087d3-a7e0-4efd-a358-4d9b88e21342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "85048fe8-e0d9-4045-85c7-8c6c1591188a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82b4c0a-6470-409e-bd5e-e9a65b3a1d51",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f4c231-ddac-4f77-85c1-7098f547371f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd64fd33-bafc-4059-a158-ec69ff4d4741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df353877-84a3-4610-9c7b-bfda0330b232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0927d841-d1cb-49b8-862d-83a1a3aac889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6db1672-f4f4-46d5-b37f-87ca9ede4352",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a77d16-0429-43e3-8fb4-02d753b45277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "421e094d-dca4-43cb-a544-0eade4ab8df7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23fec1e-24fb-4a90-9399-ef190c280410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ee7ff6f-6596-444a-ab89-a35e8a6ca175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57349c54-4ac1-4e9c-b7a4-3a7792fa71f8",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9853b7e-b70c-433d-a933-f7da88fc6c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "245a0175-bf86-4d73-a869-c347f35f349c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1501da00-b11c-4b86-a6f0-9402dee1a1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "265e8900-6516-4a30-a68a-fbd46ced1521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9090214-7317-41da-b63d-bf74b80e87de",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93e6bca-6937-4ba5-8203-473d3ddd4ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9548d79b-55ca-4edf-b55c-d8daaf70e4b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b4e62d-4547-4d20-a63c-a61d5f08153b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cffc863f-0f60-4e17-8921-bd97a91bf8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ca4486-887b-4a0e-b2d0-795fbb2c3c54",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e7fd00-64b9-4a7b-b85f-89ed85d1e478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01d42f6a-f505-4189-a9a7-21cdd839abfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1859814-b82f-421c-9601-cb49e4ec38b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a01e85f-4282-4403-9e99-5f4fe89e8b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e295bd40-f393-4029-92b4-a3b86c502103",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f8fbea-610a-4e41-8545-5893c179d256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c9a057-9904-44d2-9348-f0635b1ccc46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a155d39-550c-4668-94d2-738d4106d382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5dd8083-c698-459a-9c08-e28dc2d00027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dce6b45-bc7f-4548-8d7a-9a8b7a986cd7",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddea0ee3-951f-432a-b51a-1bb524fc1983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "507f4e85-b1a3-4c72-a269-619d879410c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b67b89-92cb-4d24-992d-c044f6fc4697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2de7895d-934f-46f2-bd26-f2796d589048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3269de-42ee-4e22-bbaa-0ed61f4a0dce",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b278bf15-0e4d-459c-a8f2-c3b9977da19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7718ca8e-6112-4738-92e4-b97a5ce0df5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35217dd1-d2ef-4e60-819d-0c0199b26ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f17af39-af0b-4d9e-8857-559d5a2f11b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280cf903-11c4-44b8-a873-8958b90ac88d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45372906-e73c-4c6a-b34a-658e68f0e692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76048222-319b-4024-b753-e9d8a89439e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf67feb-12ee-4e66-90e7-431fabf69dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4e8458bc-2d43-40d5-ac1a-d68e55ceec7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aacc43a-e0f4-4a98-8454-e3203f5196ae",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63b1815-6e09-4d0b-aeb0-ea047faeb396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2be699f-7fda-43de-8eec-8b2de0a9a2d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e65ee3f-efee-4e4b-a5b2-b9fc62a11909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "aeb0ad78-dc12-4233-96de-bda7ada9b9ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51fbb403-1768-4cf3-ab6a-bbf1baa6ab53",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b65944af-80b5-4899-b720-8a5894254cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd3f9c0e-6a94-44bd-be97-141a99e123f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8240c09f-fb76-4db2-9c2e-3e009ab0ba9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb7f3dd7-4b97-4683-8c07-9dd3815454e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04ce762-fb8a-4a4e-9b13-560c2d53e26a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e88fb4-ef05-4f9d-95cd-3c88d5e201cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c1b7b24-1650-416e-b3dd-2c3961a69ca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c67cdb-7750-4696-86ba-d170fe8d0789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92ed91ec-d999-47dc-b382-a48fdaa2514d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6bde05b-a215-46ab-aa01-221355fe98d2",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb7ee69-9df1-4193-a438-4da4bdd3afbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2d1a559-868e-4445-bc22-8c65e88b69fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a608bc14-9deb-4411-8d13-c81fa358d518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7764baf-8621-490a-89ec-ee17db18e67d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4ee8cf-7c4f-468e-951f-69b48d3c220a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7b45ac-207e-4709-a832-e04c5e1b99f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38ee29c0-3ca2-4a29-95b2-c8cafc59c528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472ab97e-125f-4d0a-8bca-f805992ee0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "27b881ff-92e2-42b7-8aba-d54cd9849314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c524f0-7f3e-4a0c-8dd7-7a47986579c0",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aebccd5-a59c-4edb-91bd-5c3a3eee5a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d7cc953-c5c2-4903-a82a-0f67ed5daf58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26cebac-22db-40dc-8616-55498e13e36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2150a10-b23d-4b37-96f0-fe4aa1c8fea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71087f64-27fb-45a8-bba6-c4bbefb73f05",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a887953-9b87-447c-9981-9c6463d2a8c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1900b697-213b-4933-be4a-1292ac460dc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5e0faf-56c9-4ae0-86f3-2190fed72683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "67271058-8431-45fb-8387-0e84ae6dbd87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e85902-37f7-4d2e-9c83-dcf33f04440f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd99c4b-11b3-4af2-b82a-96eb3ee6d6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cae03301-a1b3-446c-bb96-b3d34b4592be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72012134-2d22-44b5-a6a4-e4ce17abf4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "62717ab5-3d3d-4fcd-944c-8aef18026ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4477311-a8db-43e1-8938-d891c9975441",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338c0759-6bd9-4059-8a1b-ebdb0abab3d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deda4d26-e1ba-4593-8999-f47ae0ead5ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95176f82-81b4-4c99-9f53-8063d6c620c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9027897-9b12-44e7-b74f-fb16b66a69c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07708af6-7463-4ae2-90ff-f96ba5c409b5",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df72baa3-61a2-4efe-9836-3dac634bd844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db0d491e-4ce8-4c12-b1c5-4a757ebcabf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6112607-e61f-4330-8722-299f29987d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce404214-e78e-44e0-a860-6e57907269be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53584a14-ca7e-4d37-9d60-09ed31cabf34",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa9e729-985a-4765-84a3-dde8c9099cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed9e39c-379a-41a7-9068-a75cee512de9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b83ea9c-4de6-4716-82d5-9028b6e9c724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f90f719-fc17-4081-a396-abbfe73698d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9bb17b-dad9-47cc-9c4f-d4ea16d85065",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1c259b-487f-4356-a145-29008b9ebc24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "fd321b20-4c79-49ee-9b11-7fa69c6b5f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d3ef8b-77cd-4910-abb2-82b8295a9d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "14bc90b2-d43d-4477-8490-4d569c870956"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e50553d9-ca52-4420-8550-a4e183110b33",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9565923d-1daf-4f4c-ac95-03070b4f5975",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19583a5-a984-4f93-bc47-f4181d15aa3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b013e5f1-475b-43dc-8104-3d52d90488f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f1858d-b8bb-4c48-8fb3-988723ecdb63",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c39bf433-0594-41ed-aeaf-33667cffcf65"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "374350d5-47dd-4a14-83c1-00d43ef29c48",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10a3ebe2-c39f-4ba2-95ad-8c30a34d1089"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "10c529bb-cb3f-4a59-8576-e26f372a39d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1b4c3cf-6523-41e6-a95c-993675c5e56c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0827d7a5-cc7c-4820-88c7-061401fe6d4d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ca819f0b-72cc-44c6-9a41-00d7f61c3540"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a83640ab-a13b-44c5-9166-967323fdd900",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ca310442-abd5-43a9-8c03-3d6923913631"
                }
              }
            ]
          },
          {
            "id": "8b572c35-bf4a-4406-9e17-e05e29c0392f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e400a071-b77c-490d-a566-a382fb93868a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba171f3e-3282-4155-bfdb-66f8a165287f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aed578c0-de50-460d-9378-2fe462e270ba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4bacf5f4-a8ee-448b-8a1a-58b6d2257126",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "079e0571-df10-49f0-bc26-27735c1ed045"
                    }
                  }
                ]
              },
              {
                "id": "2c012f9d-2827-4802-a093-7862606de715",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f54edeff-b4c6-4acb-8fde-4356489c2882",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0762aa0a-ac2d-472a-a7d2-6bee5748ea20"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4fcf82ef-f948-4d52-9b82-a91ec057413f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e0d2c78c-08af-4d68-b0b8-65fdd9731c05"
                    }
                  }
                ]
              },
              {
                "id": "94cf0d8c-f609-4f5b-9500-c4e662870a0a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4cdece65-61a2-4ed0-a2d5-a6edee787d1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "87a3d9b8-7eff-4b58-90da-6d488085448c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d21b9daa-a548-4639-8e16-643f373a955d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "822bad04-924c-4207-aaa1-4316f6c716f2"
                    }
                  }
                ]
              },
              {
                "id": "084cd2d9-143e-45a7-9e53-833829d52d1e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "85491bfe-c6ee-4760-9ea6-62a36007262f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e3bbb93-966f-4b7d-a7e3-0b627ed6f94e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3823b69b-0c4f-4813-a58e-a3ed2778548f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7c5b1dfc-8cd7-4263-9125-4fab6d1cf071"
                    }
                  }
                ]
              },
              {
                "id": "5c1e4ec4-bd9c-40e6-9ea4-68c8c8faaedc",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1687016b-ed09-4ff1-bf4c-d296a550ac9c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b91bcf87-c3c0-4fd5-87bf-4c97ef9af40e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c0f86cc-4c69-4cd7-8781-3618e418a119",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d63788e5-817f-4d87-a13b-c0ccf8c9e05f"
                    }
                  }
                ]
              },
              {
                "id": "2c325f47-0974-4e4b-afef-033cb9508f17",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2167e3ab-8547-4af1-83ea-1f9a8f5258d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9705a8c5-e16d-457f-8579-d8853d6eaad1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4e2f4c8-5e92-4daf-aeba-54596ec510a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e9aa7c11-17e7-4769-ae2f-3daa3e7baf88"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "edf0b21a-f256-46d7-997b-760bc5937c1d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "25327bbd-70a7-4801-bd99-6befc09410fd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5c6832d9-deb3-43db-b63b-0ede7fbe5c89",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c5c011f3-9981-4925-9b5e-1078d7e050e4"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b8b11797-de60-4991-8dc0-95da940a98f6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2c13da84-2c92-4034-8722-7ec55de162b0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9d849c53-93e0-43df-aeba-9582283cd5b7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "96200057-8ffe-4d14-9f2a-192f0620a7b6"
            }
          }
        ]
      },
      {
        "id": "3dfdfa32-99d3-4819-892b-8d1c4b0097fb",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "20495c7d-2324-4261-8364-efb9228cf1ac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e8e7a2aa-38f0-4f0b-ae43-86ec5d6e6e14",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "47b16322-4fc9-4683-9f1f-a283ffa97631",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7e3fac-e911-495e-ad32-62b30d1efb29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48bc29d4-a1ae-425c-9206-548d9c75fc82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21b2962-66a3-4d83-a98b-52a2af4335c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5eac3089-00cb-4e6d-a083-0eb3ddadeba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0311bf-0416-42d4-aa3a-3e53a896e172",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a390df8-4311-41c3-ac1d-54165838b01b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a2e5aac-be11-4a9c-a66d-1b831ec1197d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902390bf-5bfe-4209-93a3-6a6dc978038a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "922c02d7-0738-46dc-9db8-e7931d88b7ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aabe3bb0-ba3b-4cf2-b6c3-6f369edd2859",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58eaefaa-e7c6-4e44-ab4c-0b08843b2ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67e7227e-f7b2-4a4b-9fea-bd140388dc20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa8133b-c268-42e6-b5bc-59d452cf6d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c75db9a5-4823-477d-98de-79e7aca5c90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d260b55f-8a32-4c9e-95a0-f2e36f8c3f81",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1eabc5-3db7-4ff9-9d38-d4cf0d24495b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3cc7d3e-c96c-4c84-8dcf-356333a45cc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3826468e-1831-4002-8a13-114f35c76fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee2aec33-96af-4675-b658-80f86726633a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a26e41-ee46-4047-9266-1dd8724d1ea7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a75a633-442f-4e32-973d-1ecdc56e9d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16299915-fc63-48a1-8f2f-93acbe3e7326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360ee1da-8c69-4b57-9468-99b6c96e60cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b208d9c9-0fe3-44e9-983d-9ea7ba05b01f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b590f4-04d9-4d8d-88c1-42d703378df9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f885c0da-6c68-4bbc-896b-a7252494dac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ffd5b61-38ab-4408-8442-8e25bbb7418b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5e1a66-18ed-441c-a25e-af397763d9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "41c4b870-9d2d-4af0-9e2c-02d885f03939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67208545-13dd-4052-b265-060efe96a0a7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2603734b-1d9d-40e7-96fa-eea554625d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "687d9d52-3f9a-411a-b1fc-a6bd4d367304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bcc8f01-de06-41ef-a4e6-ec6d88de48f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f6ed2e0-e5a1-4793-b717-5a259ab3d38f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b18834-fd87-40c9-ba93-c67f66669692",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09aa4999-eda2-4e7b-93c4-83a7bb1c005f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0019534c-e4ae-4f2b-9cdb-99798f6605e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39258287-c2b0-4192-8d16-d8be7db50d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31fc7ab5-4168-42ec-bdb4-bb01b59a7f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b832b1ea-3677-4720-8b3e-b6add22f88bc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf5bb2d-a6f9-4a7a-9c26-92ee9aac3260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a76d9825-db67-4289-af24-c640e01073cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a6d7e3-37c3-4e74-a92d-d23b510e9677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "448bb3bc-8d6e-42db-ac63-57bf7b672d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d76e9e4-ee35-4130-949d-7bbf1fad5886",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7091c7e8-8768-4f89-8edf-2d55171326fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87ba1352-b65a-492d-b377-d045fc57ad33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bae2b29-e69d-4f92-ba49-9f1f0688889e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d51b0893-e750-49ee-9715-3f3b0daab8f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8887d7fb-1996-49c0-a580-2db164a28e07",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb79cf4-3cff-4129-970e-265a3eb1526d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aebc6800-b354-4803-94c9-aafa11476a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f1143d-7119-43bf-a441-c3eb63ae83e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8667bb9f-d007-4c38-8d40-1324d7e2282f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a67124-aa69-4447-ad64-1bceba374c6a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8713d4f4-089d-4916-9c59-04f13bf0fb3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba3ece39-a4ed-4aad-b61d-63821f6d4a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7cde59c-5d66-4bce-ac4b-57c81d5c6c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "63b200a2-a976-4039-bb91-4b6a86560155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "894c1e9e-fab6-4ad7-b82a-9b02b97a8fc4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "198a3f5e-a281-4e2b-900d-b8fac2240208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56543b26-eb2f-4a17-a066-9ea6d9e902fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e008f1-ca2c-4c11-8658-d568f7bd232b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0b8f1e1-033a-41b7-9da4-a6f082709f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc6cdbc-2c8a-4ab7-93a6-c6a8cf3d74de",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7afa79-5851-48b7-b94f-7a3a7ff2ae87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58d0dc04-abca-4018-beaa-2396a6c21ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764c99b2-e341-46be-8d63-7b4ccdcf1e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea7a2274-0bc6-45c7-8207-d4e94106e96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fef64a4-14c4-42ff-b1c3-1d195249559b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28c5236-0402-4151-95db-831692449aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea689aec-830e-4ec9-840d-e0199aa15cb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93529dcd-0964-4ea3-8258-e06868a005ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "07426ad6-01d5-4f7e-b4ef-349dfe44194d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495a5a7f-3710-483d-b264-e3787e34e860",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1133a9b-4df6-4feb-8489-3474dc9e6a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac6a927d-630e-4b2b-8b66-8abab9d32ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2283422-f5ad-41d2-9ec5-a5f66e76d9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1596f89e-07f6-4604-8d7d-a68f8160dd23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03abfcbc-3eea-4b17-b009-ccfdf502fb71",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ce7ddf-7808-4213-a072-474d1a6cc8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f175ba20-6995-46a0-994f-064d00f710b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c48fe10-8e93-4985-a2ca-c9156e7f7245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cdd775f-e85c-4e40-8e80-92ab41ff3900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8da5a2-ba7e-4456-a3d8-da6d0b57dec0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c89178f-7cae-4ad5-b1cc-26c595e19415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6475e5d0-819c-4675-a3c2-f20d3f2a8308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc4778c-9d93-44f5-8f51-368e0b6d1a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "66506f41-4bcf-4383-b62b-74f1394a3a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6a5c3f-8912-47bf-a5cc-48a16f93649c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "165e6abb-868b-49bf-a048-9a352544e8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14c023f7-b3f8-4b24-9761-13ae74f69345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ac122f-7f14-46ca-8a31-6255b777f067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b93b205-a925-40c5-a9da-8dd5dc559760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f33aa9-1cf4-41d3-97e1-9145a713b6ab",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f14093-a712-4846-b0ce-fb0c00d428b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d58c17b8-593c-40d0-b474-47965c07cc19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75101eda-35be-45fa-a2df-0034e455ba17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "312e17a6-93a5-4343-8b3b-b9752489b659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a6f730-15b0-4d31-a316-bb23d82b5e49",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a634cf7a-0022-4a89-a9a4-6420c4ae6628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a732c37-f6c6-456f-8136-6bceb185d757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2fe3ef-fb0d-4bad-81be-a08c871145b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d24f51b-21dd-42c0-9bba-77972f9d75d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5854adb-b0e3-44e9-b447-bdfcf700733d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19cc66e4-8004-42e6-8456-c9a9208a88cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df5a549a-698b-4292-9894-05029c0a2fd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48354d3f-8bf1-4b13-9c65-179db7c1df1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e39bf6b-2e54-4f7a-9e7c-8dcd9b14665b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4021c684-3cc6-4315-b2e4-516b6af65041",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d8ea30-2d25-46c0-b4ae-40e502e3797f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e36f8ed8-4282-4259-b231-ee5098b60ebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296cc8ee-b05b-4045-9a30-6c7aade3a0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e449dfa-d3be-42a0-bd1f-20fa4db6b3ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237a29be-5c18-4683-904f-d3b40bb07e18",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45b32ec-69d9-4d16-9020-23338ce9cc1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c81ed814-f370-4e2a-9742-2268f6136481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bada47-69ae-4429-9fbd-25b9de37cecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a75b984b-ce97-4bf3-a23b-7fe586d7a719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5212831-ccf5-4107-bbf3-95f0be8018bd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12655861-ed2a-4657-b21a-86b16817ba4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56493dac-e006-4725-893b-db123b05a3c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14b3bb5-f3b3-4488-8a8c-45476f4e7587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af8c6f6d-2b00-4a01-9d74-ee6927f1fc85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d847db2b-0772-45d7-8e48-870ce9519cdb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1307f84-7951-4bbc-8e3b-bfc940016f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8ccb2e3-1e1f-4f22-aabb-e0f53b7a654e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643cb2f7-d006-46b5-b7a6-1c7eb48dd316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e1084fb-fe82-47bb-a0b5-eb49ae78566a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35cac67f-1d6b-43fc-a063-8ca2e84b2972",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f07b5e-b93a-4617-b99d-a019dc354c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1757f5d3-4131-468d-8bf8-fba75c243dc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b12a72a-c524-4437-97c9-b05ccd9e92ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ff7dd23-a37a-4b5f-ac07-2a59c7c629db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace376da-aa26-49a2-9649-c25a4396f630",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8a6710-ae14-48d9-9840-62e9f49238fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39f2b646-a9fa-45ba-810c-70c717e92faf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb70135-6d0e-46cf-ade8-a49ccd080d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2589b3ec-b218-405d-96b8-eff195a1e20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1766969-8e00-4c2c-ae44-3185eb3e88fa",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "786ba451-579d-46c0-a29c-cbf3cd142a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76d0cf5f-a432-4378-afbf-ab50799e3bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7afb3147-825b-431c-9844-24c32b5e9fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cf43982-f93a-45b7-8741-a09f1e343325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6bb508c-14d7-4f54-9bc4-7efcc7fe8c61",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e7b243-49fa-42ee-af36-0b6ba44836cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "710382c6-217b-4b19-9015-f859b5e2aace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e9f0bd-2784-4abf-8391-278d2b6913dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8929dd7-3c02-4643-901c-c9b9e29bfb02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb2ea42-0f3d-46a2-b922-0db3af70cc21",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbbff956-98f9-430a-af48-a7ec7b1b6e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3538db6a-f5ad-44dd-9681-dca8bd8f13d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610fcbe6-b46e-44bb-987c-cea8ac82e3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6907aab-25a0-4117-8d96-d653c740c2ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b57900-c9f7-4c5c-bd1d-ab3098f6eb6e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10752fc-c544-4ee0-ade6-26b3005a2c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84aff81a-bf4a-45b2-b6be-d2d8879435c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483fb4a2-588f-4881-8496-f975335d010b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5436940c-f94d-46c5-a113-d81293d207bb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5bc9bb8b-8419-40a5-9dc0-2118af950294",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b38684b8-c7f3-4935-aca0-d37af64d2255",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c44379-f852-4c1b-acd2-7cb40238f1d2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "01e83cd0-3421-48fb-a97b-adba80379576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4ecc2b-9d99-4560-b59b-75a8d7a90666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9df146e6-1209-4953-9783-cfe83815261c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9857708-21f4-489b-8519-356e454191bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d8e46fe-937c-4f35-be29-03d98c381411"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "03395c9b-d7c0-433b-ad21-00beacfe0671",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f636bae-42f1-4ab5-a5ca-5b86fb1567ba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a350820-8b5e-42d1-aa53-8e2d2573fd88",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9f0faae4-f2c2-417a-8037-02ffcff3d258"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7161bf32-f9e6-46ce-80ae-1a6efa50b6c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "78552f94-7529-4e88-87ef-3ede48f6bf12"
            }
          }
        ]
      },
      {
        "id": "f89417f7-e7b7-46e8-bb67-9e89ae968af3",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "4d8e34a1-5bd6-4ebf-b7ac-7e5ad5a925a0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "084cc9b1-1588-4910-8818-1bea53d3c2dc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c26617d5-9c7b-4a81-a471-559163724be5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dad7a16-455e-4ea4-a233-198c11bcd520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d80134f-442e-494f-8ce5-9f7d548b43a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "729ea0ba-7ac4-45eb-98c4-ffdc2a952593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "04788004-4996-4b4e-b1e5-677664f6fb85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92685e52-1511-42ad-9a74-ded84c96a87f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e5cce1-31a9-4c4d-86ec-79c77dbb1988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd5731a9-afee-4202-b82a-48b3fd2ff8aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ef5725-b38e-4c5a-9ae8-7a39dfa57b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e7595ac-498f-4a26-8e05-9ccf6e81df2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f061c8c-3b0d-4e08-9f83-90b5094ce0f1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c379bce-0ac4-4ac5-8013-8fbd94a58353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "000cc43b-0137-4e7a-92e2-e2b159c73ef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c4efb0-4d7a-40f3-866e-9542b7fa5249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2da3eec-79e9-4ad6-a76d-51d87dadb985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430aef52-dee6-4236-abcb-4fa1a8bf8b81",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "815aa5c0-247b-48ee-91b2-115bf9203256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ebc4ff2-be65-4d59-8b5f-58316eee55ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092cc30b-55da-473c-8636-dd293935c173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c710b9b-ae8d-4930-b4dc-81da0694a770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89cc0a6c-4265-4bb8-8121-21c53949611c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b9f35e-25d4-4bfe-bb17-60de4ff223fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16fade65-a9ff-4143-bb88-c16a81765e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbd638f-01d7-44fd-96ac-0d847fe80cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3095a1ef-8e15-4980-89fc-26a94a42c3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4075c13e-146e-4014-b5cd-2bafe6315a02",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98641bad-aa26-4c06-a2e9-1776239d82fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bd9aa9d-bec8-4e9d-82b4-e0dc7ed38221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e537886-3d9a-4e3f-bf84-6037bdba0331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcfe3941-a3c3-4ee7-87ea-bb00547b1476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d4b3f8c-2574-4fba-80d7-890f99871e3f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b99010-ca38-4c78-8bb4-2847b2da138d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a2bea8-267e-4519-a6fb-1d3560c63838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb23ea69-eb8a-4181-968e-8b03d9028280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6ef7634-5c6b-44a2-8dea-58f71023601b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "969bd002-3edd-4e57-8e2f-af74f916a720",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f974ba-23f3-48bf-9c94-7cd985e4b7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b52ba36-9673-4b9d-b83d-f49a92c7c3ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4f82fb-f483-4184-a64d-b259abd89401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c63f3b61-859c-46a5-9028-521ed3f6a5e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414726e6-132c-41df-af5e-d82346bb558c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d267c170-417f-4142-ba6b-2abc611f3043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd550d3b-e603-4b8b-845c-d8590f165757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64dcd602-b9c4-4a28-a1e5-6dfa827cbee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b15d14e-aa47-4912-834b-e622d9f62fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f1e758-ba5b-4fb7-87ff-ba6b4939fd40",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "316ba070-c1e3-4c66-8c59-b099da76ed73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29a3bc5f-f981-40fe-84d6-92822b4c5ee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0651fc3c-54fd-4e6b-9aa0-248002d80126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "205bf475-f47b-4622-90f2-b4c54f902977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d2bcba-e59e-476e-8e4c-696740206bd4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3552ce07-ffb7-45ed-99fe-1a5b7a249a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ca1a5d1-e8ed-4e38-a4b9-60572847098e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6bc7e06-1a9c-4379-9021-bd25f9b132e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c988ba11-1f38-4c1c-be30-68b7e2a32d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddcb00a1-75da-4033-8d1b-49e49beeaa2c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ec2ef5-2943-4066-a159-d55fdc917d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ecb45a-96fc-420b-b22a-caf88be9743b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc782e16-46f6-4d8a-b53b-8ac5b5328348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf82e6a-e7a2-41a0-b6df-9999ca1cc6f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d40178-6e50-4262-80c0-43eca0b09c40",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f33ebe-145f-4056-bb9d-200b62c08595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dded87a-01ab-462f-958b-9bcbf3bd8caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617ec2e3-4e07-4196-889d-27381d315b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb178b92-b0e7-4bea-9686-9674a2514f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e8d727-974e-4b25-9142-8f687c84ac0b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45bc03db-ec04-4a84-8e07-6ae142b5a3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d465542c-21a3-46e8-adc8-c263212e1228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6c7686-501b-4229-b9d7-79e8efe73bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6ffa7ee-2f13-4e94-bd7d-390fd587cec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d291da-a5ab-4776-9aba-ec660504d7d7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "532aae0c-9897-44ce-931b-6a77f53916d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fccbfbcc-e873-4cb8-a299-236a74991c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f325f668-e335-43c9-b89e-208e4ad8907a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "489cbd09-3909-484f-91e3-341a03efe7a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c0d8ae-38e3-49f4-b36c-ada6696b2b25",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1365414e-b1e4-47ec-83da-80556bf2f1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f585e10-6fc7-4e38-b1a3-3e4a9b2909e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6caf1f7a-7d86-485c-aacd-fd45935fae82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6201924-3d82-4523-9940-9bd0280791b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3b863e-e2c2-4a53-9bd1-b5a970e17567",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ece335c-812e-4228-a87d-931dac7c6aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4747ef4-fdfb-4173-84d7-574a9cb893c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9929dc-b04b-4ffd-81c6-6d263d27a210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "19e47860-4e2e-4b46-9d43-c8ffe7fc6453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58cc029c-b9b0-426a-8f5c-5cd4c758e78e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16738e97-8635-4dbd-902c-8ff91f10fb8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2857e01-1109-4530-bc93-c32360ba4e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45746ab-4a46-4afc-97fd-62b7a2dee30f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bc39e86-b7ef-4f37-8bb1-984c2957a29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b3e6c2-a1c6-4de7-b5be-c93d510df35d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b25434-6df4-4489-aa93-b87c59f17c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f62703-d179-44af-8021-d5231079a1e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a7b886-db33-488e-ac56-5c621f7b8fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a1be5f0-39fc-4421-90ef-f91342b11d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a703ac9-7ab3-41b0-acea-159d31a08e19",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa94c6bc-dc30-4596-8c9a-048a431c6fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c54f7e03-8ed4-4a92-b38a-12d04210a748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9230e98-2d4b-455a-9425-4f22718a9878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e23db6a0-c916-44ff-8aa7-bc57839ad6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237abe0b-4320-4590-953a-326b07488fbc",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e24cef8-ddeb-4cad-91a3-4202f3bed291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d93ff918-a0bb-44db-9800-632795ed52f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7738c6ba-2a35-4683-9e8f-117ed56ca35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6d397aa-7553-407b-b6a8-5fe849c161db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59142b4-5e1c-4f57-bf5e-6835b31fa8ee",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "339b05b3-2626-43cf-8d25-25a5230d983b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a928469a-1686-44a8-88e9-d9bd6f4ade40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac004272-4162-43a5-abe9-0c17108c11e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1635741-4433-400a-afba-f4ce828462c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe0c991-5df9-4e0e-a843-449d980a6cc8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4757c1ec-d7f8-44c4-9e60-76c920ef6c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a0dabb9-39ff-4ae2-a061-8ff765b714a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc45ba67-2749-4310-84c3-84f5e7e821c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fdcbec0-d6db-45ba-943a-027baa7b05fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d952a1-9546-4c9b-9a94-4cd79345492a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f397cd19-f3ce-470c-a2b0-410dbbb7e68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "582404be-d46b-4fb9-9745-aa821908992a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3416366-f53a-419f-9fa8-abf7bd99f5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0887a017-18c3-45a1-b42c-c5d6ed73cda3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da3c361-9505-4176-afda-77b92540564b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac52bc7-430c-4c2a-bd68-2f3f9d16b0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e78a6043-d70c-4560-8f14-545ebd6826ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a75ed28-9ab5-47de-a636-1f2763aef44e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a223ec2e-d9ef-4eef-a468-ea232fcf1235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb91ea83-131d-418a-95fc-3490d2860ace",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45b33e0-6c18-4d2e-b509-078ce9e55017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6749f764-ec63-4177-8ea1-2f5b50304e23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9a904b-2ea8-4f64-89d0-05467b657a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af7cca32-e8d2-4717-b055-1728708ed96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6c3089-1b51-48d5-a551-285d85bb8fb2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26578569-5f87-42c8-9cfa-71e60f95aa42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5faeb861-a45d-43fe-a64d-8950444c57c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886c4537-bc1f-4e70-9302-345a389eebec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00233624-62d4-4abf-a5a7-a3aa6ce5a314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d906af5-af06-44a5-b0b8-01804b0d3d2f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d37375-3558-4d67-83fc-90bc8dc3798a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c432d07d-b2f2-4f85-a40d-e5c99ba8c971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a501ab-2869-424a-a2bd-50b5d1cb2bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4a42aad-a847-44a7-8a12-7a746f58d80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50558335-0234-44da-bde8-9ea3774184c9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3dbb1e-b8b8-4dbc-abf2-a885ed8bd7d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96441a94-1d56-428b-84f5-c44cc72565f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d914422-fe4e-48d1-b3a1-f5fb9383c5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aaa5fe2c-8c83-4639-8df5-b3c657471b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0cd240-2c75-4d56-91cc-0d1896bc2f4f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93536be-51da-48bc-a99f-6675fe246e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d078f2e-d38e-46ec-94db-aed87930c68f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ed2f74-ae19-490f-97e4-98d0824e4d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbefbed5-a3cc-4bd3-8d01-477021c4b116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1392e2dd-cb19-4594-b6b9-5bdb05be8aef",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c21f1f6-1013-45c0-b057-75049379c191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edd2e8d3-f9ff-47bc-9e0d-0c0f70934937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201aca27-07b7-4ae7-b8ad-864fe2c20176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5c42dac-a743-43bc-92cc-7e34a7cc6473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599c5975-ccd2-402b-b1bd-ef6e36dba0de",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54251893-cabd-4e98-a7c3-1859f58ec45f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c7aafd5-063e-4773-bebf-574f523d82ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c05524-2928-4bb0-bc1c-7faab533423a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e89cf4a-ec82-4c67-9ab0-5fe89012795c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79587b77-6c8c-4ee6-acdf-f7062e1551a5",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9badbbdf-ee6c-4f4f-b1f1-e21531b75ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4560ec5-2480-4705-b4c2-db2eb9c18190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17e9b70-7be8-42b9-a357-2ef70a1f34d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "902c1626-a883-4746-bf3e-e83228e129db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9294e6ea-1600-4669-b25a-1d7cfd83fe5a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55539efa-af1a-4542-8294-975970b0fa21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a139d082-4cd0-4065-a1fa-a5022b8dbb86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7cee60-444f-4f49-befe-1d06ee92d9c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "456f13b1-2650-4e7f-b84d-cc2801b1ee56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190ed45c-7460-4940-87b3-2f7a6e900c38",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8dfcde9-58e1-4fd1-a080-f9f9cb99a962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3b7c5cd-1cd8-4b58-b5dd-cd73af8c64e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6a3edb-003b-4be5-9e92-9ecf778c8e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "632959e2-2223-4b95-a2d6-1c9e121b35f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba67549e-abc2-4410-89a6-75a5a32580a8",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cbc976a-e674-4912-846d-ff7648ee3edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f76ed2-ae55-4f60-ab03-c88b6f0029e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1184a4-864d-4264-93e8-7de7f80c4f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c03bab41-3d91-4a19-9245-baedc2059f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc429cdd-8a70-4c21-a451-04a794e2b380",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99324db0-2710-48cc-afd4-cf0280fbe13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf039d4a-63f0-4a90-8b37-89d68a9e76b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ab6b32-756b-4d02-b03a-0f397931df15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2fda644-54b9-41f3-951e-b00d8a5b4d7c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "91dd295b-1cd4-4a7b-85bb-0dc6304d60fa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f7b7ad2c-0159-495c-8a2d-91ce99009908",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0acbbfe7-4eb2-4544-8c8c-9f9610409e64",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e017c989-0970-408f-a68c-c49ceda38c0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66150fa4-9cd4-4c6c-abb7-0ef54f0d9bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "172cc64d-c183-4285-b6ba-8d605c90c162"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c366f9a-d9a3-48eb-ab3d-19749b371039",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d9604f5-3292-4ebb-ad8b-7280156fb92c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "629ec9ff-9f55-43a1-b78e-efdaf3e08755",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f1b7eca-8416-43e3-98ce-2616fc3d014a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "47d356f6-534b-4118-94e5-8155cb368957",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7fc8fd75-5d8a-419c-91e7-b92232612b95"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "65bfdc7e-3470-4909-af81-a2dedcd681c4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9571f2ff-d1db-478e-8d4d-698c0260be97"
            }
          }
        ]
      },
      {
        "id": "297714b4-d127-4746-aee1-1ee0dc1d05cc",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8cdef7ad-b30a-4840-9e03-41da26f92b69",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f8390895-f269-4723-b6f5-549b2d887a13",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "911d627c-36d5-43e5-bdd8-2af7d4456260",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ecc8e5-0681-4c15-8aae-c7d8c91c60a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "258d4a35-2540-4c32-b491-21a83f8fb5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b94a92-4ae9-4f07-b75f-eb81604766b6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25cce576-86aa-4259-9851-3ef6332515bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87a82c18-746e-4817-95e1-4bdc7a76d3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44fce410-345e-46aa-9879-5533d641b8cd",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b3f8a4-c500-4a79-b322-0c56309728a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ed45568-4c59-438e-8b65-ed09345d4113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280f99b3-f9ab-4c10-bff9-d2b89d5f7de0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55e4aab-03ee-4534-92d8-b217c078265e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4e86917-344e-4571-bfb4-a181e5c26673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9858d67-64c9-4bd9-b4b4-d02138f3a78c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c658118-c0f0-4eba-9d68-0dda6d96b87d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e29fde-74ab-481a-bf4a-fb2e2ca742fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a76544-244f-4fbe-8096-c6cfbd4a7f03",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c1d614-f530-4e33-bcdb-0af82825d464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e18bce56-1242-4920-a3a2-83b9da3389b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c52b1c-ac66-4186-bb9f-f29f95080712",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ea7a54-30e8-468b-aeaa-250bfc3bdad2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96a1eb9a-66f8-4455-8c34-cb0f34d5a965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb3a13a-0fe2-4379-86c1-98662a1a187b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70286ad2-16b4-4a8e-874f-43bfb00c74a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a2a135-d5e2-4913-9486-e8c2d9603551",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff320511-5c78-45ea-9e2b-49660773316d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e02849c5-c062-4380-a101-b5e3dd2529c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5210df-fd89-43ad-9473-3b533d578341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c879182-71c8-4d64-b267-4a4752839edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c59137e-cbb4-480b-b688-19aca7591dd3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7127cc3b-1a67-4d1b-a3f6-a490026c34ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e83da63e-feb6-4769-b8e8-2a69901c83ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9bf3204-953d-41df-a941-305b09f3e067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d20b79-27c8-4bb8-96fe-5d3c49feee78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1ae141-55ed-408d-844d-793bd1521094",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b3fa659-2d63-4875-a64a-15abd0c0fdea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9975b41e-bc6f-4cee-95ee-74137a354b67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f250da3-4680-4c94-8959-4f085728d600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e6ee853-9795-47cd-911b-f26ed1d9fa61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ad1677-ebd8-43b4-9549-ffc2e0b98cd3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ac8299-d7f0-4ae8-b3e7-b4dac4d5f9d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d319aed3-cb2a-4d41-914b-894583f574ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b1fe9b-8b6f-4563-b301-18b578522ca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28363f5c-870b-4512-b47e-8b2bcdefe380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb99c22-10ce-45f9-bb65-c386ed77d1f6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9662d550-ca2f-4b3b-b24e-a316c7f979c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13f67fa8-c2c3-4ef6-bad1-15b1145b77e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0476931-9248-4174-bd30-ee89d0db7c4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f85c427d-438d-49fc-a7ef-a97dcc1d485f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a18e34-03af-448a-b0bc-5337a0d2ae3b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2601f0c4-d956-4f10-bc5f-08cdafaa3d09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4af71cbd-520a-457c-baab-35b68aa08889"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0454ee66-484f-4e1f-8da7-ace1bd0913d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59ef9922-b5cb-440f-a44c-ced7cc5577d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011a8900-1f8d-414a-b892-f8f7fbf721ad",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134f0d9f-6d27-475e-819e-b5afa7c392a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "781b658b-e2c9-4f0b-b8c4-a791d4e75701"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08574ae4-acd2-429c-bf0a-9f99434c34c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b6185c1-139f-4cc0-87a3-d53f38783cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df6f8797-d3f6-4ba7-b11a-39012b5d1b75",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b2f068-030a-42c9-933e-dde96dcace8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "898072b2-ae78-4f78-86e2-9107126a2f5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e451b7ba-9a77-4282-8636-30ec72bd5eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c99ddf7-dfc2-4f10-a79b-f0cb289a5e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ed87ab-a02f-4535-8d84-a1e9ae4e11e3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620a62f5-3774-4773-b2d6-44a47d436033",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d1a2833-5b7f-482b-9ef6-c8b52db0e6f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1abfd28-ce4a-4bee-bffa-0ab208b1bc65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c0b4b29-000b-4270-8f00-9bde66c2d03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69cf1840-ddf5-44c5-a405-d149ff6933ac",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ede8b55-e93e-456e-b40e-d2231ce99863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e38947-101d-4a31-a28e-870858154db2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ec00da-2738-4812-a8ed-555271bb9fbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77c6048b-3e9f-46ef-97a4-58ea6f9d309c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70ae568-7d9a-4017-82c8-aa126f171a04",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d3c39d-26e2-4c04-85dd-a2e511372914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ed2cd05-2c74-4679-9082-971f1a7c54c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25be043-2217-4853-8fe8-e0f8ce6c60b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5582004-4e69-47a8-a7e6-43b485eb6073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8b402c-c43b-41e1-a958-fd223579cf38",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1141662b-be83-42b1-b46e-dc2f85c838d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c4ee60-1b76-4155-bb75-17fa20896ffb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d451388-b694-4b02-adf8-ed98344c87bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a49f37c-1a64-4d7a-b97a-4a24cb365b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a716792-807d-44bd-b985-dfe9bb5dc0b2",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6bb04cf-ed6e-44af-b43e-e2f8fcba4c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb7acf32-06f8-4ade-a494-4b1fcc2fc1c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40285f13-773d-4246-bbc0-8e6f55cbe4f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9ccaa30-cebe-4c43-8fda-adf7eddc2bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060e2c18-38d4-4690-a597-ae7288568346",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198229f9-8321-4052-9546-87172a07b5ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d2c69b2-9614-41e6-971e-1305b28fcd8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5348ebaf-f52a-440c-8336-a340094d0801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc881a2b-e14c-4760-a1e2-2d2a9c278297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7b9b08-5516-423e-b65b-fd3ab5849e21",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7a83dd-bcb1-4a3c-a865-42af86f75763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18c201dc-9cc0-4bd5-889e-c01f7d8c0d18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "009cb6d5-8f11-4a84-b9d7-9cd78f7b004a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c860b10a-b904-42df-8353-1803177734fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a383fc0-9d1b-464c-9482-b291029a13cb",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9e7b2f-b8e1-46f0-8b64-fc671b282782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29dd70a1-c9f0-4227-a5c9-bff29afd502c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01fd6225-9572-4e24-9b19-7f27fb1f56b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7deae68e-cef2-413d-b72f-f568607a8d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708d09fd-5773-45a8-b60a-7881be4fd77e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993ce579-f409-4090-99e1-e2c86c6668c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c028d51e-d022-40c9-b4c0-a278d6cb848c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a63f2b-f224-4b98-bc4f-6013a3e9b679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d39f006d-cf72-4c83-ad10-40242e8bbe26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85100e95-451a-4dbd-908b-e5ff527c9e8e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da670e5-bd50-4c60-ba8a-a1be9b560940",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faaac89f-3385-4ce7-a0b8-32716169b19a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e635a0-28e4-44d9-8246-f0225d1071c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc6e5b89-e216-4d89-8a7f-41ae9512a344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4937b6-63e7-4c07-8c06-bbeaa465cfc2",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64e2ead-8177-438b-a680-a1493f6d678f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4636c33e-1b09-4856-828c-2a6af11b6ecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b714f22d-a88c-402d-b280-d1566189384d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87fb7cc6-4ebf-4f5f-a821-e174c426bd96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "281a614a-44cb-4df0-8465-ae23f8654d1e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c32d96-f329-4bd8-b5b3-62cd06f5fe43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa6dd3f0-8b97-4b92-9f23-8963bca4b41c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "083bb539-9190-4621-8676-34ed0aa8fd98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "988ab5a7-a419-4d04-bf18-5b939be06ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ebc7043-e95b-4d1e-96c0-e38ab87510ae",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3410ad7e-27a3-4176-974d-9602b100dc24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7acb07e6-a7e5-475a-945f-afd8a89bdb67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82715f5-9cbf-49b8-b06a-8790d278bb19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4379cd21-97df-4669-bc32-d0a4891d14b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657814bd-709b-4ee2-b9f2-571f2d7064cb",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df62754-436a-498f-8051-b941d2f6e364",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1aff913d-62db-4208-a893-1af81a03be53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7674aea2-c525-4db1-8dbf-772274189c5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "945d70f1-b651-4fc7-979d-2ce9ebb366c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f18c8f-2ccb-4e53-be75-b0695e986c9d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec55f1cc-1aa0-4358-a94f-0606864838e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27f3e998-54c9-4694-add2-c4311cd80614"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "435a00c3-2b6d-4991-ab21-37ea58d925fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55f2e6a5-7cff-45b9-8166-3903b3930358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f23af94-c2a1-4de1-ac0e-cb81b99ebe39",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66bdd71-9f56-4bf8-a9d4-e7e153d2112e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2d6ae8e-063b-4614-b710-0bfb4e5413d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "114bb028-d6f5-4221-9de5-4bcbac81aede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a861def-678e-41b9-8608-035a5b154002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c6dcc6-34c6-49a9-a5ca-2493da2b9db4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "429a166f-c9fd-494f-86f7-43b59c597a64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad0c35cd-c319-4632-aceb-c09d7da15387"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba9ca01-730d-4a6e-a5d0-c7d2d8d5b503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e5b5e40-370b-45fa-8483-3d3dbc5affd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "149b682d-cd1c-4f80-a255-0d76a87443f6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab6c2f4-d376-4c8d-907e-55c09c2e41b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ed998f8-aa36-4881-aede-818b85b6e80e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5682e26-4472-44d0-8ce3-bf271facff90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87782dc6-62e7-4237-b404-0e9f6e76cd95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f7623c-3840-473f-8a1d-315a05cb4b4a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37289e53-87ea-47d8-89e0-f1b7341653a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfd06d2d-ffa2-4a30-b036-db3d3b483dfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6936bd-4934-47d0-9511-518ac053d227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06c3caa0-08fb-4de7-858d-b44c223587d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa61dc7-98c8-44ae-9819-5e154b09659f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd2b1c7-00d6-499f-a90a-104e1ef1e9bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e87ffe7f-676c-49a5-8f7e-ea3ccbf3f484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e22790-9dc7-419a-bdba-ae27f8dbc47e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7fd6e23-a2a8-48f2-b8db-1c0fc1526688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0836c419-ac60-4914-aa12-ca5ecfed3b3e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db8eeda-c8bb-42c9-a55b-c695539202a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf3de76d-b89c-4c6d-a467-df71801d0b81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe49ea47-4627-48d3-a99b-8a689ff06bc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2368389-93ef-4ddf-a980-13a6e0f06fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab81785b-ea72-4688-b0a7-a58cf2250b87",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb89d5b-a719-4643-9e18-19a5713d327f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe09f8da-6a9b-4284-9d99-4cadcd6b3394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "366dd619-9cd1-4022-9391-624036501684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b6b7c6-3791-4259-9055-f924a4bef36b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f358d113-98a2-4df0-b815-5a1b0704a50b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d51e4b-3d9e-4d04-bf1a-bcf6942638d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29da66e5-6946-4cea-970c-f3d42eafc669"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "280c1ef1-60f9-4091-9e58-be245d2cfde3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f528d559-4d97-4e65-9acc-75bc644a2edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac094eb-d308-477b-b251-a9fb20879022",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cac58c7-d8be-4e60-9d06-f9539a637a0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94acd8bd-95b1-4372-80e9-0a2f9c4b5894"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf1db34-6bf8-41ce-a709-3b8c8fac2084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "308c83b8-fccf-400b-96cb-9c37621610da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09bc706a-7f5a-4d84-8362-cbb43c6e5309",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6002bd31-a204-43eb-babb-f0d5540c5423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4238579c-3f58-462a-928c-882cfb52c432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5223ca61-3bfe-4154-9816-d5c403703ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0727603-e854-43c3-b4c4-241f7f6c65d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455db821-9336-4023-a1df-0dd990ca3213",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d3ba9c-4be1-494b-98ea-a0773c8a5d0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3b2890f-ef6e-4de4-bb0c-e9463cbb923c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f904ee4a-4321-436e-b944-99442fc202c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "489330ad-c5de-4860-869f-8d3a0468dd49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0ffd4f-a38e-4f0d-9a51-28272360095c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d421bd-2155-40b1-8f4f-81247055c73f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b00efdc1-5623-487a-a006-3e828fa3a9e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "902cdf6e-cea8-4f70-b40b-b1b8186d2b73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "994b5e68-7ca2-4186-a05a-d38dcdee4786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a2a79f-d887-46fd-8775-61b281effe61",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faeaa3cf-3e65-4415-9783-c6cd559b1448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee2093db-6f3c-43dd-8a8a-9f7fa07623ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "179a34c8-360e-439a-a527-a0d59a3fa856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d42bb841-7413-4a4b-a557-b856bb42fde5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e82fca-cee0-4ce4-94e8-cadc435d93da",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4dc74c1-26f7-4c92-b160-047aec8ab8ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "091ce850-91c6-47e9-af88-c3f4f621fb9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f0a1cc-8b72-4c19-b22b-55e3a7bfb5f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "820210b4-9b0c-49f0-bb2d-2b8867fb2345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6405e49a-0754-4d51-8f4c-22cbe6fa9b12",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1017b8b0-114b-4a05-9288-2e7a5c16bf8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac3e8f0f-91a6-4b4f-9409-167604f861f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91a3760-4c64-40ce-a947-b8bde6a84278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81833669-3777-4a33-b7d7-47a76e5dadc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e6babc-1667-42ed-bcb9-a575bc76c09c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbfdddd-5a19-4e59-95d9-8ff4bebb77da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d9c68b3-6713-4e95-a001-3deb89430b47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d478e50-44ab-4a53-ba35-0dfe319c2a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98ed1170-57ed-4a74-b2fd-344b77f83bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a89796c-d783-4978-b18b-34ae9f564759",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0406b4dd-1f14-42a5-acb3-da927352a8dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a367a070-2867-4146-ac25-d888bc67d3f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3630617f-bad9-41f8-bbd3-aab768d04297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f7e481d-743b-489b-8bca-61aa93c1b306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d5a546-e366-4870-ba53-3f6d2ec3e53a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef93e50-99ea-4709-9b33-372dc8a9bcf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0a8b062-f80f-4c52-aaf7-d6d99bfd4a27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5a5136-53e1-40b3-8dfb-76caae28c109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85f289b4-1f9a-4964-b078-a58e1ccf83ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c051dd-a6f6-4f06-8eb0-2a1e678ae644",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf16863-4900-46c4-889f-8cfac13b4b93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64f19890-142f-4e41-b167-9d5e2f82deae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d340862-5ff1-4e5a-86f3-f93f6b03845b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf54311-5043-4655-9bc9-4a8b35290779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da16245-9c25-40c3-8c4d-ba2101f76e86",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0902473b-c703-4402-803d-b012c0f955da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "766c02cc-c930-4cb4-9176-cfcb5ae278ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0521bbc-bb3d-46e4-b136-e7ce9f975513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90dfd23c-bfe6-4f7a-8276-c1a42d08dc9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e380acdb-e66f-47d1-8f82-e972897769e2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94bb22d-92bb-41fd-a2e9-bad4b17424bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edf35e4f-9f95-43fc-bdf1-6677bdd51aa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dce9fa5-7762-4f8e-acd4-a5596bb36edb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7abd93a-4477-42e6-aef5-d051cfea9aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a5604e-e700-4a5b-bb00-164d9576db24",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458e8d48-9b68-4665-aa86-fdfe530610b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22770ae-5941-4fea-86a8-70cf47dca7b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c084d5-e751-48b8-aefd-8f845ef2f98f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40869821-0053-4555-b74f-245bbe53306a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43bbfc7-30eb-4872-83ee-d912b93f558a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ab4b93-01dc-4f0d-8a6b-eea07b99abf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00259730-1c86-4a08-bd94-7522a274bb18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "950c901e-a02a-408f-bc73-e2b4bdd51644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42afe72a-ff49-43a8-a727-59c73bfc925f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bcdb4b1-ed9b-41b0-ae59-07e47d14b88a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f084924d-3ebb-4be0-84ea-e0e3d5977740",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0725f69b-67d8-49ff-9843-b61864d5b731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05986836-cb03-438f-9833-fca8165b3102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49f8124e-9db6-4f91-aa98-0587ba8ce176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b4b085-f5ac-4d3b-ad31-1e08a6eb36d5",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0fdb5f-3e26-4bd5-8b60-243483968957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d67472df-b226-417b-81f0-968379697c35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a95f63-47a1-40d6-8416-3e2ed9649d96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "052a9d80-076f-4703-863c-3e78454dc648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd44b1e7-c4e1-4448-bddc-10ae46046328",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e04383c-cb70-4abc-a05d-503713ea09f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eeeea85-fd99-4b52-9b17-91c635fc2638"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb7b77d-31e2-4613-84f2-e336e9591ad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33695028-7e93-4669-821b-9d91b9bf99e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb378a8-021e-48f2-8e8a-bb8fb9a982d5",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb05532-60a7-41e4-bdf5-9a9aedf9a96b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36c34a8c-ef0b-4d0d-8237-a9927d7615c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91c5137-5fe0-415c-9161-5d634b408110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3ff6d4f-0e32-4369-aa9f-76355831323e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ebbafae-748d-48d5-80dd-f028017a4776",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a798ab6c-aa5d-49c5-974d-816f3714f3a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fba63094-0e29-4815-bba9-88705a98d131"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a82993c-09b5-4d3b-b109-ce88a204e723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b5ad57-9aef-41be-b04f-4f7e3f6b385f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6a0f8b-fa92-4575-b673-4bef0b19f5f1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb20234f-6a10-4fb9-a386-be162ad0c594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edd68024-78fe-4221-a612-c0f71026d784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f8b143-9cc6-42f0-99ab-58a90dc3f866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ef624f-05ed-4f97-9b64-07cf22450b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a83121f-9dcc-4910-b0a1-6ae14e95b41f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1fcc71-ea10-482d-bf9c-f68035f7330b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "339a44d0-3ba4-40cb-88ae-e12bd4b86f87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ba89d9-3134-4a2f-a63d-30d87d58cd53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d22699f-fe8a-478c-8bbb-b48822902c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e4393c-7951-494c-8ed4-b8c4ea801502",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812f571b-3d68-4550-b9f4-22fc67eb2b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c9fa7f-45f6-4a3b-93ff-14a0d2218529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9445364c-f8b7-47ea-921c-a1fd5954bad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b3e709-f2ab-495c-90b6-e1d727821787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4291c7-54af-452d-a2d4-cf7ae1a82edb",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c6ce853-ec88-43d8-b6de-e33f06d7a80b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57458f26-b939-4988-86b8-425f1e7437b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da55cdd-543a-406a-9b3a-a9bdac6c2598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "353318cf-e7f0-4800-b448-b8647468fe23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170ebd29-b1fa-4893-ab7d-858ad2aa4f67",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e75d4a-40bb-49f8-a501-0de497f70a0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d74d382-541a-4397-9ad0-59a9a00beb49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb95372-65a5-4c29-8db0-7afd555fd84b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d516172e-27d7-42b2-9bd2-32d0dc3b2ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b333facb-31c9-4cb8-8d18-8b4fccf64ae3",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8472c07f-0300-4100-a643-20437fbacbfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce3a19f5-ecc8-4beb-9a1b-1f2a1d9ada47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "021e8859-d902-48de-a76e-896b9975fe8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40479e38-f677-4afa-baa1-7a7f1f4afd5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ef25f4-7e7c-4f0c-8d8d-d4a97547be69",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877244f4-72c1-448a-9272-a863069e4523",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49edf3bb-96fd-45b3-a49e-24c2a1862e2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "284118b2-6a2f-44de-92b1-419faa2bc037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ab4f442-dfa6-46aa-8208-1cdc00b43bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2b5de5-150f-4e45-964b-e913024cf0aa",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd871a5-c1b7-4550-8c57-7563629d13af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "705860ad-4d8b-4fba-9a66-8cdcb3b69dd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39e5dbb-52fa-408e-8737-00ead379fff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aab6db3e-fc5a-4ce5-a759-94323be19f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80f4b1a-4587-4a63-9e2d-51158b93cc71",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac7535b8-922f-443b-9d4d-e129d3c1a505",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fac904f-b711-4727-9654-095019a1fc64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2318f0-95a4-4240-ad93-2824876a380c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17abdbe0-d78d-4270-a522-8b5099dfbba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1646c04-2f53-4e6d-970f-cebab51fa9b4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a532e4-4aa0-427a-926f-744189ed8452",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "117627d8-65d3-4444-8d17-c5d90c9896bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d751a9f8-f533-45ef-88e3-8023fe5fd7ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3e26fbd-d5f7-4728-96fc-131b859d48dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e2e51d-1edd-4357-99c8-955e142c8c4d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f94db237-8712-4bb8-a069-f39d7e504f59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc8c6182-6197-4b94-92e1-d2cc8768b6ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9ed3e0-db33-4133-8c5c-af2ef04fabcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a36835f-b138-403e-adcf-57e8f6aaaca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b3c8f17-9684-43bc-96f9-6f015df9fac8",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f825ef0-e157-4229-a91c-905b05ba2ce9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d305a47f-0bc3-4f15-b80e-305ee6c7278b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea63b91c-9f12-4a06-84cb-c21ef19d2eed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bcfb7bc-7946-4b8a-aec9-db0e98c84184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08782e59-09d0-4f3b-8a3b-175b39cd3a0e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49914fd3-1759-4154-bb6b-92c8f5650d29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf70b395-66b5-4fd8-b950-39fcce2dabf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe68603-1028-4504-9d45-5e2170ec4087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13bac2cb-78e1-4036-9b9e-6c86169b1d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc7a0f9-08fa-438e-b353-d139cbd7ab1e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7afdaf31-1d18-4bbe-a32c-7049a776d03b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0bc2380-aab3-44e4-add9-e0bccb375903"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5782a7e5-c0e2-45e5-b89b-1645965697f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "972e3b19-251e-4108-9786-a15e29e39c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3a16af-3d49-4dc0-8889-a275fe33d713",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "329951e7-9b27-4566-934c-83323af3fc92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5d3fe51-fc93-43d3-ab98-092e6428d648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e6c82a-08f6-4b6f-a081-9e9f1fb1c821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e1d9547-5221-4171-af94-1e6b3991c8c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c5bd39-0d8f-43de-9228-042ce3ae4eb9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f06acb1-80ea-4024-b6fa-d2b8c7fae2b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91137c6f-307e-4532-914e-126ff8c0e990"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9208680-d96c-4732-a8a2-fd11c8e7fc4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "491bad45-92f9-46c4-9589-a7c901d159e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebb45cf-89b3-4524-97c1-77d00d9a5c0e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385ea257-62cf-4757-897f-b74b0fc28d32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8f60f25-bd5c-4712-ae27-8a50c5d4d150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f04ca9-53e0-4726-a9be-dde9466daeb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a789cc94-f8f3-43df-b8c3-3a7987824cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c36c189d-c272-49ee-ba15-30f7972157eb",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac4d017-79d4-4558-ae0b-4a32715ef95d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c213a87f-dfda-4746-a7e9-50d04604d5c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d132faa8-ee41-47cb-9c2a-e5909a88a171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3412914-e97e-430f-8695-bb9b61a1bcc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd1cf74c-22c0-4f6e-a6f4-1f0dca534bf5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc0e80aa-32db-4e70-80e4-97058fd80baa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df949010-b92d-4b32-9c10-563f32145302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "148ecb3b-87ed-45a5-96fb-e89afb9961a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ef93166-f0c9-466f-99ea-436ce5d1dbb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efabe01d-d137-44fe-818a-38822dc18b70",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec5fa6a-7cfd-4861-8582-1ad5a6c39b4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "995adabf-cded-4e2a-b241-bf03139d13ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a46920-e2ee-46d4-af8e-44141fdad143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad0ea197-cafb-4116-a680-b0a0ff464f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dfad61a-b27f-4988-9666-1523eabf4c92",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41908ba6-aba8-4cc9-b351-8375e4920a2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bf25299-5e77-46d7-8022-b45111c62f85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac759ca-4bd7-4acd-ad87-471eb8ab9635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77a75fd1-4eee-4c49-bafc-a3ef50bffe77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "facf2b60-9654-4d3b-9a3b-cda799bdcb63",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8123e990-4db0-43cf-9898-52419a084320",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a109d70e-d415-4da1-a2f1-47744ef056db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6cfe58-8dd9-4c69-adc2-37d281d519d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c804ebb-6d40-43aa-b5c3-4be1a37a34f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7051022-0442-450c-850c-0cbf1c1ccfee",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab250bb-32aa-4bd1-96dc-9cd4e3bca4f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8e4c98a-7e99-49b4-8a3e-42177f431ae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37f1b9e-3110-4665-b38d-a80e9a709329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f821be0c-762f-464d-a1bb-ac26fdbe82ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60229c17-30cf-4989-914c-f30c2d510b84",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac4d4bb-993e-41b6-bab5-790c353adc7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4045b90-a57d-483b-96c5-c9ab63be6d3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a68b4e0-c273-4f98-a3be-0a20af197811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "445f4ee3-47b1-4f27-81f7-ad90e0a43d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db8e570-316d-4c11-9159-688a877fb418",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f825fb6-a754-4ffd-992c-ce7ae0be2227",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19c6f8d9-3309-4fba-8306-5913cbf4a1b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80b98f8-0a0d-41ae-99e3-3290ad759c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af3f9b5-60c4-4f2d-b4ae-da8bbc012996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "facf34d3-9f56-48d0-bd58-20b1b6834150",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca60bcc-dcb9-48e9-b4de-312a00d40b8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37527573-6e5e-44de-9df6-8aa600658e0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad9c749-966d-4739-a672-3f247bf35f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66e0f7af-7730-4707-9a63-7104871be0ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ac4a0e-92a5-490f-af23-60c31d586c8b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e92a42-247a-417d-be8b-57ad2732f288",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78e5019c-d0a6-4268-8d57-0fe786c2ab7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31ee329-dc30-402e-9295-f8dead95a4d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e698eaf-3c9e-4385-804e-137595b40458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b53a97-068e-4943-8d3e-70797c7d9813",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69aab6ee-578b-4c30-8d20-5da03bc9c559",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54de6814-1470-4af8-9848-ebe6adffd9fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4da283b-42a1-4fe3-87cf-3538866c2a19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b476838-29a1-4068-af60-477d5ff249f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27141933-cb6e-4f2e-bb25-48dc653197fc",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8541a769-c304-4439-897e-1707245bb19b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81b5b7a6-b540-4e11-ba15-c0c0ef14e059"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf3a0b0-a27a-46cf-8142-6540e660dffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8f874e0-fc30-457b-99d7-00a2c4ec5652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e1bb1e2-e2a1-400f-a985-03d736c60edd",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d15c8c8-c097-400d-83e3-a434926ff75b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cafceca-591b-4c30-b387-e24d95b6ca38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae9b84e-02b2-4e8d-8238-b4eed1d91877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad0326f-342c-45c5-b12a-2b51fda32b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae8d3d0-774f-4304-a7d1-a5b8b42cc7b4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ffd53a3-1b52-467d-9477-c3a87592079e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ab47c73-edb4-4d52-af24-a657850052b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7bd008-a027-44f8-b285-cc2960e55284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05666add-8e98-428d-8194-afac209e6048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40802ed-76e6-4512-a76a-b1e3ad74151b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "787c81a2-6b5b-4ed9-beed-1e49bf92ddae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d1f587b-ff85-4727-a2ab-31e3e1a4047a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e000abbc-df44-43a2-8c11-380c0531b368",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a111864-bec7-451a-ba79-a56869966b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ff9266-f1e3-4087-ac75-fd01a047f919",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e6dbe3c-3d44-4f63-86a4-8e60508a4177",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4428762c-426f-4104-afd6-963e9f0e3f89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "087a3df8-b148-454a-923d-9ee10b02441b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93f0fd9a-d47e-4628-bb15-e180b5ea6f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a68569-d246-4e99-97e3-421f721fdb70",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8ca542-0d24-431b-9fba-f7dbd6421ec8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fb196fb-27a8-4511-ae61-f37758b85005"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3659ecb-57e4-41c1-a275-b80a18528157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d26036a6-576e-4669-8970-eb8377758b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6df7ed-6061-4156-b610-ac03cac90b55",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfcb88d1-2b4e-4eee-90de-e63fe238c837",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a334bc3a-69d1-4ba0-b5da-792d693bb834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c399bf-9804-4811-b0d6-665888286ee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ece2168d-0692-43a8-8f3f-e0e54d85c16b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3fa1f6-f04a-4fa7-b8fd-db54c3d8e18c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d52ccfb-50cb-4ea4-b0a8-dcf709f9801b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "112f6e6a-b952-4ae4-b75f-5365fbc4c1a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6bf44d6-4f08-4c2c-ba8f-9291bf2cf946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5660b428-d09b-4507-a5e2-203d705ba657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe086233-d393-4d01-bcdd-b4f187ec3a2a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a95a723-adf7-4633-aae5-f2785bcfbf8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8b2d767-697e-49a4-a19f-d0f5a465d5a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4f9131-13a4-45ab-975d-afe3a62c4e95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ecda1fc-aa4a-4c10-a16a-0239d8c216d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b210093-bfb9-4a7b-9a59-db9f50ef38e1",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb32ee97-ae2d-4f06-a409-1ae08ee23451",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d03cafec-62fa-47ea-a2ad-d9d21ccd8943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92bfb24d-59e2-4c15-a258-000674d12f0f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3958e3c2-1482-4112-80ac-621c00c67e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f071e4-787c-4be4-96c0-906c88912eb1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f07f001-6d58-45d4-b983-0e7b2b97fb0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56baca8a-9e10-4046-81e1-c03db12affe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2daea3-bd02-4dcd-b515-b389089a6a76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef0d0170-e8a5-48dc-ac07-8834b51c4f5e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db8bfe01-9198-4cfc-a90f-bae5f3833e9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2011e946-26a8-4f5d-9de4-a012e9866e7d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "89b157fa-2d9e-4e4a-b6c1-3981ad3ed413",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "07e04f7e-57ae-4ee5-a008-1424bc1082b6"
                    }
                  }
                ]
              },
              {
                "id": "95c5f717-62b9-47cf-8b1e-1e78335e5e69",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ab08daf6-9b36-4eab-a016-6bf94c245fcc",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee70dda5-57c7-4ab4-99ed-caf5a39aa013",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "872d7929-43ba-4e7e-b66d-4bdcf747000c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f02704-e9e4-4138-8f2f-724762d44cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "463c811b-3b03-4dd9-bfd9-5c7e743a300d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf588701-d315-4b6c-8ff6-29630781deb5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b32b98f7-23f6-47b5-a3e0-15604c9f150c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "88849c1f-31f6-4b5a-b40d-c7c88324ad29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ef37cd4-090d-41f3-95a9-4259fad4aadc"
                    }
                  }
                ]
              },
              {
                "id": "f7ef6ce2-67bd-4bc2-96f1-2c0d49060e84",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "54c39557-9b55-4d69-9dcf-a1ac1607c023",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd11b2b6-280f-41b0-a24e-dab70cc7abea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "56c47f69-7f43-4ebd-bcee-5b41261c8b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d59f2c-528a-4341-bd64-20664208a136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac223040-8b80-4ff9-bb68-9671b0c70724"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "99cc53fc-9da6-4302-b851-1b6e985fac08",
            "name": "Positive Testing",
            "item": [
              {
                "id": "87aa8089-4ac5-402b-a129-3d58ba4a8094",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c51c4a1-61ba-4e50-8e82-9852addd2cf1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6eac0b2c-18e8-45bd-8d9e-7bc285b12dc8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f0dbc2f-9b6e-437d-9d30-7fd7596b3783",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d45a93a0-7cde-4b50-8b18-e98ce047dec1"
                    }
                  }
                ]
              },
              {
                "id": "8c50b0db-cac1-4eb5-aead-29f708b892b9",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3777545-7442-4b3c-b722-581a2dba5b53",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "41213f9c-9be7-44b8-bf1d-bdf72555fb9e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f246a9eb-9b1a-497a-889c-caaaa984d701",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f1b4bda-e30a-4360-ae1f-abf225dad6f4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b33f922-cff5-42fe-b530-cf5ad201b6ad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "41ed130a-2718-4613-86c5-bbd39f92760d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "36e481c6-fae3-4653-b48e-67d1cdb414c0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c8a1b47-16ca-4a4a-b847-4a09a2bf0045"
            }
          }
        ]
      },
      {
        "id": "16ec0b08-bd2d-4c36-833b-5e9f46842d8d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e41e6f06-f01f-426e-8cab-0ab079c3d5b9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5855452a-3051-4d9b-bf86-72684016840e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3e6e3521-d0a6-475f-bfa8-d6fd79b22790",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8bdffe-5615-4caa-8a28-98ef545f9ad7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "665a33a5-0058-407a-bfa1-9413632a6a23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0bb1fc4-cc45-41e3-8de7-173d5b952320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "630d0026-357a-4415-9dda-0d3899ef946f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11139c2c-fa3d-48ad-bc96-37a237be7fc4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95b78c6d-51d4-4c50-9169-f89a48f566d0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "42118ccf-8ba6-4f62-be2b-0dee1c8bd852",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b69980c9-4bf5-45ed-af7e-a40e2b1b8851"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3f61437-6762-4352-8c4f-814f29ee4b97",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "731b2773-8c6d-4c09-9bd2-8acf5cc7af55"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "71a01958-4445-47a8-bee0-5941cd224c1d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d5b81f1a-8518-4550-bbe2-d753b29ed7ca"
            }
          }
        ]
      },
      {
        "id": "39d92501-599f-46f5-8e97-d8d4a912da15",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6192ade1-f1c1-47f0-b42a-a99890531e22",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2b057145-1cc5-4fd3-90cd-a2fdf7c83037",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d478df2a-50ee-43e3-a856-31acb2b05232",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278d68b1-e738-44de-9ec4-04ecf64988b5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de8ce9fd-be86-4b77-b769-b8882347ed2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6938cf7-a363-4524-ab59-a3c464f48f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ca15cc6-81d2-4226-87d4-da942f4e310a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba1cfe5d-9db9-4eba-8b9a-19be08a4821a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7cf39102-31f7-4311-8f36-37592408adde"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2bfdc78-bc1a-4e98-bb8c-74ec3ef77821",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da884024-2382-42b5-9331-b65673f21335"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6015e031-1bda-441b-b7d6-b3df9582fe8c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dbe60122-ea6c-4b71-a330-394cc940665d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd46ab66-1815-4c78-9dc6-94e1d53ae5f6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2861ac57-b177-4747-9f36-d77f1f2b1379"
            }
          }
        ]
      },
      {
        "id": "62fc973b-e073-4c73-8aca-58b1af5029d7",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f49efbe1-bd94-42d8-9a04-f51e98449d76",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9d11ef46-09b9-4652-8c18-76f706952f0a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a0f05c5-3931-4600-ae5a-c636cdd6379f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2662d3a2-ff45-472d-883d-8efb8a50652c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c28e494b-e012-46a5-8b05-29f437c24126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11fea22b-2a67-422b-b772-bbe23eb01a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f8b8d520-ea78-42aa-9650-7fff123134cf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce8506b2-13ad-4b8d-a14f-1afc9b695c0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b402955-e900-4a5d-ab89-487786e770e0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8de743b4-4457-4332-adfe-747ae0b09e5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0dc2db1-9ed3-44ba-9256-1976cb97dc49"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e31198d-2c7f-4321-9c4b-4fa6764c8b87",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "49dcb438-a146-47af-876a-c052c79e3120"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "27b59e3d-b146-430f-8e34-4a6890379bcd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "198e9899-9ea8-4513-a8ac-d014de82cf71"
            }
          }
        ]
      },
      {
        "id": "3d467c85-ebce-4367-b693-457de52016ca",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "67f044de-116a-4231-83e7-1d9073c2bc61",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1cf943ba-2f2d-48c5-9858-5ba5c5c9f2c1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1bf41c6f-50b4-4c91-9b6b-426638dd3771",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "45f78bc8-4c79-42cf-8583-4b00740d5b43",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b36b6064-9e02-4589-903d-1917aa39bcfb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 318.9788732394369,
      "responseMin": 7,
      "responseMax": 7370,
      "responseSd": 911.4882967140161,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1694910913671,
      "completed": 1694911016554
    },
    "executions": [
      {
        "id": "c5f22486-a5e1-4246-bb81-cb387c957683",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "730935d7-ccbe-4143-8873-00bcf57f0de3",
          "httpRequestId": "b35fa8e2-b986-4a59-87a7-673c9b9b48c6"
        },
        "item": {
          "id": "c5f22486-a5e1-4246-bb81-cb387c957683",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "952b7335-789f-430f-880a-69ee3c9a0675",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "cdca5a35-8be0-47e8-86c3-377c4bd944c7",
        "cursor": {
          "ref": "1ad45df3-c478-4a6e-a89f-0c8404b30f82",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6dfbb9b7-faca-4503-95e8-d9e55062e5a9"
        },
        "item": {
          "id": "cdca5a35-8be0-47e8-86c3-377c4bd944c7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3cfad2a8-00d5-4bc8-a7a8-29ce70dd3a59",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "dac0bd66-40a4-43fd-b08a-94746e6a6183",
        "cursor": {
          "ref": "b16ad1f3-744d-4e51-b638-097062b01e21",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "81205efa-56bf-4204-acdd-169e66400742"
        },
        "item": {
          "id": "dac0bd66-40a4-43fd-b08a-94746e6a6183",
          "name": "did_json"
        },
        "response": {
          "id": "893bc1a5-a10c-4dcd-979f-14b41062efd8",
          "status": "OK",
          "code": 200,
          "responseTime": 1361,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d6d895-affc-43df-8370-b7c0e9f5600e",
        "cursor": {
          "ref": "082c7c64-25eb-4cc2-baf5-06d5dc91559f",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5b188dd1-526b-45d5-8f51-90f48c800c6c"
        },
        "item": {
          "id": "70d6d895-affc-43df-8370-b7c0e9f5600e",
          "name": "did:invalid"
        },
        "response": {
          "id": "b37ad9d4-2742-4600-876c-b83b7f042cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d6d895-affc-43df-8370-b7c0e9f5600e",
        "cursor": {
          "ref": "082c7c64-25eb-4cc2-baf5-06d5dc91559f",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5b188dd1-526b-45d5-8f51-90f48c800c6c"
        },
        "item": {
          "id": "70d6d895-affc-43df-8370-b7c0e9f5600e",
          "name": "did:invalid"
        },
        "response": {
          "id": "b37ad9d4-2742-4600-876c-b83b7f042cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db015ff8-2b21-4920-a3de-50378cdf267b",
        "cursor": {
          "ref": "1b3356ae-1071-472f-afde-7945c45755e4",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c84470ad-f112-4fe5-8cdd-4a1be5031032"
        },
        "item": {
          "id": "db015ff8-2b21-4920-a3de-50378cdf267b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "33cdbe56-8c21-4342-a0ec-29cf84e88f26",
          "status": "Not Found",
          "code": 404,
          "responseTime": 857,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27f5238-928c-4932-a6f5-da1f3e93a22e",
        "cursor": {
          "ref": "334e977a-cc7f-4ae1-a6b2-066b0ad84904",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e42dc977-f2ea-41b8-9aa7-f680a50a85b5"
        },
        "item": {
          "id": "b27f5238-928c-4932-a6f5-da1f3e93a22e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a371318d-6390-4b1c-9d1d-b2b5aa902222",
          "status": "Not Found",
          "code": 404,
          "responseTime": 248,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d144c96-ba08-47fd-bd57-5dcd5c041744",
        "cursor": {
          "ref": "d4a43a01-d778-4654-bf5b-3f2659a62cb7",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d5fd7762-eb19-4e30-a1ef-59d408108171"
        },
        "item": {
          "id": "3d144c96-ba08-47fd-bd57-5dcd5c041744",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e40514fa-a2ef-4b95-beb8-1b28cf4d3791",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de83a77-729f-452b-85d7-2aad283047ee",
        "cursor": {
          "ref": "ce38b505-52ee-4c22-bcb0-c16eee9c3d63",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5e6f79a7-6047-449f-a999-f089dd8b36c6"
        },
        "item": {
          "id": "5de83a77-729f-452b-85d7-2aad283047ee",
          "name": "identifiers"
        },
        "response": {
          "id": "d9c84a5c-1bc9-4beb-b07b-8950ebb58b98",
          "status": "OK",
          "code": 200,
          "responseTime": 1200,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5a756f-94e7-44d5-aaa7-4850f84add9a",
        "cursor": {
          "ref": "8ba25b1d-54a1-438f-8907-fbbcab45353b",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c91cc02b-9f9f-4338-9c93-a68283b8d054"
        },
        "item": {
          "id": "1a5a756f-94e7-44d5-aaa7-4850f84add9a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bc50e846-3e08-4000-bf0d-5575e6609de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0903ec-b3cc-4da8-8108-4ee0c40efb66",
        "cursor": {
          "ref": "4dcb65cc-2f07-4198-ba26-c066466168bc",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1234dd89-978d-4c99-8dbb-5db86ef257a5"
        },
        "item": {
          "id": "cf0903ec-b3cc-4da8-8108-4ee0c40efb66",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b734a391-f042-4e90-b6b3-df8072537882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2cd3c38-3a71-4d5e-a6cf-3a16bb1dfc37",
        "cursor": {
          "ref": "f65bca65-1bfa-490d-826a-edb1c44bc596",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8dbd0c44-fa44-494a-a3a7-e4b0777f3e4a"
        },
        "item": {
          "id": "d2cd3c38-3a71-4d5e-a6cf-3a16bb1dfc37",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c063652a-ba26-4c4a-9daf-2f8b0f2cac1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8cf6d2-5b06-43d0-bcf2-48825a669e4b",
        "cursor": {
          "ref": "63299738-a999-4d3c-a1d8-94813c0c1f4d",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3575a84f-5635-4cca-a422-d97384224ba6"
        },
        "item": {
          "id": "db8cf6d2-5b06-43d0-bcf2-48825a669e4b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "721c22bf-46f6-4e38-9d48-3ffb9880c94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da6f037-5085-4f92-94e8-e48022dfdcc7",
        "cursor": {
          "ref": "1d427461-1ca1-4694-bd73-114d30613060",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e05a3684-7bc8-4cec-9c29-e519e07bdf39"
        },
        "item": {
          "id": "5da6f037-5085-4f92-94e8-e48022dfdcc7",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "63487e42-2427-40c7-b16e-7f29eb5d582d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270e35a0-bf55-4e44-93d1-c4f86c867abd",
        "cursor": {
          "ref": "51465324-948a-49fb-b435-4659e75e51c5",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "cd7feb08-18ff-477d-9f5e-6ff9d999b6e3"
        },
        "item": {
          "id": "270e35a0-bf55-4e44-93d1-c4f86c867abd",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f7412740-dad2-43f0-907f-20a488ea1fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1dc2b7-dc70-433c-a588-63c56ba1e3b3",
        "cursor": {
          "ref": "d019a9ae-3209-4d45-9323-67025104f725",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b698e7cd-b5c6-4f59-a9d9-6fd25873de14"
        },
        "item": {
          "id": "be1dc2b7-dc70-433c-a588-63c56ba1e3b3",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b6da2eed-864e-4747-9bd4-13215862dcce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb94560-590b-47d0-b315-12e85b1e3429",
        "cursor": {
          "ref": "2fa1b58f-b777-47bc-b145-0cde50b88fdd",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "806e429d-572f-4e33-bc50-c05972d61061"
        },
        "item": {
          "id": "deb94560-590b-47d0-b315-12e85b1e3429",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b320c0d5-ba08-4c92-992b-677d10d3bf57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9162f9a3-5347-4816-b22f-8e609a63af4d",
        "cursor": {
          "ref": "dc2481c7-e158-4bf7-a2ee-1e8db25f7a95",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "292449af-b742-4109-a45f-7d44c5ff53ed"
        },
        "item": {
          "id": "9162f9a3-5347-4816-b22f-8e609a63af4d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9b484964-2298-469c-827d-7ecaa4e6a566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7cba8b-cfbf-4815-b1ed-d155051edc7a",
        "cursor": {
          "ref": "2c3e830c-4846-47c2-a0c1-5d3bc02ba360",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8621819b-270d-4746-9d9f-320523dd65fe"
        },
        "item": {
          "id": "7e7cba8b-cfbf-4815-b1ed-d155051edc7a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a3c7c764-5275-41c6-8e5e-b5a41ca9dfd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47478863-b580-4be6-860a-d7edebca8d68",
        "cursor": {
          "ref": "4c892758-e072-4d7f-9ea1-03810f74db6a",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e2a31730-b169-498c-89f1-a3e0593d9d3f"
        },
        "item": {
          "id": "47478863-b580-4be6-860a-d7edebca8d68",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "367260ae-9c7d-4d29-b4b1-1ee2581d1c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30a6dd0-471c-4d8d-94c1-8097a1fc9e78",
        "cursor": {
          "ref": "38661bab-38ab-4a9b-82ad-2e719daf444b",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5c970ac4-97f2-441a-b647-f3713d84f976"
        },
        "item": {
          "id": "f30a6dd0-471c-4d8d-94c1-8097a1fc9e78",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "82f27df0-7ce8-4067-b34f-2633ae7945f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1f7a4f-2cb4-4949-820b-e4725d9f2d9d",
        "cursor": {
          "ref": "532dd8f8-96eb-430c-ab36-918b72876706",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f3f7ab89-c9ec-47f4-bddb-e0096de6e96d"
        },
        "item": {
          "id": "0a1f7a4f-2cb4-4949-820b-e4725d9f2d9d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0bfc0b53-d078-4ace-b559-d92828b3cc94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f107e716-568d-4304-8c23-6abf355a4654",
        "cursor": {
          "ref": "5156bc1b-1b11-4f78-bb6a-f1b132435346",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8497255a-cfa9-4be4-9bd3-fee24a92b637"
        },
        "item": {
          "id": "f107e716-568d-4304-8c23-6abf355a4654",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "529ae1e2-3a68-4c96-b4e4-ad9d360bbd60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc09c9a-fadc-41fb-af0f-e1a114b493ad",
        "cursor": {
          "ref": "bc3a2a24-5d3f-42c3-88e5-c991dbb97b09",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "38894057-b1f8-44fe-9bf2-b3c36eb6ce1f"
        },
        "item": {
          "id": "bcc09c9a-fadc-41fb-af0f-e1a114b493ad",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "bfea2b6f-d5d5-469c-9399-fa8f0a7389da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9f0dd9-ae5e-4b5e-8c43-68b6f3402d07",
        "cursor": {
          "ref": "9f43d623-9654-493f-bb24-f2c806dbada0",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1fc51329-e564-47f2-b1c2-2d1b642b719c"
        },
        "item": {
          "id": "de9f0dd9-ae5e-4b5e-8c43-68b6f3402d07",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "005be838-c279-4f05-bf99-eb3e71948094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc0334f-eea6-4e1b-aaa3-47a444edf835",
        "cursor": {
          "ref": "3f2989af-9738-4d5f-86a3-66018e70594c",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "45ac0985-9c5a-4fb0-8017-5f8d6abae2f4"
        },
        "item": {
          "id": "9dc0334f-eea6-4e1b-aaa3-47a444edf835",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ad4b50ee-5ae7-4680-9a0c-46e3621aff87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744e94c3-a7f4-47c2-b185-0eedb005c233",
        "cursor": {
          "ref": "a10afd95-4747-4178-9965-497439f1ab33",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "972cbd42-d4ef-403a-ba5b-831b16e1f3f1"
        },
        "item": {
          "id": "744e94c3-a7f4-47c2-b185-0eedb005c233",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "aaa951e5-12a3-4696-87a1-688172e70979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880af880-4079-4410-8d91-6e29a8d37f61",
        "cursor": {
          "ref": "62994639-2ac5-4e22-bf44-e39530baeb09",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "78b02464-34f9-4432-84dd-091c4ec14d1b"
        },
        "item": {
          "id": "880af880-4079-4410-8d91-6e29a8d37f61",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f2db799c-cf47-40b3-8aa9-1e6c9edf83f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba931460-1840-47f6-984f-083a8a1f2aa9",
        "cursor": {
          "ref": "c856f1a3-f99e-42fe-8dd6-185680176b79",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4f1ea836-696e-442a-80f5-e19f67277b8a"
        },
        "item": {
          "id": "ba931460-1840-47f6-984f-083a8a1f2aa9",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8855dd72-b7db-43fa-91fa-85e06126dc7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1b3ebc-9823-4276-94de-a1fdf404c04c",
        "cursor": {
          "ref": "5d8d0b2b-f82c-40af-9f3d-d79b250fdf72",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ed427193-ce23-46e1-9beb-d21b824fed01"
        },
        "item": {
          "id": "ff1b3ebc-9823-4276-94de-a1fdf404c04c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "98b36148-cf39-4883-9002-2ce713b1805f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d0090c-c9f8-4fa3-85c8-40a817ad31b6",
        "cursor": {
          "ref": "56a847c0-db61-4a7c-b646-474ea9e0c768",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a0c52c90-e597-4d80-9428-72b4c2d038cd"
        },
        "item": {
          "id": "87d0090c-c9f8-4fa3-85c8-40a817ad31b6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e39a2dd8-eef7-41b4-b851-8717ef0c577b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951a3de7-04df-4e40-8092-7941a49ef921",
        "cursor": {
          "ref": "2d39eb02-2080-4b08-b181-ec8bc9230e8d",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "fb14bdc7-20f8-48bb-8655-37d51899f197"
        },
        "item": {
          "id": "951a3de7-04df-4e40-8092-7941a49ef921",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a1e93ba6-5cc4-4968-8411-54adaeb8cc71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c94154-9bab-410c-ad2d-b8a730ce8d64",
        "cursor": {
          "ref": "f87e8624-bb76-414d-98f7-ac4924a7af3d",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e2c60b65-718d-4840-97c9-234040d758a7"
        },
        "item": {
          "id": "b6c94154-9bab-410c-ad2d-b8a730ce8d64",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2be9ddaf-0616-4d25-9de4-d91ae63af00a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8dd16ee-9f53-4e0e-a6ad-e079d9390789",
        "cursor": {
          "ref": "6b65c783-3229-4698-8c37-c3d28879cb18",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "519e6134-4666-4f41-916c-bb6e22190f47"
        },
        "item": {
          "id": "d8dd16ee-9f53-4e0e-a6ad-e079d9390789",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "209f6047-8bf2-4834-83cc-0307abd804d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f82edb-ea55-48d7-b593-dfac06769834",
        "cursor": {
          "ref": "c1d5c05c-c22c-4b67-bccc-e7528d4b8b9d",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6395a3c4-d38a-4673-9837-aa391958df4b"
        },
        "item": {
          "id": "19f82edb-ea55-48d7-b593-dfac06769834",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1b59aed1-f9ab-44db-8a62-89a69e735f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5411b5b9-2067-44d0-871f-1d3ee614430e",
        "cursor": {
          "ref": "0128192a-dcb1-4b8c-a956-0096f3b6f148",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "bd950b23-3494-4343-9ce9-d48a5002f26e"
        },
        "item": {
          "id": "5411b5b9-2067-44d0-871f-1d3ee614430e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "456ee0f2-dcd1-4bd8-a951-bc65a0115f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad929ace-1c8f-48f0-87a9-fac9cddf5f41",
        "cursor": {
          "ref": "1009697a-d462-4f97-9754-d19345d3962b",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a0ce6f0d-4ac3-4111-a6de-7b5ca4d78b0e"
        },
        "item": {
          "id": "ad929ace-1c8f-48f0-87a9-fac9cddf5f41",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "cfceef4f-459b-4254-94f0-f94f57980199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc135b4-58ed-464b-b424-4d62b35afdf0",
        "cursor": {
          "ref": "ea3a3420-bded-4a58-a42c-09e638d418ef",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "25e7687a-6979-45fc-b090-1f09a0c3a090"
        },
        "item": {
          "id": "8bc135b4-58ed-464b-b424-4d62b35afdf0",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a6f6f17b-ad2a-4df3-9a8b-856b575911a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0763385-033a-4650-ab39-7d7dd30bedcb",
        "cursor": {
          "ref": "4712b673-ce46-40b1-8a04-5c0c55999b17",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3a28cf7c-8930-4c2e-988f-2939d08ebcdc"
        },
        "item": {
          "id": "e0763385-033a-4650-ab39-7d7dd30bedcb",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a8e531b6-2ffd-4f58-b5ba-d7031b023bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b795285e-6a27-4b07-bccd-e5ceda663b55",
        "cursor": {
          "ref": "584fc46b-e889-401c-827b-4366c1600663",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5e0788be-3143-4ad3-ac60-9873a98bf22a"
        },
        "item": {
          "id": "b795285e-6a27-4b07-bccd-e5ceda663b55",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "683be180-5676-47b4-92e3-c1ef41c794c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef619d3-a256-41cc-ad60-ad98842563b9",
        "cursor": {
          "ref": "8601ac86-1c02-4728-b8de-786987d8bed7",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e70f77ac-4e57-415b-b22c-818f659488e7"
        },
        "item": {
          "id": "aef619d3-a256-41cc-ad60-ad98842563b9",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "323ba046-df11-4865-a110-8dcd65f67c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcff663d-8054-408c-83fe-06801eccb308",
        "cursor": {
          "ref": "33d2cc31-0e27-41c9-9cdf-04eb6e4cb7f3",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d8e100ba-bcec-4fb4-8062-5b8650692f5b"
        },
        "item": {
          "id": "dcff663d-8054-408c-83fe-06801eccb308",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4b78b5a5-8bdd-4683-8e2a-b76250b71018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a50543f-5825-4162-8c56-8edf5a615a69",
        "cursor": {
          "ref": "0561b4c1-d539-4ff6-9242-a2a1eb9aef15",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d45bdc8d-ac95-4af3-af44-fcbab0f35395"
        },
        "item": {
          "id": "0a50543f-5825-4162-8c56-8edf5a615a69",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f35203dc-b6ed-4543-8922-27315fed6ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0fa2479-d6d6-48b0-a7f3-04401d0d82ef",
        "cursor": {
          "ref": "1c29bd71-ae07-4a81-8d4f-4fcfc2af0ea8",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "68ad6819-d257-4e44-8b51-bddacd7445ba"
        },
        "item": {
          "id": "f0fa2479-d6d6-48b0-a7f3-04401d0d82ef",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d5c06adf-5ac2-431d-855a-472cf6771542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77485b6e-6c3c-4414-9107-8c85eee56343",
        "cursor": {
          "ref": "571da72a-8f53-4cd4-aca3-f6cc8ff37c61",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "19966411-8d23-4c01-9da8-fa18b281be46"
        },
        "item": {
          "id": "77485b6e-6c3c-4414-9107-8c85eee56343",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a1713ce0-97b6-4ff9-8ddf-59472684f2b1",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 578,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d431de3c-46f1-4fb7-88ec-cfce8cced6b8",
        "cursor": {
          "ref": "86d0b0ae-88ad-4d0e-ba3b-8b8a00fb11d0",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "259336c9-47f7-4b98-91e1-2866b3e00ae2"
        },
        "item": {
          "id": "d431de3c-46f1-4fb7-88ec-cfce8cced6b8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6f1f5f3e-60ec-4fca-aa78-4ef57526841c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4680048a-2447-45cd-a159-a23741aeecab",
        "cursor": {
          "ref": "2ee390dc-1592-4a59-a2c6-85459ed65ca3",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8a022c01-38be-4750-a84d-c8e10e89449d"
        },
        "item": {
          "id": "4680048a-2447-45cd-a159-a23741aeecab",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9c2ab07a-d740-46cf-abc3-384704969017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a44e735-fa87-4e76-bcba-80d6299b0592",
        "cursor": {
          "ref": "65a122eb-9c97-4f81-85d2-b54f851f480d",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "255f09a4-d64c-4505-814e-dd8a8be964e3"
        },
        "item": {
          "id": "9a44e735-fa87-4e76-bcba-80d6299b0592",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "be2ae506-4dc6-41fc-8be2-19c2adce3401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620c90b2-3cac-4c69-abe4-8ace58b46f4c",
        "cursor": {
          "ref": "3c9da40d-92f8-4e0c-9a4c-3ef9b171b4b3",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ec812bf2-70e3-463d-92a6-b72dd735c016"
        },
        "item": {
          "id": "620c90b2-3cac-4c69-abe4-8ace58b46f4c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6b80165b-ea8a-4054-9606-4815270c4c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86a2c3a-53c9-4b30-a6ad-ea763c48352c",
        "cursor": {
          "ref": "5efebf88-79f3-4525-851b-a82ee5e09855",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a005beb0-60f6-410f-b9b3-4074f2a42a5f"
        },
        "item": {
          "id": "c86a2c3a-53c9-4b30-a6ad-ea763c48352c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5a1ea13e-b317-41d8-b849-435151e00474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee5cbd7-26f2-4654-ae0d-503e5fcea2a5",
        "cursor": {
          "ref": "23026a0f-dc15-4382-8888-e4afb3f65232",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "99b17e1f-5e38-42f6-89bc-aecc0085867b"
        },
        "item": {
          "id": "fee5cbd7-26f2-4654-ae0d-503e5fcea2a5",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "af03b696-ac81-45c5-8b55-9f9400e29ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f85f802-6129-49da-a499-06e31faa39b7",
        "cursor": {
          "ref": "9587294b-23dc-4dba-bc4e-1400b725ba7f",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d9521412-0fe4-4c80-a333-5d2e54ff7596"
        },
        "item": {
          "id": "0f85f802-6129-49da-a499-06e31faa39b7",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5332ae59-c603-4ad1-a3d5-31a2291a3f10",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 615,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44407eda-2673-4ba4-932e-369eef86855b",
        "cursor": {
          "ref": "ed505273-92f5-4553-9c51-99a8c72f5722",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5a00a475-fcf6-437d-ac5c-afc216680514"
        },
        "item": {
          "id": "44407eda-2673-4ba4-932e-369eef86855b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "fc54b929-f0d5-46c9-9107-7d5e37b90495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842d9079-1993-4f3c-bba2-6cd1a785c825",
        "cursor": {
          "ref": "e3290f23-d012-4f74-a65b-81df874dc7d7",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "19411491-7af5-416e-b2e5-8c56f63868c5"
        },
        "item": {
          "id": "842d9079-1993-4f3c-bba2-6cd1a785c825",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c85a02b9-4e55-4c5f-898d-f40a46bfd3d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da7cee9-ca96-4a73-991a-ad45f58140fc",
        "cursor": {
          "ref": "bda2c8c0-bd36-478e-82a2-ca7ed1442cea",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2f802e40-bd6e-4d07-ac1d-49074439807e"
        },
        "item": {
          "id": "3da7cee9-ca96-4a73-991a-ad45f58140fc",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1402bb01-b9ef-415e-a434-2979935af470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee5999c-56fe-4559-a1e2-8e72328f23ce",
        "cursor": {
          "ref": "5c18a657-888f-42a9-bd37-123e5c1e8dd2",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c9001b8b-d7ac-40a6-be9e-1fbcda51fbb4"
        },
        "item": {
          "id": "6ee5999c-56fe-4559-a1e2-8e72328f23ce",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "cb06d279-b701-4c95-a155-f137c68edbaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ef3786-4402-45f6-9b77-b63ce223ead5",
        "cursor": {
          "ref": "47e41677-0246-47c1-96fe-7a6e57f70ff9",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "190f0ad1-3a5e-4838-89d3-562e40b2a7ba"
        },
        "item": {
          "id": "01ef3786-4402-45f6-9b77-b63ce223ead5",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4b724250-f6fb-4644-adac-653639dd9a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95578dc-19bb-4554-aecb-3ee21fcb29c8",
        "cursor": {
          "ref": "2a23f45a-67fb-4b15-ab87-b08239810f62",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c337ff12-96b0-4ba8-b3e5-87e75a069d49"
        },
        "item": {
          "id": "e95578dc-19bb-4554-aecb-3ee21fcb29c8",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4a26b6a9-6e4f-4cb2-83e3-0ca4d2e64f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb16fa7-0931-4ad5-9862-2045ff95b061",
        "cursor": {
          "ref": "2d68310e-0fc6-4a25-80cc-53523609e6c5",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c484a7e1-33e3-4634-a763-ed477b8b81c8"
        },
        "item": {
          "id": "ebb16fa7-0931-4ad5-9862-2045ff95b061",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "81281228-4eeb-42a5-90f2-b631b9878b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7808cab-848b-4136-b3a7-060b15cced1b",
        "cursor": {
          "ref": "1a8fdfe6-cc23-4a7c-858c-24e7266d239f",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f96ee6ad-f508-4398-9cec-9dd905ef23e8"
        },
        "item": {
          "id": "f7808cab-848b-4136-b3a7-060b15cced1b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "780d2aa5-98ae-4ecc-86ba-0578ec3de392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5859a161-38af-4cde-9bce-8611e5dc69b3",
        "cursor": {
          "ref": "18ddb7ed-7a8e-4a22-bc48-814c809a6b0a",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "26db3146-1518-4f0a-ab4b-29df0a309e10"
        },
        "item": {
          "id": "5859a161-38af-4cde-9bce-8611e5dc69b3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5a915484-3a8d-4083-b059-57761feb6b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1a8b03-0987-4cea-9afa-da14296c0b2d",
        "cursor": {
          "ref": "dec4842b-d16d-41f6-91c9-3197b2a1e234",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a9bf3fda-53e1-4363-b0ee-d549c9523588"
        },
        "item": {
          "id": "4c1a8b03-0987-4cea-9afa-da14296c0b2d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "21e01284-20c9-4c3f-95a3-192173b83192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94100437-6ea9-47dd-9e55-507bc5359b61",
        "cursor": {
          "ref": "f875bc30-cecc-4b30-b775-eaf56c01d4c2",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "47e3276b-8755-4abc-8635-d642c464bfa2"
        },
        "item": {
          "id": "94100437-6ea9-47dd-9e55-507bc5359b61",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "818cbfd1-9805-4ea1-89c7-5b58321759cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69dd27bd-48ab-4340-af35-d146a707ed37",
        "cursor": {
          "ref": "438d418d-d9a9-4cd5-9f5b-4c3217374d87",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "34e9af92-aa03-4854-a3d0-18afbf1b5998"
        },
        "item": {
          "id": "69dd27bd-48ab-4340-af35-d146a707ed37",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "565402de-ad36-4eda-a61b-f434025d4261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a487bf-d354-4be9-9c80-6615827e533f",
        "cursor": {
          "ref": "4117da0d-af84-44ae-9731-74caa6df361c",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "10676894-f92f-455c-800d-33ee1e37ae4f"
        },
        "item": {
          "id": "01a487bf-d354-4be9-9c80-6615827e533f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0106aee5-318a-459b-b086-05c20ca57c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7ced75-3bb3-4570-9384-9a95e10b7d11",
        "cursor": {
          "ref": "03e3fc4b-2371-4268-b084-b4450bf2280f",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2358d83f-35c5-4bbd-95bf-d02f2064b27c"
        },
        "item": {
          "id": "ce7ced75-3bb3-4570-9384-9a95e10b7d11",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3e8971b3-2b09-42a1-b0d8-1ef9504e9700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab8c850-bc83-4477-8b51-5707145c8252",
        "cursor": {
          "ref": "07725e68-8096-41d5-90eb-0daffdd1a650",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9ddada1a-13a0-46d8-864e-37a24d697bc8"
        },
        "item": {
          "id": "2ab8c850-bc83-4477-8b51-5707145c8252",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "201a5910-b497-44aa-a9be-9a62cf0e7195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b183b1-64c4-4ba7-ba1b-555c85c71b35",
        "cursor": {
          "ref": "1a6a6989-f40e-4812-8627-258174e3a6d8",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "fb8ce453-806b-46e4-9c5b-5b4d12253716"
        },
        "item": {
          "id": "a6b183b1-64c4-4ba7-ba1b-555c85c71b35",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ede3ad7d-1142-4995-85b8-81c56bc47b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437ba72c-8fd9-4e79-b4d4-39256ef95fab",
        "cursor": {
          "ref": "b2fd0638-b62c-4c3c-8406-2c6b47889403",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7fc8cb89-6177-4c27-8450-7416ed8d138c"
        },
        "item": {
          "id": "437ba72c-8fd9-4e79-b4d4-39256ef95fab",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d81e503d-0323-4c03-9f65-3386d44955cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e37cd0-3b72-447f-9e60-0c0855ec961d",
        "cursor": {
          "ref": "7d2e9ed9-9d60-4aa7-85ce-7c2bd697c4fe",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "686c63c7-accd-4bed-9f8e-39b94f2071c8"
        },
        "item": {
          "id": "02e37cd0-3b72-447f-9e60-0c0855ec961d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "eca3077c-13b2-4c90-9dea-fb67be3c34df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa67d791-835b-480e-b503-4b34d7bc6d71",
        "cursor": {
          "ref": "ae190b1e-df2d-4bb2-b666-df548f4e076c",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6dbfd112-c18c-4ea3-9dcf-7cfb9860bb5b"
        },
        "item": {
          "id": "fa67d791-835b-480e-b503-4b34d7bc6d71",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5146fd2d-ed2a-4d40-a487-eba8b10cf9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f220f63-a0fb-46ef-9895-25ed623936f0",
        "cursor": {
          "ref": "fc372218-4a7b-47b2-8d86-80bacaea0690",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2c268dbf-3710-42e0-9cf2-08148d8ebe88"
        },
        "item": {
          "id": "8f220f63-a0fb-46ef-9895-25ed623936f0",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "25541b5b-146d-4d9f-a5d1-a8ca128570d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a979652-e317-4a8f-84eb-cfbca245b17d",
        "cursor": {
          "ref": "c954d971-5a84-4cc9-be75-a34f347b3f0a",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a399d22e-c496-4151-940d-b1c0d1418e3b"
        },
        "item": {
          "id": "7a979652-e317-4a8f-84eb-cfbca245b17d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c05a8f3d-f82f-46fc-a54c-f23e3b111123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9d0399-4dde-4f3b-821f-33dca1435e6c",
        "cursor": {
          "ref": "53bfa48e-fe84-4b44-a114-81441cd9bb67",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f193a1c5-2fdf-464a-b140-7def483b4433"
        },
        "item": {
          "id": "5c9d0399-4dde-4f3b-821f-33dca1435e6c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8cc76b1b-96cc-4171-8907-d1439f8efe9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d6a3ad7-7e14-432a-ad5e-fee46720c3c5",
        "cursor": {
          "ref": "4752a390-ac6d-4ea8-b28b-b4078ac3b432",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b1907404-336a-4349-8d1f-c23fd4aa8b17"
        },
        "item": {
          "id": "6d6a3ad7-7e14-432a-ad5e-fee46720c3c5",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "efd43c88-63d0-4496-9cb0-a012a7b55ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab56eec4-33e3-4808-bed8-0f20f9a52d7d",
        "cursor": {
          "ref": "31b55a38-b778-4a9f-8f41-8155820b4f62",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "83807a98-e790-46f2-8c9e-e338cae0e6d3"
        },
        "item": {
          "id": "ab56eec4-33e3-4808-bed8-0f20f9a52d7d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "80d6ee2a-902c-403b-a907-de75b0e0b6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4393315-a622-41d7-8c2e-c976a2fccd79",
        "cursor": {
          "ref": "ba5a7e67-c7a3-49bf-ac73-7d5d37ddbafc",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ecd931d7-c8a0-4c36-84f7-e09b476a3ae2"
        },
        "item": {
          "id": "b4393315-a622-41d7-8c2e-c976a2fccd79",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e5143528-8090-4ba8-9d76-159ada5c9d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4505849-3d16-4c66-b355-d142e7b16c2c",
        "cursor": {
          "ref": "7a3e7d56-8cf4-44a7-baa4-305513cb2f48",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8d5a41f8-c57c-4d72-a847-6ffbbf89fae3"
        },
        "item": {
          "id": "f4505849-3d16-4c66-b355-d142e7b16c2c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "13fd324a-814a-4ff2-9885-579c741051cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b67c6f6-1074-418c-bce6-3dad1c40c260",
        "cursor": {
          "ref": "58947424-08ec-43fa-a761-bbc1646a270d",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "13b9cbbf-09f5-4d54-8d40-6d8121b5b928"
        },
        "item": {
          "id": "1b67c6f6-1074-418c-bce6-3dad1c40c260",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "220bad1d-89f9-43c1-8cce-ee8f90d0a15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d18503-5204-4d00-9627-19562a254009",
        "cursor": {
          "ref": "c04676e6-4def-45a3-ba3d-a55c2f3693ea",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "20b80364-2be4-44c4-86d7-5696267466db"
        },
        "item": {
          "id": "a0d18503-5204-4d00-9627-19562a254009",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "1852275f-6414-4a15-ae85-c6370106adee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82b4c0a-6470-409e-bd5e-e9a65b3a1d51",
        "cursor": {
          "ref": "5eb35aff-3fba-4187-b179-17a65f1609e3",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d8bcc743-1704-4014-865d-d0f97906b387"
        },
        "item": {
          "id": "c82b4c0a-6470-409e-bd5e-e9a65b3a1d51",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ff959d5c-9d33-43f6-8a3e-be4737053acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6db1672-f4f4-46d5-b37f-87ca9ede4352",
        "cursor": {
          "ref": "65d34425-d42f-484c-a3c9-5ee8b27fa300",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "01bccd39-72c7-4f04-a727-7a15deb0567e"
        },
        "item": {
          "id": "a6db1672-f4f4-46d5-b37f-87ca9ede4352",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "2d77298d-b482-4487-abb5-5a969c1e5abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57349c54-4ac1-4e9c-b7a4-3a7792fa71f8",
        "cursor": {
          "ref": "d092e63a-9d12-4c6c-af8a-924a927196b0",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c45a7040-881d-4dd2-a2a5-310448988c30"
        },
        "item": {
          "id": "57349c54-4ac1-4e9c-b7a4-3a7792fa71f8",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1db8af38-0c59-46da-a635-f0ea52c2a37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9090214-7317-41da-b63d-bf74b80e87de",
        "cursor": {
          "ref": "12516e3b-8804-4e67-921b-6d4d8c0bf2e3",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7b4259b0-767d-4fcc-aaf0-f907c55c15e7"
        },
        "item": {
          "id": "c9090214-7317-41da-b63d-bf74b80e87de",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "fe3ef5ea-2f6f-4ec8-8267-8982c122f90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ca4486-887b-4a0e-b2d0-795fbb2c3c54",
        "cursor": {
          "ref": "d365772c-b794-49f7-92ee-8cb388de4209",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "028b62e2-8747-4477-ab21-ed6c8e21b626"
        },
        "item": {
          "id": "08ca4486-887b-4a0e-b2d0-795fbb2c3c54",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8905b30b-c1f0-45a2-943c-3365d638e79b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e295bd40-f393-4029-92b4-a3b86c502103",
        "cursor": {
          "ref": "77969e9a-6d72-42a5-a0a3-ce3a4ab5a0e1",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1aaf8ac5-25f8-4511-9535-e8e49b5bbfe3"
        },
        "item": {
          "id": "e295bd40-f393-4029-92b4-a3b86c502103",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d5463788-ada7-443c-be4e-7bd96227299c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dce6b45-bc7f-4548-8d7a-9a8b7a986cd7",
        "cursor": {
          "ref": "0492b86a-03d6-4628-a0a2-b3c9c0990d7d",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "17f533af-d045-44c3-aa03-e3a52fa1d5a3"
        },
        "item": {
          "id": "9dce6b45-bc7f-4548-8d7a-9a8b7a986cd7",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "782ca776-96d1-4196-bd52-771993962f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3269de-42ee-4e22-bbaa-0ed61f4a0dce",
        "cursor": {
          "ref": "a2d622e3-82eb-43db-a06a-d508723732c7",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8ec58e59-29cf-4246-bd01-2cdaedeb659b"
        },
        "item": {
          "id": "6e3269de-42ee-4e22-bbaa-0ed61f4a0dce",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d0a4b439-d2e4-4ba1-9ef5-63f35a749f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280cf903-11c4-44b8-a873-8958b90ac88d",
        "cursor": {
          "ref": "952b47da-1e6f-4621-8930-a3f7231f72f4",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "26004a53-2d3e-44a2-8490-8ecf9acf9ef8"
        },
        "item": {
          "id": "280cf903-11c4-44b8-a873-8958b90ac88d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d44d89fe-be84-4509-9ce5-8a2de03e6cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aacc43a-e0f4-4a98-8454-e3203f5196ae",
        "cursor": {
          "ref": "077b3aae-0efc-4b0c-934f-c6233445bf3d",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c96dd1bf-4548-4615-9c20-a0fcfdd64cba"
        },
        "item": {
          "id": "9aacc43a-e0f4-4a98-8454-e3203f5196ae",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1877d30e-ff7e-4b7c-bf93-161d005334c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51fbb403-1768-4cf3-ab6a-bbf1baa6ab53",
        "cursor": {
          "ref": "4a845be2-5ba9-448e-89b0-2c47090d2ca0",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8b03c49f-41ee-42b2-a2d7-cce0752c01c4"
        },
        "item": {
          "id": "51fbb403-1768-4cf3-ab6a-bbf1baa6ab53",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "eb98dd80-0bf0-49d6-a99b-733a7e0e79f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04ce762-fb8a-4a4e-9b13-560c2d53e26a",
        "cursor": {
          "ref": "84540acb-9a6a-4449-9b55-7f0417f2c6c0",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5ae22e2c-dab1-4b87-a33f-d525f53b8afe"
        },
        "item": {
          "id": "a04ce762-fb8a-4a4e-9b13-560c2d53e26a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e8e46ec5-3894-4fd0-9828-f6512198fec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bde05b-a215-46ab-aa01-221355fe98d2",
        "cursor": {
          "ref": "96435d99-7fde-4c8a-8506-cb4b25f3aae7",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "83eb0d6e-c2ec-4835-b594-bfd2d2ad99ca"
        },
        "item": {
          "id": "a6bde05b-a215-46ab-aa01-221355fe98d2",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "61d32293-5f12-4a18-8c24-3719a7972d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4ee8cf-7c4f-468e-951f-69b48d3c220a",
        "cursor": {
          "ref": "7c7937d4-1166-4338-b4ad-bbe5c5c19142",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "892e6f24-a556-4b92-9916-eacb9d74ff17"
        },
        "item": {
          "id": "ac4ee8cf-7c4f-468e-951f-69b48d3c220a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3c32d20e-2a63-42b7-9c88-d1534ddea9d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c524f0-7f3e-4a0c-8dd7-7a47986579c0",
        "cursor": {
          "ref": "7b29ad7b-2d5b-481e-951f-d005d6229918",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0f6d9393-efa5-448d-9af0-97e485ee1936"
        },
        "item": {
          "id": "69c524f0-7f3e-4a0c-8dd7-7a47986579c0",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5e474dc6-9a25-47c2-b018-663bd2c9f861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71087f64-27fb-45a8-bba6-c4bbefb73f05",
        "cursor": {
          "ref": "800f143b-8098-4bce-a530-801b03507725",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "84aad96c-9509-4c36-bc28-4a1b728af8b1"
        },
        "item": {
          "id": "71087f64-27fb-45a8-bba6-c4bbefb73f05",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e09228c3-4f83-4f0b-ab32-b79dd8c9645c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e85902-37f7-4d2e-9c83-dcf33f04440f",
        "cursor": {
          "ref": "d15c9c31-3d0d-4c51-9e28-40d8d519a80f",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "089b3470-e12f-4e90-895a-5279d17ba63f"
        },
        "item": {
          "id": "49e85902-37f7-4d2e-9c83-dcf33f04440f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9a80bf5c-9bf3-42f7-b93a-11475ccba65c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4477311-a8db-43e1-8938-d891c9975441",
        "cursor": {
          "ref": "05cd5d20-f87c-4e9e-8651-9eb65052fd7e",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d2f22d4a-55a3-4c20-91d2-aba6eb75b34f"
        },
        "item": {
          "id": "a4477311-a8db-43e1-8938-d891c9975441",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "06333b76-4ae0-4750-9f6e-65da6098f6fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07708af6-7463-4ae2-90ff-f96ba5c409b5",
        "cursor": {
          "ref": "c22901a0-1028-4637-ab3b-7ab474e2c4c7",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "fc3cc715-fc1a-4258-a4b1-69b453f811ab"
        },
        "item": {
          "id": "07708af6-7463-4ae2-90ff-f96ba5c409b5",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9ca43322-952e-4d44-83ae-a2916cc2e3d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53584a14-ca7e-4d37-9d60-09ed31cabf34",
        "cursor": {
          "ref": "c237608d-e1ca-46e7-8cb5-f3ae02c27a07",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "94d375de-877e-4f0d-a728-f3f82690306a"
        },
        "item": {
          "id": "53584a14-ca7e-4d37-9d60-09ed31cabf34",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "98ee767f-4028-46a8-8ffb-f40a41134e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9bb17b-dad9-47cc-9c4f-d4ea16d85065",
        "cursor": {
          "ref": "72d065d5-9c5a-40ce-864d-82a54a309962",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8d8850c1-87c7-442f-aec4-b844287e356c"
        },
        "item": {
          "id": "ea9bb17b-dad9-47cc-9c4f-d4ea16d85065",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "25438afd-b6ae-47d6-9032-0efaed03f18d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9565923d-1daf-4f4c-ac95-03070b4f5975",
        "cursor": {
          "ref": "9daba8ed-2a19-4ea1-a53f-1a6bbf0f594b",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "687714f6-12ff-4739-85b2-11dd619f8a77"
        },
        "item": {
          "id": "9565923d-1daf-4f4c-ac95-03070b4f5975",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9bb8aa62-26e9-4964-8689-c21ee78f346e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e400a071-b77c-490d-a566-a382fb93868a",
        "cursor": {
          "ref": "086dbc54-1a59-41e2-851a-ece5bfd6995c",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a221705e-f595-4e84-ae7b-c9266adbf6e1"
        },
        "item": {
          "id": "e400a071-b77c-490d-a566-a382fb93868a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1be2661d-370d-473c-8d22-9ff6211c1edc",
          "status": "Created",
          "code": 201,
          "responseTime": 7370,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c012f9d-2827-4802-a093-7862606de715",
        "cursor": {
          "ref": "d9f5c1f8-b92c-47c0-8e78-e2fd015c4e01",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "77da631f-9491-4b35-8cf8-e2a3a52de40b"
        },
        "item": {
          "id": "2c012f9d-2827-4802-a093-7862606de715",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4b7dfcc0-a54e-4111-a473-ea38a39dde24",
          "status": "Created",
          "code": 201,
          "responseTime": 6472,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "94cf0d8c-f609-4f5b-9500-c4e662870a0a",
        "cursor": {
          "ref": "1536e129-61d0-4c1e-b587-c715b08fa1c5",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "36ace5fc-3c47-4aff-8203-7619d5317739"
        },
        "item": {
          "id": "94cf0d8c-f609-4f5b-9500-c4e662870a0a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c254f1ec-345b-4c66-90c0-d1a934017499",
          "status": "Created",
          "code": 201,
          "responseTime": 6675,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "084cd2d9-143e-45a7-9e53-833829d52d1e",
        "cursor": {
          "ref": "a3baf00a-4bd6-4d4a-8240-67d20238ee6a",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "30f28b58-00ac-43c5-8df1-f5acc8f91cc3"
        },
        "item": {
          "id": "084cd2d9-143e-45a7-9e53-833829d52d1e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "be58321d-a216-4b55-9062-3d675305e323",
          "status": "Created",
          "code": 201,
          "responseTime": 7214,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1e4ec4-bd9c-40e6-9ea4-68c8c8faaedc",
        "cursor": {
          "ref": "55f568d0-c5f4-4d5b-bb74-b3f2f790decf",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "cc3e2a96-de36-42b3-9a4b-f977451b2fe5"
        },
        "item": {
          "id": "5c1e4ec4-bd9c-40e6-9ea4-68c8c8faaedc",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "601e6de7-8597-4977-abfb-5665af0b79c1",
          "status": "Created",
          "code": 201,
          "responseTime": 7166,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c325f47-0974-4e4b-afef-033cb9508f17",
        "cursor": {
          "ref": "c11d9fbc-eb57-4fd9-99e4-1b98e2661561",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "75881431-30b0-465d-8cf1-4758d141562f"
        },
        "item": {
          "id": "2c325f47-0974-4e4b-afef-033cb9508f17",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a12d772a-e0a4-4be4-ab9b-fdd4b7fb7b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "47b16322-4fc9-4683-9f1f-a283ffa97631",
        "cursor": {
          "ref": "92961040-dfbc-41fa-8666-5ad4801d6516",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e4337b93-410d-49a8-9f29-d3d5959b4725"
        },
        "item": {
          "id": "47b16322-4fc9-4683-9f1f-a283ffa97631",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0216153f-990f-48a0-b6d9-93da26c43048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0311bf-0416-42d4-aa3a-3e53a896e172",
        "cursor": {
          "ref": "546e8ff1-5c28-40b1-93b0-8e19a9729135",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ba9209b0-493d-4b58-8d57-15f63297b1df"
        },
        "item": {
          "id": "4a0311bf-0416-42d4-aa3a-3e53a896e172",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a01836da-fa68-474a-b31e-4008b35f163a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabe3bb0-ba3b-4cf2-b6c3-6f369edd2859",
        "cursor": {
          "ref": "3b7046a5-b39a-4f9a-9fbd-29aaefc8110b",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7470e5e7-bac0-4c8a-b287-f51c0499e424"
        },
        "item": {
          "id": "aabe3bb0-ba3b-4cf2-b6c3-6f369edd2859",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2162f4dc-3030-41d5-8373-e5ff80954264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d260b55f-8a32-4c9e-95a0-f2e36f8c3f81",
        "cursor": {
          "ref": "66f3c681-a44a-4620-93a1-b1ee9459519f",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2dc9a519-332c-4387-9ef1-74589ff9b526"
        },
        "item": {
          "id": "d260b55f-8a32-4c9e-95a0-f2e36f8c3f81",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f59c99c3-9e36-43a4-bebd-32f6f45f6f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a26e41-ee46-4047-9266-1dd8724d1ea7",
        "cursor": {
          "ref": "1adb5808-ab50-4c7f-ae25-b406b1ccb1eb",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1085e7a1-3a41-4ecf-aeec-3206222d84f6"
        },
        "item": {
          "id": "d4a26e41-ee46-4047-9266-1dd8724d1ea7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "928cbf1e-5473-4598-99f1-cb951c4e0947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b590f4-04d9-4d8d-88c1-42d703378df9",
        "cursor": {
          "ref": "60539fd7-dfcc-43f8-ad8e-ab67d36aa82c",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "85095118-e4ae-4617-9b2d-58f941e017a1"
        },
        "item": {
          "id": "b5b590f4-04d9-4d8d-88c1-42d703378df9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b419c6c4-734f-4ff4-8f26-0e1d7aa8df92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67208545-13dd-4052-b265-060efe96a0a7",
        "cursor": {
          "ref": "40f33eb5-c650-41f6-ba54-f2c9a7278178",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8ba3afc7-07b6-4fce-acb7-1ce2a241ef47"
        },
        "item": {
          "id": "67208545-13dd-4052-b265-060efe96a0a7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e1d36463-6290-49a3-a54a-e625372ff37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b18834-fd87-40c9-ba93-c67f66669692",
        "cursor": {
          "ref": "4f93e936-1dfa-4c79-bacf-158ce3df838e",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "39b0bce1-8e12-461d-92b3-5cca4062d876"
        },
        "item": {
          "id": "f2b18834-fd87-40c9-ba93-c67f66669692",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "50df2fff-5224-4779-b406-57314bda2b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b832b1ea-3677-4720-8b3e-b6add22f88bc",
        "cursor": {
          "ref": "9a3f63bb-9118-4eb3-af68-494a37fb4c30",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "72def664-b1ad-4612-ac77-981aacbf415b"
        },
        "item": {
          "id": "b832b1ea-3677-4720-8b3e-b6add22f88bc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "de28077e-326e-4f9c-b160-f230705ced04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d76e9e4-ee35-4130-949d-7bbf1fad5886",
        "cursor": {
          "ref": "6610127d-ced1-4e1b-bd5f-d8f2d1448283",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "332a29b0-faf4-4305-af91-89fe5e2c19c2"
        },
        "item": {
          "id": "5d76e9e4-ee35-4130-949d-7bbf1fad5886",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9b0fc41f-275f-4df6-8a04-e6909c5a986e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8887d7fb-1996-49c0-a580-2db164a28e07",
        "cursor": {
          "ref": "fd8e2c73-25e8-4ed2-97fc-a0682899e7fb",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "adbdac43-75c8-49f4-91f5-e4dd427ddde1"
        },
        "item": {
          "id": "8887d7fb-1996-49c0-a580-2db164a28e07",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9e04e873-cd40-48ac-9942-63fc6c3fa365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a67124-aa69-4447-ad64-1bceba374c6a",
        "cursor": {
          "ref": "78ce677d-d91a-4570-b402-b05b52114bcd",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5f093e49-8a51-4425-b53b-827c33dd3fa5"
        },
        "item": {
          "id": "75a67124-aa69-4447-ad64-1bceba374c6a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "381820c7-8131-43d9-af28-01d1648e5855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "894c1e9e-fab6-4ad7-b82a-9b02b97a8fc4",
        "cursor": {
          "ref": "5a3f1525-eda3-4da8-bd87-430d05484b40",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6150d82d-da17-4a8f-8a8a-0dd76bfd039f"
        },
        "item": {
          "id": "894c1e9e-fab6-4ad7-b82a-9b02b97a8fc4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "841cbea3-c306-4e00-a017-4e0292b566a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc6cdbc-2c8a-4ab7-93a6-c6a8cf3d74de",
        "cursor": {
          "ref": "df6257b2-f2f9-4ced-afba-6a6caaf63d0c",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "10903a99-f17b-4053-ac5d-5c36dc08a4bc"
        },
        "item": {
          "id": "edc6cdbc-2c8a-4ab7-93a6-c6a8cf3d74de",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1bbdc6e2-c3f7-45ba-8992-a1dbd5e7bc5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fef64a4-14c4-42ff-b1c3-1d195249559b",
        "cursor": {
          "ref": "7b115fb8-b8ce-4105-a308-f8084167d3f7",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "2ee31837-a3cc-4c24-b6e0-49473620262a"
        },
        "item": {
          "id": "0fef64a4-14c4-42ff-b1c3-1d195249559b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f1eadd33-6fc7-45c0-bcdb-5de877b290c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495a5a7f-3710-483d-b264-e3787e34e860",
        "cursor": {
          "ref": "091a2a16-5a1c-4b2f-aef3-c9321b80c5bc",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "78bd3bf1-a842-4656-868c-e1f58128c7f6"
        },
        "item": {
          "id": "495a5a7f-3710-483d-b264-e3787e34e860",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0681f8b3-fcda-4460-abbf-a542c01bedef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03abfcbc-3eea-4b17-b009-ccfdf502fb71",
        "cursor": {
          "ref": "7b0a2859-e6c7-4cda-ac2a-180402eeff5b",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "94b040b4-8e1d-4ecc-a3a8-1a351fb077c6"
        },
        "item": {
          "id": "03abfcbc-3eea-4b17-b009-ccfdf502fb71",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a3bca17e-c0a6-4c53-8b9a-5b218019494e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8da5a2-ba7e-4456-a3d8-da6d0b57dec0",
        "cursor": {
          "ref": "59ce99a4-6e35-4bf9-9df5-f169520aa1aa",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c90ce1ce-10ca-40c1-be3a-849ed2365d95"
        },
        "item": {
          "id": "7b8da5a2-ba7e-4456-a3d8-da6d0b57dec0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "99e32e49-2252-475d-ae3b-491517222a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6a5c3f-8912-47bf-a5cc-48a16f93649c",
        "cursor": {
          "ref": "3904c6e4-281d-43c5-a37f-dfd3931ccd58",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c628256c-1723-4c6e-bd63-64b9fcbdebc2"
        },
        "item": {
          "id": "0d6a5c3f-8912-47bf-a5cc-48a16f93649c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "39f9286c-4c03-4b28-bc05-10b488e2f764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f33aa9-1cf4-41d3-97e1-9145a713b6ab",
        "cursor": {
          "ref": "d380001f-8936-4a42-8b20-cbae290738c3",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "25815fc2-fe4d-464a-b2d3-dd6efa0f0f14"
        },
        "item": {
          "id": "73f33aa9-1cf4-41d3-97e1-9145a713b6ab",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2ade0d55-869c-41c3-8742-b800a2e939f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a6f730-15b0-4d31-a316-bb23d82b5e49",
        "cursor": {
          "ref": "c04cbd7d-9df4-4740-b620-4ffea13832cd",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e831713b-5714-40cb-9ae7-be9cabde2750"
        },
        "item": {
          "id": "66a6f730-15b0-4d31-a316-bb23d82b5e49",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ec908387-a819-464e-9d90-9af7972e3d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5854adb-b0e3-44e9-b447-bdfcf700733d",
        "cursor": {
          "ref": "62151d16-e5b1-4ccf-ab15-28cc18f66b66",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "67166866-526d-4dfa-8c92-46d5861692f8"
        },
        "item": {
          "id": "b5854adb-b0e3-44e9-b447-bdfcf700733d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9dfa04e1-888e-4d17-bd03-683e89f424c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4021c684-3cc6-4315-b2e4-516b6af65041",
        "cursor": {
          "ref": "3b5e31e3-e0bc-4e03-88b1-25c0e243173b",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "541a87ac-b52a-496c-baed-25067b382253"
        },
        "item": {
          "id": "4021c684-3cc6-4315-b2e4-516b6af65041",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "eadb8651-e9f7-4a53-9ae7-cf450027b692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237a29be-5c18-4683-904f-d3b40bb07e18",
        "cursor": {
          "ref": "585282cb-c78f-44ee-a967-0e7436193824",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bc3b8c50-8bea-4ef5-957b-c8865a3abdda"
        },
        "item": {
          "id": "237a29be-5c18-4683-904f-d3b40bb07e18",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e437bbaf-ae26-475e-b2dc-e0a09ab99f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5212831-ccf5-4107-bbf3-95f0be8018bd",
        "cursor": {
          "ref": "8c74a23a-ac8b-40e1-a60f-40b7e882e642",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5d8ca590-72db-4416-b5cd-a6c71dd05c07"
        },
        "item": {
          "id": "f5212831-ccf5-4107-bbf3-95f0be8018bd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6673faeb-f11a-40fa-8d4a-517a7a0d92f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d847db2b-0772-45d7-8e48-870ce9519cdb",
        "cursor": {
          "ref": "d87589b5-9123-4b5b-90cf-7dfc52511edf",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2caacaf3-77c4-4663-9fd3-4967750cec24"
        },
        "item": {
          "id": "d847db2b-0772-45d7-8e48-870ce9519cdb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "91f6888b-12d5-4512-81a8-9055db553971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35cac67f-1d6b-43fc-a063-8ca2e84b2972",
        "cursor": {
          "ref": "7d49a8ee-5dee-468d-9d09-4079dbd1db6a",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3af649d9-4d2f-405d-a521-e579e5300606"
        },
        "item": {
          "id": "35cac67f-1d6b-43fc-a063-8ca2e84b2972",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "297d8c96-bd6a-46e0-a22e-89337be88eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace376da-aa26-49a2-9649-c25a4396f630",
        "cursor": {
          "ref": "0330894f-6bd7-4536-921f-788b39e34815",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "083d352b-1c3b-41d3-9533-a84615e27a3c"
        },
        "item": {
          "id": "ace376da-aa26-49a2-9649-c25a4396f630",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c618c193-4761-409b-ab6b-8fcf94e8575c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1766969-8e00-4c2c-ae44-3185eb3e88fa",
        "cursor": {
          "ref": "828522ec-a367-4fa2-a462-f63c6a5ee268",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "cab5754c-8a88-44f7-8375-1c0be6ba3ef3"
        },
        "item": {
          "id": "d1766969-8e00-4c2c-ae44-3185eb3e88fa",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "84241d03-66a2-476a-b0ad-2c3c8accdea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6bb508c-14d7-4f54-9bc4-7efcc7fe8c61",
        "cursor": {
          "ref": "b114c672-e9cd-44f6-b83c-ec09d4679673",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b624a1ae-2279-4371-a90f-0ba242e29c8e"
        },
        "item": {
          "id": "c6bb508c-14d7-4f54-9bc4-7efcc7fe8c61",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4e740c0c-c56c-4ac1-8421-dad03927af83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb2ea42-0f3d-46a2-b922-0db3af70cc21",
        "cursor": {
          "ref": "3e233106-74e3-42a7-b00f-886d2cf254b6",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9835fa94-64b8-4bfd-946c-c65c75e438b9"
        },
        "item": {
          "id": "dbb2ea42-0f3d-46a2-b922-0db3af70cc21",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "aaaa12af-b3f4-4d2c-9692-eb2181242e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b57900-c9f7-4c5c-bd1d-ab3098f6eb6e",
        "cursor": {
          "ref": "096e1ed2-567a-4437-b275-365678e55eab",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c7b506dd-3de0-4a9f-9f3e-bba2d152c065"
        },
        "item": {
          "id": "19b57900-c9f7-4c5c-bd1d-ab3098f6eb6e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "18326e05-41f8-4d33-9c80-fe862bb49b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38684b8-c7f3-4935-aca0-d37af64d2255",
        "cursor": {
          "ref": "9e967249-4b0d-4076-9ccf-265e324e4849",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "243b3432-93b3-4ae5-adb1-0d12ae0e25bc"
        },
        "item": {
          "id": "b38684b8-c7f3-4935-aca0-d37af64d2255",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b8046fb7-6ef0-4d17-ba4b-0858454de488",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26617d5-9c7b-4a81-a471-559163724be5",
        "cursor": {
          "ref": "472a7c8a-a1b8-483b-8a76-49b9a244c60a",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "62d96e2e-09dc-4d31-a767-6c3175237481"
        },
        "item": {
          "id": "c26617d5-9c7b-4a81-a471-559163724be5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3598f004-20ef-4227-ab39-f3ebee1e2c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92685e52-1511-42ad-9a74-ded84c96a87f",
        "cursor": {
          "ref": "74b803dc-51bd-4fca-ac38-3ec2eec4347d",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c6ab7bb5-befe-43aa-aecd-968d18ef88c4"
        },
        "item": {
          "id": "92685e52-1511-42ad-9a74-ded84c96a87f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "40ae3e86-5e99-4202-9183-fc24f0d47530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f061c8c-3b0d-4e08-9f83-90b5094ce0f1",
        "cursor": {
          "ref": "c3eaf29a-4f01-48fb-aae2-24883244a72b",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "62fd2611-3938-49e5-a135-cc4588560b90"
        },
        "item": {
          "id": "2f061c8c-3b0d-4e08-9f83-90b5094ce0f1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "030f366d-196c-4087-a294-cdb4a1526b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430aef52-dee6-4236-abcb-4fa1a8bf8b81",
        "cursor": {
          "ref": "9bfacfc0-fb25-4c79-8f17-61d8d2d55d3a",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "84a2a94f-07e3-4d24-8b02-870da172c18b"
        },
        "item": {
          "id": "430aef52-dee6-4236-abcb-4fa1a8bf8b81",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ca841be2-6d69-45a7-ab8b-85c0b944a85f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89cc0a6c-4265-4bb8-8121-21c53949611c",
        "cursor": {
          "ref": "0908f307-bbfe-44b2-b48d-6fb8ee681f1d",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4c4b0bfb-a694-4f6a-b6b6-44a0d4cc659b"
        },
        "item": {
          "id": "89cc0a6c-4265-4bb8-8121-21c53949611c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0ce804c3-279a-46c4-a7ac-da578c0f5f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4075c13e-146e-4014-b5cd-2bafe6315a02",
        "cursor": {
          "ref": "63747556-3b67-430a-9628-b058ab8f2582",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "53a9ca2a-5518-4513-927e-7627823ebc4e"
        },
        "item": {
          "id": "4075c13e-146e-4014-b5cd-2bafe6315a02",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1c21f631-0ddc-44c4-bd76-acd5cfa8d7b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4b3f8c-2574-4fba-80d7-890f99871e3f",
        "cursor": {
          "ref": "2c553d83-046c-4861-8d07-28164cf27d8f",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f258b3e7-18e4-4f56-99c6-4a14bbc20d5a"
        },
        "item": {
          "id": "4d4b3f8c-2574-4fba-80d7-890f99871e3f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "14e975de-5217-4e9f-b6ff-a7c9b5364b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969bd002-3edd-4e57-8e2f-af74f916a720",
        "cursor": {
          "ref": "0f2d250c-431f-4276-8710-6c225f6c18eb",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6a69061a-2343-4fa5-a77a-d93b483d943c"
        },
        "item": {
          "id": "969bd002-3edd-4e57-8e2f-af74f916a720",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f6f63a05-2c74-464b-b6cb-dac296622471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414726e6-132c-41df-af5e-d82346bb558c",
        "cursor": {
          "ref": "a7474d17-06af-4de3-94d3-d2e643c4e5c6",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "90e9dacb-75d5-4ed6-8305-9f418f7f5fd6"
        },
        "item": {
          "id": "414726e6-132c-41df-af5e-d82346bb558c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "199fd53f-52bf-40da-9568-94ef05fa74f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f1e758-ba5b-4fb7-87ff-ba6b4939fd40",
        "cursor": {
          "ref": "999c0a5a-2f76-4e1b-b22c-c8fe35ac1230",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7b460f1a-136b-443e-9aa9-9a3eb7b68943"
        },
        "item": {
          "id": "69f1e758-ba5b-4fb7-87ff-ba6b4939fd40",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f8bd10d0-4c8a-4fa0-b7b4-c75f356346b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d2bcba-e59e-476e-8e4c-696740206bd4",
        "cursor": {
          "ref": "578c1bf6-8c70-48e8-9d42-c4878a6b491b",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d2e173c1-7b64-4a00-be2f-777fd55eb666"
        },
        "item": {
          "id": "c7d2bcba-e59e-476e-8e4c-696740206bd4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a737b61c-88b6-4501-8f0a-a2b0505a0ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddcb00a1-75da-4033-8d1b-49e49beeaa2c",
        "cursor": {
          "ref": "372fc159-5b03-4987-a63b-8420840f4d5e",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4dac9d35-a5cc-42d1-aff3-1bf0af2d58f2"
        },
        "item": {
          "id": "ddcb00a1-75da-4033-8d1b-49e49beeaa2c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "feaeb750-12ad-4773-95e9-79d25de3c342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d40178-6e50-4262-80c0-43eca0b09c40",
        "cursor": {
          "ref": "7724f3a8-9abc-43d4-8f4c-d2912217c60c",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6915aaa8-7b70-496b-ab52-7eb0bef7a0e1"
        },
        "item": {
          "id": "54d40178-6e50-4262-80c0-43eca0b09c40",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3abb7d4a-699f-406f-b39c-45777d53b8a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e8d727-974e-4b25-9142-8f687c84ac0b",
        "cursor": {
          "ref": "bbb00e3d-681b-4962-87fb-0ae47f1fec6e",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "fe4e34e6-dd95-48f2-b428-e04ef8f3138e"
        },
        "item": {
          "id": "72e8d727-974e-4b25-9142-8f687c84ac0b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9ae80b1e-2c4e-4512-8c37-bd13dbb143d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d291da-a5ab-4776-9aba-ec660504d7d7",
        "cursor": {
          "ref": "b977ad0a-cc62-4b72-a743-9fbca792719f",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "879ddcc2-4ee9-48ca-a42d-dfa1fca9b906"
        },
        "item": {
          "id": "d4d291da-a5ab-4776-9aba-ec660504d7d7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e28378d2-267a-45b2-a17c-63f00e7a18bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c0d8ae-38e3-49f4-b36c-ada6696b2b25",
        "cursor": {
          "ref": "b4d88381-5aef-4fa8-89b3-c1abcdb1ae51",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d59d1a8b-e9f7-41aa-be20-7728cbd53506"
        },
        "item": {
          "id": "35c0d8ae-38e3-49f4-b36c-ada6696b2b25",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cc05a586-7130-40dd-9641-7669fd0e8320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3b863e-e2c2-4a53-9bd1-b5a970e17567",
        "cursor": {
          "ref": "a7a0a95e-7ac5-4403-bbff-243b12f4e8b4",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "18cf23dc-b4ad-436f-856b-9c85efbe87fb"
        },
        "item": {
          "id": "ee3b863e-e2c2-4a53-9bd1-b5a970e17567",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "426298db-ba73-487a-b1f0-fbf055b65753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58cc029c-b9b0-426a-8f5c-5cd4c758e78e",
        "cursor": {
          "ref": "c9cb1fe6-bb3a-4d34-a05c-091a051259f9",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "63a98267-52dc-4bd1-b0f3-fc5d34a9ee90"
        },
        "item": {
          "id": "58cc029c-b9b0-426a-8f5c-5cd4c758e78e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b4de6f13-304c-4203-9417-62679d9a3fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b3e6c2-a1c6-4de7-b5be-c93d510df35d",
        "cursor": {
          "ref": "465d301f-3295-4fb6-9997-15cc81ceb52e",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2196fc3f-7140-4802-a5b3-ce23c02f8757"
        },
        "item": {
          "id": "c4b3e6c2-a1c6-4de7-b5be-c93d510df35d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4eb0129a-af0e-49ec-a162-b7c9e2803ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a703ac9-7ab3-41b0-acea-159d31a08e19",
        "cursor": {
          "ref": "c0dfa0b2-925f-42b4-a336-4d3add1c05e3",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2085829e-882b-4ef6-bf34-05892964081f"
        },
        "item": {
          "id": "4a703ac9-7ab3-41b0-acea-159d31a08e19",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b94407ed-2b7f-4133-8a90-dd4aa33b9ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237abe0b-4320-4590-953a-326b07488fbc",
        "cursor": {
          "ref": "f00b0501-f663-4e84-87b3-339c3752e80e",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "df62dcbb-c62c-4808-8cbd-5e996312f753"
        },
        "item": {
          "id": "237abe0b-4320-4590-953a-326b07488fbc",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cbba65c3-55a4-4896-bb95-be701129a722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59142b4-5e1c-4f57-bf5e-6835b31fa8ee",
        "cursor": {
          "ref": "86b97ae3-fb7c-49ad-b058-d703b5353a0d",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0fa6d9d7-e321-4d6e-bf98-e9da6cbe6103"
        },
        "item": {
          "id": "d59142b4-5e1c-4f57-bf5e-6835b31fa8ee",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4d2e5120-9df0-482c-8a6c-d4feb807c014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe0c991-5df9-4e0e-a843-449d980a6cc8",
        "cursor": {
          "ref": "a73cfc96-854e-4101-843d-a7ef2616edd1",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b5af9281-0a32-4961-bef1-55f6d30c70e6"
        },
        "item": {
          "id": "afe0c991-5df9-4e0e-a843-449d980a6cc8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "664ec67f-2e59-465e-88cd-09032e9c61b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d952a1-9546-4c9b-9a94-4cd79345492a",
        "cursor": {
          "ref": "ffaacf72-b6f2-4da5-ab59-0ea941e3480e",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "758cf93b-7af9-45c1-8b45-ce029710d9ef"
        },
        "item": {
          "id": "c8d952a1-9546-4c9b-9a94-4cd79345492a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a9c4e6bc-405f-4748-b41d-f0271408aa01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da3c361-9505-4176-afda-77b92540564b",
        "cursor": {
          "ref": "09ddc747-e6af-4896-b9a5-4ac9ae268d69",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "eff335b6-f253-4674-9e33-baf434ea3541"
        },
        "item": {
          "id": "5da3c361-9505-4176-afda-77b92540564b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7571f65a-127b-4921-b408-f4b09a26a81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb91ea83-131d-418a-95fc-3490d2860ace",
        "cursor": {
          "ref": "1d564c87-4351-4264-b77c-d66202dfcb5a",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5d89a6ad-5b95-4906-8291-5f1dcfaa5d95"
        },
        "item": {
          "id": "cb91ea83-131d-418a-95fc-3490d2860ace",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b7f854ce-4310-4536-9230-c3a81de7a789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6c3089-1b51-48d5-a551-285d85bb8fb2",
        "cursor": {
          "ref": "dd7a5889-6571-499b-be80-8f8de2e03fad",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b9becb98-3f24-4c11-bd0e-9fd8dfe818e3"
        },
        "item": {
          "id": "5a6c3089-1b51-48d5-a551-285d85bb8fb2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "54212b55-5874-470f-9a97-028587e78f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d906af5-af06-44a5-b0b8-01804b0d3d2f",
        "cursor": {
          "ref": "1f3e91f7-7ad3-4461-8882-a1d03476ef4b",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "5b8f3294-19e9-45df-b849-1b920ba96fa8"
        },
        "item": {
          "id": "6d906af5-af06-44a5-b0b8-01804b0d3d2f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c58eb17a-53b9-417c-b49d-1fd605f25c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50558335-0234-44da-bde8-9ea3774184c9",
        "cursor": {
          "ref": "f84e76ec-d6bc-4c8f-af16-364b3814b976",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "62db1504-ff9e-4970-b3cb-8093f14c1599"
        },
        "item": {
          "id": "50558335-0234-44da-bde8-9ea3774184c9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d96c99eb-78a7-4fbf-abf3-e2611f80622f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0cd240-2c75-4d56-91cc-0d1896bc2f4f",
        "cursor": {
          "ref": "4d46d62f-5b8e-41dc-b473-780cf6e2a72f",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c6c92947-50d1-4ab6-995e-a07703c9d642"
        },
        "item": {
          "id": "6e0cd240-2c75-4d56-91cc-0d1896bc2f4f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "428005aa-25c9-4222-8ff7-ba0a8ff635ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1392e2dd-cb19-4594-b6b9-5bdb05be8aef",
        "cursor": {
          "ref": "835c9a44-cdf0-4b76-aed7-86030b915373",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "68f467be-0578-4d37-9150-e7bbb0e85aa6"
        },
        "item": {
          "id": "1392e2dd-cb19-4594-b6b9-5bdb05be8aef",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f079225b-1a63-46a7-b60c-5d2a30227e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599c5975-ccd2-402b-b1bd-ef6e36dba0de",
        "cursor": {
          "ref": "1644e2c8-97ec-4412-9308-14fa92b87617",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "99db9a7d-4529-45a4-8cbb-ed1d06880bbe"
        },
        "item": {
          "id": "599c5975-ccd2-402b-b1bd-ef6e36dba0de",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b071f18c-5803-40df-8467-2e3a74212fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79587b77-6c8c-4ee6-acdf-f7062e1551a5",
        "cursor": {
          "ref": "b1ecba25-96d8-4c1c-8f30-28071964d04b",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "931fa8b6-802f-4958-a5de-0c1bf2071c58"
        },
        "item": {
          "id": "79587b77-6c8c-4ee6-acdf-f7062e1551a5",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a0c82ec0-8870-46ae-a95f-ac9cf4759068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9294e6ea-1600-4669-b25a-1d7cfd83fe5a",
        "cursor": {
          "ref": "f644e2cd-77d0-4d27-895e-069687bc8a63",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0c5172d7-cb66-4fcc-821b-ff323d65d3e6"
        },
        "item": {
          "id": "9294e6ea-1600-4669-b25a-1d7cfd83fe5a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "83a8e82f-e98c-4a59-896c-c46cec5812da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190ed45c-7460-4940-87b3-2f7a6e900c38",
        "cursor": {
          "ref": "f063c524-3e9e-4b37-aa79-f32fe55ee88b",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "cc15408f-60fd-4acf-97ac-3dfda5429902"
        },
        "item": {
          "id": "190ed45c-7460-4940-87b3-2f7a6e900c38",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "58ab0dd7-1872-47f3-ba96-05f68a95c707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba67549e-abc2-4410-89a6-75a5a32580a8",
        "cursor": {
          "ref": "1575b7d7-aa29-4280-8842-cb5fa7c74808",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c44f7463-a027-4ee7-b1f8-99c9fea78c2d"
        },
        "item": {
          "id": "ba67549e-abc2-4410-89a6-75a5a32580a8",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d1645cdd-7b65-43e7-95ae-a7512274afe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc429cdd-8a70-4c21-a451-04a794e2b380",
        "cursor": {
          "ref": "4240dccf-ac65-407d-8814-0012351bc9b3",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "eba45958-4dc7-4a3a-b63b-49ba63f5a1b6"
        },
        "item": {
          "id": "cc429cdd-8a70-4c21-a451-04a794e2b380",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "47b6b5c0-2f8d-4bcf-b1f3-7b48ef81390f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b7ad2c-0159-495c-8a2d-91ce99009908",
        "cursor": {
          "ref": "5ad9b448-6bf5-46fc-9965-fd359fd9219d",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1bc767d9-88ee-4283-a2f5-e0a0868b78e9"
        },
        "item": {
          "id": "f7b7ad2c-0159-495c-8a2d-91ce99009908",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f2a98375-3315-4a82-b05d-92b041b20863",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "911d627c-36d5-43e5-bdd8-2af7d4456260",
        "cursor": {
          "ref": "7e0d7ad1-46f4-436d-9a16-636b2739732f",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "626e9ffd-a059-4ec0-a2bd-42c3fa7e5ce9"
        },
        "item": {
          "id": "911d627c-36d5-43e5-bdd8-2af7d4456260",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9c6269bd-2cda-4a25-89c1-19fd06d595dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b94a92-4ae9-4f07-b75f-eb81604766b6",
        "cursor": {
          "ref": "ca027b78-87a5-4b1b-b319-e32c729bec38",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "44f2ede3-d07d-4825-aa97-bc4c1673ba6c"
        },
        "item": {
          "id": "01b94a92-4ae9-4f07-b75f-eb81604766b6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3e9ccd3c-b79a-413f-99b6-d6ed13e6779e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44fce410-345e-46aa-9879-5533d641b8cd",
        "cursor": {
          "ref": "84afcd5e-af27-499b-b132-627a57ae7dca",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0eb3103f-1a6a-4b2c-9d39-1295a82b065d"
        },
        "item": {
          "id": "44fce410-345e-46aa-9879-5533d641b8cd",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2e25cd2a-0061-4342-8df0-3101cf07f5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280f99b3-f9ab-4c10-bff9-d2b89d5f7de0",
        "cursor": {
          "ref": "6ea3c9a5-5079-4863-bc3a-340f726f9b3e",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0eea8ec0-89e7-4f22-95c7-358156676ffc"
        },
        "item": {
          "id": "280f99b3-f9ab-4c10-bff9-d2b89d5f7de0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6cc59146-b44d-4c58-abd0-b85b697ef3dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9858d67-64c9-4bd9-b4b4-d02138f3a78c",
        "cursor": {
          "ref": "a58ad5a5-f999-4329-bd83-6aa837dc1e00",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "fdce7fad-3da5-437a-9ed6-a750e05bc1b6"
        },
        "item": {
          "id": "a9858d67-64c9-4bd9-b4b4-d02138f3a78c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "cfe8ef40-fe9e-4407-97f2-d14520d0ea79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a76544-244f-4fbe-8096-c6cfbd4a7f03",
        "cursor": {
          "ref": "2aec25ee-b704-40a2-83b0-887aafcae238",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4bf12db2-1a65-45a8-bdaf-1ced368af266"
        },
        "item": {
          "id": "c0a76544-244f-4fbe-8096-c6cfbd4a7f03",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4e83feef-fc30-4d1f-a4ef-d7bb569b2ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c52b1c-ac66-4186-bb9f-f29f95080712",
        "cursor": {
          "ref": "7b166acf-5470-4338-9398-4ce5cebc3739",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "556ac4c9-cf46-4c78-98ef-5bdfc5763122"
        },
        "item": {
          "id": "e5c52b1c-ac66-4186-bb9f-f29f95080712",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9991c334-6608-45ce-82e9-9e0365b41a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a2a135-d5e2-4913-9486-e8c2d9603551",
        "cursor": {
          "ref": "0a4413f6-e18c-42b8-9efe-7f53e156de12",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a3ef9e9b-f9c7-409f-8051-e343c8991dea"
        },
        "item": {
          "id": "a3a2a135-d5e2-4913-9486-e8c2d9603551",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0284037c-8605-4819-ab06-be761827f8ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c59137e-cbb4-480b-b688-19aca7591dd3",
        "cursor": {
          "ref": "940cdc7f-38a2-4e0e-a7ce-815f988e2f3b",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "961793d1-e8ee-4396-b79a-812b93aeb642"
        },
        "item": {
          "id": "3c59137e-cbb4-480b-b688-19aca7591dd3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "18dcf639-8c97-4bd8-b63b-1fd139d9120a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1ae141-55ed-408d-844d-793bd1521094",
        "cursor": {
          "ref": "c3efa484-697f-4681-965f-66f90c42b720",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7b6f37ae-761d-4d7a-b509-8c1acf9330c5"
        },
        "item": {
          "id": "bd1ae141-55ed-408d-844d-793bd1521094",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5503ed52-d670-4067-881b-eae81f471b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ad1677-ebd8-43b4-9549-ffc2e0b98cd3",
        "cursor": {
          "ref": "8a60937b-de8b-46a7-8587-f9b6677b9192",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ad33f2e9-bfe7-4c77-a191-1f2ef623fd2c"
        },
        "item": {
          "id": "99ad1677-ebd8-43b4-9549-ffc2e0b98cd3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ceeb44a0-8e40-46ca-8fd5-aa3684296777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb99c22-10ce-45f9-bb65-c386ed77d1f6",
        "cursor": {
          "ref": "310751d9-476c-4ff2-b1c6-c995b61428d9",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e414671d-84bf-4963-ade4-65281a528094"
        },
        "item": {
          "id": "fbb99c22-10ce-45f9-bb65-c386ed77d1f6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "82780b05-e839-4bcb-a567-c59ff28573af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a18e34-03af-448a-b0bc-5337a0d2ae3b",
        "cursor": {
          "ref": "4aa0e324-0880-412a-8e84-21130963640d",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ea247429-e9bd-4ecb-8bdd-4b945856b819"
        },
        "item": {
          "id": "04a18e34-03af-448a-b0bc-5337a0d2ae3b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a4cb20d4-810d-45e9-bce9-5c920a349b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011a8900-1f8d-414a-b892-f8f7fbf721ad",
        "cursor": {
          "ref": "f8e65cc9-02c4-4e78-b717-d48ed29ba084",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "23e6a28c-dcf0-4119-b93b-f99f34effd31"
        },
        "item": {
          "id": "011a8900-1f8d-414a-b892-f8f7fbf721ad",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9e9dd446-23bb-40f6-ae8f-30837033b950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6f8797-d3f6-4ba7-b11a-39012b5d1b75",
        "cursor": {
          "ref": "e0449d1e-7fe8-446e-9b13-c6fa459c04f0",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "aed8bdae-30bc-4093-aae9-2748343f1a16"
        },
        "item": {
          "id": "df6f8797-d3f6-4ba7-b11a-39012b5d1b75",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b12ca79d-b1df-4473-a2fd-f1916b3cd7b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ed87ab-a02f-4535-8d84-a1e9ae4e11e3",
        "cursor": {
          "ref": "5eb5deb9-9fec-49da-9a3e-c49ddddd8f61",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c64095f2-c555-4e19-9431-4b54a772b25c"
        },
        "item": {
          "id": "85ed87ab-a02f-4535-8d84-a1e9ae4e11e3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "475be7ea-fb55-4e21-9e7e-60e8dc28b604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69cf1840-ddf5-44c5-a405-d149ff6933ac",
        "cursor": {
          "ref": "a4e5eed3-22b2-4d04-ad0d-b1c531c4847a",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "378ae8ea-da1e-4481-9ac2-e05c2e6b08fd"
        },
        "item": {
          "id": "69cf1840-ddf5-44c5-a405-d149ff6933ac",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "551da3b6-b79f-4bf4-bc9e-023330da752a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70ae568-7d9a-4017-82c8-aa126f171a04",
        "cursor": {
          "ref": "23f6e353-ba9a-4383-91a6-3f7ba97de6ff",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3cfd4e64-922e-4973-934c-80e022c6fc34"
        },
        "item": {
          "id": "b70ae568-7d9a-4017-82c8-aa126f171a04",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a9c87632-967e-473f-b694-91672c0835ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8b402c-c43b-41e1-a958-fd223579cf38",
        "cursor": {
          "ref": "e50be9ef-5ae8-4c2b-8d43-97556d6d2726",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c0e7a79d-675d-4dca-bd7f-6c9a82babdc1"
        },
        "item": {
          "id": "9c8b402c-c43b-41e1-a958-fd223579cf38",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c11e148e-ce35-4f2a-a31c-17ba88cc5e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a716792-807d-44bd-b985-dfe9bb5dc0b2",
        "cursor": {
          "ref": "c001353d-bd40-48b2-932f-bee67a13be4c",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8a7cf7a9-77e7-4f1c-91bc-e7c92aca5a56"
        },
        "item": {
          "id": "8a716792-807d-44bd-b985-dfe9bb5dc0b2",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9b25f02c-cd70-4dde-a123-8e6630fa215b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060e2c18-38d4-4690-a597-ae7288568346",
        "cursor": {
          "ref": "46dedb5e-f2b8-44c1-b3c5-c29cd313c0e0",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4e0d9b3c-a559-4508-8ab9-feb595ea7ba6"
        },
        "item": {
          "id": "060e2c18-38d4-4690-a597-ae7288568346",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "eeb2f9f7-977f-4cde-9d72-7cf943e05308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7b9b08-5516-423e-b65b-fd3ab5849e21",
        "cursor": {
          "ref": "1bfe47fc-a933-46a3-be32-40cac2004c60",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4dd7b8b7-d7f2-4c50-9703-131e29026fe3"
        },
        "item": {
          "id": "ed7b9b08-5516-423e-b65b-fd3ab5849e21",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "aaa76bc5-8002-4077-a6bf-ae643e1292f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a383fc0-9d1b-464c-9482-b291029a13cb",
        "cursor": {
          "ref": "83ccbf91-4b44-4040-ae41-a6e94bac6c8f",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a73754b8-19ba-473f-b90c-337213bd00ce"
        },
        "item": {
          "id": "1a383fc0-9d1b-464c-9482-b291029a13cb",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6ab65ef0-6ef2-4588-9f23-3c57bae14584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708d09fd-5773-45a8-b60a-7881be4fd77e",
        "cursor": {
          "ref": "7b8acda8-1b84-403d-b503-6846db5f3c3c",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "303a01fd-624a-4e2d-96b7-0374217bf5f4"
        },
        "item": {
          "id": "708d09fd-5773-45a8-b60a-7881be4fd77e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0f845648-eb2b-47e4-80f4-0466fed0aaac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85100e95-451a-4dbd-908b-e5ff527c9e8e",
        "cursor": {
          "ref": "4f9833dd-330c-44f0-8782-ce5889dcf978",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f67b0187-673a-4ef0-815f-261c17222772"
        },
        "item": {
          "id": "85100e95-451a-4dbd-908b-e5ff527c9e8e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "13a5c3f5-6859-4cd2-87f3-4a5127ae67fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4937b6-63e7-4c07-8c06-bbeaa465cfc2",
        "cursor": {
          "ref": "36787faf-0c27-4ab4-a422-7b7e1ef000c9",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f9570c1c-8a95-4d0b-9f3c-c6941d66fd67"
        },
        "item": {
          "id": "5f4937b6-63e7-4c07-8c06-bbeaa465cfc2",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8615812f-3931-4abe-b4a8-5bd7abe2ae99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281a614a-44cb-4df0-8465-ae23f8654d1e",
        "cursor": {
          "ref": "f8ee7e0c-7032-4179-9193-b3a10d739f37",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "123ce656-3da5-457e-88d0-626105d348d3"
        },
        "item": {
          "id": "281a614a-44cb-4df0-8465-ae23f8654d1e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e7a66a33-326b-4d86-adbe-e316b8288e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ebc7043-e95b-4d1e-96c0-e38ab87510ae",
        "cursor": {
          "ref": "501929e7-c46d-462e-81de-702b7b2a2f71",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "465be7e4-6aea-4933-9a7c-5781b1439de7"
        },
        "item": {
          "id": "7ebc7043-e95b-4d1e-96c0-e38ab87510ae",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a2ef3897-02b9-4022-ab4f-2fdd7421f612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657814bd-709b-4ee2-b9f2-571f2d7064cb",
        "cursor": {
          "ref": "f31d1e83-e457-4075-ba15-e9a2b065c3d3",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "14e6d7cd-735a-40a5-b8d9-12fb095068ce"
        },
        "item": {
          "id": "657814bd-709b-4ee2-b9f2-571f2d7064cb",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e2ac6a47-8074-4980-aed2-e910b0d5ba11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f18c8f-2ccb-4e53-be75-b0695e986c9d",
        "cursor": {
          "ref": "26b89255-0490-4f3a-9da2-baaaee841fba",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ba21f9d1-9db2-4532-9278-aca1d838d987"
        },
        "item": {
          "id": "47f18c8f-2ccb-4e53-be75-b0695e986c9d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2995e0cd-7112-4ba0-8a2b-dad3e657fa0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f23af94-c2a1-4de1-ac0e-cb81b99ebe39",
        "cursor": {
          "ref": "c436d4c3-eea0-4842-9f26-6186b94906b0",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "fa53eb74-0d7d-4f1c-adc7-7678cbc478ac"
        },
        "item": {
          "id": "1f23af94-c2a1-4de1-ac0e-cb81b99ebe39",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2ac9ad51-f979-4baf-89b4-b9fb3cd6a8e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c6dcc6-34c6-49a9-a5ca-2493da2b9db4",
        "cursor": {
          "ref": "86cbbaa1-cb1d-44cc-bda7-4c6707a21017",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "02975810-0fab-4bda-9d98-67baa2f60068"
        },
        "item": {
          "id": "b0c6dcc6-34c6-49a9-a5ca-2493da2b9db4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b6a7eaf1-96d3-4a51-b955-c2f3de9fd8f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149b682d-cd1c-4f80-a255-0d76a87443f6",
        "cursor": {
          "ref": "184d7b2d-ca53-471f-be3f-f34b63927fe0",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "cfa3a8da-11af-42a2-9815-04b2b3f2eab5"
        },
        "item": {
          "id": "149b682d-cd1c-4f80-a255-0d76a87443f6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d4595131-5649-4702-9f9c-fd8f7b532f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f7623c-3840-473f-8a1d-315a05cb4b4a",
        "cursor": {
          "ref": "1a34fe27-9999-44d1-b06f-ab5090dff2da",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0d7e64d3-a0bd-40d5-a446-a1b5cea4ce1a"
        },
        "item": {
          "id": "c6f7623c-3840-473f-8a1d-315a05cb4b4a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "585114e2-5bab-47f4-8e28-8f77738dd5d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa61dc7-98c8-44ae-9819-5e154b09659f",
        "cursor": {
          "ref": "ad8528aa-df03-4956-a2f2-2bee981d598f",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fd401b8b-0da7-4a92-b800-cb1d7872e0a0"
        },
        "item": {
          "id": "8fa61dc7-98c8-44ae-9819-5e154b09659f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "accae342-4318-4e83-ac71-ed8d18fc8eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0836c419-ac60-4914-aa12-ca5ecfed3b3e",
        "cursor": {
          "ref": "c1f4a314-c5ea-49af-afd9-675f01ce20aa",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "83b15c2b-2aa4-4688-93e0-d723ae5928ad"
        },
        "item": {
          "id": "0836c419-ac60-4914-aa12-ca5ecfed3b3e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "622dc33c-d34d-41d8-8c16-8a551493a43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab81785b-ea72-4688-b0a7-a58cf2250b87",
        "cursor": {
          "ref": "9a481ba7-c9c2-4aa6-befe-24777d80660f",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "46049178-682e-44f2-be4f-d70c26418456"
        },
        "item": {
          "id": "ab81785b-ea72-4688-b0a7-a58cf2250b87",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "04f880be-d7b6-453a-8239-c4de91cf5d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f358d113-98a2-4df0-b815-5a1b0704a50b",
        "cursor": {
          "ref": "eb456932-8f23-45b0-8213-7f282cc4c5e8",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "de464d9f-cbc2-4032-a6a9-e6f337048119"
        },
        "item": {
          "id": "f358d113-98a2-4df0-b815-5a1b0704a50b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "70e0cbf5-1b05-4a40-b0bd-7a5854aaeb98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac094eb-d308-477b-b251-a9fb20879022",
        "cursor": {
          "ref": "94611e91-133a-4bdf-b836-f591a4778552",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "56f66fb3-9d22-4fe1-9049-facd28349ee7"
        },
        "item": {
          "id": "4ac094eb-d308-477b-b251-a9fb20879022",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "09bfa7cf-89e7-4e6e-9aeb-220e6478be94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09bc706a-7f5a-4d84-8362-cbb43c6e5309",
        "cursor": {
          "ref": "e9aad98c-e28d-43f0-9aff-197255422af2",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "10624922-0c90-4951-b982-5569a4dd261b"
        },
        "item": {
          "id": "09bc706a-7f5a-4d84-8362-cbb43c6e5309",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "8ce63d25-7fb4-470c-9400-fc19331c6b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455db821-9336-4023-a1df-0dd990ca3213",
        "cursor": {
          "ref": "5f72a5de-f88d-4f0f-94fa-5f96e17c2ff1",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3a45ff6c-7cd7-412c-9490-1f3f28f7c28a"
        },
        "item": {
          "id": "455db821-9336-4023-a1df-0dd990ca3213",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "113e02af-7edb-4e45-8ee5-f44accb8229b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0ffd4f-a38e-4f0d-9a51-28272360095c",
        "cursor": {
          "ref": "44185ffa-fa2c-4ceb-8abc-c43cea209019",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d70cbd4e-0928-46a7-846b-0f2373006127"
        },
        "item": {
          "id": "ce0ffd4f-a38e-4f0d-9a51-28272360095c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e5ad6ea9-2b88-4698-8228-7a755b269318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a2a79f-d887-46fd-8775-61b281effe61",
        "cursor": {
          "ref": "2270c121-fffb-401e-9f91-e24b12a6fb38",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "68e6e216-0cb8-4a33-87eb-a19c907635e3"
        },
        "item": {
          "id": "02a2a79f-d887-46fd-8775-61b281effe61",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6c024c16-8058-42b3-b8c2-c45d54cebd00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e82fca-cee0-4ce4-94e8-cadc435d93da",
        "cursor": {
          "ref": "27e3bd03-61ab-4e8b-9929-a58e91d4d8f9",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "be2f8c8a-1f8b-494a-95f8-595e0e1b2da2"
        },
        "item": {
          "id": "89e82fca-cee0-4ce4-94e8-cadc435d93da",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4bff1145-0eaf-46de-857a-cea7509f74d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6405e49a-0754-4d51-8f4c-22cbe6fa9b12",
        "cursor": {
          "ref": "d9b90d9d-b876-4437-84f8-479bd579610f",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "350dc5c8-1122-4f29-a494-aff690a385c4"
        },
        "item": {
          "id": "6405e49a-0754-4d51-8f4c-22cbe6fa9b12",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "66947a0a-2074-4734-afa5-7333241773e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e6babc-1667-42ed-bcb9-a575bc76c09c",
        "cursor": {
          "ref": "32907463-13da-4d71-aba4-40c7a8f2828d",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c575f28f-a6dc-4cf5-b0ce-4083da8b4daf"
        },
        "item": {
          "id": "c3e6babc-1667-42ed-bcb9-a575bc76c09c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c155d91b-6694-4810-bf82-c2a8b09606ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a89796c-d783-4978-b18b-34ae9f564759",
        "cursor": {
          "ref": "748855ac-ecfb-4e1e-bf56-377d003c9c95",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "955ba75f-f2a0-4d5f-8f30-95684615fd9f"
        },
        "item": {
          "id": "1a89796c-d783-4978-b18b-34ae9f564759",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3777710c-c808-4fa7-859a-00862122843f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d5a546-e366-4870-ba53-3f6d2ec3e53a",
        "cursor": {
          "ref": "fe151d22-0834-4e62-99b9-272fecb31430",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0ea90020-1996-4e7b-b3e4-1ea638aa7c0f"
        },
        "item": {
          "id": "f4d5a546-e366-4870-ba53-3f6d2ec3e53a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b3f4c83e-388d-4042-aa63-78b60d596d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c051dd-a6f6-4f06-8eb0-2a1e678ae644",
        "cursor": {
          "ref": "08fa2603-fe9c-4556-987f-b86d660b0dea",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "46cda58e-ec66-4eaf-86f8-e8e01bd278f2"
        },
        "item": {
          "id": "46c051dd-a6f6-4f06-8eb0-2a1e678ae644",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a63dad6e-0245-4798-86ea-814ccf9dddc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da16245-9c25-40c3-8c4d-ba2101f76e86",
        "cursor": {
          "ref": "5f4166c8-4ea4-4034-9d68-c62beb2441a5",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5dceb91b-eadd-4c94-8ad8-e5fea2ff7847"
        },
        "item": {
          "id": "9da16245-9c25-40c3-8c4d-ba2101f76e86",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8dd58b9b-81cc-4f1d-b2f4-cb460f43eb66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e380acdb-e66f-47d1-8f82-e972897769e2",
        "cursor": {
          "ref": "8fe69f3f-9601-421d-ad1c-0d7eab412558",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "eba67625-a031-4673-b50e-4a910c2a8395"
        },
        "item": {
          "id": "e380acdb-e66f-47d1-8f82-e972897769e2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bbf84e61-14b4-468e-961b-b766435cae1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a5604e-e700-4a5b-bb00-164d9576db24",
        "cursor": {
          "ref": "3fab84f0-47d4-49ac-8a41-bc036159cec2",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "31659e89-2e9f-4e21-b40c-4c369122b056"
        },
        "item": {
          "id": "b1a5604e-e700-4a5b-bb00-164d9576db24",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4fe721ae-a60e-464b-b8f7-f046c091ba99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43bbfc7-30eb-4872-83ee-d912b93f558a",
        "cursor": {
          "ref": "3f0a840c-18eb-4e6b-858e-a7d53e16de0f",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d62b8fdd-5287-4a64-ab2b-db536b66c674"
        },
        "item": {
          "id": "b43bbfc7-30eb-4872-83ee-d912b93f558a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "14547248-cb93-4975-8b9c-8538039bc89c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bcdb4b1-ed9b-41b0-ae59-07e47d14b88a",
        "cursor": {
          "ref": "84067698-f8c2-490c-bb6f-c43fabf2edfa",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "778060d8-1053-415d-b63c-2d0dde1cb81d"
        },
        "item": {
          "id": "9bcdb4b1-ed9b-41b0-ae59-07e47d14b88a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f15c22dc-7480-4321-af8a-c00bde1f968a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b4b085-f5ac-4d3b-ad31-1e08a6eb36d5",
        "cursor": {
          "ref": "27d70081-0103-40d9-b43e-869f7c946e4c",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "79902d0f-22ee-4cdd-9931-156b04961bb6"
        },
        "item": {
          "id": "53b4b085-f5ac-4d3b-ad31-1e08a6eb36d5",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2396d767-dbda-4fb4-bcb8-76b9da18854c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd44b1e7-c4e1-4448-bddc-10ae46046328",
        "cursor": {
          "ref": "7361f315-75aa-48ab-9450-ab4ef0a511db",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "131aab99-5a0b-4e20-beab-069421d06b5a"
        },
        "item": {
          "id": "bd44b1e7-c4e1-4448-bddc-10ae46046328",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "351d90ef-b796-44cb-9cd6-383aaafe8675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb378a8-021e-48f2-8e8a-bb8fb9a982d5",
        "cursor": {
          "ref": "aabb67d6-846f-4638-82d1-6c77e6ca4973",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "abd60aa8-4a13-413d-9cf9-df75a9848bc6"
        },
        "item": {
          "id": "4cb378a8-021e-48f2-8e8a-bb8fb9a982d5",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "775c5065-3cc4-43f9-847c-ea2b90bfdb0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ebbafae-748d-48d5-80dd-f028017a4776",
        "cursor": {
          "ref": "c7008040-e7a7-4f28-86c7-c1806be088cd",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "fcb6128f-a2e6-4cb6-93f2-7abaaa0479a8"
        },
        "item": {
          "id": "1ebbafae-748d-48d5-80dd-f028017a4776",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "68cc85f9-7307-47a6-a0e3-c020b504adce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6a0f8b-fa92-4575-b673-4bef0b19f5f1",
        "cursor": {
          "ref": "d6003ba9-cd18-4449-97ed-a515190c99b8",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "21260239-0c85-49ed-b7a8-5a8b9fbb75e0"
        },
        "item": {
          "id": "1e6a0f8b-fa92-4575-b673-4bef0b19f5f1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8a48dc3b-4eab-4331-a89d-3e83700cc2c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a83121f-9dcc-4910-b0a1-6ae14e95b41f",
        "cursor": {
          "ref": "297728bf-7064-4792-886e-1ec1179ce596",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "aa536dbc-9977-4990-9db4-4d978a9262a8"
        },
        "item": {
          "id": "2a83121f-9dcc-4910-b0a1-6ae14e95b41f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e2215d18-6391-431e-bc92-d488da332652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e4393c-7951-494c-8ed4-b8c4ea801502",
        "cursor": {
          "ref": "fda5bfac-9469-47b5-8d0b-81906985ba9a",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5abaf084-75d2-40a5-9dfa-000382f1794d"
        },
        "item": {
          "id": "57e4393c-7951-494c-8ed4-b8c4ea801502",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0e33c0f9-ab34-4888-b9fb-3f0e4686edbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4291c7-54af-452d-a2d4-cf7ae1a82edb",
        "cursor": {
          "ref": "354ab367-6ad3-4197-87f9-67125298c055",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a6b3b05a-5f9c-4044-87db-7a3dfb9bade9"
        },
        "item": {
          "id": "2b4291c7-54af-452d-a2d4-cf7ae1a82edb",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3f839a8a-5d51-440e-ab83-83969abb6905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170ebd29-b1fa-4893-ab7d-858ad2aa4f67",
        "cursor": {
          "ref": "cc95adfe-c3cd-4165-8c99-4051958d2180",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4c95d976-2c17-4cd6-8778-fd91e5589ddf"
        },
        "item": {
          "id": "170ebd29-b1fa-4893-ab7d-858ad2aa4f67",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4bb38782-784f-4628-bdc1-88af0089de7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b333facb-31c9-4cb8-8d18-8b4fccf64ae3",
        "cursor": {
          "ref": "25772302-336e-401f-b083-d6887b2f72d7",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "858f273d-d3c0-4b88-ad5b-6ad7673c053b"
        },
        "item": {
          "id": "b333facb-31c9-4cb8-8d18-8b4fccf64ae3",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c9024647-2c91-4f3b-84f5-fd857164b167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ef25f4-7e7c-4f0c-8d8d-d4a97547be69",
        "cursor": {
          "ref": "cd55b3be-a63b-4024-8cd1-fc90c4454e4e",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "11995ac0-e12d-4171-8a23-1e38d2b8ea62"
        },
        "item": {
          "id": "65ef25f4-7e7c-4f0c-8d8d-d4a97547be69",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "bcadc70b-d413-45d7-ba6c-29f7efc5ce54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2b5de5-150f-4e45-964b-e913024cf0aa",
        "cursor": {
          "ref": "f0c8f34f-74fa-442f-a470-6ab98bf47f95",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "265991cd-c9c6-4a7b-8b51-93caa309781d"
        },
        "item": {
          "id": "7f2b5de5-150f-4e45-964b-e913024cf0aa",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "66734d44-404b-4c3b-945f-d5f59eecab84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80f4b1a-4587-4a63-9e2d-51158b93cc71",
        "cursor": {
          "ref": "82f1cd24-c5f7-4ab8-b759-6624dd6bbcfd",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a4ea817c-45e2-4d28-ab77-c2076bb2ed6f"
        },
        "item": {
          "id": "a80f4b1a-4587-4a63-9e2d-51158b93cc71",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c9e04106-ac55-49c8-8c9b-7eac51f9d9e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1646c04-2f53-4e6d-970f-cebab51fa9b4",
        "cursor": {
          "ref": "16d956e8-6d98-4be9-bf07-1123c22ac3c7",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "81ca79e9-ad7f-47a2-b8cb-5731705e20d8"
        },
        "item": {
          "id": "c1646c04-2f53-4e6d-970f-cebab51fa9b4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "028f8bc6-0134-453f-b485-8b8a9498b54f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e2e51d-1edd-4357-99c8-955e142c8c4d",
        "cursor": {
          "ref": "1f172bd5-5960-4d18-a472-a2f676dfdf1c",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "fcb6b028-d362-453d-995d-c5010f8b55d6"
        },
        "item": {
          "id": "17e2e51d-1edd-4357-99c8-955e142c8c4d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "975b7896-e3ef-4ef4-8818-89fc55ab9c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3c8f17-9684-43bc-96f9-6f015df9fac8",
        "cursor": {
          "ref": "a887b65a-78d3-4c84-a607-65aee6fdfbdb",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ac615634-dde9-43b8-b2cd-69f1eeb09875"
        },
        "item": {
          "id": "7b3c8f17-9684-43bc-96f9-6f015df9fac8",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b843940e-dab7-44dc-9aa0-22f063530958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08782e59-09d0-4f3b-8a3b-175b39cd3a0e",
        "cursor": {
          "ref": "1ba1402c-afb9-4323-9479-17204c0f1604",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "68292a22-2fa2-4b56-bd9b-0b386ac9accc"
        },
        "item": {
          "id": "08782e59-09d0-4f3b-8a3b-175b39cd3a0e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "58b6fdfc-c9c3-4720-96d8-d6708db44475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc7a0f9-08fa-438e-b353-d139cbd7ab1e",
        "cursor": {
          "ref": "9073f0bd-b1c3-43d5-b21a-c6b534cf6745",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0a3570f5-783c-4a16-aa73-36cba6caab72"
        },
        "item": {
          "id": "8dc7a0f9-08fa-438e-b353-d139cbd7ab1e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "914545f1-cab3-4f47-bcc9-c81510d09019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3a16af-3d49-4dc0-8889-a275fe33d713",
        "cursor": {
          "ref": "90fe0b9b-a4cb-4e06-8697-54fab72175a9",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ce3d17d4-1caf-4af3-a679-5fddeb6d36b4"
        },
        "item": {
          "id": "6b3a16af-3d49-4dc0-8889-a275fe33d713",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9bf8b501-4de9-44af-9b8b-3f5e1ba55027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c5bd39-0d8f-43de-9228-042ce3ae4eb9",
        "cursor": {
          "ref": "539cda42-7918-4e1f-a34e-dfe7105e17c2",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "bb45ea76-8bd0-4ceb-bcfc-7bf531efc43f"
        },
        "item": {
          "id": "62c5bd39-0d8f-43de-9228-042ce3ae4eb9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4db27580-d1a0-4920-9ade-8ba66413d2fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebb45cf-89b3-4524-97c1-77d00d9a5c0e",
        "cursor": {
          "ref": "a1fa0d9b-b9d8-4b36-afd3-e75c33960cbf",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "049e0de3-15a6-4a7f-8aa2-e5eeb7f8cdc4"
        },
        "item": {
          "id": "2ebb45cf-89b3-4524-97c1-77d00d9a5c0e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "55d69e88-63c5-4492-b244-9d39eb91186f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c36c189d-c272-49ee-ba15-30f7972157eb",
        "cursor": {
          "ref": "7a45d7ed-025f-4d73-b3bb-4ad97e867e0d",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "ba7649a6-b0cc-4c7a-a092-07345302e10c"
        },
        "item": {
          "id": "c36c189d-c272-49ee-ba15-30f7972157eb",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "21c49766-52b3-4587-905d-766b45aaef86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1cf74c-22c0-4f6e-a6f4-1f0dca534bf5",
        "cursor": {
          "ref": "eebd7f8b-8d89-4274-9e87-582be02e5c5b",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "ee775978-1499-41af-b4f9-e197e20742ae"
        },
        "item": {
          "id": "cd1cf74c-22c0-4f6e-a6f4-1f0dca534bf5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f565f37b-f4cc-488c-8576-a8b12e6f55f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efabe01d-d137-44fe-818a-38822dc18b70",
        "cursor": {
          "ref": "95095aa8-d2f3-4909-85f1-04622a01ecd9",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "d9563c22-4185-44a2-bcb4-d79301522513"
        },
        "item": {
          "id": "efabe01d-d137-44fe-818a-38822dc18b70",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8514d18f-3ce9-4982-88c3-adb0d9627024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dfad61a-b27f-4988-9666-1523eabf4c92",
        "cursor": {
          "ref": "6766c604-ca21-4e66-a020-310fb0e2c4c5",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "4a65bc42-067d-46f7-b9d9-0549e404c161"
        },
        "item": {
          "id": "8dfad61a-b27f-4988-9666-1523eabf4c92",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "be1143c2-e280-446e-b6c5-59b00ef9a245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "facf2b60-9654-4d3b-9a3b-cda799bdcb63",
        "cursor": {
          "ref": "b3c04692-647e-4829-b60b-d4d49a2a0462",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "db8201ae-0499-4e0f-8a6c-1825dd9902b3"
        },
        "item": {
          "id": "facf2b60-9654-4d3b-9a3b-cda799bdcb63",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8c158b24-a40a-403f-8769-00502bf61674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7051022-0442-450c-850c-0cbf1c1ccfee",
        "cursor": {
          "ref": "4ef68d64-66a0-4250-8b3a-b8d40849e11f",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "36e64b51-4a8a-46da-9e6f-3354385392ae"
        },
        "item": {
          "id": "e7051022-0442-450c-850c-0cbf1c1ccfee",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "785d7dd9-5c31-4f9e-866a-217b1ad0ea78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60229c17-30cf-4989-914c-f30c2d510b84",
        "cursor": {
          "ref": "70a661eb-9305-4a2e-90af-c165fd07e7a9",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "61248ec7-5d9a-444f-8789-468e0e07919a"
        },
        "item": {
          "id": "60229c17-30cf-4989-914c-f30c2d510b84",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "bddc694f-f756-4fbb-9757-8ee33dbd1c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db8e570-316d-4c11-9159-688a877fb418",
        "cursor": {
          "ref": "57a396a0-1601-4184-b0d6-9d6750c0279b",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "42af05de-ecd0-4015-884e-51e00b5f145c"
        },
        "item": {
          "id": "2db8e570-316d-4c11-9159-688a877fb418",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "aad95468-5223-4727-b8c3-97aa85800456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "facf34d3-9f56-48d0-bd58-20b1b6834150",
        "cursor": {
          "ref": "eb08528c-fcf0-478d-8403-ab0c0509a45a",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "d9ecd0e8-07d1-47e1-836e-83a15747f440"
        },
        "item": {
          "id": "facf34d3-9f56-48d0-bd58-20b1b6834150",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1dbaddd9-4536-436b-8698-170fc9073750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ac4a0e-92a5-490f-af23-60c31d586c8b",
        "cursor": {
          "ref": "66cea137-8736-4039-9563-5c3862e0d7ae",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a816846c-5b6e-400f-9cee-f9e62c5c6aca"
        },
        "item": {
          "id": "f0ac4a0e-92a5-490f-af23-60c31d586c8b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "bcd052ff-ae2c-403d-bba0-af98235dc353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b53a97-068e-4943-8d3e-70797c7d9813",
        "cursor": {
          "ref": "3b54f72a-92f6-4c29-8faa-91cec421e0f5",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "5f49ca71-1338-4ab5-8f3a-7e6e2b09d682"
        },
        "item": {
          "id": "54b53a97-068e-4943-8d3e-70797c7d9813",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b8cd1ebf-e850-4402-a481-d3e972c4c81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27141933-cb6e-4f2e-bb25-48dc653197fc",
        "cursor": {
          "ref": "0c4c2aea-d9e9-4e99-a8c4-b5ef1756804f",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "06443ed2-2d00-46de-a7f9-fd4096d04f06"
        },
        "item": {
          "id": "27141933-cb6e-4f2e-bb25-48dc653197fc",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c28f0b2c-36ae-4750-9822-e1b92851e0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1bb1e2-e2a1-400f-a985-03d736c60edd",
        "cursor": {
          "ref": "9cb97f4b-075f-4546-ac91-769e8990696a",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "e29d6aee-7585-459a-bed0-0be92846b4f6"
        },
        "item": {
          "id": "5e1bb1e2-e2a1-400f-a985-03d736c60edd",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9825d90c-b1a7-4931-9c9c-cf675d57d739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae8d3d0-774f-4304-a7d1-a5b8b42cc7b4",
        "cursor": {
          "ref": "c236270b-488b-474b-9d3a-c17f81e38679",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "7937112e-cb9d-4a18-92a4-20211db68a2e"
        },
        "item": {
          "id": "6ae8d3d0-774f-4304-a7d1-a5b8b42cc7b4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a56a4c0c-13f8-4fc1-948a-5b542ec977ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40802ed-76e6-4512-a76a-b1e3ad74151b",
        "cursor": {
          "ref": "4e0f2791-4c65-4396-90d3-19889a47e458",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "de444b5e-39ff-4001-96c0-833c8cc48a66"
        },
        "item": {
          "id": "f40802ed-76e6-4512-a76a-b1e3ad74151b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "223db410-6fa9-41b2-832f-0c00e5ab36e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ff9266-f1e3-4087-ac75-fd01a047f919",
        "cursor": {
          "ref": "52719e2e-1952-484b-8922-7de695825b14",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "10fda72b-8712-4ed0-8ca3-021eb9f85e60"
        },
        "item": {
          "id": "91ff9266-f1e3-4087-ac75-fd01a047f919",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "61fb693e-44e9-4e3d-a183-f21b241669f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a68569-d246-4e99-97e3-421f721fdb70",
        "cursor": {
          "ref": "7837a5c1-0132-4074-9033-100e81731e6a",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "09b7a0e1-2cd4-4c86-8e2b-ba61b8d12396"
        },
        "item": {
          "id": "20a68569-d246-4e99-97e3-421f721fdb70",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1e9d629c-89f5-437a-8dc5-eb26757438a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6df7ed-6061-4156-b610-ac03cac90b55",
        "cursor": {
          "ref": "5ad013cd-3b08-492b-b792-e051419a3371",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "cc6b1811-7d2e-417b-8176-142cd2ee900c"
        },
        "item": {
          "id": "5c6df7ed-6061-4156-b610-ac03cac90b55",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e075d265-da33-475f-b899-ae3af9e59ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3fa1f6-f04a-4fa7-b8fd-db54c3d8e18c",
        "cursor": {
          "ref": "af04107f-6b2b-423a-bb80-c047278d62a9",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "c87b23d3-d185-415b-876c-1e8d2cdd6012"
        },
        "item": {
          "id": "9f3fa1f6-f04a-4fa7-b8fd-db54c3d8e18c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "50edf3ad-35e0-4735-bc9c-fb99270814d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe086233-d393-4d01-bcdd-b4f187ec3a2a",
        "cursor": {
          "ref": "da4f9159-284c-420f-9a77-0ba14c0d72ab",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "945f6c60-7207-4288-9f0b-cfef1dcca147"
        },
        "item": {
          "id": "fe086233-d393-4d01-bcdd-b4f187ec3a2a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "40773430-7e16-49e8-8639-383e2e40e949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b210093-bfb9-4a7b-9a59-db9f50ef38e1",
        "cursor": {
          "ref": "074ebe1f-347a-46dd-86f4-0b4e77095288",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "fa2c59b6-830c-4db9-ac30-1ba2f3b2e44a"
        },
        "item": {
          "id": "7b210093-bfb9-4a7b-9a59-db9f50ef38e1",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3cc5af52-205c-493f-9a9f-ae3344a7d4f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f071e4-787c-4be4-96c0-906c88912eb1",
        "cursor": {
          "ref": "9207f640-5332-44f4-8de0-241c775e1e39",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "d3297b33-ae8e-4740-8401-518f61aa17d2"
        },
        "item": {
          "id": "72f071e4-787c-4be4-96c0-906c88912eb1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a1985be2-6033-4a38-a8f5-cb2d2bd4064d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab08daf6-9b36-4eab-a016-6bf94c245fcc",
        "cursor": {
          "ref": "58303bc7-3b03-4689-9367-b8eedc83dc2c",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "3a24ed41-e478-4971-931c-510d2022b9e3"
        },
        "item": {
          "id": "ab08daf6-9b36-4eab-a016-6bf94c245fcc",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "70a9fb1b-c3b8-4ce6-b5d6-e48d430c3f47",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c39557-9b55-4d69-9dcf-a1ac1607c023",
        "cursor": {
          "ref": "3a7fde84-6291-400b-83be-12b7295d0606",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "4c06afb2-e3cf-4db1-b73a-6b50ce105134"
        },
        "item": {
          "id": "54c39557-9b55-4d69-9dcf-a1ac1607c023",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d194ef68-6d6d-4027-a8bc-367692a62f4c",
          "status": "OK",
          "code": 200,
          "responseTime": 103,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "87aa8089-4ac5-402b-a129-3d58ba4a8094",
        "cursor": {
          "ref": "518c4a37-6d01-4e67-825c-aadcf7ed628e",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "4c2b5724-2189-4d29-bc3b-4dec0f05ac9f"
        },
        "item": {
          "id": "87aa8089-4ac5-402b-a129-3d58ba4a8094",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c6fe7bf8-23ca-4257-a5e6-a58231b01e4f",
          "status": "OK",
          "code": 200,
          "responseTime": 1485,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c50b0db-cac1-4eb5-aead-29f708b892b9",
        "cursor": {
          "ref": "f1112715-4adf-475a-9998-979c1ac01318",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "08670050-4d67-401f-801e-e25701807a5d"
        },
        "item": {
          "id": "8c50b0db-cac1-4eb5-aead-29f708b892b9",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "968d1482-b8ce-4f3c-ad03-1807b571c6af",
          "status": "OK",
          "code": 200,
          "responseTime": 1241,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6e3521-d0a6-475f-bfa8-d6fd79b22790",
        "cursor": {
          "ref": "14c09e92-823a-41aa-b596-df845f24a543",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "babe97cf-573c-4711-a61a-8fa90b99ec87"
        },
        "item": {
          "id": "3e6e3521-d0a6-475f-bfa8-d6fd79b22790",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "19f9f286-720d-4370-b10f-4285511b6f13",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6e3521-d0a6-475f-bfa8-d6fd79b22790",
        "cursor": {
          "ref": "14c09e92-823a-41aa-b596-df845f24a543",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "babe97cf-573c-4711-a61a-8fa90b99ec87"
        },
        "item": {
          "id": "3e6e3521-d0a6-475f-bfa8-d6fd79b22790",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "19f9f286-720d-4370-b10f-4285511b6f13",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d478df2a-50ee-43e3-a856-31acb2b05232",
        "cursor": {
          "ref": "eb7d7a70-6f53-469c-819d-caef60976d0d",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "8e224cfb-7cd5-4c85-998a-377737b6c432"
        },
        "item": {
          "id": "d478df2a-50ee-43e3-a856-31acb2b05232",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "580270dd-1a5c-4354-9cd8-728f86b547d3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0f05c5-3931-4600-ae5a-c636cdd6379f",
        "cursor": {
          "ref": "98abc514-283f-4084-8b79-74a8840512d6",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "3a00dcf7-83f0-4b48-9e5b-3bf632418417"
        },
        "item": {
          "id": "3a0f05c5-3931-4600-ae5a-c636cdd6379f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d7b8bb73-c7b4-4acc-a396-235cacc2a029",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}