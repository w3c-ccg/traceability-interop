{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "867669ee-e3ca-454c-8ac1-49c465aa68b1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5271a33e-6d0c-40ca-8f2e-dd473e8da8d1",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6a72a3a0-85a5-491a-aec5-c687fbd61627",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c8cce987-25bd-4382-8403-fb2307a3abb0"
                }
              }
            ]
          },
          {
            "id": "03f64a3c-a79d-4151-91e0-4363856fd3be",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ec0edbdf-d09c-45d8-8331-7387f9d8ab61",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3bf11f2b-028e-4d52-9f99-be8e403350ab"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b5b4b427-d72e-4239-aadf-b7a5447c2919",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1fc765e2-dfe8-4ff2-a6ba-37bacaba0134",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b3ac26b4-2853-4c41-b6ae-7ccfcef5f72e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9b0f276-507d-451e-929b-2c768ea72fcf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9cbee578-7d91-4cf1-aa1d-40bee457ec7f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "21f365c2-e59b-4cda-b938-44762931954e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3f4add5f-524e-465e-8c18-decc22164c29"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6f66f8a0-1c57-4904-830f-dfb006d72b35",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "78c5bafb-3343-4ee3-ab83-4f4c88fe2e7b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "24cb590a-09e3-45f1-98ee-a1dcd13f0e26",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "40d322b6-2e5e-412d-a8f9-0303420287b4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "246dc0c4-45c6-4976-908b-be4a6904a59e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1c6c9292-baf2-4ed3-b942-49522189c700"
            }
          }
        ]
      },
      {
        "id": "81739e6a-6980-4221-bb53-7fd123818535",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4b0cb15c-72c3-4716-96e6-34d47bd821bb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4a7fa41a-a91a-464a-ba73-92fab74ad728",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9474d0d9-e1bb-4dfb-9fec-f8105d98152a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f463ab-9bb1-4f09-b5d8-4ba1f8c3392e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d132127b-4c57-4bf6-b3db-f68176193119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a6d9fdd-ba85-4473-a854-52141f996e81",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c424920-e926-4aa6-8290-6b7adfe857dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86f2f5bf-74de-4a41-b0c7-9c05ba74f387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40c649a-8e5b-4295-9b58-24ad4dd388e0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "763450d1-b56c-4ac1-a3b8-7536fceffe07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd095055-e3b3-401a-8719-32103d6e55ed"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a4939434-7aa0-4ca1-89c5-53c5c4618cad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c72d5643-9b0b-481c-92f5-4ec9f7350f62",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "937907a2-885b-455b-a265-c3c367b907c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1f3dd2bb-4337-4f40-b193-6946862c25ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b24892b-7187-4c0c-960e-95e0c9b8d8cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b34d503-9a2e-4af2-abc7-d8bcfefa1f52"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3662e36e-567b-4822-a952-4ab2f0f0d518",
            "name": "Positive Testing",
            "item": [
              {
                "id": "437d51d5-d99a-4455-a374-e5f3c3a68a3b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "71ab51c8-df82-4ea1-85b1-4c8cb94bfc9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "878eb3d2-1b1e-40d9-aa15-9d7ebf14a261"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec589a82-a639-466d-828b-87eff34e309a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "615da993-2f43-4c8f-ab0c-692cb3522d4c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7146866c-a580-4218-a785-22071c69b5e8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "432d3a73-be04-4c6b-99f9-5e60803f58b6"
            }
          }
        ]
      },
      {
        "id": "7585ed72-cc60-4901-b374-2a04ca6479e6",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6da71a97-4210-4c14-bd03-e51c83791731",
            "name": "Negative Testing",
            "item": [
              {
                "id": "36d7f1c6-26c3-40cf-a0b7-fb40d3a1d938",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "cc380391-1af2-4cb4-9fd4-5c112758258e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6521da-733f-4adc-a3de-5b59f8f8914f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b1bc1ff-9263-4fa7-8ace-64992207fd11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a620011-5abc-463f-97af-7e42c21f163e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "339e7bea-8b73-4b5b-82e3-a3659a063110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c74ab5ca-cd96-414f-8ff7-2c300b55f112",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "934eed38-8737-4dce-9201-7b9aecd5a929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c60150-c03f-414f-9c9f-1a777ab20966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02d49d3-19e7-4848-8f31-cd489a608605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33daad74-bf8e-4249-91a7-949efc0544a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a6fbc2-a584-419b-b366-30c3b0576770",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b44cbfd-6484-4f9c-a124-0aa92ec9cf39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa42c4d3-f581-4153-9be3-529f3acc3cd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1182d24c-41fc-4c41-88dd-23883d0a4b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03a39cb5-bd4e-4740-8eb6-21b0f164661a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf0fa4c-49d8-43c1-8f05-a3665271d7b0",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "938f9880-4e58-43dc-a2b2-6f0e388e725d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ba24815-8f19-460a-a79c-60531dba2bb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f209b4-cec9-4011-a3dd-ef44e7aba06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9765b89-10e8-45bb-9408-859f5b3e80c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9d330f-4fb2-43be-bcbc-3a521197a98b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e54fb6-7dbc-48df-b39f-30683324aadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5391360d-5e49-4666-81dc-2fdfef4788eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b211e0-e405-43ed-9c3d-014f606e4baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4beed8ca-a69e-44b3-91c4-7de18106b3a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24fbc2d-b5d1-4695-a842-43c582095483",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5075492-410c-40b5-aa92-47e4cd178ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f8b11ce-f0cd-4095-94b1-cdd840c92685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de006e49-279b-49b4-8996-e5e115107a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5400bc3-f3e1-4cd7-9878-422d40d18968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c97029d-642a-410c-8919-a8f7dd4ff165",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af975ac-2cac-466e-910b-4ba606fa9083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8eb1cdc-571f-40f3-bfb8-e9703156b05d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d38229bc-2bde-46d3-be41-401af6fd2bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f5e4f2c-d21b-4320-ba31-b474abad5a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1edb06fe-d3eb-4b02-9da5-9141ac19252f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03391632-71ef-4d3a-a8ae-6360a51dc7a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb41d824-0786-4af3-bc97-9c2f7f7dbb69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499d8742-a7e7-498e-8e50-659d4ba335b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6d07ed5-cf87-45a5-bacc-c66b22112782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590152d4-648b-48a9-bff1-122190bcbbf9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0b0d0e-cb16-4e34-b44d-3e2ecb52ded8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3b1e71b-d685-4209-8d03-c4027c47060a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de55fe1-b98f-4c3e-b1fb-37adb607b15a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "622069a4-6a0b-418e-b7fa-33269e3926a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289c594f-c423-4177-97b7-6c55fcd29892",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efa1173-3945-4762-8a5c-f060d6a06e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47829cca-a080-400c-8e4b-1d2755cf4781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f108127-eee4-42c0-86d2-a422cdf8724e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9239b75-d983-4850-8bcf-08d7776a381c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54cd70d6-3bf6-41d4-a349-ca8abb8041b8",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7330eb87-b12f-49a0-be4a-ce694b018cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23372c6f-fee5-4d66-9e53-0ca53a729001"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "186777a9-8515-4e85-8169-d8f4657d72fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b99c4660-deab-484e-94a6-fcd8a6966eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ed4dd9-7edc-4dab-844a-19c12c41f3ed",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d0d9c3-2259-4f39-bc91-e7c51f34b733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d50310d-c80b-4cc2-86aa-1e737302122a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918cf57b-fcc1-4834-ac56-09497f95935f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "720d62c8-04f1-44a4-9a87-75b159301400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74e139f-bd0f-4e89-9a43-c5ac5894ba21",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeca69b2-3ed5-4746-9481-d99c8aa2b758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34fc3a5a-90a4-4307-a836-757a7fdee974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b342fd-bb4b-4a3e-a975-32996057e9dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ccb39c0-8bc5-447e-95ef-33309941b9c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d8a379-a40e-4ea9-b141-cfc73ad38512",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e3044b-06cc-4a7c-ad14-de4732178ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "accdba50-678f-465f-8dc3-754019c539cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f584739-c083-4e7a-a18c-8e7008be95fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ef9cb5d-80b0-43e9-8e1b-7f1b80ef9258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b950ba83-79c2-46f4-a9cd-9268c84d7129",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65bff915-1577-4531-b329-15fae048abd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df57e2db-2d75-4112-a5c5-15b557f0496f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a9d2b84-1808-4791-a117-3741ae1081b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c47ebbea-271e-48fc-bb93-884ef45f77e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0999ed-f45b-49ac-a62b-c379f3c54978",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da374a1c-9e46-4223-9528-0c7f29f4aee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f470915f-3d19-45db-b9a3-d244f453b339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee93f6cf-5d11-4cc6-9f66-d074504c1cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eef1b6f7-7da7-4e4e-9505-0281551268b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d47d54-a8f4-46d5-af8f-df277cfac595",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55553e7d-0a98-4a4f-9e6b-785185e37e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "388ed0d4-8e9d-4885-aef2-d8af43301aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59cde026-603a-4f1a-b4db-a0a9a1323f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15e55f30-8bcd-46c7-ade5-d8c69340ad78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119f1b9d-ea43-45e0-8870-75fd73a53531",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bfce25-a1b7-4e61-8b09-558856e9220c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b07efa2f-bdde-4cf6-b818-a9028d5bf944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad0e38c-5ff4-41f0-a71e-b479b9caa27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7517f4bb-99c4-49e8-a813-1141ac2aa8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90bc2ddd-6688-46d3-a427-61ea87be2bc9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c28bb92-9b9d-4ee2-b0e9-afe86192ccab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e53655-4b82-44b4-a0e1-634492d20246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48343421-2c88-4cbf-ba1f-b01191f76d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95c8085e-7769-4112-8239-34f7b09274ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a10fb7-615a-4feb-8948-3e01f1b78288",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f2bb0d-6534-427d-8998-9e227b8ef11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "482fe9a8-972d-417f-9593-0e16bf650b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca50a5a-77e8-432b-ac39-a5d1eab72ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddf626e8-602e-4090-958f-88b47452945e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d2fe23-1a1a-4b85-ad81-2da13dbf0d39",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e77aa2-f3eb-45fe-9bae-5c8ed48152b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db49b98-a7ad-4a0c-9fa9-a3cfeb85f791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa329290-57ff-4ac6-bf89-93c00f125ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91a7af99-511c-4b6e-a992-65bc131491c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7126ff02-5c02-42dc-b253-cc6e8e052ea3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "697da332-6769-40e6-a5f5-979f143d6729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a02e1875-8b6a-4dd8-a16e-e3e65372a1f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284addef-6147-4820-a516-8dc484a4bb03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec2b4d0f-a27a-4b3c-8d98-2eed33ef289f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef31dc15-0025-478b-9087-572062fc2800",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86bbc097-e85e-4ada-b8f9-f3c3a0d8a971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "308c85a5-72ec-4e69-899f-b4ffa4924be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41be2e1-286e-42ba-9860-1dab9bd5db4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "56901b8c-4a49-488d-84a9-6d5bead09418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c8dd0a-4a96-49bd-91f8-02ad5a72ec5f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9fbd1b5-5a85-4812-8bc6-3d50f848c4c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "680ed7dd-b509-4f3a-a2b6-2fc3bbe263d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b135d301-71bd-44d9-83fa-ab5e818b8682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "acdd39d6-22d4-4d6e-b6a0-e92813283994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258b4c6a-4d52-4b2f-a259-cc129f054b95",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5bec5b-84ab-4c4e-9ea5-70167bfbb5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3848c6ad-01ab-46f6-8343-58e19620cfe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ccad20-04f6-40a6-af19-8853151b4edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e63d1876-b737-4a41-81df-91fd160ed33e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798cf8ee-03ae-40d7-bb49-cce514367a76",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc28a52-e341-422e-83a9-2305f7dcc454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15034bae-e168-4eaa-b9f1-a38648d2d26c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f31e17-32ef-4dca-9c70-4bcd11559b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "23ecf768-d3bb-416f-bed3-8f91055c3125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80e4255-0b70-4525-b52d-9118362bdeb5",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "186fa2c2-6f41-4ef5-bc39-2eb68b5ce343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17d3f02b-2394-421f-81fd-9f1f4edb17a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085a7691-1574-4b34-8b0f-c1396bf687a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca59d47f-fe89-4afe-b30a-ab8fc3c9a36f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89289a0d-a85f-473c-9673-2cb10584f182",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a84ff58-afd2-4798-8873-1261e6a76a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e95311a6-66f9-4af2-8ea6-4e527420e5fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b907e107-1968-427a-b488-601c28c9ea5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "afbf114a-763d-4d61-8ad7-73f02a445163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f44ea3-323c-4fe8-9d99-3a01ae24d73e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b37ecef-f2f0-42af-8c2b-6fd2b88d6c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0a293ec-5e90-4062-b2d8-31e63749c055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e32df0-0b38-467b-a1c5-35d5c1bb22b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f8f883b-7b8b-4e7e-a52b-83560b97264a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c223ee-bb44-4a3b-90c8-87e68b0d93cb",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8c4662-69c9-4a78-a94b-8e25371cb1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fe2be23-17f3-458a-8e81-f938d8c112af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10accd49-c07a-486b-bc89-e17036fa5b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "45f01030-a103-4a90-872b-471fa20701a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18171fab-b975-4a5d-8913-4f45c765b6bf",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a150e9b0-1850-4a99-9b18-44e04cb02873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e47c81c8-8906-47c1-b3b1-86cd1c2cfe18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56968ae-1af2-4754-b89a-dfee7c35a0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "20f46cbc-975c-44da-b3bd-bce920a4906b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b85f9f-3e45-4ed4-af2f-185c074a3993",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e06d7c-f07b-4bba-8923-f7ef89d0c34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06e6488a-e815-4e2a-8947-8adb70070277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d62d8c-d83e-4bea-b441-b962ae6472b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7612ad17-718f-414f-a319-01e208cc0d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31896789-cedc-4820-a00a-549b9d4a6009",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e50ced-010f-40bb-9844-4849ae2d616d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ba962c-c4c6-441f-a0ce-dd086728f571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8199f2e6-3d43-4cbb-b0c1-13da027af00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c2dd8d9-c3be-416a-9c55-0ab8a6ede3bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "accea86e-e826-4749-8fad-72be84bc809f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0edc1f-0edf-48a2-bad2-2bf49f18015a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7535c068-2425-48fa-a25f-2a1c7d32d331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be17966-2c49-4acf-8e7f-85827ce3b3bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7154842e-7c7f-4d80-ac01-bd2d5f78c788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91438e6-fb99-4dba-a2a9-e40fd9439983",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c594112f-8b21-4647-b3ef-17787e454a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8509505a-6f56-4013-8116-ce0e51b1bb62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90683d10-7c8a-4ee2-8ee7-f31ff94154f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "91942103-4c19-4010-aa2f-ff58bb4439d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a14914c7-3940-4a84-9cf1-6a1ec6abb5f3",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ef3f89-fc07-4548-a289-739a4fcf92ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f53ae55e-3a6b-4024-9827-e86ba8d29aa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cefc3631-7276-4a9e-9dac-4c516f933161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d3abbde9-efaf-4971-8c3d-7b517c437eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ab7891-8d59-4bb0-98e5-291b4895d02b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d8328d5-3bd6-4401-8b23-c148b4ddd589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d970af9b-e74d-4079-8ef2-8d17d036dd4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13efe82-001e-46fd-a40b-1dfcff342774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f4794f9-b385-45e5-9fd9-8881aafa81ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1416677-4a39-4ffc-ab00-0150f9d35d24",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c351b960-fd3d-434c-8b1f-2fe0e22211c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb042f79-a90f-4563-88b3-d68acfb23f77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b37cc468-25a1-446f-923c-9777e775d4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "33d02149-4b3e-4e2f-9920-1475dcf26d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd7eb391-e3f0-4996-ad99-6579476100cd",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d92874-fc5a-44de-ad0d-89aa83608d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da17fd70-ace8-4497-a70b-376f561e2cde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6eda1d1-a23e-44d3-8a30-fde64c09bed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7aa8d2a0-d610-404d-a7dd-588cb51fd60f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef8e445-5ebe-4b66-8b73-bcfd12d6cb67",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee77ad42-06c1-4b1b-abb3-6651b0736b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8f0e844-1a85-46ad-a259-7449f4d5bc93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3009b748-4d86-4310-aeaa-771f5788554d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c7abbf2-3e40-4c87-991e-4b6a9afc5ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c0ed88-9185-4fc8-bf6a-1f8c6854b745",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48113b2c-7026-41cd-8164-e22201869248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b06119f9-8a2d-44f0-86ae-9e06c36b1016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c379569-4b4b-4b9b-aed7-1d96695127ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8f9e5f4-1e1e-4426-90b7-3b844818833d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c01e1661-e088-4504-af95-1e1e6b069c70",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28fe0f2-463e-40d4-afca-24722e7baf85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6592efc-ff77-4fdb-a928-606d7c9165e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52faf76-ce11-4f5d-9b5a-10e02c433bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "aab20da9-eeba-4ba6-8084-b6e5f616f77c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c75aa91-adac-460a-8381-0912476a5e1f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ba392f-2ef7-407d-8ff7-265327a83f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb7e44a5-059e-4be0-93af-5a80e1bf4eb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8f322b-09d9-45fc-a198-90a5014463b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a050de1a-b17d-4831-adcd-64947c65ebde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a879ea-6e97-4a8d-9be1-03d85a8fa927",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd00210-81ad-488d-9ae9-2926ecd79e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1debbb05-035b-4ea4-9844-86e011af7b2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df34227c-edca-47b1-9a58-5852c40dc350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "78d1af1d-de85-47d8-b227-ee17a3d15e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db36bbd9-5b19-487d-98c1-28fd4cf23c26",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc549e74-3aac-4e88-a82a-78445e8db5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "469c942d-f49e-4785-b7a5-45eaa567e620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fdd0c26-cff7-4b3f-86f9-a02b3a128a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "08d92b7b-68d5-4f2b-b6e3-701284a4821c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c2734e-d2ec-4f21-8147-2c004e67d40f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc806783-6a69-4c0a-a4c1-7f5dbba0a43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9719a03-5064-42dc-8eef-ebef5802fe25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8458ae-3062-44d7-a3ec-6cc381bd46b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb8d129b-1a22-48c5-947e-6905e9d9def4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f11c55ef-16a0-4500-bad0-125150423dea",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84450a2a-2ef6-4eed-befb-8c5344445a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3179d41-e12a-46c9-9162-d514b945d935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7463ec96-b372-4dc3-a388-2913a941bca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb7065b-3b76-4e96-9859-ab9e23117cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c535c3-1f8a-432e-8661-afde18564f94",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "772e46ff-ef5f-4c4e-82c5-707d419b5e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5438f6b-1552-4ca0-8bab-4c0ff803bb89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f58d9ca-bb66-457f-959c-82d46326b42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f867677e-3b3f-42ef-8b96-0a44291ab3ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3abafe-4810-4a53-86e3-6c0bb3d14331",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c0db32-05ac-43ad-ab34-17e6280ee8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06ad1763-7987-425f-88b5-78398d0ece88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "325b3b50-ad1e-493f-aa32-0790364a0b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ab43665-fe26-4ab6-93d3-2c70182654e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "990b0bc8-3e08-42f1-939c-cf60749acc2b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb888848-d25a-4b28-9738-853c5a710f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ee0d5bf-08f9-48c0-bf2a-2a91f9e04eca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c335598-2c08-44d7-b534-4f8ef50500ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "44c5df34-73bd-4dd1-8a6e-7c910d7db4da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c15fb7-579a-4a04-8714-d493bd3d177d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8117fa6-abb7-4965-8f35-09012ade7d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ad42042-3f47-46c7-8d7d-d9465ed683bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d0aa7d-1c75-4a05-9b86-388dc78c928d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "59fe4f0e-c47e-40b3-9bd9-d4a78973d7ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44810b1-af02-4cfc-8900-7afc2d1a3d72",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b54fd6e8-9c89-45bd-b4a4-ad3440b9dd34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52cfc9b9-34b2-45e8-b6ab-076121a5827b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e63b81-7a12-488d-9b53-77d2d8660484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d4b4194-32ac-487a-9126-e9a60d3920ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862eb899-14d4-4851-9d7f-9b1b2865eb89",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f3c1737-c782-4d7c-a5c1-ec4ba2161b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1ace16e-3f6a-4d01-9ac1-e59fd095b72b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2c0a47-9fbc-43bf-ac0d-a80a505d4dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5755917-fee0-4a37-9ea7-f164c80f0c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "982188dd-d288-4135-ae30-498fa91d3f16",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dac076f-d388-4651-9389-edc75509c00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf204c3-3ede-477e-83b0-30a1947d54fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc2590b-9b1f-4963-9957-3214e578b017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57c6c048-0de5-4c2d-9e71-e13b3e0fca16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e801bb1-d546-4211-9531-e79ed081f314",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd19650-49ea-456e-af30-fa82d4b3e056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada71093-26cc-421f-b281-c890d32b4887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e532b4-a3b6-49cc-bbb8-22fbea1e4e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "acac4be5-b6c7-416e-b3f9-1e15c1152dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1468deb-e657-4425-9d3d-8f59700397b3",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b445e36d-c6df-4705-b797-624f4b2e7811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37f620e0-7904-47e1-b79b-f58eb0e47838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2fed3bf-5b95-4e3d-9084-3948da4a8e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "614e5983-07ce-4366-8ee0-2f8e8804b9a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6040fe8-75f0-475b-9e03-bbbc2315aad0",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8536d654-6a45-4bbe-90b2-61506306cd13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8367a867-62ad-4026-bd2f-fb375d9f4422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3beb2e-6547-4274-bee2-ed1829529ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1799a121-9647-4974-934e-d6caa6b24e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc98e46-5c68-4a94-872f-ac16e3b0cf52",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69da7c74-b3d9-42aa-abb5-4f1ad9b43362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4846db3e-2fd6-47c5-b948-b8cf7041d2ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3171ed-782f-4a22-858e-0b50f82388a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a089b713-1f87-4814-9c79-02ddba1d42c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4be894b-2cd6-4ea7-946f-d3d2c82d9531",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c155bf61-a22e-4dbb-a7f8-7995555afb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a2df8cf-85d1-4cf5-98ce-0ba01cea890e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "688be645-3286-4335-b127-dcada1af53c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cafedd8-dee3-4f44-86bf-93536680f35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97eedf75-7466-4000-8497-52d000f2cfd7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c140a1dd-a53b-47f5-bd40-aa41bf868ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d899df8-3697-4d1a-bae9-24970f181d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d3149b1-cdea-4505-8976-f1e4b59c8e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8be50b6-2616-408f-abaf-972bcafb2afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628206fb-3207-430f-ae18-f46ace12408e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cddbf350-9370-4299-940a-0c5679db08ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19ea09ea-92a6-46cc-a837-62d42f73928d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8f766a-dc96-4fec-a821-812710392f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "39a4357f-dd97-4726-8e8a-7d57f88dda42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde0be5e-859e-409b-be0f-e2ce30110c9d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a80ec73-9a12-4898-a496-3505e1507edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cc44d69-1bc7-49b3-8833-bfbfa6841a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a4a3f0-4b26-4424-810a-a648e6dc3cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3117f1bc-040f-429b-995f-7774da77ef77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b756a0-97af-499e-80bb-404db9f65a6b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af1df9f-19b5-4839-8ab1-66f232cd014c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96336b1e-6917-4b5b-95d1-4d9649a213a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5d362d-0394-4b11-98dc-3e65678b5727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bbb59ab-3b95-410e-8ae8-2650889a42ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd7e39e-3ccf-43c0-ad00-7a0de41532e4",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "639e9a1d-76d1-4780-8178-d199ac2c99fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7daae6fc-5ecb-479d-b251-6321c735f2e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70774704-b2d1-4cad-8e4a-1efce92a446d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d27f38d0-0b21-4d96-8116-26e2ede6297d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f11eea0-15fe-49f6-a648-23713b2e7c02",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "108a54db-3542-41c1-8623-4dac8dec8f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58b56081-7220-4821-b684-39cc78b97d6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abcf906d-9154-4fac-970a-45ddbc558a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20ca2e7c-1744-4e83-8162-72ab6fdb828a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73dde56-787a-4658-81c4-b1934773e49c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8505eb-7788-46de-b39c-c193ac5238fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c26224d3-6258-43b2-959c-c088936fba60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06192db-b315-4a2d-8f91-ed3d619f7906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "07924b5f-6186-4ca1-8020-795527306705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63508749-dc88-457d-ba57-3345f3051800",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df1144a-76be-44d9-8945-c3e7d9f0ef01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2381473c-4900-4d3b-abab-4c28d4df80c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bafbfa13-c8df-434c-88c6-b7bfe415b3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c0556e44-5e74-435c-b188-879c863ac935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab47570-4939-43b9-8642-a6f2d11ccf23",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ddc38b-7fa6-4373-850d-8695d761faf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a93630aa-df60-4bc7-99e3-fe6cb6e7dbb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2831b658-117c-4f64-82ab-5979013724b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4eaa6591-b568-416d-9abc-0ee058d82dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4bc0454-b915-4d67-a313-b587a8b86b32",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "329f42bc-f521-4671-8c84-f290295002c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15625741-d65c-480d-a3c5-971e9516ffa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f009f37-1ac9-4f1f-b335-46590434401a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c80ede8-5e4e-41e3-9fe3-c9fb47ad2f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7fb0220-661f-4a60-a297-b40c8d047d5a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "807cc150-3ec2-4f7f-a24f-5bb7fa99fc53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b54b2fd-3a19-4169-8af0-c4809c1e572f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea9ab3c-71c2-4f3c-b2a8-a14f9ef55f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3ca82f8-389f-4b53-b83a-cc787b20127f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e97a21-777a-4095-9ddf-f14f7882fd9e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53119d2e-8814-4dec-8bb8-5880ec72f865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b325a771-b443-4354-b8b9-26aefb01109c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b1790f4-7399-4990-8e62-db50b10194e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f1700f4-7b80-480f-8f7e-53f550a76012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ccb5c12-6bf6-48e8-aad3-ee10e16eaa0e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4def37e3-a49f-4207-a7e8-703e89949d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d9c4025-160f-4e13-b0c3-77d557f2bb65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4677dea-a5a5-468f-bf13-09edb29be1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7090939-5cdf-47a2-9b7f-b243d40a5467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f5cd25-0c92-4d02-a9c1-22a7fa7c9b47",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91bf5933-2ad9-4855-bb0d-f51cb0560879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afcf36d4-614c-46b8-9070-80aa394fda56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d165e08d-4e4c-4f43-b6b9-5ef38bce11be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1342e9f4-68ef-4a62-8bc1-e369674fd931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4895b5-7872-4f5d-b2af-860fe7410c44",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "651add6f-12e6-4a21-8f05-8368e72347db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4128f6d-b91f-4008-990f-1f0fad742741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e949b4-b5d5-4231-91eb-a7d539b36ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "41236826-1007-4c9e-ac7e-6e37e9044cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc2b79d-a478-40c6-9897-83cc1d736624",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26513d4d-3abd-48ac-b9d3-c7a6e271df8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c10a94ba-31ab-402e-854d-13df6c8b2ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d0da52b-44fc-43bb-8259-3e85547223c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7973899e-59bd-4b5a-bffc-3e988160cac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f502d801-e135-4ed5-aeeb-6950657ff3bc",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "742a78dd-094d-4a55-a899-d4ce346812c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c18dddc-5d07-492d-8901-a165bb5b1cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "407350c4-39e3-4312-8433-c435d02f39e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "afd6599a-b8fa-4274-a406-1e8fc7835a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741abce7-108e-4287-b018-8b3520a92465",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f256b9b-39dd-4ef4-b011-8bd9c34b511c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9147ec2-f562-493e-b721-7817db7f5ec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68622f24-6d7b-43e0-9043-92598219bb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d62c366-d0d5-4fb1-87d0-0d633a72d94c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0982f502-28e1-422c-93e7-00a230570662",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29958188-4176-43ae-b43e-e41939e9f149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7484cd48-84a4-4f26-ba09-620f8f691945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2fdc143-3685-47da-a5ba-082ab8339855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e580e513-91e7-49f1-98c8-ed5ab4e44e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "832f98a3-3d31-4439-b92e-864e4e1868a6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95b21ba-1692-4f19-80c2-17057e9f929f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a80b8cd-4ca1-46db-b7f4-a42463a2772a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e078aa9f-1622-4d49-8b99-312e1eeee5b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "62a45483-d6b1-46ed-8984-755ce6211a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc763818-81aa-4843-8aca-ac7d073262b3",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a5752c-cbe9-4017-97cc-a4715d519b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f9ef4c7-a3a4-4a39-aa8a-d1aff2cdd793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3689e66e-c5f7-475e-b698-6d097dc80f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "376b0c23-be96-4ab4-9921-1bdb5a3b3906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44aca9e-526c-43b2-9446-192798c367bd",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8be109-0c29-4ac2-9667-0af096039105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46bce296-4ec1-49db-b47f-2dbad9a9a353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65df2b2-b3c4-4999-b80a-6840630dcd8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3478f06-ebf0-4a64-9fe2-5e5f40ffc006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e839fda-28cc-4d32-885d-7792d35f8e61",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf3b012-032a-4fd6-86d3-4ab380736418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b715db39-e369-4ea5-bd92-c9f7ca728942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6161807c-3f62-4006-a867-b74284301510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa7e46f3-09ae-42cf-b8d7-f739ffd80fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a74e4a-3bf9-45e2-8ebf-1ccdbea909eb",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae8d31d-6620-4b7c-a45b-2d0bf02f0894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f70f319c-a59c-4a05-b6e1-e591a58777c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e519682-3ec0-4ba0-bd52-bf48c5ffa50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6b2b56a-f006-4d33-a259-e6d4c05ddea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2978bd-8579-4bd2-a7a0-d467fde60cd3",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3c62ee-0eb1-4630-987c-c99a71bcc564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42b3c315-4c12-4c4e-baeb-9bce83e5e2d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d07ae7-5f35-4622-b960-0c527a323928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ac05e95-d7bb-43fa-b72c-de6a5d7a024a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffda442b-7926-47d4-b1ba-2615e08a3495",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c794be-0309-45ef-9873-2756addef947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f2b0d21-0353-48d5-949e-98092ab82c81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1a857e-5fd3-4086-8ca8-3ea4266f2299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f86852a4-2c38-4cd1-a385-3ccecde0fe1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248471c6-2df9-45b0-9d9d-81a6aae8f2d9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ca5c09-f05b-4b06-b694-f98394af03f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44454faf-7022-46d0-93fd-1d9ccc3e9935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ef3463-3967-4cbd-adef-f765467ca2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f80dcc8c-ee74-42b0-8686-bbe9263ad701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232b8f07-5bc9-4204-abfc-76a0b57be83c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "719390d6-71d9-44d3-9af6-2fa6260e3b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f131f280-54e1-4174-abab-9dc734aa71d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0781693c-5b17-40f5-8769-226fad84d9e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8d44719-eeeb-41e4-a2d6-5c80b8adfc9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6442564-ac68-4867-a171-00a28377367a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c45be9-0e7b-454c-b853-cc9ee8f6c5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c54156-4653-43d4-af05-986781f20513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d646e2-42eb-4234-a1a6-98f65a0f253a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "24a9406e-6eff-4cd4-8c6b-35decc92286d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a10fad3b-1d6b-4291-ad6b-ecb8400b869c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca9527f-e1ae-4710-a0b9-4d0b274ce1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69c40e9c-ce3c-4eba-8eca-4e5120d4ba8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8edbf628-e799-4e5a-8c8a-f509eacbf0c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "445b542c-9080-4899-a774-dfe86feff45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96383a8-7555-4ecc-bc9e-cf6a76c68a6b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee85330-9d81-43ac-89d2-dc6dd432befd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d147552-bd54-4cbd-b343-2c0d32686866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350bf97b-cb7e-42ee-ba9a-537715fa180c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "106bf606-6882-4be2-b644-88b2aca44a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e9e1b9-40ed-40eb-8066-69a53666d917",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c12823-16d5-4bee-a052-3ce2cc6f2032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd55f306-3930-4eef-90dc-56ec61262b9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf61caf-8e31-413d-8453-153d5518339f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f09a67ea-eca6-48d0-93f1-d39029983634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd1d90f-bfa8-48a9-9161-bf09a93b83f4",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1b9502-fd17-4a48-afd9-cd20271586fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "63fcff12-68a1-4a62-b80a-1a6a28ac7a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54eb6e07-31ef-416f-8090-8e11607e53fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "810b7c3b-2c75-45b1-ac9f-614de1ce9aff"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "18d89ef6-925f-4b5b-86d7-8dcfca3c56ba",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "23be08dd-5891-47af-b4da-5b15f9a51717",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed07106-31ec-40af-8b07-ec4ab712070e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11e28efa-9539-4023-a68b-cd89099c244e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e073d152-3081-4f21-9aeb-1e4c27478b31",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d53d586-dca6-457d-b8aa-3133581fc9be"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de8f5842-c1f3-4140-8a49-984c5a56d468",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d31ebeb6-6bf2-454a-b025-c409994f6ecf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c530f5b8-2083-4d02-9146-d453adc33e80",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97d6400e-f129-4376-a984-3778fa3c5935"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "30fb49b1-b8ed-418c-a571-49c9dbff5ec8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "69ba2814-ee1b-437c-bbe6-91de557e0ec2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cd6476bc-94e5-4619-b171-1ca1434df2a4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7fedac0b-d9bf-4215-9e7f-6f9c8f20dda3"
                }
              }
            ]
          },
          {
            "id": "4f54bfd8-f6fb-45ad-8161-3149fc0979e9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7cd4dc43-c292-4fc4-8ad1-3c3152ab3fbf",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "8a554f31-3297-4c8c-9d2d-10c834a167c9",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0623ac-f849-48ee-9335-1b2f5ef345f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "81d629c4-b185-4d3f-84ec-7bda35cfa862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd31f54d-cfa5-42e1-bac4-3e69b64911d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec6e96ee-4a72-40b5-8791-5df9bf491454"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9350413a-4e70-4948-a4b0-1ccfab1bc846",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f17ca4b5-0dab-4211-af26-4ced553ceb64",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e8b034e-c14a-41a6-aee4-e7d8500ad9de"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6640be6c-0daf-4489-9177-0bd70972262b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "31464aad-2361-41b9-b88c-c39963f3ac8f"
                    }
                  }
                ]
              },
              {
                "id": "eb88cee7-57d8-4945-80a4-cf40453420e5",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dce47b9a-5a22-4d5f-8c88-b21cf510e12b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "461be0c6-7f32-40a0-977e-4b6eb1216259"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cd2d546-b4bc-4e69-ba0e-a6ced2af4b56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1495ee6c-4bdd-4e2d-8b9d-d094f2453207"
                    }
                  }
                ]
              },
              {
                "id": "6c8fd2fd-5e98-4a77-a5fe-412de57aaa66",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e02dd36-d4d1-42e6-9676-16ca140ec712",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41fd58d2-f2cd-4137-b0e4-342012eca335"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a0502f90-9a24-474c-b52c-906d89e05bc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "768445df-7db3-4103-96b9-3c11f1d26c60"
                    }
                  }
                ]
              },
              {
                "id": "15e9d43e-7fb9-4ab4-a1e2-70a02606cf04",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ed71543-d4a1-455c-947d-855990d084ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "104fbcc2-0394-4f4c-bc29-68b84aeb9f93"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f2f9bef-11b4-478f-997b-4154ae6a0340",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0663ed82-6973-43ab-88a8-bf6cdc0cd936"
                    }
                  }
                ]
              },
              {
                "id": "0d6174d6-9d55-4bf6-a4ce-cf916646c9bd",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe9abba4-5e79-48f7-b244-c9d8b40cbedf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5082c374-9435-40e7-bc48-7e53715c5f6f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8e96d92-3f6c-4a53-8c50-c3dd4be5d039",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "54cef6d5-b38b-4cbe-8df4-dac337d3020a"
                    }
                  }
                ]
              },
              {
                "id": "b7c5bbeb-47a4-46af-a332-c69b138c7f76",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80281910-bca7-4917-bf9b-6538d72b124d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "59dc0a73-5fe6-4c8c-83ca-447b0d4dc23a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c91abc61-fb86-4733-91b4-d911c93f509d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e9320596-a56b-4607-835e-181bdb3e0c3a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "827dff93-5bca-495f-9243-6cb4c2c78f0f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6bf788e6-f2eb-448f-887a-f31ba8f52bfb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6f58f117-133f-4000-bba0-4722d8eedf16",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "97d74786-5cc6-4428-9553-b5106d236c06"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c10cd5d-4bc3-4398-b6ae-f308109bb8ea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0cfcb596-90be-41ab-a4ab-a4e21357871b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "722fc6bf-5d1c-46ae-8717-e3c5e33bf13f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0ab4be6a-63dd-45cc-94d6-24d0304130cc"
            }
          }
        ]
      },
      {
        "id": "56d774fd-11ed-44e4-963d-325c0a671f0a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9010d438-3f13-4d5d-a1af-9db21fbbbb11",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8913b235-9930-4eba-bb53-b1bcb989a289",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "decdbc57-ffdb-46fd-ad0e-6ab71d4caf4a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1d70cf-27e6-42ed-9ce0-f4f8c04770cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "716e7f70-b194-40df-9a6c-2e2ac783496f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90c33ce-fc7d-4da1-870f-e846ddefc630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a987b3b-5efe-4900-9c29-8543b10fccc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79cc6387-bc8a-4395-881f-0e4cc19fe06c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f46ef6c4-b879-4602-854e-0babfe9e044e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2b6e7d8-3057-4a75-a34b-fb159e4d23cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ffe1981-f8ef-44fe-a83a-2062c2a2aef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7a814c4-7cf7-410a-bd6c-0b72471d8af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f6d409-1575-40c5-8f95-76b6edf40dc6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e286c46-06c1-476d-ac65-5a6aed59332d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c293a7b-f198-46f7-b4b1-650893bf1b8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f370ac35-4268-4f32-b1e8-82395f4d07e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9ed7203-651d-45a1-8a87-daa4950fc06b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e37b92-798c-45e1-90e5-660fbd6e40f3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa52d78-356b-4a5c-b2f5-48d9a77a0ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3a8dcea-1151-4999-b870-12441a883893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52981c9c-1409-4b42-96dc-03f1385e0e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe54c82a-a52f-4bc7-8127-e688d0338fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed807ec-6429-45f0-be76-b0b19ef26f79",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37997001-2ed0-4f02-8cf6-db41883f07f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7283e86a-a488-4241-99e0-bce7318e8c3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249813ec-3fec-47ae-b6db-55ddba7545f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4eed6580-8426-4d4b-ba2b-1f4df8daf098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8908ddc6-9fa0-4614-805c-51dba0359272",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6043176-6d86-480e-bd56-e63d7282b38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba7328fe-095b-434e-a40d-da4f2c9c4001"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a2b354-e165-4ba6-9bab-2c5d78163b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "53d6ae11-4ffa-417a-aa02-2b10a18f6d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d020ae-4cbd-476f-8565-a086d0fda3f3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff91da7d-9877-4717-b143-7fbc4a0af11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e7da7fc-d318-4d4e-880f-aa0e54b32e70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414f1a9f-d421-4473-9f62-577a5e23478c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4c6e811-909c-4558-ad0d-a32062c3fa1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e10761-a838-4b26-bb0e-ebcba89befb3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b38495-3d64-4256-a231-b09fddcd9c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40152286-cecd-4279-9a45-ba76edf0b8bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a28395-d38d-4260-8360-20bbeac929a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2e401f8-6e76-4ae4-be02-e36a946dc5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930fc435-641a-4a79-b675-19312141eba9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0012b90-f3c3-4ff9-8024-7c020c1a7d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "311fe3d0-ad9b-47f9-9ca7-86fd52c5f42b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4f21f8-9e05-463a-a61b-41de587fc223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c13704f-084e-4086-bc8c-214084899cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d4bdcc-67b2-45c6-8eb9-97a813d967ce",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2aebc36-6c6a-4ec0-a53b-526f6c882188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "110d9f2c-b000-4aa0-82b7-52b647a358c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf321cb-81cf-4a3a-a775-e356cd0a0b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b1296ea-668f-4ee1-995f-13442445a1b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09079f86-9b6f-436f-8bf0-3579119030ac",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a97d6ea-e93a-4c21-a95c-fd26f5447d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b86e4d8e-aa18-4f40-81b1-d524932f0ada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3867a407-b78e-48fe-be13-b08257fea40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8ed6a1af-7204-497b-86ac-29db11394e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff78dd8a-bda8-48be-b533-cec9f03c3891",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d7d6d6-cdad-4552-8f64-beedcfef6184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52574dd9-f89e-4ffb-833e-284d2d432a15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d34bea-3555-4e9a-8cd7-7d40afd9eef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eaca384f-c5b7-4d44-b1b3-e35fdf805836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5038ccfc-0ac4-4b4d-9f64-1193bb73aee1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce65480e-e1ec-457c-9b9c-f5753f97b926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b4ceb77-bf95-4685-b44e-e3d3dc7bdab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4165b289-6d96-4058-a3bf-f0aa8a828675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "11dba3e4-e202-48a1-a5d7-8d9ce54e3cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a433ca9a-66c7-48eb-b95f-cfa44f683675",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf11053-2d60-425a-b997-e3c1c63c74d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8fffce2-a6a9-4b1d-b21c-877ff028d974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc3476fb-e503-4b9d-ad7f-97abc3d62d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa3140ad-36e1-46db-a5ea-0bb516ecd0cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e707631c-20df-4fdd-822c-a8cf2141b027",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b876c873-d31e-48e2-b00a-73ae0bc6d34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7e3073b-f075-4d41-9df9-f27eea0c8a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5505581e-07fc-4968-ac68-ac1231c63bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "db1bacb7-0f2b-43a8-85ec-2750ca31ea36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a7dec6-ef3e-45e8-9d67-3e6a2b2f53d6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab23d8c-31fd-44d3-9cbb-6c8112904c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a4ce73e-b247-4938-ab2b-2ac17ab0ea24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21527691-f0a8-43cb-9672-c42ee8acab8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d642c3f-1b1d-4b8f-a27d-5918ed11eb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5261d5c2-6e50-461a-8579-2578f2c83dc5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bcb1b76-637b-4886-aea1-b8d005aa64a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "276f66a5-878e-4735-987f-6b38b23cf8da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1673b5f9-ae96-4ebd-86a6-805485434b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8a08826-451f-4b52-9062-dae47fb23e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a70f26c-af8e-4e45-a627-79742e7f5bd5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ce7481-2419-47e5-b58c-98efa958dec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e9b5485-51aa-4f58-9adc-f23a3b0beb7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a04d56-090c-4aa9-a0c1-63e4a7405e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6833fcac-5f77-4000-9239-a20ac4f7e2d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f956ab-aeb2-46f0-9d91-3063bf53063c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e323ca27-7ac6-43bc-931b-800576c51dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c298a31b-3259-4c7a-aea0-ada51de1c1c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f530bdf-6450-4c57-af77-9cd5f49fdb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9065208-6a62-4893-844c-da5dd4627e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9415d43b-d4a7-466a-a5f7-2bf5f1f39d97",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a780eb-ffcf-4aee-91bc-9f45ad616cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a31bb8c-4a52-4aa1-8bc0-04c973af926a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c739cb-fde3-4702-9259-db003bc151de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c407e5e4-6baa-4149-9794-55e0d3371098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57860d0c-d16a-414b-9915-2e8bf8a33235",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0833f1bd-1139-497a-863a-e47ddf9e762d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fdbd2dd-c08d-47ef-9f97-94b7ef6edf6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe51122-5bd2-477c-abfb-cb17687009bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "376e5f5e-5b9a-43ca-98e7-8e194a17a0d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac60d408-2568-4a08-94be-bac09fa36066",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3fd33ed-5db6-4f01-a123-264d53ae3a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a23c28f3-169f-4294-b0f2-adba2eee5be5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2134f29b-8235-4d1f-983f-d5e26342788f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "effd4149-dda4-4df1-8b2b-752ee00ca9e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e3232f-be41-4ab7-9c57-dd400ceac9fd",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc76cc2-9f7d-4f73-a9c7-75e85f110607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "209ef94b-23e1-42e4-86d8-67666e360c54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5b4ee0-7d54-437d-8fe7-f01580444c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a028057-1412-4bbc-bf74-bec8ebfaa112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda145e5-c9cd-49ce-bef9-7b4da37d8234",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c2fe362-eed7-4176-ac96-c0740c9c9bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b6c838-2a75-4334-9274-5764c7b1e288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8562fc-d2c1-4925-a6e4-af47e9e10d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad324a32-8c46-45b8-b0aa-a2551cd9fe00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e442ae-aa68-45de-834d-d898838eac02",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b0ee68-d462-4eb2-8be9-be4210636ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9513482-e44b-4bb9-8cac-d2e20a9e295a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef275ad-9505-4810-aafe-58af2bce4b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08f04db2-5d5e-4aca-8075-6aa02ee2e47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5abf0de5-2407-45be-9e0c-aa681622e660",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1beab66-2701-4e36-8dda-4cc6d8e0b0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d781583f-535e-42ef-aead-77ca95ab0b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15a69c8-51ae-4d71-bd63-70d4318e6abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93f96afa-2f3f-4d34-a636-45e3d7c98aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "135d019d-2b5a-4e1b-b2dd-2967ec842c72",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02580c8f-23d6-404b-990e-811277f2b1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "612beab2-9c19-45e5-a830-d8b47c3bb851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497f1060-36de-42d2-8aa0-118b468299ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9ff1623-5ceb-4b4c-9d0f-521c27ae2477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06fe516b-547f-4da7-903c-146d77caa5fc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42eff07-7dc8-4b48-9c63-c2c5e3004b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acb2ae5d-4677-4bdf-9f8d-a91f5c0607cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c125037e-875b-4203-949c-ef3c1227f307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2872948f-cab7-494e-b08c-45940ba1df24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e180a84-1de1-4455-b4f1-46ed5de5bf5a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f57149-5008-4a2d-93e7-277ed96d6dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8601fc28-4a8d-4bd4-a480-671d539a740a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ccd7f11-2294-49ef-92e0-5eac05cde47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62fc7f61-035e-4f80-afd0-2789f9c19a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8130910-6edd-4fdb-ba96-5069322527a4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2131230-7815-48fc-ab3d-0a208714ea81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0f1c750-ee8c-4f35-a2e4-f50b90a91300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5523351a-b55c-4d55-be1f-54024be62bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc442ea1-5cb7-4ca4-9a84-4c543c8e1e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83bfe5a7-c9cf-4b7f-8830-397d956547e3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32905b56-4821-409b-8196-0692450cf152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f23cc65f-aa03-4091-a637-4b4254cf6876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee426c3-4e00-4bbf-b01c-430d854d5432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad5ec4cb-9ca3-4a67-8abd-3f355e7d9f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99e39b4-2c70-4246-88d3-1358a755fe9a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825b6468-5ebc-466a-a81c-b507e013a488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eba010e-01c6-48a3-916d-cb70b641b891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ab5e40-ff27-430c-b93f-68c26194afa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6ab2fdc-4146-47c7-9765-09716500d7d9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c3b697e9-331d-416c-9bda-9183ff29e605",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "57feda05-5d15-40fa-b3cc-868827bbe936",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577c85f1-6ba9-466f-9dd6-5e056876bccd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bc1f1b95-18e5-4ac4-9ae4-c499e069f0b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c49347-a3b5-4d18-9526-9f44e401799d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9aa440a7-b3d1-48fe-9130-4c31f1adcca5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "291ed947-a1bc-4ce4-aff8-5675200436fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9814904-b830-4f83-a209-e8c8f58430a7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb87d73f-9242-4071-99bf-4cf26861e445",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df408098-1ceb-43d5-b095-14448591d888"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "97804ebb-56dd-489b-aa2c-147f9d858d74",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "be0f6403-e265-481c-a56b-f77d53fe8280"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "94a2750a-b2f5-4911-b008-baa75e66dfff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e35478ab-8131-4632-b302-82a2218aa3ee"
            }
          }
        ]
      },
      {
        "id": "75c76283-348e-4014-88e5-53f8252149c6",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "286d415a-8e83-420c-8adc-fb074978ff86",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7d86ec8a-59a9-44db-a1e7-7e10c3be0d34",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "db5e0a48-1f48-402d-a87e-baf5d3b68796",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6425acd-fe73-47e9-bd2f-435716957e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95da9465-1546-41c6-a2ed-91a2a82fc178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad575406-3bbe-4adb-82c4-56c7c9784d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ac339e6-7135-48c7-b78f-4b739b451d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be379914-6052-4970-9f9d-c86838195c88",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ea76df-35cf-4786-a575-71e1ab331c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb132d31-6316-4814-9799-96b6cdbbda2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1428b6a4-a8f7-4a33-b1c8-a1c88cbc5b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dbdbcd3-c5b3-4eb0-808e-2ca3189f0b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5847e2cf-ab16-40fa-b845-519980bed584",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7037ee68-1117-4e7c-a9f0-16feab48e19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95e397c3-be5f-4673-900f-145e2aaa3cb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "addd57b1-3c42-439d-8420-c933d95bd5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c436b36-856e-459a-b4b9-813c0f04418f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3eecfe-0d7e-4c8b-8592-ffc772eb2cb1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df042d7-ebb7-4892-83bd-172899dfb857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f796ef-e078-47cd-8462-8681b80f0920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45dd3fbb-74a7-4e27-bf5f-9390998262ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4efe8afa-ce2e-47f8-a097-e8bfd882ff03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25be22e2-7213-49c2-ba43-73a7d8030a2e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2112f90-53cc-4b96-bd67-3e61fe347dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "387b7232-32c3-4cc8-8c39-6b009163e220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7f83a5-30ff-4f33-86a4-a3b1791ef2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89811977-8de2-487f-b95f-68e18a289d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e4d98b-a519-4e6d-8c9f-d6727769eb72",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f407be76-91de-461e-94d2-d7130cc3ea94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbf89fe6-9f3e-42ca-9994-53f56bde638c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b1aac9-bc23-4d66-9295-ed3cdaa15e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8c67754-deb4-4692-ae09-6dc4bf4f6f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4189647b-e571-49de-b640-3bed3ec8c6b7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "296c50d5-bff7-403e-b64f-3f240d741a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a841465-c956-4836-b358-889ee152ec1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7062bf43-8c62-4e41-a060-31d3cb56e872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cd4bc89-e5c1-444e-a3c5-859f104146a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3feeea07-1473-441c-a06d-8f16b7dd3613",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c260f0a-5fd4-4a72-b323-169decce1db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3347c7f-7bc8-4775-85a9-6085548dcb17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bce215f-83fa-44f3-b43d-5cc1bd5bd8d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df6a1676-6fb9-40ed-851b-e26aed4399c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4deea219-6678-4505-82cd-65706bcb0c65",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1513ffc7-a4b3-4b89-8839-99e7abde6a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55562b83-06ce-4629-b7fe-58ac24462a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4c985f-b637-4f55-8ab0-44bb8bdff1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "462b2dac-23c0-4ac8-866f-2d770c4d331d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e71985c-294b-404a-b102-40fd238efb95",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e263213-27ab-4b6f-8e3b-4c08f7df05d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ce35c1f-a870-4fb0-be3e-4e2ed84d0958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734f6048-f06a-402a-9d1e-5ac275b37134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cadce538-8210-4c39-b471-8dd2c868f60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d907c9d-b69d-400b-b04b-d1cb4e1f2ba5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a7eb0c8-d8c3-4ba7-96ed-a186ac9fb6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8665458-ca13-4fc4-8e71-a4988d42a5d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5750e9ec-bc03-4515-8a29-2564761d2512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f940667c-c814-4fe0-b8bf-f29549467449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8718e303-709e-449d-83ab-677c44f3507a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f257f2e4-ce0b-43f7-b5ee-88b802a2b86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d238828f-3ee8-43dc-a750-196513f83a7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b716600-047b-4773-a9ad-99c8547d2816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "55c88824-c471-479a-84ca-13d7736c5911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff5fcaf-368a-4ce4-a3be-f0172d91bf4b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4966b785-3402-4773-bee2-a9d8d37655f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae4a788-9ef7-4cd2-b58b-94cb765edf51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f45dcbf-5b29-4319-8a5b-faede289f29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "96014ba4-9279-4670-b8d6-eac6af5b20d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c486e8-4dd4-4dee-83f1-215476592a88",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7efb37-b9e4-449b-ba16-e3cd5a017ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd49e6f-9647-4ec9-ab1e-fc593eec6391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd470cb-b534-44bf-b3cc-61f4a5e7ae93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec91aaa4-49e4-4ac2-9837-038102c2e111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64efda7a-5006-4463-8d83-afb7390693f5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d81bdb-aebb-4c0a-ab49-d14d97340540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "918dbe51-92df-45a8-86f2-4785d7aab6a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e85f0e-b2d7-410d-a322-754fed323682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "26d3cc82-bd0e-461d-b8f6-5dc06b8974b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec47739d-7cd9-4610-8312-864286eceb45",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b62745-5b71-4eaf-8fc9-da5be25f34d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f7002f1-3817-431b-887f-8b549976077a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffcb8bec-8712-4faa-b7c2-cf83652f604a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "89b93485-c5d9-4d04-b208-8051d68dd3db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4203053c-23a1-475b-b3cd-090d39fd3793",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd743f6-4f69-4ed2-92e5-7993d904278c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c61d85-d20c-41d0-8e07-18b5fa7f0515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278c9f55-604f-42a1-a273-4f5eaa8ac5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a31b7fc6-3308-44ca-ae46-6058df3aaba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9a293e-b128-4c7c-b96b-a02b4518c6d0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2f0e0c-4018-432d-997d-a8205dbc3132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "931ffeb2-4879-4783-84ac-050b94e84f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa01311-8efd-4b7b-ae90-7d554bd62777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "968e2378-a1a1-4391-bc9d-11acdf6942b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6104fd92-d173-4519-a900-6ba763bffc2b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a496d920-3466-42f7-8aff-e59955ded8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f86ce8aa-3460-4dd6-876d-6147b78bf84f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3bc6901-31fa-4885-9b35-aed275e50d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ac6d141-79ad-4666-a92f-7f617988628c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3360073a-a2b5-4241-b974-6136e074ce21",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a722fd2-f98f-466e-87b4-2f06e4b3bdb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "945a3045-8cab-47ff-a0f0-5323bf3b7f5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47932fb-346a-44e0-a48d-ba8e29c0bb63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d95bf128-5731-44be-9555-e2c662fcbf77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590e025d-d679-49fc-a091-bfc68ecbc5ca",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88b5014-b030-4715-9c76-9cb37883bae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "679b4c4e-d8cb-46d7-99e4-39d557cf2340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4994a41-da92-4a37-b964-3c80d209329b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60c99263-1626-48d2-912b-cbaf210b67fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b19af1eb-b2ec-4fac-8c26-c96f5799109a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6df6f2-0f29-4508-89b7-23d4389ce7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8188be75-5377-454d-a64e-4443b35a0101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7248fa7c-a4d0-4104-b656-3c4c26fc3f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f923496-8765-4b99-96c5-9de16222e057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2ea418-6492-4457-8909-ad1d61326109",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212a0db4-5eda-447c-af1b-b08204f1c93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93e56cec-0505-4b41-adfe-a4f0ed892d92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32674a1-6224-413d-83c3-d481612fb662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8e07e9f-227a-4411-ac64-c1c05c1ba321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d699a67c-bd53-4e80-909f-070a84c654ef",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "988c38ac-ea40-4b74-b306-e5f1f46bbfe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "352bed44-9ee5-4fcf-b9b1-4b17809f7e49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2baf6bf-905b-43b9-b040-7b450610e9b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c5ad24f-4e48-4a12-8a4e-5afea6e6619a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4027a6-057e-4bac-8a4c-6c1cc679a251",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c7b644b-e0b2-41d8-b5f5-72d48521fce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6cce686-995f-4fe3-9ba1-fbd73c441d5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9f9377-ddc8-4e23-9e18-d05790c88447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ce6f64a-0fec-4cb4-9c35-0b133c661dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0b4bfe-730d-4e36-9cc1-490e31c11a3f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4993a12-741d-41eb-a250-4f413a993d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7edf2eaf-6c27-4790-976f-6e9987e5226c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105111b8-5f2f-4e3e-9f6b-67c74aba6b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81a1dbbe-8c59-41c6-826e-c76262d08a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc56632-9864-49db-a6c9-2ba4d34b5d26",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40841ddb-5ca6-42cf-9054-275f35f0b3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad2846e8-7e14-4997-872a-66eb4c07e5ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa83289-b02e-4baa-a4b3-3d631f165913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b077def7-2627-4d4a-9961-2339f098eb72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f3e26b-5825-4e54-acab-8a819a414112",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1941b8-3660-4ab5-a172-663b8869b01b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "541d5a55-a4e7-4701-afdc-bea0d63d934f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d6e1ac-908b-4249-bc65-d479465a44f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efde0eed-635c-4cd9-940a-a5e2d5f366ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034847e6-18e4-40ce-90da-6aa8344de07d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30fb57a3-0cc5-415f-b09c-5ee6f663ae99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cbb32d7-13da-4b5f-bf96-dee7c95aef6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94659eb3-fc13-47b9-921f-9d2b5a3543fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0f403f8-e68d-4570-9b98-a1c078f63ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e57cf82-a610-4225-a596-3e1d3601d96e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ecc33aa-a1ea-400c-974d-5dda68a6f126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a791183-097f-4dce-8373-d14850f7a59a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49bfd7d7-8b70-433b-bff8-aa5cb64bbb24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98d085ad-6f20-4600-969c-da4463348518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d9449b-2abd-4206-92cf-296240db1dac",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb63671-e5bb-4f6d-8ca9-306e8da4e002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2db8944-f7eb-47e4-95bc-def166ce38e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a0f17c-5b20-4bb3-bf80-a723282764ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e4fd785-abad-41bf-80db-f50fe247b14a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365876bf-ec2a-421a-b0fd-a483448e387d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd104dd-7dd9-4bd3-b213-7a7daf0e035e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b52a2f9c-ad3e-40cf-a1ac-713c8211f37a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28a9da8-89a4-46d1-b48d-cce31e3dee14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34699aae-47c9-4e25-9dd6-0d7b04f8bcb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46764815-7e1c-4cf5-a41d-6eefc78d444a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14fe4c6f-74d4-4ebf-9fe2-8d443dd55cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb3c0737-0f9a-4a08-b4d6-a15cb898b0e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d60184a-caa6-4e71-bb60-6fa4efb2dd77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcd4c54f-3be1-491e-9fc0-dc6ed64c28c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf01386-aa84-4358-8c64-0be757678357",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "405a8a0d-8ed1-4ddf-a898-f5e6a21f57ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4174db10-6f28-40b5-9fb3-6f588b781396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39962667-9010-4ec0-a957-827bce1deec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9eaccb9c-8ca6-4a54-9748-1562d332865b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "324a0623-78ab-44f7-ba67-c923fd32e0df",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "526d1fec-7b71-46ba-94de-d14e9db9d70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8daed704-6378-4694-9fb0-80f61ba34c28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcae10c6-52f6-4aad-ab97-8debd412c508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "024f5d30-693c-4914-9255-88578097adfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1801eadc-2771-4376-ba79-66c9957eebb2",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "927c5488-1c53-4a3f-95bb-fdd76288f235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc084864-467c-4de4-a454-47474681b5f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b23bc32d-d279-4baa-b2f5-0d19bd7c415d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33556c63-57e6-40cb-a2cb-ff95544071d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4267d9a9-e514-4a96-b693-7aeb7af756f6",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60cc2440-90c9-4b5e-af49-3050b39754f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "574dc3ba-45e8-4019-9a71-36f02e7373fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9e7e76-e494-4eda-b944-7c80b06360a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8a90da6-098e-466f-a743-f5470021b12d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6372bb1a-1934-4125-847f-ffeda747a961",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "93691078-d089-4e60-ae95-99b0445edaf2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14cc700-9f36-4b49-9127-046c6328c2c1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5304ffae-08d6-4626-8310-4aba0f66dd58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e91bbcc-6503-4814-991a-c4326a2840e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6fafb6a8-625c-4519-95ad-70f951234976"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "891c8e02-0aaf-47e8-9f8e-fa643ce4ffc7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31825db4-f8ab-45c3-8713-ab5b318ad585"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f910bdae-7e06-4cc3-baad-5d266300ab23",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a10aa52e-75f3-4836-b572-3e17df0c2c32"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b0df3f69-f1bb-4a46-8238-8af503734e60",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "349330fb-ad77-4735-9970-d645a82ac873"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eee38022-9ef9-4b23-9ba4-e409b9b67146",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad5c8f4e-6b91-4fd4-adb0-b5b505ab41cd"
            }
          }
        ]
      },
      {
        "id": "aac9ce18-301c-4d89-b573-8c94086f7523",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "10d42ecc-05e5-4cd8-b2bb-8da52a8f37b5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5e3969bb-1d87-4556-aa8e-a163cf0858f1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "54812718-1a99-4f59-92c1-c965ec71a0c9",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa4b3c2-4a44-437f-a999-00c0c2ad02a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b6f7459-dfed-4d7a-8e9b-5978fd19b78b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be12dc9-d35e-4aac-9c25-ea9cb35402e0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bda4e8a-78b2-4110-92b8-8546b5877def",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57d74526-769c-4e3d-aba1-54c799a5e336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ea85e3-8e63-484f-9a4c-a069cd3249fd",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65944f94-4e8e-4b5a-886c-51090297fee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fde6480c-2ddf-475d-8937-d32e21ef1ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50163a1a-42e9-4499-97f5-bb24913cd5a4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b8c24aa-d15b-47e7-bf1c-ca9e648d5789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd47072-873e-41b6-95e0-3f1ac687acb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93a007c-aabe-4342-9402-f6e4d1a6209c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd5e432-0495-4165-970f-dc75b53b433d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4f564da-c588-4510-afe6-53ff561af7c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f007472-e339-4299-8ffd-d140cd33a50d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "889398f9-eec7-453f-b4c2-14f7a9df5203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a56725d-0cf2-4fd7-9fd5-c6edbf3f4a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6168f3-dc7d-41ff-91d6-813de7fe7f61",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b99994e-1fac-4665-b549-bb6207e84156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f29fe2ef-16be-4ea4-a557-25b2cc5a105d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6471d6fa-a427-400e-b029-d82741a999bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "378c45cb-09ea-46d9-abb3-3cae3681be71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4579765d-b633-45cf-bc60-0aaa3c3859ac",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c962fd58-f0a3-4c3b-bd45-84129368d51c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3574b729-d895-467c-adfc-8a5aded1e37d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a350302f-a37e-4352-abd2-2e9a8f22477f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8027b6f0-7bd0-419c-8746-be5a548f0dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b336507-193c-4ca2-9388-13f19f098adb",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3fae06-83b0-45ff-8ddb-fd0fca1016a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cf3d1de-7e33-47cf-ba28-9ae76ef579d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a47303-e67f-49b8-b013-19ea86ce8994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ce469db-7278-4c1e-a91a-1f092ec7a713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b71e7903-2eba-48af-a13c-581c738aadc2",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a94bc977-8018-40f2-af1e-c566258c1b2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40d36fd4-b9b1-4685-98d3-33facb5db142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "153975b4-229e-4de0-8992-d6bd1d27756d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6f849a6-a61e-447e-a3c2-fe97240f4fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce3cafd-d07a-46ea-a64a-fc0be69f9d83",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9895a5-568e-4bde-8e59-ab89f9f10814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97d986a8-0bc9-48a0-bc37-1a1ee4f560a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc7b3ef-6b64-473c-9d7e-4ffa0b16200f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0030de86-a1e5-44ee-8c92-fe3b93ee8eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a108d444-5d26-40d3-b8d2-d84c3cf7adf3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55e17de-734b-4bd8-b04b-90745564c53c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2168b094-e6c4-4d87-bca3-2833f71bbfea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "168674d9-a1aa-41e2-b0f3-5f9db6460d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c979682-c783-4df1-9eee-d14743c4a798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf78929e-9932-4908-b713-43b7f88effb7",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8202aabe-a218-42a3-8126-577ed334bd43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89b633c8-4b3b-41b7-bc33-b83734726aa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "116ebe75-f408-4120-bf5a-7239c4fcda3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "208b772b-962b-4e70-8977-ecb8e7b83040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8d4127-ccb0-465f-9c15-73f8fba80bc3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a8756b-4854-46ff-a86a-9c52ef267c0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "114d3a6b-7be3-47c3-bbc6-18d71d14a80e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9faa00bd-0e3b-4389-af82-91369dda2bc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28adc379-1bd2-4164-9e80-07f932593f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc589549-d140-4a82-a508-a211418087b9",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c71a48-ea28-4a25-901a-bca7ddd64897",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40386b97-4ef8-4a39-bb12-8cf13bc25f31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a534346-f067-4eb1-9cf9-fd5f87e210d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f666283-7a8b-4a71-b084-0e864963a229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda105d9-def9-4b2d-81fc-d202b8aa294a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bacdf0f-03ba-4da8-8216-2a8b16a53491",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a66f6e88-41cb-478e-a2a6-62a5956844bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c930010f-fb79-4bae-86ba-c8a8accf077f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f45e8f4-19b2-4d93-a78c-faf986db0bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe004516-0be4-4e30-a0b8-6de7bf816436",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86fd5f72-6f87-416f-9610-1ade30977dec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78678831-079e-40f1-851b-56f6796c792c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e0d0ab-e752-4a94-9b2b-b61b539575d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b4f0324-ed09-4d4a-ab38-8a37e5d9df16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa7212c-0605-471c-b2a7-d726d4e83a4b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f8d114-3eb8-4e1f-a23e-83fc74c56d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5a2d774-b0d2-4675-8e03-22305fff55b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe491ae-dc5e-4cd4-ae2e-3b7e800d8fc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3829a6cb-20c7-44e1-b4af-20571d9e6dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59617adb-3abc-421f-94f0-7039cd60706b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d2a332-3b37-4630-9f1b-713cd8e10901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f065872-bd2d-4a81-9ed8-1dab548c1648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2c1bea-2858-42e7-ae65-6434ac52c9ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf823857-084a-472b-9d29-4401aaa2bcab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2362d2ca-2099-4ab2-bfba-3657f8194770",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7fd8dd-6631-4628-a4e0-a4fd9c7d9f29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c8493e1-e266-4dd4-b64b-69a4f4bd1d0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaef0e05-17d2-4f04-a177-57d854401073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b4f55d9-7894-4148-9381-603b889d2b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e7ca2d-163d-4936-a9a2-9f0eeac1e1d3",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49287dd-e6ed-4451-9fb7-f183655288a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2184410-73d1-4d64-b1d7-ab2527ef745c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c6b241-e6e7-4ba6-b2af-30f51b8b1e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d32731-6955-4fef-8c6c-9591d562d549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d381cccc-a726-4aee-8c80-1e086e605637",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d93c5a6-5aa6-4fca-a60d-1d2cad2889e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b4578d2-8412-4af8-b4be-8d4f7a12e6c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6c3bd9-f555-4910-bc2b-dff792575a23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1615206-1104-4bac-a12b-9d7540d7e4f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a87a5a3-5e33-4ca2-a70a-bc0997ccdf57",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "871294d1-3067-4b2f-ae50-e2a9907f1905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2538de8-1239-448e-bd89-9e61b65ab07d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd76de38-f98b-45a5-8717-2db8256121cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ef744b6-5c83-4438-9954-a1d547006c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48267eb-e59f-4f6e-a798-13ee0a9d5b8c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e575b36-3e2b-47f4-bc67-f381c13ea708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d6053f3-56e7-40e5-9702-d98ce3005e6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0534628-1962-447a-8174-8dc6d657464d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8e418d3-b6e6-4ea3-96a1-108cafc9ffdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dee85fc-bc75-4a04-a2a4-ec4fc9312a04",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f79815-9332-47fa-9fb8-960a1a31727b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "863b9bb4-f4f2-48ed-b3e5-3cd6e2a23d09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6ebe41-2062-41bf-af54-bf21cc99445e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f0dfa66-34da-4508-9bfe-9a388f604f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de1e47f-1d9e-4fc4-a330-f1efdeeb3229",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dbf357d-bcb6-4624-97ef-a7a1edde0bcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eef8ee6d-f413-4b67-b2e1-b65121dba72f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe06d45c-637b-484f-95c6-895bc1194481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35ffab8e-439c-4694-a7aa-5cf1fc440fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79912ec5-8255-401f-b37b-0e207322b580",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57992cdc-b114-4ce5-8c1b-fdf2115992cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3328d9c2-30ec-465a-8dfe-2d4204af026b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd610161-b225-449e-b41d-71160eb5f447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a9db526-d3d9-4719-8515-f40e625d2960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e7a622-6b00-4dc2-887e-93a5622b427e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64cb0ad0-4e9b-4905-a5dd-421b0a666a2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bca32fb5-9d79-428e-8f76-1997880515f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d96da08-d264-4a8a-bc3e-d6324f70b425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e6ad612-7e26-4382-9a40-a89f8adb75c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0564ed-0e71-4e5f-927f-181f66fc82c2",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee2d5be-6841-415c-88e8-3249363918c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7006cf9d-72d7-4cea-85eb-bf08db35254f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70a0268-16be-4847-aa38-5a3a22faa7d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fabbd436-e443-4d1e-8f79-07a118295e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e9ffd3-a338-4e36-ba4c-6dfa37e659c3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c521f8-256d-427f-81a8-c2f16a19a288",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6382870c-bfc7-4272-b2b2-7e5613436ac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "770e7881-7269-4027-937b-4797969c15a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1955102-7aa5-4165-b492-7f8e98c4ef41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629df4e4-84d8-48e5-b2a0-c598d5254f51",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd09219-8a7e-453f-8b94-69a63ae4fad8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93cf238f-74a2-459b-b1f0-f2d0b92f5814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d96373-1d3e-4c0e-b7bd-f2e4f9bf0fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b289262a-55db-44ae-9932-2837f27d62f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c4fcbc-9080-4192-b529-c6a71a919474",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfcd54fe-5975-4505-b40e-ce5e4b675888",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8796a59-67e2-456b-bbbb-c0d161f385cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3938013-3752-4594-a567-faeb9a883164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bffea0e-1c8b-4618-bf85-411982b96323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930f4120-a7da-48ea-b2bc-fc8caeb55c66",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64bdfe8e-5fdf-4591-898d-b81b90bd7eaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d255635-c7bd-40de-aa52-8a5aa1df1e1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af7398fd-1d0e-4d01-a89b-968f924d06c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f631b609-1426-44f3-9836-ba302aaf6006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6ede84-5991-41f9-af1c-8c1e13fed88d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35049b5d-8976-445e-8110-bfecac4b3c9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29809808-8a78-4de8-b0d7-64ed1f379c6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb637127-e3c6-4ef8-b8dc-bf79750b9f05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0a376ac-1d4a-4bd8-bb0c-73123b978036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6659d92-7fcc-4e71-aed9-e2e92f7d4440",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e183ad80-3e5a-481f-a3cc-d70991339c92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "582c7ad1-ea8e-4ac1-b8bf-780596e03a5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59b41cd-75fe-4922-b89d-4ebb30c73065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38d7e398-bcc7-4b7b-b0bd-612686f0d5db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a619ead0-d364-4714-860c-c5dc623f4d4a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e463f00-8557-4060-acf3-8516aa77e200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7455d41c-f77c-489d-97f4-659cc8d580aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75dee713-7987-453b-a276-24395200d83b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe77e695-2753-4685-a6b8-e0fe1fe81e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25211ebe-a915-41f9-bcac-d7ada83f30b8",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d5e721-a23f-4988-9622-ad7a89322ba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "235566a5-5734-47b3-8df5-2afef115a16e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ec1f72-e33a-42e6-8c44-223b3b597252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd42497f-2166-40b1-88ad-77a5d0625a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9832d7f4-4acf-4539-aa77-bbac8d546415",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259320c2-1d5d-46b8-92a9-7566114803bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e508e81-e1a0-43cf-a2f8-617209ea3fe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd08eb6a-96d4-4d79-8215-43cf1ddf5ef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcb3f73b-11c6-4c03-adf5-367e168712f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8a5b9b-f1b5-4ccf-9f18-e89e226ca1fe",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf43339-d4b0-4e20-8755-9fa75e724747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bda6c80c-4bd5-404e-9673-180d94bb0217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfec8946-6384-4707-be85-8d87f602a593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c5f66bf-e73e-4e55-83fd-a64d90d1a3ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b857d183-f6a6-4183-bbba-8789440cec8f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04ef449-61d8-42b3-b1c9-9da1ae2c3449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b6242cb-34ca-4543-a872-25da9508a8f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ad0839-b7a6-413f-80ab-df6e96f07065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c8976ab-a577-41cb-a718-9c25dea1edae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43dbd73a-0680-43da-83bb-fb954a876601",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e85082-0daa-433a-94be-ece630be44d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39431af0-cc92-4689-bd53-03d43b5e01c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc854617-5c6a-447c-aa6f-179e3da9184f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "923fa960-bf7c-43f7-a4c3-9d422831391d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197d0604-89c4-4071-a80b-00fb3d23687c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f625c980-5537-4671-a120-a95d7315e5db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59d7a6cb-244d-4c79-a9a2-7b28f01b5a94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "384727e1-4c83-4e05-a3fc-a71ccdd3630e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "013acef5-3fbd-486d-96a8-0b19241eaf21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a802f3-ab7e-414b-8bd2-cc0bb5fcab3a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b67e7c1-ccd3-4885-8189-f00a69e6391e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "600b67e8-4e86-4d39-9b6f-b49aca1afefe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "469a7a08-bb90-4622-beb6-b75811c86297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fe780cf-a926-47fa-888b-457fd4ecdd19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd1a787-7b11-4f2f-a29d-aad93afc7e4c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e37f18-55bf-4ac5-8037-6c79e17772bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "320645a0-b415-49cd-bd43-eb1b2321cfc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d5138f-a1f8-4f09-ad89-c4b9f694dbff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "831714ef-9ceb-4a4d-84c9-3793c5b00226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f822d78a-71c7-4c01-bead-624044bfed02",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7811087-da78-40f6-9910-70a821350997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c8150f9-76a0-4aa5-b4b2-5da0d9ee428c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27126515-d0b0-40ae-a310-fffac03c9f7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c34688a-c678-4840-bb60-8d12cca8f819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417cef75-b9ba-48da-8ce7-d623c9b9d0c1",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "512c1358-6ebc-49d6-98f8-67750f3dde12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0954f3ec-2cfb-45f2-85f3-cd61d43c0b44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ed9110-4e67-4aa4-9479-11e66b8d1c31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f09aa9e1-69cd-4ee0-823e-73ee281fe34f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70cb312-32fc-45ec-a4ec-0c4eeaa17ef1",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "390e14ab-6afc-476f-9f5e-ae7158ac425b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "264813e6-bc56-408f-bba8-b4b3b1c6f81a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55040c6-12ec-4eb9-86f1-489e68256b00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3c8a713-a7ce-48ee-8e35-0c3a0533d00f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096cff9d-bf60-4894-aa3f-8abd8f64788e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86cc057-45c4-4214-8f90-e21d5d85465b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01648273-03f4-4b73-bd05-e8a21cfa1ff4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3bea99b-abfb-42f0-8abd-835a84b9f543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a1aa8b-f87a-46a2-924a-6ab656d582fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10db4e3-fa15-49c8-98a6-bee68f7805af",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c0ee6da-8ecd-43da-8627-605ddc488295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e6fe18-31ef-406c-9524-40b5ddcefbf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d41574-c964-4238-a31f-46a6ff6820e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d162f60b-a517-4890-9236-3d28da6a6493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9fe616-3c2a-4b8f-a154-b7bfe68c1019",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293ab649-cf0d-4328-879b-6a350f36710b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4eb961e-0164-4af6-ba03-23a1d74e0e6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61ff72f-aa02-4ec6-b1c0-3e785b2d4fdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a05db82a-04e5-408b-bd0c-5b353eb5345f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4982a547-23fe-43f8-b959-e431420afdb3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4d4535-2f75-44e1-a16f-55e0c4e933f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9c0b80f-df4f-447c-92f2-30bbd95702c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8172ed-5a0f-400e-8c7d-0b5d0d4edfee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a726d5c9-625e-4d0f-89df-1aa50e2ad657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "087cc1c2-a62b-4163-942b-051aa9da3d2e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac770ea1-2f39-4f79-a81f-ed18946a06e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e51180c6-752d-46a1-8df4-63962855a0d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2863d240-7bd7-43dd-b919-102bc34da1b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6418a70-a528-43c9-98b1-f15519cb569c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2ea5f5-16de-468b-8534-1e7a8d507280",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae8f155-c56b-4004-a612-f332796ddc48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6aff6cc-2963-4231-8381-d74ef99b4499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "468d9358-9f7b-4e6f-9c85-3e2b3b427bdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70fb172e-357d-4d05-bbff-3417ade8517b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d70241-29c2-448a-bc9d-6c7d82f99fc6",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "292a9343-bbcc-4c67-bc4d-37ccf43803c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3d290fc-539f-4054-be8a-860b429e406c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14db9f74-c7df-48be-8194-ff4b58a14c1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0518cbb-5c8e-48f7-b8d3-70028426cfb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e567d1f3-8178-4971-af6b-8329e167ae92",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e10a75c-518f-4f95-bb3d-ddf09b02884b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b693bc84-31eb-4766-8bdf-37e920adad72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f301c436-6fd5-4964-a549-4b3b26203143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5772d6d0-989b-416b-a262-87624fcadbf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0d38f8-0284-4497-9193-9960d4631574",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d544f5-937a-45db-983f-40a70be2fb05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f34e417-3a55-4b66-9f46-43d7d0d5f4af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f069db4d-c4a5-44c2-b06b-55785651a2c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f76b67-0e54-46ef-8f44-98ae3ab55d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6440927a-46c9-4723-a303-d280b41cc672",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da036ac-deed-4c9d-a645-08e93cae7163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "535f03c2-3932-4fdc-8a4b-965adc54845c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0bac46-4877-4a6f-9f28-8d9fa1700318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d668737f-f8b5-4374-ae5e-04d542cc239e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf641c0-a77c-4dfb-bbc8-bb4bccd6f1cb",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884c9933-8c73-4684-8fc3-90584cdceb97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d864f963-bbdc-46d7-9135-0fc40791b4c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "334f5003-539b-4bf6-ae76-c15f899a6a53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de93d732-04f1-46ee-b3a7-c670a4548940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77981963-8cfa-4276-9d68-46b9909b4088",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "023f20ef-9b42-416f-8497-7111a5645dd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59fa5d29-b11e-4cb5-a1a4-4160756ea9ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62af2676-6a5f-40d3-8b57-123d0ce23cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb68254-6518-4aea-b330-32106b010212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a79484-7e33-4603-a690-09fa20dad0d9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05cc63ce-3776-4134-8009-e4ad42635557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25154903-248f-46d0-b4bd-b59bcf40ce66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50e0222-fab4-4764-81a4-4c3f0da793ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb301902-bd7f-4b00-a782-cc3b73a708c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea84a78e-7d65-41ba-9e04-efcfaf3b3c39",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee6d4bf-d6dd-405e-abe8-6ef95cf79cea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e19d3abe-2dd3-4cfc-ae09-32a29e6ea308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dace173-f966-453a-852b-dddc038f1c83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6795d5b4-9e28-4702-901e-22bec89e3d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbf3bce-4836-41f1-b1f5-c8b4227d55df",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198d94e8-70de-4b52-a0bf-c0c606a0ea70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4f34aea-d682-49cc-baf0-2a7cb8ec3dca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98bd32fb-5a45-4a39-b7c9-331f07e88d74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e311f5f0-e7f3-4407-9f11-aa7f5a43f11b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6c53e5-32fe-4fbc-831a-3021ebb8c13d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf900ce-6012-48a6-b115-9f682dfe12f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f7442b1-7d55-4144-aff8-baadfc1e430e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d384a5a4-f489-49fe-b0bc-aa683ae592fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20312cc3-f441-47a1-bdd6-d61638b5f1dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e113e9c-2b17-4aed-b40d-4260400e0467",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e1d027-6207-459e-9e38-6140517a5897",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ed04ea8-477d-4714-954c-97625256f5e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba91de1-0dab-489f-ae99-5aadd9dd129d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5c0ee56-a147-418d-acb7-2b2e4ea34ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb636751-f441-4930-bc86-89cb73bc6860",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a827129-c822-4491-b6a7-9ed9ee44619e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e440a9d-b001-4ba3-8a2e-e43e8f6cf45c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f840702f-0347-4362-833f-7c11e56aa638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28d9b15b-f268-4db3-a2a6-117646eec5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30553b45-50e5-4a93-8626-fe342aa85dbd",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5198cf5b-a354-463f-bc56-831f416e4766",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21ed6ce3-dcd8-42c5-aa2f-45bd30356c88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ccec2b-4a6d-407a-ba34-250e37564e5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "371b5990-4842-4139-8ad1-0e8d371bd0af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "288140d2-b2f0-4264-9143-2290a2cc2b01",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac84448-e86f-464b-84c3-6608ca0f9323",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ec76805-9c59-4cb5-a742-736b4ebc6dbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a68b14f-787f-4570-b3e6-04cd5a70e98d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b96a5561-48f4-41fd-93f9-a2f62520c295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0840fccd-3458-4229-af4f-434a4a2126c9",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76feef5-b4b3-49ce-b87e-a4b07e8950be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc5d328f-4ce3-42c2-b89c-6f1c4fe40802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c65066-c35d-4f6c-b580-0b846cef32ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6069c45e-e821-47ec-b5ea-cba30645839e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34a955a-201c-4f5f-9c55-26d56a64e47f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb9aa96-b303-4eea-a7f8-65f22f1cca94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5441729a-20b0-4095-85cd-7897e9467f75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b1bf99-6813-4f3d-8a23-9cf16b284bcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd227e95-9533-40b1-a3b3-cc5d0e5ed23e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dbba566-65aa-41e8-b19e-9fa69c6b1b72",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d71148-4e2c-4a63-92d3-ce3dae50785f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c0fe80f-6769-46b3-ae20-3756b4515ad1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "036f6310-30fb-4ee1-a6b8-3359b1db44ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb8bd7a-7ba8-4276-b28b-d64c626619c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1bdb70-edd9-4125-8280-d6502a9e16e1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645f34bf-90c1-45ce-90a1-5164de653587",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58cc5fd3-05ee-4020-9824-dd4cb19c692a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5bea3b9-d0d1-45f5-b333-4d7766167acf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ecf859f-9c6e-4d95-905e-eb1e2e16a16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9e0480-7d6f-4d79-8080-3bfaafc507e3",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca245a1-4d9f-4b59-8af8-70f57d4451d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab07c66a-d4bd-4184-93f0-74acc1f149ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce477dc-f645-4724-9552-2ff0c2fd3939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "632805fb-8643-46f4-852e-b7527bb2a67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26bb5b80-901d-4acd-a842-e4940d53b534",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085492ed-2b51-4127-9f1b-ebbc1f384235",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3ed8f95-f420-4138-92ec-2193d15a90b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85cadb95-c898-4654-af9d-243b8fe48ec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be2fa75e-3fc1-4bcd-9ff8-8633f5a1e041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd577d9e-26af-4358-a841-d69d6413c4d7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ecebda4-2e88-4871-9d0b-bf7b5a5518de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd63a4a0-48f7-4772-bafa-b595b9efe759"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98da86f1-0cbf-4e1c-bef5-712964083b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c106cff-e613-4598-a433-fb9756bba03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d412bf68-5119-4828-ad89-5f99a4dfb0b6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e954e6-2068-4e0c-8589-fd7681b5fa45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c8326a4-a6d3-4fe3-8c5e-4ad117580ca3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e0880d-5e14-46a3-bccb-e8444fea5c67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe9f9934-6961-4b2b-837f-9af55f6ab675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d609ca07-063c-4965-bfb9-aae26ac8e853",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0efadf4c-7a46-48a1-bf81-3d4850f34fdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "306e2fa1-ac1f-444e-bda5-e3912af61e3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4bdfa6-dd98-426e-a33b-899e4a647b1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "994997a5-0dc5-477b-9a8f-debf2b4d6cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f918c609-cb3d-4c61-acfa-41e756678e40",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e38b7e4d-aebd-48b3-beaf-1b2c2ca8ae93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "021b60b1-22dd-4b92-94b2-2566ad69ec93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3697729-1ade-476a-a1fe-e359ebb1b3a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa7a4944-b2d4-41e1-86ec-95b4a8535db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29a90de-0310-48dc-b166-a340152075a1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882a7c65-e033-4428-b1ec-408700daefcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d09281dd-6722-4f07-9301-bb76ae0509c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "334231f2-c416-49fc-909e-e81671e9eaa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "392fdc53-6077-4245-8655-20ed023c7dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "415d0250-cea8-475c-a1bf-22fe2b7ad520",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03dbf1b2-8437-4f00-85b8-611661c9a44b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d0c7108-52c6-4de3-8c79-a1c69836eef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7fd73a7-b6a5-4a3f-a892-f0d02aa39287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1333545-34e9-45af-9190-e549e6c0c010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7dc140f-3533-4c41-ad0e-23f2eb924a77",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b538e3b-c5be-4d90-bf03-b1296a2b7fd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3387e2a5-940e-4922-8040-be0fccddeda4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "967d9637-8a18-455b-8ad8-0ee4aa33aa34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a573cee-f2ad-4302-b5ed-d25bacde913a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8e3b60-6b09-49bb-bab7-8fe386dd9be1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e512de87-ddac-4953-bd6b-5f2855314b37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae2c9c3c-6608-4973-b000-001b3eaab733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c117cb-3dd1-4d12-ba28-a476a7b04d80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2449648c-1e99-4832-88d1-7517edb17634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdcfd486-6af9-4c62-8008-38547de3dc88",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc88031f-3d21-4ee2-8c15-99f263cd8e1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53fc1207-58d8-4aa8-a729-fd381305a1ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4013eb-d51d-48f1-8ce2-623f04276a90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0c360f6-5a50-418b-96ee-53cb50d4ddb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9cbdfd0-3750-4db4-8b61-f8a02fc04ff8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b02bc96-4aca-4d8f-af22-b9fdc8bbf71a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "591447c0-88a9-4154-a51d-50be6d7ad65a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88cb6b8b-6ebb-4963-abfa-e757c5fbd3bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f9bfc5-4b8b-45bb-b722-55e351717913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aedc121f-2ba5-4757-a53f-07995284ffdf",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "989dbc06-8a7d-462a-9071-112b92b3e959",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f576896-0902-49d6-af36-bdb5e5587089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "070729de-4daf-46ea-ae18-bc2b328c18ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4adf11b6-dd3f-4097-ad72-2cd64e22d857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3601d7aa-bd8f-4e8d-947b-7edbc27969ff",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83340ee4-8c4f-449c-a137-a3b5116fa514",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adc82d9a-d97f-487e-8ffa-e5eae17a777d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7b0deb-a94c-43fe-b6c6-fa63c3fe0ff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1fecc9f-3e08-4e44-ad66-9daca5a090ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ee5cca-b4aa-49ed-90d7-43e8979d9740",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfccc3a1-fd7e-478e-b995-4f6758bdeccd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90d127d8-0104-4022-bd18-80d220bfbad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89dc0464-c48a-40df-9d7c-0bc5ed6dde97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cd95ad8-2d7e-434b-839f-edd06724569e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e406dc4-5db2-4cf1-a077-af98f3395e9d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7416c1-ed95-489a-971d-55b4314d31c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ec9e98c-d6c1-4353-b501-58d164bad080"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1260b7f-5142-4248-86e5-a7f912f524a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f805bb47-ebea-4c30-8323-83b797a7b463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6952ea4e-00e3-4901-bcaf-8e346faa4a23",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcfb1fbd-4c82-4be2-bab7-aa2fc5217b32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b82dffd1-2aec-4ba8-b216-494aef767875"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ad7876-43ad-4d9e-9f95-bf125ecff733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fea6bfe-8979-4fdf-a43a-850061a1dcb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cbee1e5-dff0-4756-9289-346ed1c2b20e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac7f95f-695f-4673-8794-e6903f960707",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0eb3fad5-d0fb-43b6-9496-92dfad27c83e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc82d736-5ef2-463a-9023-84df607ffb62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "583769bf-f814-4731-bccd-d350e5c2410a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad89685-c1e7-4624-a153-1fb4afa81bad",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17703d3-218d-419b-afc9-8e42527ff61b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f03b61a6-8543-49c6-89ea-300044042bea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc20fba5-ee65-409f-bafc-7c5b07a76855",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d524aac-7a26-48cb-a657-ece8abc26797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c309e593-5bf7-4e7c-9466-2ba5cb2cb1db",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e6e1b2-978d-494a-9b5d-9bbcae4d6f16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7544d45-6f57-460e-9637-9ef4954c9ea7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e679901-25da-42a1-8f6d-b791807ec193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df6a82af-0c7c-47ea-88ff-e3ff84c6d450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce9ef10-6bf9-422e-83c0-e0c545598dae",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf19aa3-93ee-4a70-aef2-aa624c96cfc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb0ceb0a-319c-4e51-90c7-d61dc7a52a80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b979faf-763b-453d-bdcf-cfa679c446fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2292bf54-23ca-40fe-bc58-1592b6dc5a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b180ba3-ca7e-443b-b130-02951fa31be7",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf91c144-dd69-4374-aa8c-053d04947021",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a64716ab-413e-4e13-bd1a-db4d8eb84e10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7215051c-5764-4545-9d62-f51cc99642a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "273698ab-47d9-4206-8b48-f11ab5021b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339a5af9-84e2-4b9f-a0a6-597e4269127d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a38bae6-7c78-4c64-aa16-195021d8f1df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "441e0e83-fa12-4792-bbf5-4d7decc54c4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb1da94-6a3b-4ea1-ad4d-d53396fcc65d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba42bc58-fde3-4ddd-a38e-2a5c966b990a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362c6cab-00ea-4feb-80c5-8ec97cc9c083",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680f1f6b-aa12-483e-88c4-f5774e90561d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d8ae6d5-dfba-4d82-910a-cccaf8913f53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d96b733-2654-4c7a-b034-678381930158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb07681-f78c-46f5-9ab0-d3ac3c1399e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88e6343-4b10-41a5-acf7-a1a5d1cc215d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f5eb98-60b3-4584-bce5-4d1bf0c5ff78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4109f08-a49c-4163-99ee-2de53563223b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26ac139-1a5e-4a87-ae63-0255998b751b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4190e108-6ccb-406f-8f03-ee78d1842a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f46b5e5-722e-415d-9d5c-ba70ec7a1d02",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9294c691-9c68-442a-9065-5a13188ad1da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19e3f62e-a2c9-42f3-8737-37a303e4d0b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00682074-4882-4a93-a1f4-605c64da53cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c06b6ed3-4e70-4bc9-87e4-3c94a9d98403"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03830bf8-9c7a-430b-840c-856eaf65010e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "604d62cf-2c12-45c0-b5b7-fea5fc9e5c67"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e173c60f-6e8f-4421-89e8-2931cca4938f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "be4d6f2e-4a61-4e92-b304-2ca83f9a07d4"
                    }
                  }
                ]
              },
              {
                "id": "9d307d9f-e539-4407-a5c1-b11e83f2f026",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b212fc2d-5074-4baa-8704-3b24aaecfcb9",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81cc2c7c-8867-45d9-bf57-07db0acc043b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "23594911-04f1-49de-9e92-041ad1b4a263"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d92224-bc7b-4597-a619-a35f4007d5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3a3027d-fc58-410c-820d-0be13c46704e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6093936-e272-457e-baeb-9b9a07a110d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b496e0a0-2b72-4fb0-8a93-f04df95a5186"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2bc80cc-fd1b-4cbc-8db8-7b6d357dad32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6ff5364-d5ca-4fd5-a1a4-5625d48c0eea"
                    }
                  }
                ]
              },
              {
                "id": "5c0e2669-c0e5-4a67-8283-b592bcc2652a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d07e133a-1bf9-4c40-89a9-602c515479c5",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37fbea78-173f-4683-b797-ebcaebd2bcb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8b0affda-e298-48d3-a471-3c57a08504e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73498713-8324-4e04-a043-2501e5c52690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7869a45-db0f-42e1-8e51-31bc29bf2a80"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e904a7cc-96c6-4d17-b9a3-c78bc1c506c0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3943df7e-d663-4bc9-acab-1571c223db40",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb3c2bcf-ecb1-46f1-b598-c71cd6bf50dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "eb6920f4-9914-45a0-b616-4f1050ca92fc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6253b83f-93c4-4ae5-b38d-ca07e4ceed28",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "740b458d-50f7-4ee9-80af-8b46a9a28c94"
                    }
                  }
                ]
              },
              {
                "id": "69d75ba5-85d0-4a7e-800d-bd727117edb8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c13031e-8a6c-4c7c-99a7-1ef5cb0f3f20",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b958f4f5-d2da-44ab-bbf5-2ec967accfff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ba2187f-313d-4951-8d59-39897272e66f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce9eb7e5-b1ee-4561-afca-6c18f0edc633"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d6ddf84-c05b-45f2-ab7c-c7faf7279ad2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ee98fd7f-2c92-425b-9176-72f24259535c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "610e00bc-10fa-474b-9d18-f9d39a45750f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2a7a1051-2bbe-4513-a688-e4cab398c2ba"
            }
          }
        ]
      },
      {
        "id": "ab172e47-3c55-406f-8856-60ecc777d314",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8f11d445-d96d-4138-a9e7-a3f5729f731a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8479ffeb-cf47-426c-8842-7434328d09dc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "56107b3f-2d96-4391-9e01-cad0f06c9a56",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11454566-5a82-45d4-87fe-dcb8f96351cb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fe77f1a9-6cd9-4a69-86c5-55a014e2f93e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dffb634-9cc1-44e6-a1ef-7eeb85d711eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69f7e6d9-f176-4d53-a193-ce76b0110f4c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a15b3ba8-8634-42aa-a76e-7114534e37fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa836626-a797-449b-b53a-40661b64b3bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2238ec30-2317-4b64-9cca-ee361adadb81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec881028-1945-4be1-83da-5096f64f6b63"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9d1e761c-f610-47ae-925c-f4e44f5af7b2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4af43a65-7ef0-4c64-b412-a6615e231b7c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6f0598e7-3bcd-433b-b537-284948e71939",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1708f41b-9b58-4e38-a576-fc7a8aa6ae87"
            }
          }
        ]
      },
      {
        "id": "e5ec8846-2915-445d-9cad-d8cae486ffa4",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "99b1a177-d011-408c-a110-ff8c4a17f1c2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "130ac8f6-377b-4438-80ab-0d44e150bc50",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b36699ab-9591-4f69-8518-4ac006093513",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912ec948-16e1-47c1-9522-351e65607ede",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cda5224f-273f-4797-89b7-61903f7a0621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c01cf0d-6ba5-46df-822c-bc2eaaceeaf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b669d51-f028-468f-afe2-bde5904426a5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd8a4f0c-5584-46b4-b21f-8021a95db6c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec97cecc-9cdf-4eac-b16d-1c994afdd70f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c5d654e-44d4-47f0-a541-bf26b2b8eca1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffc91937-b0f2-4d7f-9d25-1d848fbbc9e8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "05ded4bf-b2e5-4feb-b665-a47edd7f06c3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6337038e-30d4-4801-b697-3aa59ff3bb2e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d97b3a5-3021-4ea9-81ed-abc27d5dfb3f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "03e2b679-35a0-4d2e-aef5-5dce94168f06"
            }
          }
        ]
      },
      {
        "id": "644d1a57-321d-4079-8df0-59aea503c104",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "14c47d8e-9ccc-448b-8a2e-e1bacb3aad49",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bf2e1ef2-7d32-48d1-8168-505798ade0c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "417e2b9b-bcce-4cbb-b4c5-a5d66ffdb711",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151f5aeb-00c7-4589-9125-a7bf4017f56f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf9a58e3-eebb-4aaf-ba47-0ef377174293"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "950f9d2d-8cd9-4d6a-9a3f-cc9cd3b49d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "12c191ed-f4d1-4ff7-86ef-73a29d9b6e68"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "adc92958-ac54-4f0f-aa49-e6a10d6c3115",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ff58e2e-c40e-4f8c-8e04-86953c3ae4bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "db220e50-d384-4e4b-8a0f-bd2ac15fcdb9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "984b8919-f377-4b4b-a689-77320b708f4a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "63066168-ac52-49bd-bda6-4b972c914b42",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9e67193b-022a-41db-849e-9d4dcde23e6e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f74d2dc-374d-4fd9-a79f-6c5a7c4bcd27",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9deaf57d-4f5b-407f-8d92-18ea4caacedd"
            }
          }
        ]
      },
      {
        "id": "34c72bdf-3aca-4072-a1b5-18358cc51b9d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef910c29-148c-47f0-81ad-c765a7d8153b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c1f88d6d-f7d3-47e8-8b19-6a4a1f2fe502",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a25bb1de-0c7e-4686-80e5-2d07f8b08f1f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "792c7717-ef97-4b96-a067-0e2537f7a179",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "322d5299-315a-45b6-a4ed-624f94977cbd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.091228070175439,
      "responseMin": 2,
      "responseMax": 440,
      "responseSd": 30.778531368937788,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1705797594312,
      "completed": 1705797605087
    },
    "executions": [
      {
        "id": "5271a33e-6d0c-40ca-8f2e-dd473e8da8d1",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8528cbe9-24e8-4f27-ba83-2a0b47adb858",
          "httpRequestId": "3b278920-881a-4a45-9cba-c965ed17e569"
        },
        "item": {
          "id": "5271a33e-6d0c-40ca-8f2e-dd473e8da8d1",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "01808ca4-dbb4-4d0d-b97e-249e28402beb",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "03f64a3c-a79d-4151-91e0-4363856fd3be",
        "cursor": {
          "ref": "daad29e6-424a-4570-a690-06eed6300219",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8930d073-6d37-44ab-a758-6c7b5d6902f6"
        },
        "item": {
          "id": "03f64a3c-a79d-4151-91e0-4363856fd3be",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e02f018f-74fa-4489-98ef-f5f95856863a",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "b3ac26b4-2853-4c41-b6ae-7ccfcef5f72e",
        "cursor": {
          "ref": "6cbbffa3-43c2-4889-8ea8-1d53117e52ac",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e664c520-e518-4bbe-9e8c-ea958d31575c"
        },
        "item": {
          "id": "b3ac26b4-2853-4c41-b6ae-7ccfcef5f72e",
          "name": "did_json"
        },
        "response": {
          "id": "4b5a6ee2-d2dd-4dcd-8298-5ca5f783099f",
          "status": "OK",
          "code": 200,
          "responseTime": 201,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9474d0d9-e1bb-4dfb-9fec-f8105d98152a",
        "cursor": {
          "ref": "cf751a5d-b8b6-4add-9127-c1e9980e25c2",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "27e986c2-760d-48ad-b8ec-9038443e6d13"
        },
        "item": {
          "id": "9474d0d9-e1bb-4dfb-9fec-f8105d98152a",
          "name": "did:invalid"
        },
        "response": {
          "id": "9701e28f-94ec-4660-bbb6-ad1bfeba6476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9474d0d9-e1bb-4dfb-9fec-f8105d98152a",
        "cursor": {
          "ref": "cf751a5d-b8b6-4add-9127-c1e9980e25c2",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "27e986c2-760d-48ad-b8ec-9038443e6d13"
        },
        "item": {
          "id": "9474d0d9-e1bb-4dfb-9fec-f8105d98152a",
          "name": "did:invalid"
        },
        "response": {
          "id": "9701e28f-94ec-4660-bbb6-ad1bfeba6476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a6d9fdd-ba85-4473-a854-52141f996e81",
        "cursor": {
          "ref": "db7bd449-da14-4a88-8e86-d0c8fa326146",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bf1a543b-b109-4dee-8486-fbae908fe909"
        },
        "item": {
          "id": "9a6d9fdd-ba85-4473-a854-52141f996e81",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "72eb4cca-bc47-4f3c-89e3-67feb057d6c4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 49,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40c649a-8e5b-4295-9b58-24ad4dd388e0",
        "cursor": {
          "ref": "7f6b6efa-316d-495d-8048-ae2972cfcfbe",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a966cab4-5c51-4483-925e-e3884c8a5eea"
        },
        "item": {
          "id": "f40c649a-8e5b-4295-9b58-24ad4dd388e0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f89af36e-3832-4bdf-8f03-d0f7dd069c86",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72d5643-9b0b-481c-92f5-4ec9f7350f62",
        "cursor": {
          "ref": "f966735a-81ac-4ef0-926f-55fb2d6ad282",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1c2a30b4-fa52-4460-9e76-178b0786f72b"
        },
        "item": {
          "id": "c72d5643-9b0b-481c-92f5-4ec9f7350f62",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "bab55cb9-a64b-4d03-9f55-823c508a6879",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437d51d5-d99a-4455-a374-e5f3c3a68a3b",
        "cursor": {
          "ref": "58e7ece9-1046-447a-a290-fc54192a4169",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "38f33fe5-db58-4136-a100-1a9a2ec55419"
        },
        "item": {
          "id": "437d51d5-d99a-4455-a374-e5f3c3a68a3b",
          "name": "identifiers"
        },
        "response": {
          "id": "c6d5796d-2bea-4ed9-9335-ba48c183da39",
          "status": "OK",
          "code": 200,
          "responseTime": 36,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc380391-1af2-4cb4-9fd4-5c112758258e",
        "cursor": {
          "ref": "19dcba33-69ea-48f2-bff2-4554a442d67b",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a21b3a71-ff27-4219-8187-45c3a4139371"
        },
        "item": {
          "id": "cc380391-1af2-4cb4-9fd4-5c112758258e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c3a83661-acb6-48d6-81c7-4e41f0f9684f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74ab5ca-cd96-414f-8ff7-2c300b55f112",
        "cursor": {
          "ref": "43d52795-fbc5-480d-9249-81c299d3ab39",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7e0fcb4e-f087-4594-ab1e-cfa4a53147b3"
        },
        "item": {
          "id": "c74ab5ca-cd96-414f-8ff7-2c300b55f112",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "be96c2e4-249c-4f1e-a2f9-b87db6bb3670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a6fbc2-a584-419b-b366-30c3b0576770",
        "cursor": {
          "ref": "b383e3aa-f3b3-4c6c-bc64-0557b243c318",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "586d01ab-1711-454f-8c60-bfd73631f4ce"
        },
        "item": {
          "id": "48a6fbc2-a584-419b-b366-30c3b0576770",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "84038445-c22d-4c36-b837-d3bfe2b2164b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf0fa4c-49d8-43c1-8f05-a3665271d7b0",
        "cursor": {
          "ref": "171b299c-6999-4b0f-bc0a-7154100ebe8a",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b1688475-7936-499c-b3b6-b7837e32bc4c"
        },
        "item": {
          "id": "8cf0fa4c-49d8-43c1-8f05-a3665271d7b0",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3bdb90fd-c0d1-40cf-87f1-916cf308d73b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9d330f-4fb2-43be-bcbc-3a521197a98b",
        "cursor": {
          "ref": "329989ff-63c8-467b-b27d-532a70180ad7",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ea718836-d25c-4f1c-9f56-ca0b885a4996"
        },
        "item": {
          "id": "ce9d330f-4fb2-43be-bcbc-3a521197a98b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "07dfb989-a3a0-4c80-bd32-1d141b5cf32e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24fbc2d-b5d1-4695-a842-43c582095483",
        "cursor": {
          "ref": "cdda44aa-3787-4dd7-b7f8-117fa603acf4",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9707a7de-abb8-4964-91cf-cb7e8d2d0be1"
        },
        "item": {
          "id": "b24fbc2d-b5d1-4695-a842-43c582095483",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8207ae91-2942-4286-950f-0cb0f7c832a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c97029d-642a-410c-8919-a8f7dd4ff165",
        "cursor": {
          "ref": "c32b9f5f-3917-4728-90af-6e373c184c12",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "518cb8e8-ff08-4403-9c11-6763f876e654"
        },
        "item": {
          "id": "5c97029d-642a-410c-8919-a8f7dd4ff165",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "bf500a47-70a4-4492-a38a-dbbe227fb804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1edb06fe-d3eb-4b02-9da5-9141ac19252f",
        "cursor": {
          "ref": "28c6f1a9-4617-48c5-b11a-9a152c63245f",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7137263c-2cb7-4caf-bd39-07e948caabb3"
        },
        "item": {
          "id": "1edb06fe-d3eb-4b02-9da5-9141ac19252f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b9d1723f-34e7-494d-8eff-c399605edd20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590152d4-648b-48a9-bff1-122190bcbbf9",
        "cursor": {
          "ref": "abaf8c5d-d553-47e5-acbb-b8e15de6479c",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9bde023a-5fb7-4d08-a511-af18b4dbfe73"
        },
        "item": {
          "id": "590152d4-648b-48a9-bff1-122190bcbbf9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ac7e6b0f-6833-4b80-ae00-288475357fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289c594f-c423-4177-97b7-6c55fcd29892",
        "cursor": {
          "ref": "68facb11-b93d-456c-a223-ff4f11815933",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ac389621-84f3-4bcf-a745-4c56705e23bc"
        },
        "item": {
          "id": "289c594f-c423-4177-97b7-6c55fcd29892",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1b351bb0-40e2-4b03-bffc-7278bf14085c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54cd70d6-3bf6-41d4-a349-ca8abb8041b8",
        "cursor": {
          "ref": "b001b00b-16d3-4792-aca2-bfcaa5b68414",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6e27454c-0734-47f9-b3e3-698be0ff6cb9"
        },
        "item": {
          "id": "54cd70d6-3bf6-41d4-a349-ca8abb8041b8",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b83d0870-cc58-4a13-afd1-2c1cb1fa2a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ed4dd9-7edc-4dab-844a-19c12c41f3ed",
        "cursor": {
          "ref": "57306bd1-3943-4c3a-a09b-d4f98f6d5f56",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "389fb6fa-e989-4507-97e6-e9ce9c3b6976"
        },
        "item": {
          "id": "b3ed4dd9-7edc-4dab-844a-19c12c41f3ed",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "862854d6-30a9-4c6d-8c0a-7b02344c460e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74e139f-bd0f-4e89-9a43-c5ac5894ba21",
        "cursor": {
          "ref": "64158dd4-6c74-4bc9-a54d-13e616c4588e",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "50b14040-ab9a-470c-9e13-a11e41062de1"
        },
        "item": {
          "id": "b74e139f-bd0f-4e89-9a43-c5ac5894ba21",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "85d67914-8b8d-4853-894c-b5be43e61d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d8a379-a40e-4ea9-b141-cfc73ad38512",
        "cursor": {
          "ref": "8cb57c95-9c04-4995-ad79-976a282c9b19",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6ddf9bb4-f7ba-4ba9-b85c-4eb4248c462c"
        },
        "item": {
          "id": "80d8a379-a40e-4ea9-b141-cfc73ad38512",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3de74bce-9ec1-4985-ad1d-8849625dc8d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b950ba83-79c2-46f4-a9cd-9268c84d7129",
        "cursor": {
          "ref": "7d547182-3ec6-4b6d-ae11-81c487848619",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3a6af497-f7be-45a0-a3f4-ab754d39e37a"
        },
        "item": {
          "id": "b950ba83-79c2-46f4-a9cd-9268c84d7129",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9c9391d9-2024-4d79-ad42-a11db4d1da1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0999ed-f45b-49ac-a62b-c379f3c54978",
        "cursor": {
          "ref": "f434b74d-b474-4d89-8c45-cd06819e5090",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "37b2b621-f593-4f2d-a788-2d0cd9410eaf"
        },
        "item": {
          "id": "ce0999ed-f45b-49ac-a62b-c379f3c54978",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "56f40eee-70fb-4fd7-a437-37d02ccec369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d47d54-a8f4-46d5-af8f-df277cfac595",
        "cursor": {
          "ref": "41cffd59-81c1-4395-a1e2-e1dfc35e31a1",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "454be37d-c0f1-418f-b5d1-20d809a3a2eb"
        },
        "item": {
          "id": "88d47d54-a8f4-46d5-af8f-df277cfac595",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "67b53d9b-44ae-4c0b-854b-2de0c41d8a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119f1b9d-ea43-45e0-8870-75fd73a53531",
        "cursor": {
          "ref": "bd131f53-ab81-49cc-ba00-4db5e56e7344",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e8a9fef1-66a6-4851-9ff0-07eb7476ecbf"
        },
        "item": {
          "id": "119f1b9d-ea43-45e0-8870-75fd73a53531",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "06361153-6b59-4080-aecc-148a66cfb11f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90bc2ddd-6688-46d3-a427-61ea87be2bc9",
        "cursor": {
          "ref": "6c3db165-0989-4182-a5f4-32a6fed42cfd",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "abe74ec9-1464-473e-bb97-3fcb60ba9597"
        },
        "item": {
          "id": "90bc2ddd-6688-46d3-a427-61ea87be2bc9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5c2f4a88-4980-41dd-9fd1-a464c4538082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a10fb7-615a-4feb-8948-3e01f1b78288",
        "cursor": {
          "ref": "7f4c4230-356f-4074-ac7f-7c52559ee7a1",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2ec56c3b-b170-4400-a44e-95811d17f884"
        },
        "item": {
          "id": "23a10fb7-615a-4feb-8948-3e01f1b78288",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3bbc0101-8a82-43d7-aedc-c50b61fcb6c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d2fe23-1a1a-4b85-ad81-2da13dbf0d39",
        "cursor": {
          "ref": "51e5f790-8781-43bc-b5a1-26a38cd8dca4",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "67c42415-0825-407a-84e8-a444a20557fa"
        },
        "item": {
          "id": "61d2fe23-1a1a-4b85-ad81-2da13dbf0d39",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b8aee89f-abd9-4cc1-b0e0-e0bf3b165a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7126ff02-5c02-42dc-b253-cc6e8e052ea3",
        "cursor": {
          "ref": "f6e79706-d6b3-4aa5-babc-7d7cbe143566",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "475e59d5-a910-401b-a66d-9354c1278999"
        },
        "item": {
          "id": "7126ff02-5c02-42dc-b253-cc6e8e052ea3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a274098c-5cbe-4c28-be3a-ba166930a776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef31dc15-0025-478b-9087-572062fc2800",
        "cursor": {
          "ref": "4ed31348-205a-4231-a683-730fb5ecedf6",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d411eed7-88ca-4feb-99f5-de26b0d3de8a"
        },
        "item": {
          "id": "ef31dc15-0025-478b-9087-572062fc2800",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "79075fb7-dab3-4359-8cb3-4e00aa1a3531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c8dd0a-4a96-49bd-91f8-02ad5a72ec5f",
        "cursor": {
          "ref": "e9b79837-3b41-441d-a0ce-f78842b7f554",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b9f2c780-604c-4847-bc1f-42480ebf879e"
        },
        "item": {
          "id": "23c8dd0a-4a96-49bd-91f8-02ad5a72ec5f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e7161f65-0adf-4478-8a48-31ab05c70ec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258b4c6a-4d52-4b2f-a259-cc129f054b95",
        "cursor": {
          "ref": "33f30f5c-2869-498a-8da4-d4882be24d59",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "343f8112-5108-40e0-a3ad-e27ec1a9145d"
        },
        "item": {
          "id": "258b4c6a-4d52-4b2f-a259-cc129f054b95",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f79c7563-02dc-4c32-a6f9-f308184b321b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798cf8ee-03ae-40d7-bb49-cce514367a76",
        "cursor": {
          "ref": "727426d1-493f-4396-8160-46b35d7b2b41",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0260b2a7-fd73-473f-a33a-ea4b9437cf51"
        },
        "item": {
          "id": "798cf8ee-03ae-40d7-bb49-cce514367a76",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ef77cc9f-3267-46f4-818a-4e911e2ded8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80e4255-0b70-4525-b52d-9118362bdeb5",
        "cursor": {
          "ref": "22cc322d-2940-4edb-ba85-545ac29960f9",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ec0d1b74-20b3-45f6-b7c6-cc6e1acd3719"
        },
        "item": {
          "id": "d80e4255-0b70-4525-b52d-9118362bdeb5",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ed4a5cf3-101e-4aa8-bf56-67ce5225ce94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89289a0d-a85f-473c-9673-2cb10584f182",
        "cursor": {
          "ref": "e35d2136-8ff0-44f3-b03f-42b35bee8edc",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "da0f14d2-34b2-4111-8284-88cbe1ef73f5"
        },
        "item": {
          "id": "89289a0d-a85f-473c-9673-2cb10584f182",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "eab4d86f-7313-4a61-bf80-04021722668e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f44ea3-323c-4fe8-9d99-3a01ae24d73e",
        "cursor": {
          "ref": "0667e003-2b3b-4296-bb0d-f2c1eb24dfd0",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "072c8838-2f29-40f6-9991-41aadb568ae4"
        },
        "item": {
          "id": "d2f44ea3-323c-4fe8-9d99-3a01ae24d73e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5491995a-169c-4067-8537-ad3cfc3f0341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c223ee-bb44-4a3b-90c8-87e68b0d93cb",
        "cursor": {
          "ref": "ae359fd3-c2d2-4079-b218-3e5dd2cb370a",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "952fdbd8-f756-45a9-ab86-3f47d2b7e502"
        },
        "item": {
          "id": "99c223ee-bb44-4a3b-90c8-87e68b0d93cb",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b343b730-9702-47a3-8f2b-c3fa7435ace7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18171fab-b975-4a5d-8913-4f45c765b6bf",
        "cursor": {
          "ref": "42ca7b0f-676c-45bb-9c78-c07c695c2e19",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c5d0975a-0e28-48b4-9cdb-e32681052d45"
        },
        "item": {
          "id": "18171fab-b975-4a5d-8913-4f45c765b6bf",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e419bee0-0719-4897-bc1c-04bf1f2179da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b85f9f-3e45-4ed4-af2f-185c074a3993",
        "cursor": {
          "ref": "0dd99338-706b-4c2f-b4e1-39aef3ef8780",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a205aa21-9f38-45f4-9b07-7b761d6dd17a"
        },
        "item": {
          "id": "e3b85f9f-3e45-4ed4-af2f-185c074a3993",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0fa24049-b3a6-4286-916e-7b87860723ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31896789-cedc-4820-a00a-549b9d4a6009",
        "cursor": {
          "ref": "9b51fc19-c913-441f-90eb-498f2af75fde",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "57a4e4b8-e2aa-449a-a6fb-2c4ae0399b67"
        },
        "item": {
          "id": "31896789-cedc-4820-a00a-549b9d4a6009",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "99cda07e-f050-4a76-9085-064ee922ed71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "accea86e-e826-4749-8fad-72be84bc809f",
        "cursor": {
          "ref": "91a1353e-3286-4cae-9d87-a421ebbe1aa9",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "72ec758c-6ff6-4a9a-84a9-36b8abf549cb"
        },
        "item": {
          "id": "accea86e-e826-4749-8fad-72be84bc809f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0c3ac6ea-3f2d-4618-b341-59262f87d060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91438e6-fb99-4dba-a2a9-e40fd9439983",
        "cursor": {
          "ref": "4665a0de-1734-4da2-a89b-2a271862b400",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a8f0f260-3491-4f1b-8f85-160eade08199"
        },
        "item": {
          "id": "a91438e6-fb99-4dba-a2a9-e40fd9439983",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ebbb9061-b57f-4594-b291-57241995635d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a14914c7-3940-4a84-9cf1-6a1ec6abb5f3",
        "cursor": {
          "ref": "fef6e7f2-5143-4141-a8ec-f308e9d8d863",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b5c5af23-3ac7-498e-8fa2-8c4c3cf816a1"
        },
        "item": {
          "id": "a14914c7-3940-4a84-9cf1-6a1ec6abb5f3",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d4aaddec-b441-422f-a410-1d335b59fb32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ab7891-8d59-4bb0-98e5-291b4895d02b",
        "cursor": {
          "ref": "c6d19898-5bc7-44c4-b3dd-ec9c26b7f1c4",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b44f582a-611f-4c5c-a900-73cb2ffdf6d4"
        },
        "item": {
          "id": "83ab7891-8d59-4bb0-98e5-291b4895d02b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "708a7de6-ed75-441d-8684-18e1d515c9bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1416677-4a39-4ffc-ab00-0150f9d35d24",
        "cursor": {
          "ref": "6eb900c8-4f32-4835-bd90-0affcdead785",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9306d096-f2bf-45a4-a9d8-6c471b0861aa"
        },
        "item": {
          "id": "f1416677-4a39-4ffc-ab00-0150f9d35d24",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "06cdc427-f31e-451f-998a-4fbf2bb8657a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7eb391-e3f0-4996-ad99-6579476100cd",
        "cursor": {
          "ref": "13fd1a87-f682-4632-8788-b4e3cb324574",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2accb4af-9e66-413c-b72a-b25875db7caa"
        },
        "item": {
          "id": "cd7eb391-e3f0-4996-ad99-6579476100cd",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "60f2702a-2961-4f1a-b0db-955e62f97d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef8e445-5ebe-4b66-8b73-bcfd12d6cb67",
        "cursor": {
          "ref": "38addfd6-8689-409d-a364-2168bc46c4ae",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a2f06fa8-664b-4bf0-91b2-cc5588c7f6ea"
        },
        "item": {
          "id": "5ef8e445-5ebe-4b66-8b73-bcfd12d6cb67",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c93a1cf4-4276-4053-9891-73a7dba694f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c0ed88-9185-4fc8-bf6a-1f8c6854b745",
        "cursor": {
          "ref": "5f9cae64-d944-40f9-91dc-a7da8f186a3a",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e38a6eb1-be29-452b-9e69-eb2a60541712"
        },
        "item": {
          "id": "a5c0ed88-9185-4fc8-bf6a-1f8c6854b745",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "06e4da4f-63d0-41cc-8a71-930a9182e46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c01e1661-e088-4504-af95-1e1e6b069c70",
        "cursor": {
          "ref": "20c0d656-31cf-4b87-8ed6-219db92a690d",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "106ac7f8-fc9b-48c3-96d1-93d84fb70151"
        },
        "item": {
          "id": "c01e1661-e088-4504-af95-1e1e6b069c70",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a5d5e881-93b9-4fe1-bf01-24496f2c41a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c75aa91-adac-460a-8381-0912476a5e1f",
        "cursor": {
          "ref": "4256d109-5d6e-4e85-9562-62f28dd623f5",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "18596e4e-d091-497c-b9ff-6bd3e39d12ad"
        },
        "item": {
          "id": "1c75aa91-adac-460a-8381-0912476a5e1f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a47e8dab-d9a5-4a15-b2b2-5ae28406a768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a879ea-6e97-4a8d-9be1-03d85a8fa927",
        "cursor": {
          "ref": "ec208e01-ce58-4629-b01a-ef2ce0eac7d5",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1916aeb3-d7b5-45ba-ab08-34e8b3b89930"
        },
        "item": {
          "id": "e8a879ea-6e97-4a8d-9be1-03d85a8fa927",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "28beb475-924d-43ac-9ab0-5ec0320b2bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db36bbd9-5b19-487d-98c1-28fd4cf23c26",
        "cursor": {
          "ref": "c88e834e-2c41-45fb-a303-5533405bc5e0",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7e4eb255-1ac5-40f5-962f-876caf2ae0aa"
        },
        "item": {
          "id": "db36bbd9-5b19-487d-98c1-28fd4cf23c26",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4eadde2e-07e3-4682-9df5-e8be9317f3d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c2734e-d2ec-4f21-8147-2c004e67d40f",
        "cursor": {
          "ref": "6c432539-eba6-4620-8e3f-aa74571c6295",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9b47f216-73c0-4218-ba75-ad09c22fdf17"
        },
        "item": {
          "id": "f5c2734e-d2ec-4f21-8147-2c004e67d40f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "580e7d76-9b45-4c98-bf41-237d20c4774e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11c55ef-16a0-4500-bad0-125150423dea",
        "cursor": {
          "ref": "0a1d940c-27be-4c32-b684-5221fa23f18b",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3096caab-666f-42bc-9242-75afa5479f06"
        },
        "item": {
          "id": "f11c55ef-16a0-4500-bad0-125150423dea",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "16c29634-8b60-48a5-b68d-287e7923f4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c535c3-1f8a-432e-8661-afde18564f94",
        "cursor": {
          "ref": "d92b7f47-49a2-473f-8315-ce0e361ce96c",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "69924dfc-ab33-4e5e-ae67-04c1ecc1b287"
        },
        "item": {
          "id": "50c535c3-1f8a-432e-8661-afde18564f94",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "143cd9e2-af71-46b7-a1bd-e4f427ede740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3abafe-4810-4a53-86e3-6c0bb3d14331",
        "cursor": {
          "ref": "c4de0ace-3279-4d59-a9ee-a891c26ccf3e",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4770526e-cdf6-4561-9d63-a067622603ac"
        },
        "item": {
          "id": "fb3abafe-4810-4a53-86e3-6c0bb3d14331",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0007f6d6-b2b6-4cf7-9f8f-16ef440320b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "990b0bc8-3e08-42f1-939c-cf60749acc2b",
        "cursor": {
          "ref": "6c62faef-7e87-494f-893e-7bebe895e914",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9cf59284-fadf-4852-a5a9-013a68a3ca86"
        },
        "item": {
          "id": "990b0bc8-3e08-42f1-939c-cf60749acc2b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "676ba9a2-1358-41be-84c5-abc2f642b92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c15fb7-579a-4a04-8714-d493bd3d177d",
        "cursor": {
          "ref": "88a9c3ed-6658-4830-bee0-e55b89781a92",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e07985b9-b32a-40a6-9395-c4e740c5e08e"
        },
        "item": {
          "id": "c4c15fb7-579a-4a04-8714-d493bd3d177d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9559144a-6caf-4fb4-b16e-3ffee2fb86e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44810b1-af02-4cfc-8900-7afc2d1a3d72",
        "cursor": {
          "ref": "418de2b1-9dc0-4296-98b1-e6afe6f82447",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7ec8a128-f8e3-4846-890a-f4f7ebf36f08"
        },
        "item": {
          "id": "d44810b1-af02-4cfc-8900-7afc2d1a3d72",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "0e7c91f3-9523-44ed-a403-347b56367c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862eb899-14d4-4851-9d7f-9b1b2865eb89",
        "cursor": {
          "ref": "bc8bcff6-16a0-493e-919e-db12e8272158",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "99d42100-cbcd-498f-8428-2a9b5b610c27"
        },
        "item": {
          "id": "862eb899-14d4-4851-9d7f-9b1b2865eb89",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4d996174-9f1f-4f45-b97a-7b7079f0bb6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982188dd-d288-4135-ae30-498fa91d3f16",
        "cursor": {
          "ref": "41b89d6b-2aa7-406d-8b32-cf9a87a86254",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5205bca6-6aa9-4da2-905f-62e17ee5ed90"
        },
        "item": {
          "id": "982188dd-d288-4135-ae30-498fa91d3f16",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c910fa26-7242-4398-b34f-bab628d11713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e801bb1-d546-4211-9531-e79ed081f314",
        "cursor": {
          "ref": "b4848ab2-f6e6-4541-ad0f-7e4eff81195a",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "10500083-532b-4f04-8a0b-b3525bc2b3fc"
        },
        "item": {
          "id": "5e801bb1-d546-4211-9531-e79ed081f314",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "602f11de-ebbd-4de3-9fd6-508cd3b7c6aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1468deb-e657-4425-9d3d-8f59700397b3",
        "cursor": {
          "ref": "bee96a14-da42-412c-b647-42c754d76ae2",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c0733e15-5e57-4610-80ba-1adb24638cca"
        },
        "item": {
          "id": "c1468deb-e657-4425-9d3d-8f59700397b3",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "86f5c68b-e60c-4150-b566-824c26cc22b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6040fe8-75f0-475b-9e03-bbbc2315aad0",
        "cursor": {
          "ref": "8f4ab1fb-3784-42b2-a4e7-1f25f34a9137",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6a267696-8d56-4452-8964-00f248615526"
        },
        "item": {
          "id": "b6040fe8-75f0-475b-9e03-bbbc2315aad0",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9d12fd8d-b4f8-4136-ba0c-eec385c76b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc98e46-5c68-4a94-872f-ac16e3b0cf52",
        "cursor": {
          "ref": "f7b4a4ca-6359-4c02-8aed-8461de915476",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c77c7302-5f63-47f5-8126-874dadd58f13"
        },
        "item": {
          "id": "9fc98e46-5c68-4a94-872f-ac16e3b0cf52",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "fbc21b16-3d4b-48b5-9b7d-87be0c1c236a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4be894b-2cd6-4ea7-946f-d3d2c82d9531",
        "cursor": {
          "ref": "761fc084-9af5-4191-9702-e1b674d740aa",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6d151260-c232-4cb3-88ab-30eb4cfd56f5"
        },
        "item": {
          "id": "b4be894b-2cd6-4ea7-946f-d3d2c82d9531",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5286a4e2-9f91-4d88-ac5f-9de7b80e211c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97eedf75-7466-4000-8497-52d000f2cfd7",
        "cursor": {
          "ref": "5903ac52-f52f-4990-8e34-7b2bbd8b0ef3",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a2b0c5f6-4f46-4b8f-8d29-40ff5b54f994"
        },
        "item": {
          "id": "97eedf75-7466-4000-8497-52d000f2cfd7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0afb13d1-9071-458b-a1b5-021488d22de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628206fb-3207-430f-ae18-f46ace12408e",
        "cursor": {
          "ref": "5ad02abd-356e-4d16-9351-af5f98e7c02e",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "251b7c4b-c715-4691-bb16-6885dad88cef"
        },
        "item": {
          "id": "628206fb-3207-430f-ae18-f46ace12408e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e157f78d-6121-4d14-98b3-13960d77b360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde0be5e-859e-409b-be0f-e2ce30110c9d",
        "cursor": {
          "ref": "56b50555-3680-4785-9489-d4221cbeb742",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1f272125-74da-4490-a16b-eed2690e4d34"
        },
        "item": {
          "id": "dde0be5e-859e-409b-be0f-e2ce30110c9d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4da8ec29-763b-4e1e-b998-08a0d5288909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b756a0-97af-499e-80bb-404db9f65a6b",
        "cursor": {
          "ref": "fe261135-3e91-4723-963b-a1041665fee2",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6f6c327e-4ba5-48c0-9d1a-1a6820b6f9c4"
        },
        "item": {
          "id": "e0b756a0-97af-499e-80bb-404db9f65a6b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3ea28151-c798-4da3-8f14-174ef7721a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd7e39e-3ccf-43c0-ad00-7a0de41532e4",
        "cursor": {
          "ref": "e8dfa7c7-ccb0-49b8-a4de-969410704a51",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "fd7d52f5-1a71-43b5-96d0-ff805d56df62"
        },
        "item": {
          "id": "ecd7e39e-3ccf-43c0-ad00-7a0de41532e4",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f4062c1d-6f64-4790-a355-f5f75dd09f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f11eea0-15fe-49f6-a648-23713b2e7c02",
        "cursor": {
          "ref": "1ceff3b4-badd-47ea-9e8c-0ebec1f135f4",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1ed9e42b-6280-42d5-a342-94b378da745d"
        },
        "item": {
          "id": "9f11eea0-15fe-49f6-a648-23713b2e7c02",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b501c957-c697-4eff-9810-208751672755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73dde56-787a-4658-81c4-b1934773e49c",
        "cursor": {
          "ref": "8d554eda-f345-4410-a098-97119833372c",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "55364f2c-8b7d-4089-91f7-33a67ffde916"
        },
        "item": {
          "id": "e73dde56-787a-4658-81c4-b1934773e49c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "13079021-fbd4-4f33-8625-77230a6bcd17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63508749-dc88-457d-ba57-3345f3051800",
        "cursor": {
          "ref": "a30a5bd1-c62c-414f-82f0-79e115789d91",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1a51b8b2-677e-4c28-9c45-676932d7c561"
        },
        "item": {
          "id": "63508749-dc88-457d-ba57-3345f3051800",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a41ada00-c647-455d-a63f-bee24087a276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab47570-4939-43b9-8642-a6f2d11ccf23",
        "cursor": {
          "ref": "88ad5dee-8ee6-435c-887d-54c2db9fce0b",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "240ea9ec-cfcc-4d31-a02a-f9662b4a7012"
        },
        "item": {
          "id": "3ab47570-4939-43b9-8642-a6f2d11ccf23",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "211f4b4f-f5e3-4c15-b99d-15e89d5347ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4bc0454-b915-4d67-a313-b587a8b86b32",
        "cursor": {
          "ref": "f231e2d4-025e-4ea3-9c77-a7661096f2e0",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8b963366-59d6-4543-9a1f-25186435aa4d"
        },
        "item": {
          "id": "a4bc0454-b915-4d67-a313-b587a8b86b32",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1de36d5a-461d-4693-acaa-5b9d8ac18f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7fb0220-661f-4a60-a297-b40c8d047d5a",
        "cursor": {
          "ref": "c0e07f3a-74fa-466b-887b-99bf889312a7",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "abbd1434-3450-4de6-9d35-7a5922635408"
        },
        "item": {
          "id": "f7fb0220-661f-4a60-a297-b40c8d047d5a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "63aded6c-5b66-423e-9aaa-0c5ae124da78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e97a21-777a-4095-9ddf-f14f7882fd9e",
        "cursor": {
          "ref": "1a77281c-68c7-4848-b4cc-0bce08040ca8",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "7db6d850-225f-4bab-a820-1fc088ff2f6b"
        },
        "item": {
          "id": "52e97a21-777a-4095-9ddf-f14f7882fd9e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0817082e-7cac-45d2-a3dd-074ed38984bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ccb5c12-6bf6-48e8-aad3-ee10e16eaa0e",
        "cursor": {
          "ref": "359ddc06-bc4b-488a-bf4a-d87043feb105",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ea2ba4b2-2404-4383-8d70-0db2d9693dde"
        },
        "item": {
          "id": "0ccb5c12-6bf6-48e8-aad3-ee10e16eaa0e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "527999b2-66a8-4c32-b0b0-a5f2adaf42c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f5cd25-0c92-4d02-a9c1-22a7fa7c9b47",
        "cursor": {
          "ref": "6eacafc5-17bc-486e-bd31-e74364e1f740",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ec26c82b-599e-404c-8ae5-33eff589992d"
        },
        "item": {
          "id": "87f5cd25-0c92-4d02-a9c1-22a7fa7c9b47",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "eb93765a-79da-4f41-a436-d604f7e1339d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4895b5-7872-4f5d-b2af-860fe7410c44",
        "cursor": {
          "ref": "5c1abba3-65c8-4251-85ad-3f421c3b9ed1",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b3403652-e972-40c0-a17b-8b9d6a9f78a1"
        },
        "item": {
          "id": "ee4895b5-7872-4f5d-b2af-860fe7410c44",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b081ed82-7265-410a-a956-7c37358283d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc2b79d-a478-40c6-9897-83cc1d736624",
        "cursor": {
          "ref": "7ef6ea4f-44da-4c5f-9706-9e99618d890c",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2aa9818e-304c-4927-b025-9a1f00e4333c"
        },
        "item": {
          "id": "5cc2b79d-a478-40c6-9897-83cc1d736624",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ac2440df-6d7e-4703-a28f-e247f4bb7b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f502d801-e135-4ed5-aeeb-6950657ff3bc",
        "cursor": {
          "ref": "2e6f4477-41f9-4502-b7ca-6d3c50949833",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2f5a66e7-e817-4b4f-948c-a45aeb5fa1ff"
        },
        "item": {
          "id": "f502d801-e135-4ed5-aeeb-6950657ff3bc",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "687a1e46-0fce-4aea-8e00-c8a8e04fd05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741abce7-108e-4287-b018-8b3520a92465",
        "cursor": {
          "ref": "898b48dd-13d3-4eb4-aec6-cdce3577e126",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f1749d12-fd9c-4501-bdd3-964460f62f2d"
        },
        "item": {
          "id": "741abce7-108e-4287-b018-8b3520a92465",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "aa4ce466-9b9a-434f-a957-fb729172b75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0982f502-28e1-422c-93e7-00a230570662",
        "cursor": {
          "ref": "9aa71564-8b87-486a-adde-9c0e71378584",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "552118e9-640b-4874-8480-28d527ac65eb"
        },
        "item": {
          "id": "0982f502-28e1-422c-93e7-00a230570662",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2e8eebe1-7751-4385-a907-1c01fc5be2f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832f98a3-3d31-4439-b92e-864e4e1868a6",
        "cursor": {
          "ref": "2de60fde-32b9-4d5e-9d5c-07dea94b13b0",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "bef13efd-3a6f-44d6-bd95-3478e1e59e13"
        },
        "item": {
          "id": "832f98a3-3d31-4439-b92e-864e4e1868a6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b43e2e9e-8b5e-424a-bdda-77f31367540f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc763818-81aa-4843-8aca-ac7d073262b3",
        "cursor": {
          "ref": "6e7233d1-f267-4f6a-be4c-f517c33c31b7",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0cc188d1-6e8e-4b2e-a654-0eb85b47bd2e"
        },
        "item": {
          "id": "bc763818-81aa-4843-8aca-ac7d073262b3",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f4db567d-b71a-4d59-b5de-619157653f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44aca9e-526c-43b2-9446-192798c367bd",
        "cursor": {
          "ref": "58211b1c-51bb-4c5b-9683-7baf11a28699",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e422ccfe-4101-4403-9645-d7521e3d27c4"
        },
        "item": {
          "id": "a44aca9e-526c-43b2-9446-192798c367bd",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "035cd5cd-dc0f-470c-ba68-f83ddf9ba9d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e839fda-28cc-4d32-885d-7792d35f8e61",
        "cursor": {
          "ref": "3339ce53-f29a-44ba-8f1d-1bb45eb354a5",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7350c985-12aa-4d28-b3da-329fcdf1507d"
        },
        "item": {
          "id": "4e839fda-28cc-4d32-885d-7792d35f8e61",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "983e2f1d-c303-4489-83ac-a115e4d431cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a74e4a-3bf9-45e2-8ebf-1ccdbea909eb",
        "cursor": {
          "ref": "4b47a74e-99e6-4675-8f3b-d35f703b7806",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "12df3f15-be3b-4dae-b627-62cb960b6cb8"
        },
        "item": {
          "id": "96a74e4a-3bf9-45e2-8ebf-1ccdbea909eb",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "27972347-9075-41aa-9f93-1eb3daf4d6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2978bd-8579-4bd2-a7a0-d467fde60cd3",
        "cursor": {
          "ref": "c47ace91-a28f-45b4-9003-7eebc2c5ea5a",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "42c22937-464c-4195-95a9-4e54f39fab6a"
        },
        "item": {
          "id": "6c2978bd-8579-4bd2-a7a0-d467fde60cd3",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "05b7d0b4-6e63-49f3-85e7-f5ea29703cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffda442b-7926-47d4-b1ba-2615e08a3495",
        "cursor": {
          "ref": "101b7c29-a921-47f9-ae54-23ce4778a64a",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4896b8e5-62a2-456f-a6b7-79a7d7c22728"
        },
        "item": {
          "id": "ffda442b-7926-47d4-b1ba-2615e08a3495",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "892f17f2-f9ab-4032-b02b-3c810d9d1434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248471c6-2df9-45b0-9d9d-81a6aae8f2d9",
        "cursor": {
          "ref": "bb5efdca-eb1a-4096-8bbc-0e737f57a2d2",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6a3aabe1-9c91-4a42-a5c1-8f0f39876ea7"
        },
        "item": {
          "id": "248471c6-2df9-45b0-9d9d-81a6aae8f2d9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8b85f3df-e5bd-49e9-91f7-5aefc4c91681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232b8f07-5bc9-4204-abfc-76a0b57be83c",
        "cursor": {
          "ref": "be8e804b-5e5a-4ce2-a83a-28f7f521ab12",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c03a7fdd-1fed-4d14-b412-90a9d273ace0"
        },
        "item": {
          "id": "232b8f07-5bc9-4204-abfc-76a0b57be83c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ff0d7019-c7b5-4f67-bfcb-74526d146145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6442564-ac68-4867-a171-00a28377367a",
        "cursor": {
          "ref": "ba49fe34-45b1-41e1-b54d-03515a228424",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2f834cc1-5879-4c83-92bd-d0caef95f808"
        },
        "item": {
          "id": "c6442564-ac68-4867-a171-00a28377367a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f7978da0-af55-427f-9c6b-32ef0123be21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10fad3b-1d6b-4291-ad6b-ecb8400b869c",
        "cursor": {
          "ref": "4621c0b3-02ac-4b11-9481-c819253af9d0",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "20018afb-e5eb-4da8-8b63-624be6110806"
        },
        "item": {
          "id": "a10fad3b-1d6b-4291-ad6b-ecb8400b869c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8689adda-50ec-49e8-8d7c-e37d7c9c87cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96383a8-7555-4ecc-bc9e-cf6a76c68a6b",
        "cursor": {
          "ref": "d58a11f4-49a3-4fa9-860f-055a006c8adf",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9b8864ff-7d14-4e6e-9536-7868517f71a1"
        },
        "item": {
          "id": "f96383a8-7555-4ecc-bc9e-cf6a76c68a6b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ee094052-9e79-42e7-b886-9e684702c22a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e9e1b9-40ed-40eb-8066-69a53666d917",
        "cursor": {
          "ref": "7895f048-6459-4e22-9623-724110594c6f",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e8ace76c-0123-47d6-abda-bd173e07a6ea"
        },
        "item": {
          "id": "21e9e1b9-40ed-40eb-8066-69a53666d917",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "09e52792-3538-4539-98ac-0fb6ff225366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd1d90f-bfa8-48a9-9161-bf09a93b83f4",
        "cursor": {
          "ref": "e1fbf9d3-229e-42f6-b773-20256fbe8677",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0fba4bca-1c8b-42a1-bf7f-e878a37323fe"
        },
        "item": {
          "id": "ffd1d90f-bfa8-48a9-9161-bf09a93b83f4",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "581663c7-0e1c-414f-aa1c-0c27602e6a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23be08dd-5891-47af-b4da-5b15f9a51717",
        "cursor": {
          "ref": "f7f87941-d939-48fa-922f-8f4daa20499a",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1de3ce63-0cb6-4d6c-be86-b7195188a074"
        },
        "item": {
          "id": "23be08dd-5891-47af-b4da-5b15f9a51717",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "07173b61-1913-4e82-903b-35613e7ed9c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a554f31-3297-4c8c-9d2d-10c834a167c9",
        "cursor": {
          "ref": "2bdca79b-8a77-40ab-ac35-85194f1d236c",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e3da0f19-9928-4073-a4f0-68cd3a421562"
        },
        "item": {
          "id": "8a554f31-3297-4c8c-9d2d-10c834a167c9",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "8da2547f-873e-488c-9de1-65a33cad0121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "9350413a-4e70-4948-a4b0-1ccfab1bc846",
        "cursor": {
          "ref": "900d1d33-ba29-4008-857d-2605c19b77ca",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "49103fa4-5cb2-4718-9ed3-20cb78ca78de"
        },
        "item": {
          "id": "9350413a-4e70-4948-a4b0-1ccfab1bc846",
          "name": "credentials_issue"
        },
        "response": {
          "id": "73035564-c93b-4e5b-8cb3-29e87ab126e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "eb88cee7-57d8-4945-80a4-cf40453420e5",
        "cursor": {
          "ref": "0c0488a2-c5f5-4c25-b724-83c953902318",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b1fafad3-bd38-4feb-aaf1-19a9fbf1c950"
        },
        "item": {
          "id": "eb88cee7-57d8-4945-80a4-cf40453420e5",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c29020a9-fc2f-42dc-aa68-d4427021d942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "6c8fd2fd-5e98-4a77-a5fe-412de57aaa66",
        "cursor": {
          "ref": "621bd7ba-56c0-412f-a6f5-93637d4c90bc",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5202ac0b-c9c3-4ae7-9a26-51e7c9cff0cd"
        },
        "item": {
          "id": "6c8fd2fd-5e98-4a77-a5fe-412de57aaa66",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "821d0785-12f5-46bd-954d-27bf63c6de39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "15e9d43e-7fb9-4ab4-a1e2-70a02606cf04",
        "cursor": {
          "ref": "ffdb9508-e441-4375-a67c-0f3c380e792f",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "565ac30a-3ede-4605-9b38-6f5428762e45"
        },
        "item": {
          "id": "15e9d43e-7fb9-4ab4-a1e2-70a02606cf04",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3f758599-8df1-4d5c-8981-b9f66d8f97b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "0d6174d6-9d55-4bf6-a4ce-cf916646c9bd",
        "cursor": {
          "ref": "174bed1f-4e9b-4d08-badd-97d572d80591",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5c54090c-9b5d-4125-96f9-cb7305ae3ffd"
        },
        "item": {
          "id": "0d6174d6-9d55-4bf6-a4ce-cf916646c9bd",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "47538523-3e23-474f-8baa-61a282164ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b7c5bbeb-47a4-46af-a332-c69b138c7f76",
        "cursor": {
          "ref": "3be42b60-86ee-436f-beb8-641842ca996a",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e8a37999-bb5f-4344-acbd-4b55c967b878"
        },
        "item": {
          "id": "b7c5bbeb-47a4-46af-a332-c69b138c7f76",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4cf9ad89-672b-4ee7-b9f2-ea61d76aec10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "decdbc57-ffdb-46fd-ad0e-6ab71d4caf4a",
        "cursor": {
          "ref": "7cbf17b8-942c-4b07-b952-92fe7395f52c",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "80eb5423-7f16-45c5-bf69-518a9b5209ad"
        },
        "item": {
          "id": "decdbc57-ffdb-46fd-ad0e-6ab71d4caf4a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2874d8a6-a98c-4bed-b0d1-d7289b6f9b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79cc6387-bc8a-4395-881f-0e4cc19fe06c",
        "cursor": {
          "ref": "b35c4281-0873-4b45-b235-bd18add7e24f",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2301b93b-27b9-4cb5-b241-7ad892e4dec2"
        },
        "item": {
          "id": "79cc6387-bc8a-4395-881f-0e4cc19fe06c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9390d360-795b-490a-befd-17fcc6b7beb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f6d409-1575-40c5-8f95-76b6edf40dc6",
        "cursor": {
          "ref": "9bf2223b-a5d8-441b-94a9-f75d6769a591",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "000afd18-d0ce-4344-8042-90fddf2eca2a"
        },
        "item": {
          "id": "19f6d409-1575-40c5-8f95-76b6edf40dc6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bfdd7af3-5e71-4f99-8c83-9f72df5b390a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e37b92-798c-45e1-90e5-660fbd6e40f3",
        "cursor": {
          "ref": "6875939d-26bc-467c-8524-cfbfaf423742",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5e97d864-7f78-422c-938c-07255be50516"
        },
        "item": {
          "id": "15e37b92-798c-45e1-90e5-660fbd6e40f3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6dfd67dd-e543-4017-9c8c-6e73b311332d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed807ec-6429-45f0-be76-b0b19ef26f79",
        "cursor": {
          "ref": "1913d16f-05fa-48d9-8028-60b0c2a80ebc",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "978268c2-afd3-4b50-b083-9cfb195fc0e8"
        },
        "item": {
          "id": "6ed807ec-6429-45f0-be76-b0b19ef26f79",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d1fc28d4-58c2-405f-94d7-312887b2c3f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8908ddc6-9fa0-4614-805c-51dba0359272",
        "cursor": {
          "ref": "1e0a66ce-bcb9-4864-aa66-0b63f8331ee3",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c4657cd5-0725-44d3-9ac7-62875b66b198"
        },
        "item": {
          "id": "8908ddc6-9fa0-4614-805c-51dba0359272",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5dde7400-87b4-4fac-bebc-2d4d0f856931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d020ae-4cbd-476f-8565-a086d0fda3f3",
        "cursor": {
          "ref": "99e9c5a1-de0a-4f2c-a796-b8f956dfa3b8",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "aa36ebb2-0fa7-4741-b25f-5f79402dd82c"
        },
        "item": {
          "id": "f2d020ae-4cbd-476f-8565-a086d0fda3f3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "624472c1-eaa6-4be1-a84a-060e8ace6877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e10761-a838-4b26-bb0e-ebcba89befb3",
        "cursor": {
          "ref": "731e581a-6824-4c1d-8609-e03bbe16d9c9",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9f02d7d4-c706-4077-8bab-2f3c89ef772a"
        },
        "item": {
          "id": "63e10761-a838-4b26-bb0e-ebcba89befb3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c29c4927-0a20-4582-a820-3053873924d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930fc435-641a-4a79-b675-19312141eba9",
        "cursor": {
          "ref": "13b971a7-c5bf-47a6-b0d7-d2e71d8630a1",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f419dcad-1d21-4972-8007-ef6d6468cfbb"
        },
        "item": {
          "id": "930fc435-641a-4a79-b675-19312141eba9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "02390fff-4f7e-4173-b506-9d285ea3ef6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d4bdcc-67b2-45c6-8eb9-97a813d967ce",
        "cursor": {
          "ref": "a6d6c17b-0dc7-4bb3-9cd5-958f925e9b31",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ecdc3fa2-aa17-493b-aee8-440ed2ab4ba4"
        },
        "item": {
          "id": "22d4bdcc-67b2-45c6-8eb9-97a813d967ce",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9207ee86-0b11-40e6-9435-89d8a6abaf80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09079f86-9b6f-436f-8bf0-3579119030ac",
        "cursor": {
          "ref": "ef614a23-6731-497c-a411-b0a4dd9301bc",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "be5bb64c-d156-43a9-a4b4-f7d53e66fe09"
        },
        "item": {
          "id": "09079f86-9b6f-436f-8bf0-3579119030ac",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5e8dc9fb-0d36-4c4e-925b-1fbba6f4e77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff78dd8a-bda8-48be-b533-cec9f03c3891",
        "cursor": {
          "ref": "75397649-3534-4835-b454-50ff6610d44e",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "213ea71c-7403-426d-9600-2b374d481913"
        },
        "item": {
          "id": "ff78dd8a-bda8-48be-b533-cec9f03c3891",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d4c11ee3-6813-4282-8b67-ee0be017f073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5038ccfc-0ac4-4b4d-9f64-1193bb73aee1",
        "cursor": {
          "ref": "04ced9f2-dff6-4753-8631-f686e4ae54e0",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "63288dd9-d476-4cb8-8a4d-cd113dd2eb3e"
        },
        "item": {
          "id": "5038ccfc-0ac4-4b4d-9f64-1193bb73aee1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "374208e3-008f-4399-b3b8-46610dda9b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a433ca9a-66c7-48eb-b95f-cfa44f683675",
        "cursor": {
          "ref": "058a5d11-9453-4627-b275-bdd7569ea931",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "42ff3d41-7404-4a62-b2e4-7b288d30a582"
        },
        "item": {
          "id": "a433ca9a-66c7-48eb-b95f-cfa44f683675",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f030f89b-e99b-45ef-aa5b-6ede699fd98a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e707631c-20df-4fdd-822c-a8cf2141b027",
        "cursor": {
          "ref": "eb726535-92a8-4199-add4-d0fa016ca892",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ff4fd2c7-24a5-497e-9f8f-99a507500c3c"
        },
        "item": {
          "id": "e707631c-20df-4fdd-822c-a8cf2141b027",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b6e33846-c29a-4308-b553-5c4df244b239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a7dec6-ef3e-45e8-9d67-3e6a2b2f53d6",
        "cursor": {
          "ref": "fb6827ae-10c8-40e6-954a-d00af9b92388",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "00f816c1-9d5f-4f9d-9108-3b82ac0b5c82"
        },
        "item": {
          "id": "90a7dec6-ef3e-45e8-9d67-3e6a2b2f53d6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1b98aeea-1e61-4350-9d79-51dd9e5ce5b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5261d5c2-6e50-461a-8579-2578f2c83dc5",
        "cursor": {
          "ref": "a30ea6ac-695f-4d97-8bfd-4b2d6c7b1aee",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d9280c0e-cea3-42cd-8413-3ca9b57fe5ee"
        },
        "item": {
          "id": "5261d5c2-6e50-461a-8579-2578f2c83dc5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "af038293-6bd3-4f8a-a735-6d5793113b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a70f26c-af8e-4e45-a627-79742e7f5bd5",
        "cursor": {
          "ref": "f49513e2-ccc7-45c4-9347-4989d036e8e7",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c9b11d82-422f-4403-9aec-c66e5083a278"
        },
        "item": {
          "id": "5a70f26c-af8e-4e45-a627-79742e7f5bd5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "238a476c-1d0e-4bcb-8fa4-ff228f01fddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f956ab-aeb2-46f0-9d91-3063bf53063c",
        "cursor": {
          "ref": "bd07f6fb-1067-41c1-8388-fdbbcf38ba1d",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "93c2df96-3229-4cd1-9925-dd9373dd6bb7"
        },
        "item": {
          "id": "26f956ab-aeb2-46f0-9d91-3063bf53063c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "00848c7d-0566-4698-abe6-6f9ae3b45b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9415d43b-d4a7-466a-a5f7-2bf5f1f39d97",
        "cursor": {
          "ref": "25c55862-4c76-4460-8370-e321ea96c325",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5ed48ef9-0ad1-4a9c-9d4b-8117b9d1f7d7"
        },
        "item": {
          "id": "9415d43b-d4a7-466a-a5f7-2bf5f1f39d97",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0e303ae1-a472-414f-a3c5-29d9ecd9af33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57860d0c-d16a-414b-9915-2e8bf8a33235",
        "cursor": {
          "ref": "365a3de5-99b1-42dc-83a2-bfa531926e4c",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c237fd99-ef83-46b8-a937-15c337998c72"
        },
        "item": {
          "id": "57860d0c-d16a-414b-9915-2e8bf8a33235",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c4dd3187-b5fe-4e03-8d03-72d8afa7ecf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac60d408-2568-4a08-94be-bac09fa36066",
        "cursor": {
          "ref": "a641da01-ec60-48ad-aa9f-5f11e38a5347",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d5d14219-c33d-4b5e-b04f-068b3e00266a"
        },
        "item": {
          "id": "ac60d408-2568-4a08-94be-bac09fa36066",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b0b586c0-5d0e-400b-8d43-47ac597138a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e3232f-be41-4ab7-9c57-dd400ceac9fd",
        "cursor": {
          "ref": "3de01dfe-92bf-487c-87c5-65073040c5dd",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "33498802-1168-4ef1-8040-46956eff7f81"
        },
        "item": {
          "id": "32e3232f-be41-4ab7-9c57-dd400ceac9fd",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "16466925-2b1a-43ed-a363-2eea01617dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda145e5-c9cd-49ce-bef9-7b4da37d8234",
        "cursor": {
          "ref": "67af14ef-0a75-4a35-ba63-97df7451da55",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a3e2d3c2-f1f1-493d-b5e1-e88178e03300"
        },
        "item": {
          "id": "cda145e5-c9cd-49ce-bef9-7b4da37d8234",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "94e5d8d3-1ccb-4c38-bc90-6047f41b168e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e442ae-aa68-45de-834d-d898838eac02",
        "cursor": {
          "ref": "0707cb2b-ae86-48d9-9c2d-4d3588a87710",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7d98a690-02c4-4e9a-b855-6cb82413fedb"
        },
        "item": {
          "id": "55e442ae-aa68-45de-834d-d898838eac02",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8c45fa12-80f9-4ba7-86dc-423f4f5cdf43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5abf0de5-2407-45be-9e0c-aa681622e660",
        "cursor": {
          "ref": "2d9ecb3c-63f2-4e48-8515-7cdf36aba6ba",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "bf35b830-793f-44a3-bf4b-6164ce2110c7"
        },
        "item": {
          "id": "5abf0de5-2407-45be-9e0c-aa681622e660",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fe955126-709f-435b-9ce5-af5000283740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135d019d-2b5a-4e1b-b2dd-2967ec842c72",
        "cursor": {
          "ref": "dcd47453-9854-4bc5-beb4-f7fc58ca8846",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3ebd2390-22b1-4a23-9c75-d9ac6404bd78"
        },
        "item": {
          "id": "135d019d-2b5a-4e1b-b2dd-2967ec842c72",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fdd6aad3-aa6d-476f-bc50-48e87ec89e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06fe516b-547f-4da7-903c-146d77caa5fc",
        "cursor": {
          "ref": "f74bca09-c687-465c-aecd-186c309e10b5",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c8e71575-ee51-4558-a0da-1d94e193999a"
        },
        "item": {
          "id": "06fe516b-547f-4da7-903c-146d77caa5fc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8a8cf5ce-ea25-43e9-9cca-3896aacdfad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e180a84-1de1-4455-b4f1-46ed5de5bf5a",
        "cursor": {
          "ref": "fffce50b-b06f-4229-aa55-297e608d07ff",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d252a9a3-9c15-44cc-940a-de569920eb9b"
        },
        "item": {
          "id": "8e180a84-1de1-4455-b4f1-46ed5de5bf5a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3413117f-73cd-42cf-af41-5952de8a6902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8130910-6edd-4fdb-ba96-5069322527a4",
        "cursor": {
          "ref": "aaab345d-6798-4f08-b0b9-fe490bdc2994",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "30150e41-5c3a-438b-894a-9910f4e3ce1b"
        },
        "item": {
          "id": "d8130910-6edd-4fdb-ba96-5069322527a4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0f070a34-f14f-4ce4-bd89-9f85c427dd16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83bfe5a7-c9cf-4b7f-8830-397d956547e3",
        "cursor": {
          "ref": "f602bb03-bce3-4c03-a454-ce4dd9dbf1e9",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1545f1fd-5050-4160-bd8d-083f6e11115d"
        },
        "item": {
          "id": "83bfe5a7-c9cf-4b7f-8830-397d956547e3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7cd2265c-1bf8-4f62-aee1-5016e8931e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99e39b4-2c70-4246-88d3-1358a755fe9a",
        "cursor": {
          "ref": "315cff24-16ff-4230-87b3-374e9d99f0d0",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "781bb351-98f3-491f-81fd-db6d3ab0e704"
        },
        "item": {
          "id": "e99e39b4-2c70-4246-88d3-1358a755fe9a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "34395463-4d7a-4367-95ca-297858c14999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57feda05-5d15-40fa-b3cc-868827bbe936",
        "cursor": {
          "ref": "d8dbf39c-5466-457a-bbce-1bc3c201572f",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "065ca35b-2466-447b-947d-d99f5d7f5dc1"
        },
        "item": {
          "id": "57feda05-5d15-40fa-b3cc-868827bbe936",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7d2810d3-b40f-47e0-a94e-bb51bab448d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5e0a48-1f48-402d-a87e-baf5d3b68796",
        "cursor": {
          "ref": "d31329e7-b1fa-4385-82d9-3abd2f3650af",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9c8e5f9b-2940-4ddb-bb6b-28304d3449b9"
        },
        "item": {
          "id": "db5e0a48-1f48-402d-a87e-baf5d3b68796",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ea8cb74a-6038-495d-a196-d0007e34dea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be379914-6052-4970-9f9d-c86838195c88",
        "cursor": {
          "ref": "53b490f7-11a2-47e5-add9-246742fd30b8",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "30c7705d-ce1a-4d4f-bf1c-0753581a3bcf"
        },
        "item": {
          "id": "be379914-6052-4970-9f9d-c86838195c88",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8c451624-847d-4143-94d9-a4837c714195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5847e2cf-ab16-40fa-b845-519980bed584",
        "cursor": {
          "ref": "26ac8ce2-2773-4a20-962d-c75cbe3ce857",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5ffe912e-13de-4072-9b16-f815274f6276"
        },
        "item": {
          "id": "5847e2cf-ab16-40fa-b845-519980bed584",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f2ca493e-11fc-4e38-9a6a-16ef03bb5601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3eecfe-0d7e-4c8b-8592-ffc772eb2cb1",
        "cursor": {
          "ref": "099fd334-13b4-4039-b7cd-def0b6443ec0",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "12da4cef-2072-4e39-8b8a-4827964908cc"
        },
        "item": {
          "id": "5a3eecfe-0d7e-4c8b-8592-ffc772eb2cb1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6b35b967-f906-4407-bdbc-feee1f23785a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25be22e2-7213-49c2-ba43-73a7d8030a2e",
        "cursor": {
          "ref": "4920de44-d564-400e-9fa2-4d7732b42f61",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f463314a-33f3-4c6d-a27f-32be0e636383"
        },
        "item": {
          "id": "25be22e2-7213-49c2-ba43-73a7d8030a2e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "171fa81f-6b62-4d90-a9bf-b18ebbe74217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e4d98b-a519-4e6d-8c9f-d6727769eb72",
        "cursor": {
          "ref": "29347eba-354b-4ee5-9425-0d3386c76af3",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e0808e57-b4cb-44d5-91b7-424fbda6b639"
        },
        "item": {
          "id": "04e4d98b-a519-4e6d-8c9f-d6727769eb72",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0d224e56-8d1a-45f7-8ee4-474861b63d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4189647b-e571-49de-b640-3bed3ec8c6b7",
        "cursor": {
          "ref": "72dd5ec7-6df6-4b55-841d-c2b18968df49",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1eeb2350-dabc-40bb-b272-019e30824a8a"
        },
        "item": {
          "id": "4189647b-e571-49de-b640-3bed3ec8c6b7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "df20d938-f373-44bd-91bc-1c6e7415ddf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3feeea07-1473-441c-a06d-8f16b7dd3613",
        "cursor": {
          "ref": "416a29a3-f13a-414a-a4f2-62e201357a05",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "03ad363d-52c9-4c8e-9268-af5a6c95ac55"
        },
        "item": {
          "id": "3feeea07-1473-441c-a06d-8f16b7dd3613",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a2f2688f-fbc5-4dc0-81ad-4bbdff6877a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4deea219-6678-4505-82cd-65706bcb0c65",
        "cursor": {
          "ref": "554ef95c-a852-4b21-bb08-d0230bbd8b55",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f163f3b2-2b55-4859-99cc-6c39a935856d"
        },
        "item": {
          "id": "4deea219-6678-4505-82cd-65706bcb0c65",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e9a3d51d-1b40-4585-a761-ec8a8d68a30e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e71985c-294b-404a-b102-40fd238efb95",
        "cursor": {
          "ref": "6437e4b6-6612-459c-8d97-af4629cf564e",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5b9c6da9-0277-465d-96dc-ae59ab02857e"
        },
        "item": {
          "id": "2e71985c-294b-404a-b102-40fd238efb95",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4859c85f-6286-4bb2-884e-7ae16bc423d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d907c9d-b69d-400b-b04b-d1cb4e1f2ba5",
        "cursor": {
          "ref": "c32fe136-2682-403f-b50d-11ff2eeb0b62",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e53c2b78-5035-4fcf-8f65-736a09d2b713"
        },
        "item": {
          "id": "9d907c9d-b69d-400b-b04b-d1cb4e1f2ba5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e6cd3673-4f69-413c-b5c1-04d6942d4c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8718e303-709e-449d-83ab-677c44f3507a",
        "cursor": {
          "ref": "43a44f64-9e57-446f-bd09-e7385ffde62f",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d4ec0cd4-9622-458c-b668-4e53a382ce42"
        },
        "item": {
          "id": "8718e303-709e-449d-83ab-677c44f3507a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f2189b78-3334-44d8-9523-40fb0890fa83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff5fcaf-368a-4ce4-a3be-f0172d91bf4b",
        "cursor": {
          "ref": "4f03181b-0105-4716-8070-ed441acd0ee5",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "af627a64-d6a7-4ff0-8179-08517f55378e"
        },
        "item": {
          "id": "7ff5fcaf-368a-4ce4-a3be-f0172d91bf4b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "148fe38f-7ba5-43f7-885d-bc2f22433b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c486e8-4dd4-4dee-83f1-215476592a88",
        "cursor": {
          "ref": "5532380c-5164-44dd-88d0-f320e5249e57",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c4b52222-07c7-400d-84e0-f60808d193b7"
        },
        "item": {
          "id": "27c486e8-4dd4-4dee-83f1-215476592a88",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "19b5bb16-c122-4ffe-b4a6-cc4b2a7b634a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64efda7a-5006-4463-8d83-afb7390693f5",
        "cursor": {
          "ref": "8992467a-24c5-471a-b1a0-6c51a1bc243c",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3e8b7f28-007b-4475-b35a-26be3a83c4b4"
        },
        "item": {
          "id": "64efda7a-5006-4463-8d83-afb7390693f5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9cb714ce-919c-44df-898e-bfb3013e26fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec47739d-7cd9-4610-8312-864286eceb45",
        "cursor": {
          "ref": "56efda8c-c80f-4362-b4ee-1fe1a1c45c85",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c438b236-60b6-4216-ade5-46c3164be50d"
        },
        "item": {
          "id": "ec47739d-7cd9-4610-8312-864286eceb45",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cebf5e9a-e8c0-43a8-a0bd-61bbc5777859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4203053c-23a1-475b-b3cd-090d39fd3793",
        "cursor": {
          "ref": "cce2fbba-fa27-4eb0-a60a-5826836966c8",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "89c7dd90-d68d-47cc-a75b-4338c881238c"
        },
        "item": {
          "id": "4203053c-23a1-475b-b3cd-090d39fd3793",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4d90f940-82ec-44ea-afa7-2ad457088442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9a293e-b128-4c7c-b96b-a02b4518c6d0",
        "cursor": {
          "ref": "1f59985f-2040-4c96-8064-92d17b62c1b7",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "95eb81cd-c0f6-4f26-b6fa-575a1778d27d"
        },
        "item": {
          "id": "0e9a293e-b128-4c7c-b96b-a02b4518c6d0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0a95976c-6461-488e-adab-9fcfa7d36df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6104fd92-d173-4519-a900-6ba763bffc2b",
        "cursor": {
          "ref": "d285b7b7-34f7-470e-8812-c2e9477ad21d",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c2b2fb13-1328-41e1-89c9-99dd21b8e08a"
        },
        "item": {
          "id": "6104fd92-d173-4519-a900-6ba763bffc2b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "92671372-47d5-424e-8bf6-8771e5f26564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3360073a-a2b5-4241-b974-6136e074ce21",
        "cursor": {
          "ref": "c8014217-1df8-4554-9298-e43033c031b0",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "84ea5e80-b91b-4ca3-8739-29b747b7eef6"
        },
        "item": {
          "id": "3360073a-a2b5-4241-b974-6136e074ce21",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6ec82d8c-8ad6-46f9-a93c-8f9382907187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590e025d-d679-49fc-a091-bfc68ecbc5ca",
        "cursor": {
          "ref": "9b81025a-27ab-4f5d-a6aa-c18bdf1d4c06",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f1c4c3d3-2f1b-48f7-b5c6-f6d745991eff"
        },
        "item": {
          "id": "590e025d-d679-49fc-a091-bfc68ecbc5ca",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6d14fc50-f0cf-4bd6-978d-5a520c709e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b19af1eb-b2ec-4fac-8c26-c96f5799109a",
        "cursor": {
          "ref": "8ff568fe-c4e6-491d-b360-2e9814517e7d",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "30016ce9-cef9-40d2-8cb3-68a82fc2e532"
        },
        "item": {
          "id": "b19af1eb-b2ec-4fac-8c26-c96f5799109a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1937a93e-f80a-4a86-bb87-d15858e3fc74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2ea418-6492-4457-8909-ad1d61326109",
        "cursor": {
          "ref": "a3e2cc96-5701-4bfb-ac3c-2f4daa0d9dd0",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "7728a6f6-f826-46f7-a9dc-e1f6452c3a9e"
        },
        "item": {
          "id": "dd2ea418-6492-4457-8909-ad1d61326109",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f9830a41-1519-4850-9e63-6d8ec13e7d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d699a67c-bd53-4e80-909f-070a84c654ef",
        "cursor": {
          "ref": "45fed4ca-4798-4dc7-a4b2-30ae909b6b8c",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "737977e3-6d97-422d-a6fc-6dd58f68f251"
        },
        "item": {
          "id": "d699a67c-bd53-4e80-909f-070a84c654ef",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b0db43c3-3b14-4b16-a9a2-f70580c7644b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4027a6-057e-4bac-8a4c-6c1cc679a251",
        "cursor": {
          "ref": "31e6a15b-2904-43c5-b93b-e4e86c4d365a",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "dd3f838a-3074-4787-8db3-d81b8ad82e17"
        },
        "item": {
          "id": "5a4027a6-057e-4bac-8a4c-6c1cc679a251",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9c2015fc-914d-4723-a789-c6ce04753d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0b4bfe-730d-4e36-9cc1-490e31c11a3f",
        "cursor": {
          "ref": "f4856dbe-e7e2-4f0b-955b-cc69b1dd508c",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6535c666-3130-45b0-bf1f-813e62c5b541"
        },
        "item": {
          "id": "2b0b4bfe-730d-4e36-9cc1-490e31c11a3f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ca1644f2-d494-4c39-8b82-d20f8d1e84d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc56632-9864-49db-a6c9-2ba4d34b5d26",
        "cursor": {
          "ref": "b4e0a99f-dee2-40cf-8314-580bf0a521e0",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "27028dde-4a49-4427-ae7f-b319afb4053c"
        },
        "item": {
          "id": "bbc56632-9864-49db-a6c9-2ba4d34b5d26",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "08650a9a-1495-43bd-b7a4-7d2c14431a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f3e26b-5825-4e54-acab-8a819a414112",
        "cursor": {
          "ref": "d3827dc6-549b-4815-b470-1e27d9c520fb",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "50838904-bc20-4e4e-9bb7-b9f853853b78"
        },
        "item": {
          "id": "78f3e26b-5825-4e54-acab-8a819a414112",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8a654b04-8325-4bbd-9cfa-39d86e74fe25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034847e6-18e4-40ce-90da-6aa8344de07d",
        "cursor": {
          "ref": "0d3fad85-63ad-4dd1-a33d-5b4810e48fb0",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "478720d7-65d6-4b55-a8d8-17bb2e64a53d"
        },
        "item": {
          "id": "034847e6-18e4-40ce-90da-6aa8344de07d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "22651b00-47b4-4c0b-99ce-3d539fb6f46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e57cf82-a610-4225-a596-3e1d3601d96e",
        "cursor": {
          "ref": "9984b234-cb7a-45d2-ac57-ee379cc602f3",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "36d55fc7-a129-4ffc-bf08-19cfbfe116cf"
        },
        "item": {
          "id": "8e57cf82-a610-4225-a596-3e1d3601d96e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2f9c6d71-03a7-4af3-bd1a-b9233fe967df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d9449b-2abd-4206-92cf-296240db1dac",
        "cursor": {
          "ref": "12b2440b-be45-4cd4-82ab-2b8ee89c85f8",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7fe89ffb-13d5-407f-9518-f7de6d5c3dc3"
        },
        "item": {
          "id": "72d9449b-2abd-4206-92cf-296240db1dac",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "22601a4a-ed7f-41ef-a0d3-ae1f0ac26d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365876bf-ec2a-421a-b0fd-a483448e387d",
        "cursor": {
          "ref": "c5f4c31b-a3c5-48dd-ac11-8055feae1b45",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3bdf57d3-0929-4e01-b728-abf2e829ed72"
        },
        "item": {
          "id": "365876bf-ec2a-421a-b0fd-a483448e387d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "9252e421-ad2a-4d58-a0f3-383a0a6a654d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46764815-7e1c-4cf5-a41d-6eefc78d444a",
        "cursor": {
          "ref": "a0ce3a87-71ee-4a90-80bf-8df80cd7cd80",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c55691b5-a379-435a-bf02-31f7b7e5dcba"
        },
        "item": {
          "id": "46764815-7e1c-4cf5-a41d-6eefc78d444a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ff4f2ee8-653d-4950-941e-cad766e0a45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf01386-aa84-4358-8c64-0be757678357",
        "cursor": {
          "ref": "660d0767-faf4-48ab-8090-8893833f4524",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3596dc8c-6708-4222-a18c-0fbc323f6d00"
        },
        "item": {
          "id": "7cf01386-aa84-4358-8c64-0be757678357",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6eaf3ba9-43c4-4be6-b449-a124c636a1f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324a0623-78ab-44f7-ba67-c923fd32e0df",
        "cursor": {
          "ref": "4555134a-bf24-4359-ba97-18870fe36d96",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a3d51667-bc0b-4e1c-80b0-d5750037628c"
        },
        "item": {
          "id": "324a0623-78ab-44f7-ba67-c923fd32e0df",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6478ecf7-c30b-4723-9545-a8fd3a1aeed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1801eadc-2771-4376-ba79-66c9957eebb2",
        "cursor": {
          "ref": "4eb8da8f-f5e8-4c51-993a-4f636047afb5",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "03c100c5-452c-4c73-94c1-da227287405d"
        },
        "item": {
          "id": "1801eadc-2771-4376-ba79-66c9957eebb2",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e439ad74-7bd1-46ef-bc0e-5bc6f33f363d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4267d9a9-e514-4a96-b693-7aeb7af756f6",
        "cursor": {
          "ref": "39801848-dfee-48fc-aedb-c2a707bf161a",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ce8bf59d-54b2-4e47-9107-afcfd95b16a2"
        },
        "item": {
          "id": "4267d9a9-e514-4a96-b693-7aeb7af756f6",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9817044b-23c8-4ac9-b662-199097c59952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93691078-d089-4e60-ae95-99b0445edaf2",
        "cursor": {
          "ref": "7bf4ff36-d619-436f-98f0-c33e00347ff2",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "32df5eac-2a91-4331-b95f-846c49f736cc"
        },
        "item": {
          "id": "93691078-d089-4e60-ae95-99b0445edaf2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3f57dbca-a55b-416e-ba56-142cd8e79f9f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54812718-1a99-4f59-92c1-c965ec71a0c9",
        "cursor": {
          "ref": "575664d2-dffb-417e-b6df-64b54efed9bc",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "3bb0e2b5-d718-437c-afbf-bfa6ae8e9b8c"
        },
        "item": {
          "id": "54812718-1a99-4f59-92c1-c965ec71a0c9",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d591a6f7-db10-4cbf-8bc4-a02c33ba383f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be12dc9-d35e-4aac-9c25-ea9cb35402e0",
        "cursor": {
          "ref": "dded9062-b28f-483b-895a-5b0b51956732",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5c27c1a1-4fe6-4666-b8e5-386cdca0ce28"
        },
        "item": {
          "id": "0be12dc9-d35e-4aac-9c25-ea9cb35402e0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "781e6b67-564c-4aa1-b90a-c5b5ae0a002f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ea85e3-8e63-484f-9a4c-a069cd3249fd",
        "cursor": {
          "ref": "d46d7758-17d5-4f1e-9436-69a2110b1475",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ca5c7503-70ca-4de5-a18f-4bb031548bc3"
        },
        "item": {
          "id": "51ea85e3-8e63-484f-9a4c-a069cd3249fd",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "16d24b9e-c601-4594-a368-f9bccecb33f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50163a1a-42e9-4499-97f5-bb24913cd5a4",
        "cursor": {
          "ref": "42ca260c-76e6-4a25-a541-4b49d62af88f",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9a965903-37b9-426e-a504-f39334d5a333"
        },
        "item": {
          "id": "50163a1a-42e9-4499-97f5-bb24913cd5a4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1b418381-bfe7-4887-ad2e-1105af8d86c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93a007c-aabe-4342-9402-f6e4d1a6209c",
        "cursor": {
          "ref": "f847d733-cb04-427b-a99a-2e0591e128a7",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "653e0803-9e92-4392-b76b-0cc9d30e6463"
        },
        "item": {
          "id": "c93a007c-aabe-4342-9402-f6e4d1a6209c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "14c5e8f2-7697-49fb-b137-bc130509b03c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f007472-e339-4299-8ffd-d140cd33a50d",
        "cursor": {
          "ref": "0d7ee20d-66c5-4e06-ba8d-c0cd583d2ab2",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e0f1de75-db76-4df0-b68b-1cf061962a9b"
        },
        "item": {
          "id": "8f007472-e339-4299-8ffd-d140cd33a50d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9eddaebf-6174-4547-8b9b-9a701c2d9ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6168f3-dc7d-41ff-91d6-813de7fe7f61",
        "cursor": {
          "ref": "5b52af7f-9237-4e7d-9d70-308431bd488a",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f924426e-a535-426c-a7f9-cbb82517a3dc"
        },
        "item": {
          "id": "1c6168f3-dc7d-41ff-91d6-813de7fe7f61",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d9835fc9-a6a9-4408-9587-8301183c8bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4579765d-b633-45cf-bc60-0aaa3c3859ac",
        "cursor": {
          "ref": "3f6afa30-fc42-4eeb-8e67-92e9a2a0d774",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "09c424bc-e080-4992-83e0-7ec1d05ce858"
        },
        "item": {
          "id": "4579765d-b633-45cf-bc60-0aaa3c3859ac",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2d985af9-e544-419b-8be8-98eacbb9f661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b336507-193c-4ca2-9388-13f19f098adb",
        "cursor": {
          "ref": "027bbb24-a703-49a9-b30e-0710a6be9640",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "df246e8e-3c34-45fa-8262-ecc065e0c8ff"
        },
        "item": {
          "id": "2b336507-193c-4ca2-9388-13f19f098adb",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a6add079-eba7-42c0-a7aa-dc8ce764ddf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71e7903-2eba-48af-a13c-581c738aadc2",
        "cursor": {
          "ref": "603fbd41-beb8-498a-872e-e26eaefdcda2",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4ec010a3-93c2-4d26-9878-233b1c448ccd"
        },
        "item": {
          "id": "b71e7903-2eba-48af-a13c-581c738aadc2",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "47894027-6c15-4e35-8962-336555f1f248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce3cafd-d07a-46ea-a64a-fc0be69f9d83",
        "cursor": {
          "ref": "ed08f95f-13db-4de1-9d85-0357f66f5469",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ca262379-5f94-483f-862e-7f54fbe56bd0"
        },
        "item": {
          "id": "4ce3cafd-d07a-46ea-a64a-fc0be69f9d83",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "18be840a-09b1-4ed3-932a-5f542ffac760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a108d444-5d26-40d3-b8d2-d84c3cf7adf3",
        "cursor": {
          "ref": "3ac6e1f9-ef26-4434-b397-9babdda941aa",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "17b5887d-245e-4564-a313-d56fc17ca7f7"
        },
        "item": {
          "id": "a108d444-5d26-40d3-b8d2-d84c3cf7adf3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3e103c32-325e-428e-a540-bff0d160a262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf78929e-9932-4908-b713-43b7f88effb7",
        "cursor": {
          "ref": "6a20faa7-93a4-4c36-aadc-4267ad9a3883",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1d071e26-ce86-4484-986e-977e07f33e05"
        },
        "item": {
          "id": "cf78929e-9932-4908-b713-43b7f88effb7",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7900ed88-62b7-4257-8985-f8097fa081fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8d4127-ccb0-465f-9c15-73f8fba80bc3",
        "cursor": {
          "ref": "e82b04f2-8e20-4073-8cd5-c95ef730f734",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "30f2c801-c468-4779-922a-dea5b3af163d"
        },
        "item": {
          "id": "eb8d4127-ccb0-465f-9c15-73f8fba80bc3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "823f117f-e7ee-4ff9-bfba-1d003e2e1c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc589549-d140-4a82-a508-a211418087b9",
        "cursor": {
          "ref": "bae2b9c2-6595-4dd6-9b5d-a44510e9bceb",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "888febd2-9d03-4409-9dc8-652f629c45f6"
        },
        "item": {
          "id": "bc589549-d140-4a82-a508-a211418087b9",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c0058532-e745-49f5-9836-0cd352610c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda105d9-def9-4b2d-81fc-d202b8aa294a",
        "cursor": {
          "ref": "fcdabc1b-6abc-498b-8387-009dcd1c19fb",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ecc9beb0-5550-4155-bdab-b67c9f109793"
        },
        "item": {
          "id": "fda105d9-def9-4b2d-81fc-d202b8aa294a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "73f05335-ee3a-4722-ae32-7bda6aad6cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe004516-0be4-4e30-a0b8-6de7bf816436",
        "cursor": {
          "ref": "c4d3fbda-e90f-40de-b739-f32ff3897ecb",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a8d0dd49-0076-4ef7-a523-3d408c92c1e3"
        },
        "item": {
          "id": "fe004516-0be4-4e30-a0b8-6de7bf816436",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9bc09060-70dd-48a4-b1b9-ef71039ed2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa7212c-0605-471c-b2a7-d726d4e83a4b",
        "cursor": {
          "ref": "5b13161a-c927-4124-b439-1d30d5d79b83",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9ad1c16d-96ca-4cc9-a652-c8006141833f"
        },
        "item": {
          "id": "afa7212c-0605-471c-b2a7-d726d4e83a4b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a6f59a51-6bce-4935-92f4-c365831a7990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59617adb-3abc-421f-94f0-7039cd60706b",
        "cursor": {
          "ref": "de1678c3-33e2-4795-b46a-8e226f90455d",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "35bfe947-d0b3-483f-935e-708577ca3e98"
        },
        "item": {
          "id": "59617adb-3abc-421f-94f0-7039cd60706b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4a3e894d-433b-469a-81a8-151b8c24ddc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2362d2ca-2099-4ab2-bfba-3657f8194770",
        "cursor": {
          "ref": "09dcbc31-cd00-4c6f-95d9-c8d675e54350",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a5470593-6ee4-4b3b-8939-a99210872812"
        },
        "item": {
          "id": "2362d2ca-2099-4ab2-bfba-3657f8194770",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0f61366d-f74f-4543-8110-9f3aa824e5de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e7ca2d-163d-4936-a9a2-9f0eeac1e1d3",
        "cursor": {
          "ref": "d697ffaa-0927-442a-bb78-7be5d01d5634",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f040b07a-dcd6-469e-b0d5-f762f68752a3"
        },
        "item": {
          "id": "03e7ca2d-163d-4936-a9a2-9f0eeac1e1d3",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9e665f0f-1922-4b30-8cb3-c627c3b53129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d381cccc-a726-4aee-8c80-1e086e605637",
        "cursor": {
          "ref": "a57079b3-8946-4ff2-a01c-3e2d34255063",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a9cef46f-b318-439b-a9f7-9331b45f4521"
        },
        "item": {
          "id": "d381cccc-a726-4aee-8c80-1e086e605637",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d5b7993f-8b5a-46f8-9f47-e4221218d904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a87a5a3-5e33-4ca2-a70a-bc0997ccdf57",
        "cursor": {
          "ref": "87ec39f1-6b8a-45b9-adef-73e112f6f712",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9602e9b7-eddb-435b-ba69-db11981e0822"
        },
        "item": {
          "id": "3a87a5a3-5e33-4ca2-a70a-bc0997ccdf57",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "bf6c200f-d839-4177-a326-64f0fe887d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48267eb-e59f-4f6e-a798-13ee0a9d5b8c",
        "cursor": {
          "ref": "6417e64f-efb6-42c8-8b5b-da0c4784d17f",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f34311c7-25cb-4e8a-b575-9b2a75aa0f74"
        },
        "item": {
          "id": "a48267eb-e59f-4f6e-a798-13ee0a9d5b8c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a695267d-4796-4f9b-a434-9fd196829c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 192,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dee85fc-bc75-4a04-a2a4-ec4fc9312a04",
        "cursor": {
          "ref": "1693c138-ff97-4364-80bf-0d50cc6142de",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "63f54670-0563-4b89-9d22-6fda837923e7"
        },
        "item": {
          "id": "3dee85fc-bc75-4a04-a2a4-ec4fc9312a04",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a2853f0f-0323-4647-ae04-16dfa3579019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de1e47f-1d9e-4fc4-a330-f1efdeeb3229",
        "cursor": {
          "ref": "8215851e-1834-4e63-a89d-ae4cdd9194a4",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "bf189d15-43fa-4a4d-9040-cd503ed928e4"
        },
        "item": {
          "id": "6de1e47f-1d9e-4fc4-a330-f1efdeeb3229",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e64e79d5-887c-42c6-b455-e639e0b725f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79912ec5-8255-401f-b37b-0e207322b580",
        "cursor": {
          "ref": "40e9ba78-2b5f-410c-ae95-f27aa106c127",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a4c826f5-2d8f-455c-82d9-6b4aa9fe64e8"
        },
        "item": {
          "id": "79912ec5-8255-401f-b37b-0e207322b580",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3e05bbe6-a5ca-497c-808f-0cdfa73428de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e7a622-6b00-4dc2-887e-93a5622b427e",
        "cursor": {
          "ref": "370847d8-232b-4602-95d0-ae1a7217e88f",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f8dd077a-b5a4-45c1-80cc-508a66dc034c"
        },
        "item": {
          "id": "74e7a622-6b00-4dc2-887e-93a5622b427e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6d26f87a-c9ad-494e-9e21-b5bfde66d6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0564ed-0e71-4e5f-927f-181f66fc82c2",
        "cursor": {
          "ref": "401259fa-7bc1-4a24-96d1-383c027c8ca2",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1f772ba8-8c1b-4f9b-8956-a546fb778033"
        },
        "item": {
          "id": "bc0564ed-0e71-4e5f-927f-181f66fc82c2",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5177e290-5367-49ce-ad78-e905aedd8599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e9ffd3-a338-4e36-ba4c-6dfa37e659c3",
        "cursor": {
          "ref": "c362c2bf-362f-4900-a4f1-8834677c2031",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3ec978ad-ef8b-4d93-b4d0-27c08d36327b"
        },
        "item": {
          "id": "25e9ffd3-a338-4e36-ba4c-6dfa37e659c3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2bd513ee-a446-4cac-8a87-4485ad986308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629df4e4-84d8-48e5-b2a0-c598d5254f51",
        "cursor": {
          "ref": "1d7e152d-f934-46b2-9166-d3e739346fac",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "84a1a5b4-afb2-4a19-8e1c-534f147d9b4a"
        },
        "item": {
          "id": "629df4e4-84d8-48e5-b2a0-c598d5254f51",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8b284132-eb0c-4c61-b3d9-46b9b198ec51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c4fcbc-9080-4192-b529-c6a71a919474",
        "cursor": {
          "ref": "4cd73e18-0176-4453-9b36-fcf5d951ebd8",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "09277377-be3f-47ac-b34d-9d5a0fd54e44"
        },
        "item": {
          "id": "59c4fcbc-9080-4192-b529-c6a71a919474",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0f026d0b-3de1-4786-bd51-4506b4c8eb85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930f4120-a7da-48ea-b2bc-fc8caeb55c66",
        "cursor": {
          "ref": "e34d0ec4-51f6-41f4-bf3d-0c5e11ba235c",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2b38add6-5c5a-49b2-87cb-137ebde48fa5"
        },
        "item": {
          "id": "930f4120-a7da-48ea-b2bc-fc8caeb55c66",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0bda547a-bd69-4cfb-a959-0758df91f275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6ede84-5991-41f9-af1c-8c1e13fed88d",
        "cursor": {
          "ref": "d7d44178-aab4-472d-a463-17517840ee69",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d93c2c4e-cb81-4efb-a092-d3e30f8e85d6"
        },
        "item": {
          "id": "af6ede84-5991-41f9-af1c-8c1e13fed88d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f43db91e-c55d-4e48-9e94-b8cd10ba39bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6659d92-7fcc-4e71-aed9-e2e92f7d4440",
        "cursor": {
          "ref": "01dae54d-555f-4084-98c9-81b3603bfdf4",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a63b356b-054b-41d2-b36e-e76e52c46334"
        },
        "item": {
          "id": "b6659d92-7fcc-4e71-aed9-e2e92f7d4440",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "eeda3e39-e56c-4340-a935-0f3959f2fe93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a619ead0-d364-4714-860c-c5dc623f4d4a",
        "cursor": {
          "ref": "17dcee0c-21da-4eea-bc1c-461016d3fc08",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "040dc7a1-6c86-48c4-8443-be3f4741bf0a"
        },
        "item": {
          "id": "a619ead0-d364-4714-860c-c5dc623f4d4a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f9d29bd5-f682-48a4-a7f9-e98ba4431502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25211ebe-a915-41f9-bcac-d7ada83f30b8",
        "cursor": {
          "ref": "27b7897c-639b-4ed3-8fa2-cdf9e2e1f8a4",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "28a8ee36-be26-48ac-8907-c39bc0e48323"
        },
        "item": {
          "id": "25211ebe-a915-41f9-bcac-d7ada83f30b8",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "96b443b5-5b76-4ec5-a6c2-a987c60473a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9832d7f4-4acf-4539-aa77-bbac8d546415",
        "cursor": {
          "ref": "6bcd2ccc-16b9-44b1-90d5-d47a7930a9cd",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9f3c0f6b-9e02-49cf-9785-9a6d1b9fe9e6"
        },
        "item": {
          "id": "9832d7f4-4acf-4539-aa77-bbac8d546415",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9705ad30-b802-4290-9708-274ea300d196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8a5b9b-f1b5-4ccf-9f18-e89e226ca1fe",
        "cursor": {
          "ref": "20d6322e-20ba-46c0-b31a-029d22bab248",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f40ad9a5-ece5-4aef-bbde-160bbeb06aac"
        },
        "item": {
          "id": "ae8a5b9b-f1b5-4ccf-9f18-e89e226ca1fe",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7e20b0d8-1310-4b8a-ae54-76636983588b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b857d183-f6a6-4183-bbba-8789440cec8f",
        "cursor": {
          "ref": "e62d9cfd-3162-4197-bb90-ee61a9f492fb",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "790169ca-4c4e-4578-a1f3-04a948b78843"
        },
        "item": {
          "id": "b857d183-f6a6-4183-bbba-8789440cec8f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6367d243-85fe-4b4f-9032-9b7a5937a3fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43dbd73a-0680-43da-83bb-fb954a876601",
        "cursor": {
          "ref": "91d8a173-afdc-4702-b2a2-6086fbd526af",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "004e1848-c522-4df1-9add-5f765e5921a8"
        },
        "item": {
          "id": "43dbd73a-0680-43da-83bb-fb954a876601",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e0c9a2f0-90ac-4827-9138-6ee60def7fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197d0604-89c4-4071-a80b-00fb3d23687c",
        "cursor": {
          "ref": "dea87018-cb0e-428d-82ce-76f344c432c8",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ae068cff-f445-4fa7-aef2-5974114c88de"
        },
        "item": {
          "id": "197d0604-89c4-4071-a80b-00fb3d23687c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b53c8720-24b5-4d69-aa1b-98a99409f57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a802f3-ab7e-414b-8bd2-cc0bb5fcab3a",
        "cursor": {
          "ref": "8722efbf-1c0b-450e-860a-e31a13e7fc19",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "faedf7e3-b119-48f2-9429-045609321b34"
        },
        "item": {
          "id": "20a802f3-ab7e-414b-8bd2-cc0bb5fcab3a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d7988f63-719e-43c6-b335-b4538634d6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd1a787-7b11-4f2f-a29d-aad93afc7e4c",
        "cursor": {
          "ref": "8297820d-2964-4a62-b881-aec829bd0f5c",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "65250a79-0df0-4f25-86f8-485aeb1f9b49"
        },
        "item": {
          "id": "bcd1a787-7b11-4f2f-a29d-aad93afc7e4c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e5db0ddb-d60d-46f2-a86f-111219ac9061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f822d78a-71c7-4c01-bead-624044bfed02",
        "cursor": {
          "ref": "7d039798-4664-44d2-bbe6-eda45c5afd23",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "83174c14-3c21-4fc7-bcbf-d1da60c6cf97"
        },
        "item": {
          "id": "f822d78a-71c7-4c01-bead-624044bfed02",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4b9d370a-1feb-4cce-b581-8d6abf4bdb6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417cef75-b9ba-48da-8ce7-d623c9b9d0c1",
        "cursor": {
          "ref": "8e0131d8-c785-4761-b1d3-b2c1558d91b5",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "63294b7e-7b2e-44aa-9dad-bc4b767b4501"
        },
        "item": {
          "id": "417cef75-b9ba-48da-8ce7-d623c9b9d0c1",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "bb715457-5d5f-451b-9d5e-4c8f3476845d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70cb312-32fc-45ec-a4ec-0c4eeaa17ef1",
        "cursor": {
          "ref": "7dde229b-a68c-49ae-abff-23e64605a723",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c2a8508f-7359-4519-af93-741a577af963"
        },
        "item": {
          "id": "d70cb312-32fc-45ec-a4ec-0c4eeaa17ef1",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4bb61e30-be7f-4f5e-8bf8-a26e061f5454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096cff9d-bf60-4894-aa3f-8abd8f64788e",
        "cursor": {
          "ref": "8540daf4-f110-4269-a34d-0544f249106f",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "cc3fb56b-ce78-4136-b552-3fe7eeaa554d"
        },
        "item": {
          "id": "096cff9d-bf60-4894-aa3f-8abd8f64788e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1934b6fd-7522-42e7-ba46-ce7cb548b471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10db4e3-fa15-49c8-98a6-bee68f7805af",
        "cursor": {
          "ref": "1f718137-4ac1-4d28-b2ee-e3c3d51ba96a",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6a976fb0-653c-4956-a47f-19ac85974e72"
        },
        "item": {
          "id": "c10db4e3-fa15-49c8-98a6-bee68f7805af",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "cf0a6924-12c8-4065-bb61-593c0129bd47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9fe616-3c2a-4b8f-a154-b7bfe68c1019",
        "cursor": {
          "ref": "8b888ece-cf1b-4cd0-8df9-67bebe364954",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e78cf945-410a-44c0-b8f8-c3694dddc70e"
        },
        "item": {
          "id": "1c9fe616-3c2a-4b8f-a154-b7bfe68c1019",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d8779265-e03a-4177-90a5-70e8821592e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4982a547-23fe-43f8-b959-e431420afdb3",
        "cursor": {
          "ref": "c0cec16f-21d7-419d-8f86-e3f9d540bfee",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "42414562-2131-44b6-8c00-b8bda9f05e2c"
        },
        "item": {
          "id": "4982a547-23fe-43f8-b959-e431420afdb3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c6a938b7-1368-40a6-8d00-956348e98eb7",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "087cc1c2-a62b-4163-942b-051aa9da3d2e",
        "cursor": {
          "ref": "27fe5567-2ae1-4dd3-b56b-39457ed5abd8",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b4628ae7-c886-44d0-9eda-75b02938e00d"
        },
        "item": {
          "id": "087cc1c2-a62b-4163-942b-051aa9da3d2e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7f474700-e7e2-4847-ae2e-eef36810240a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2ea5f5-16de-468b-8534-1e7a8d507280",
        "cursor": {
          "ref": "3e81bed9-df3b-4b62-ac25-60cc57304ea7",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1399f36c-b0ab-4f43-9545-eacdee800208"
        },
        "item": {
          "id": "bd2ea5f5-16de-468b-8534-1e7a8d507280",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "898360ec-61c6-4ca1-89d6-03e89fea801f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d70241-29c2-448a-bc9d-6c7d82f99fc6",
        "cursor": {
          "ref": "4887bd70-ba7e-49ed-9756-6d2362badf20",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "673bcf22-53d4-45a5-b803-c16625f3c1d3"
        },
        "item": {
          "id": "62d70241-29c2-448a-bc9d-6c7d82f99fc6",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "daf738cc-b81e-45f6-9172-fb892aba7d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e567d1f3-8178-4971-af6b-8329e167ae92",
        "cursor": {
          "ref": "1dd7919f-4503-4f77-8df2-24ba2639d826",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "78037e51-e712-4b57-a5c4-d99e56af6024"
        },
        "item": {
          "id": "e567d1f3-8178-4971-af6b-8329e167ae92",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d2329f79-9d6e-41c8-9034-42a2b45d97f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0d38f8-0284-4497-9193-9960d4631574",
        "cursor": {
          "ref": "5baa59e4-8db8-4fe2-9a84-8b96f62ffe72",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "91ae8a90-ad99-49e6-9ffc-9eb4da616d28"
        },
        "item": {
          "id": "dc0d38f8-0284-4497-9193-9960d4631574",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "bd4e2af6-9608-45b3-ac36-2fbaaded282c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6440927a-46c9-4723-a303-d280b41cc672",
        "cursor": {
          "ref": "58faa90f-8191-4d6c-a455-5d1203f4ddae",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ff6dc69d-0b5d-4452-b0a9-dd5c0d09b354"
        },
        "item": {
          "id": "6440927a-46c9-4723-a303-d280b41cc672",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9defa592-8c75-4585-9e17-b8d64849416e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf641c0-a77c-4dfb-bbc8-bb4bccd6f1cb",
        "cursor": {
          "ref": "9f2005d4-08fc-457b-97db-3f083889894c",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a0a32bd3-1b77-4992-a2ab-796888d03b03"
        },
        "item": {
          "id": "9bf641c0-a77c-4dfb-bbc8-bb4bccd6f1cb",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "533b2870-caad-4c1b-bc2b-ca5e1443c7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77981963-8cfa-4276-9d68-46b9909b4088",
        "cursor": {
          "ref": "a40d08e7-3a18-4754-9c96-6f6e86fb66cd",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "11f573c5-03cd-4acd-8ef1-ff66b406823b"
        },
        "item": {
          "id": "77981963-8cfa-4276-9d68-46b9909b4088",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9350e8ca-a5e8-4950-83bb-2313e001ec19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a79484-7e33-4603-a690-09fa20dad0d9",
        "cursor": {
          "ref": "7843732b-b455-4fff-aeb9-7c014190b905",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c82cb41e-b188-4c5e-9918-27166545d970"
        },
        "item": {
          "id": "64a79484-7e33-4603-a690-09fa20dad0d9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "64084192-c92e-4233-9cb0-f643cf82bc58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea84a78e-7d65-41ba-9e04-efcfaf3b3c39",
        "cursor": {
          "ref": "3c7d7b03-6e8d-4204-9dc9-729e24c8defd",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "8313821c-c31d-45e9-8d70-0aa8291c1fe6"
        },
        "item": {
          "id": "ea84a78e-7d65-41ba-9e04-efcfaf3b3c39",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "cd8bc3c5-fada-4f79-88d2-72ee63b77781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbf3bce-4836-41f1-b1f5-c8b4227d55df",
        "cursor": {
          "ref": "134e7e9e-8427-431e-a1a4-65d9f2e8f8c6",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "905ac6a8-5707-40b6-9afb-8154e5f204b6"
        },
        "item": {
          "id": "7cbf3bce-4836-41f1-b1f5-c8b4227d55df",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "31301835-faec-492b-ab9e-fcf2edcc81a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6c53e5-32fe-4fbc-831a-3021ebb8c13d",
        "cursor": {
          "ref": "41c80ef2-ce30-4cc4-a320-f9101d73b374",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3f9ca8fc-61ea-471f-8c63-2dc9ffc392ec"
        },
        "item": {
          "id": "2d6c53e5-32fe-4fbc-831a-3021ebb8c13d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2b047759-342a-4f65-aaff-e5c5a647c531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e113e9c-2b17-4aed-b40d-4260400e0467",
        "cursor": {
          "ref": "fc46727d-77e1-4f10-bd3f-d9d6c050c293",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "85afaeac-70d1-4584-93ac-768bec795b11"
        },
        "item": {
          "id": "7e113e9c-2b17-4aed-b40d-4260400e0467",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d6a39995-af3d-429f-bb38-033ff3904a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb636751-f441-4930-bc86-89cb73bc6860",
        "cursor": {
          "ref": "8be4c01c-4bc4-4ca5-80a1-b941177e2184",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "25d0e7a7-5bab-46c5-979f-d670de265a8d"
        },
        "item": {
          "id": "bb636751-f441-4930-bc86-89cb73bc6860",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d822a10a-61de-4563-a0ae-4bd53841d598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30553b45-50e5-4a93-8626-fe342aa85dbd",
        "cursor": {
          "ref": "5c169f46-192d-489b-ba66-0e03b4c5d2b3",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e92b50e5-741a-4b19-b41d-fdb5ac6c6251"
        },
        "item": {
          "id": "30553b45-50e5-4a93-8626-fe342aa85dbd",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "84008fab-2c52-4539-9d72-408068fd6a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "288140d2-b2f0-4264-9143-2290a2cc2b01",
        "cursor": {
          "ref": "0b268f97-c918-4bf3-84ae-dc77ebe8c783",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9325abcc-43d6-4c00-ba4f-d3d4e5877e10"
        },
        "item": {
          "id": "288140d2-b2f0-4264-9143-2290a2cc2b01",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "22815c79-fca8-45ae-9710-9008845ef1a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0840fccd-3458-4229-af4f-434a4a2126c9",
        "cursor": {
          "ref": "e62dd0b3-29c1-43fd-97d1-0d3e9352ffe0",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "fac6dd6f-aea7-41fc-8e35-bf8e92786c80"
        },
        "item": {
          "id": "0840fccd-3458-4229-af4f-434a4a2126c9",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "2ed66009-bdf0-4c97-8bc4-864b5e4336e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34a955a-201c-4f5f-9c55-26d56a64e47f",
        "cursor": {
          "ref": "798e0f3d-8f52-4733-bdf7-89050e291db7",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b89b9303-1dc2-41a2-b626-a982ea6a22b5"
        },
        "item": {
          "id": "d34a955a-201c-4f5f-9c55-26d56a64e47f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3e70b6fc-0062-44f6-b8f3-71c91262a8ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dbba566-65aa-41e8-b19e-9fa69c6b1b72",
        "cursor": {
          "ref": "518fa815-94d4-414b-a70e-06cd76c97935",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e1caa52b-5ad2-484e-a615-0638f1978800"
        },
        "item": {
          "id": "1dbba566-65aa-41e8-b19e-9fa69c6b1b72",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8f47f84c-82a9-4132-9d8b-83c30d28aaf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1bdb70-edd9-4125-8280-d6502a9e16e1",
        "cursor": {
          "ref": "ab37d9e7-7214-42ba-bf44-0b7a36d22cc5",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e531cc3e-28a4-4840-8ee5-5d67ab3ddcb6"
        },
        "item": {
          "id": "dc1bdb70-edd9-4125-8280-d6502a9e16e1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2428b3c9-9e68-4192-b28c-5c0e776927e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9e0480-7d6f-4d79-8080-3bfaafc507e3",
        "cursor": {
          "ref": "66f1596c-605a-4958-b008-4eb3584f9b97",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b92644e6-ed9e-4ea7-8776-ddd8f64ef8ab"
        },
        "item": {
          "id": "ce9e0480-7d6f-4d79-8080-3bfaafc507e3",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0d5929e9-1ca0-4729-8bbc-5f85cd7d0f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26bb5b80-901d-4acd-a842-e4940d53b534",
        "cursor": {
          "ref": "b23e11fb-cb7a-444b-8df2-4c635ff14c01",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "367246ee-1dd0-4983-a84c-728d028f0ebd"
        },
        "item": {
          "id": "26bb5b80-901d-4acd-a842-e4940d53b534",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "67908265-2e25-4e73-8a98-cb8c0e14b935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd577d9e-26af-4358-a841-d69d6413c4d7",
        "cursor": {
          "ref": "76d7d1af-2752-4536-9d8c-aa6a3ad9455c",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "89bd6997-3e22-4600-b1c7-a14aceab6b5d"
        },
        "item": {
          "id": "bd577d9e-26af-4358-a841-d69d6413c4d7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a69739d1-2d95-4188-9491-5afe1f53a1fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d412bf68-5119-4828-ad89-5f99a4dfb0b6",
        "cursor": {
          "ref": "0a1f7c35-7f7c-43e1-941f-f51a1962f2f9",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "bffdb6f7-b6b9-4eb4-a6b3-ef79c15c95f5"
        },
        "item": {
          "id": "d412bf68-5119-4828-ad89-5f99a4dfb0b6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "83a56464-ca6f-42ea-8806-c8ac32d019d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d609ca07-063c-4965-bfb9-aae26ac8e853",
        "cursor": {
          "ref": "06643f3d-245e-4a64-8842-a7f09e829a9f",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "bc590449-5a6f-42b6-a7f9-bb7e461cb0ad"
        },
        "item": {
          "id": "d609ca07-063c-4965-bfb9-aae26ac8e853",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7d39e3a7-3e89-46d0-9ca2-920488c92a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f918c609-cb3d-4c61-acfa-41e756678e40",
        "cursor": {
          "ref": "28153cbb-7037-4b3d-96b7-56e1ad493435",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "d2059cf6-2dbf-44a7-94c0-d4b903bb6c42"
        },
        "item": {
          "id": "f918c609-cb3d-4c61-acfa-41e756678e40",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "67beac5b-ccf8-42eb-b91e-c4076429b717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29a90de-0310-48dc-b166-a340152075a1",
        "cursor": {
          "ref": "96a8682f-1d09-43ea-b842-e7f1880cf173",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "5247e360-7196-44cf-984e-5ccd2e232038"
        },
        "item": {
          "id": "e29a90de-0310-48dc-b166-a340152075a1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1688d70f-2a1f-435e-8f14-fdcf5d29aca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415d0250-cea8-475c-a1bf-22fe2b7ad520",
        "cursor": {
          "ref": "8f4bd6f0-d89a-4136-99c1-e486b35851ba",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "91744f9b-1fec-41df-973e-3b4d692c9282"
        },
        "item": {
          "id": "415d0250-cea8-475c-a1bf-22fe2b7ad520",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "299006d1-ee64-449e-a720-abea5c2c8a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7dc140f-3533-4c41-ad0e-23f2eb924a77",
        "cursor": {
          "ref": "1e613b57-82ec-4c13-bba4-4b8ed821cb99",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "0d245606-ea63-447f-911c-6662140732c2"
        },
        "item": {
          "id": "d7dc140f-3533-4c41-ad0e-23f2eb924a77",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "de656663-e977-4737-93c5-e0343f74856d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8e3b60-6b09-49bb-bab7-8fe386dd9be1",
        "cursor": {
          "ref": "d6fe2344-f850-4614-8c04-7d9785417ffd",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "63d3fa07-efbb-400b-839b-d2d576571b47"
        },
        "item": {
          "id": "dd8e3b60-6b09-49bb-bab7-8fe386dd9be1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2d1b1b5e-3ae6-41b7-bf31-04fee0d04f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdcfd486-6af9-4c62-8008-38547de3dc88",
        "cursor": {
          "ref": "dc46985c-901f-4970-ba36-1e32313ede0a",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "c1ab0ab5-e2e1-4ebf-b320-135196fcde13"
        },
        "item": {
          "id": "cdcfd486-6af9-4c62-8008-38547de3dc88",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5f277561-990e-496b-9571-9eea30cd789b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cbdfd0-3750-4db4-8b61-f8a02fc04ff8",
        "cursor": {
          "ref": "367d7e9f-ac7a-4bbb-a088-cc6f07d2af90",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "6ba2fe94-9583-4fca-825d-79cb93df5c1b"
        },
        "item": {
          "id": "d9cbdfd0-3750-4db4-8b61-f8a02fc04ff8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f52d4792-3185-4a5d-8145-d28ceb4389ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aedc121f-2ba5-4757-a53f-07995284ffdf",
        "cursor": {
          "ref": "80f2f05e-0f3b-43ef-b444-ab65fc693973",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "3330dde7-6119-4326-ba9b-2876cf069b82"
        },
        "item": {
          "id": "aedc121f-2ba5-4757-a53f-07995284ffdf",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9efc2b64-d4a9-4edb-b76c-ebca9e9a4884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3601d7aa-bd8f-4e8d-947b-7edbc27969ff",
        "cursor": {
          "ref": "20d15859-13d7-4125-940b-d8537f51e8d9",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "ec05db9b-fc5a-4cd6-aba1-d5a06091ad69"
        },
        "item": {
          "id": "3601d7aa-bd8f-4e8d-947b-7edbc27969ff",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7f272ffc-2a2d-4920-a7be-cacbf4b93bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ee5cca-b4aa-49ed-90d7-43e8979d9740",
        "cursor": {
          "ref": "ad3bfe96-edce-40bd-83e5-fd21fde9a9b0",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "a6b775d3-088d-4660-915b-ca31a2a320c2"
        },
        "item": {
          "id": "09ee5cca-b4aa-49ed-90d7-43e8979d9740",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7a061cc0-39ef-4933-8f68-0cd4fb9c7e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e406dc4-5db2-4cf1-a077-af98f3395e9d",
        "cursor": {
          "ref": "f15bcaed-c838-4770-b915-1c200a8448eb",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "6b313bef-af25-45b4-8fdb-2747b0a3d96a"
        },
        "item": {
          "id": "8e406dc4-5db2-4cf1-a077-af98f3395e9d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "20e59b25-5d98-48be-8387-13272ef4eafe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6952ea4e-00e3-4901-bcaf-8e346faa4a23",
        "cursor": {
          "ref": "5e81e4e4-ee03-4448-a6a7-cc0528934265",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "61099853-ffc3-45f0-bbe2-d95586d9afce"
        },
        "item": {
          "id": "6952ea4e-00e3-4901-bcaf-8e346faa4a23",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5ffc6869-325a-40f5-abe7-4d7e2f26c475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cbee1e5-dff0-4756-9289-346ed1c2b20e",
        "cursor": {
          "ref": "2968b37d-8b71-457d-bb89-539745a18f72",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "0173078c-1e8b-4a02-859b-4d06f2a57b69"
        },
        "item": {
          "id": "1cbee1e5-dff0-4756-9289-346ed1c2b20e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "baaa69f5-6b27-423c-9b1d-38e2f242e9d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad89685-c1e7-4624-a153-1fb4afa81bad",
        "cursor": {
          "ref": "b22995ca-ea95-4288-958d-866888d83856",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "f12c3ad8-102a-4f67-8626-3980718c52bb"
        },
        "item": {
          "id": "9ad89685-c1e7-4624-a153-1fb4afa81bad",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "22ff1e0f-cf25-452e-ae70-4fb1b42a02a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c309e593-5bf7-4e7c-9466-2ba5cb2cb1db",
        "cursor": {
          "ref": "430c4010-d259-44f1-b94d-39ae2d90cae6",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "52000eeb-dc6d-4528-8f37-3052eda90d5f"
        },
        "item": {
          "id": "c309e593-5bf7-4e7c-9466-2ba5cb2cb1db",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1d8d75b0-269e-4a5d-9817-c5e10d12d419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce9ef10-6bf9-422e-83c0-e0c545598dae",
        "cursor": {
          "ref": "68e6c0a1-ce09-47f1-b82a-520d10290eb2",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "4cb4a51f-7443-4137-9c35-b029b1a01bde"
        },
        "item": {
          "id": "9ce9ef10-6bf9-422e-83c0-e0c545598dae",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "81b34ff9-51df-46d5-b934-1557c4ae9171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b180ba3-ca7e-443b-b130-02951fa31be7",
        "cursor": {
          "ref": "83254288-b06a-4bac-87de-84587f5aa703",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "85889aa0-9538-42e3-ba49-dafc5cb8eb37"
        },
        "item": {
          "id": "7b180ba3-ca7e-443b-b130-02951fa31be7",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a55651ac-4fb0-4439-9a77-6034b370b07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339a5af9-84e2-4b9f-a0a6-597e4269127d",
        "cursor": {
          "ref": "40efc872-8b40-43e9-9d04-f14ffa37c7d5",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "9e14e3b9-7831-4a02-814d-0d0a40e816be"
        },
        "item": {
          "id": "339a5af9-84e2-4b9f-a0a6-597e4269127d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "73123e8f-71ad-4567-945b-5cde5ac8723d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362c6cab-00ea-4feb-80c5-8ec97cc9c083",
        "cursor": {
          "ref": "4d33d1db-f075-416a-b6a1-83db13f80834",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "1e5a9230-4556-4d5d-b47c-91e541e5ea90"
        },
        "item": {
          "id": "362c6cab-00ea-4feb-80c5-8ec97cc9c083",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a8981a65-bc40-4e6e-8112-4ece3f408df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88e6343-4b10-41a5-acf7-a1a5d1cc215d",
        "cursor": {
          "ref": "78b9d2a8-491a-4ff5-af5e-e65243eba3be",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "66ad9efc-1a67-40e7-b868-cd2f8202c9ab"
        },
        "item": {
          "id": "a88e6343-4b10-41a5-acf7-a1a5d1cc215d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c568eaf7-afbf-4158-aa6e-4b504dbdfed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f46b5e5-722e-415d-9d5c-ba70ec7a1d02",
        "cursor": {
          "ref": "74d2ff0b-71f1-4bab-bd58-82eeb44b5b96",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "c91d74d0-15cd-4b83-85cd-f396511391de"
        },
        "item": {
          "id": "5f46b5e5-722e-415d-9d5c-ba70ec7a1d02",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f577580c-c95f-40b2-a505-493e6c0368fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b212fc2d-5074-4baa-8704-3b24aaecfcb9",
        "cursor": {
          "ref": "591f4dac-8e32-446b-b4fb-375235d3a50b",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "a62ed26f-897b-4f4d-9ab6-95a7a2585f5c"
        },
        "item": {
          "id": "b212fc2d-5074-4baa-8704-3b24aaecfcb9",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9d821f93-3b18-4031-bb36-42685f97c493",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07e133a-1bf9-4c40-89a9-602c515479c5",
        "cursor": {
          "ref": "29516fb1-8eab-4706-a439-20bc2dfb64ed",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "bdb0dfed-3716-40bb-952a-9ee79b92c921"
        },
        "item": {
          "id": "d07e133a-1bf9-4c40-89a9-602c515479c5",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "94b920d5-06cd-46ec-8e44-e545b1508c70",
          "status": "OK",
          "code": 200,
          "responseTime": 4,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3943df7e-d663-4bc9-acab-1571c223db40",
        "cursor": {
          "ref": "cf17711a-2f38-4397-9b8b-e59311f2c1c8",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "dd39616a-a967-4103-a522-78af85c086c2"
        },
        "item": {
          "id": "3943df7e-d663-4bc9-acab-1571c223db40",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e8373627-c289-4371-9c17-8226f5c03b29",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d75ba5-85d0-4a7e-800d-bd727117edb8",
        "cursor": {
          "ref": "f00732d2-addd-4ec1-8215-d9f7c8f989eb",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a752ed9e-525d-4b12-b46f-d26342cf6e6e"
        },
        "item": {
          "id": "69d75ba5-85d0-4a7e-800d-bd727117edb8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "63db972a-d728-4f59-b70c-95c75fd7fc2c",
          "status": "OK",
          "code": 200,
          "responseTime": 16,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "56107b3f-2d96-4391-9e01-cad0f06c9a56",
        "cursor": {
          "ref": "3dbe6a19-385e-4fc8-8652-fb2a6aea78e1",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "02d13aef-03ae-4f5a-a5d4-3894519d66e6"
        },
        "item": {
          "id": "56107b3f-2d96-4391-9e01-cad0f06c9a56",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "351e1fb5-5ebe-4d95-8577-09c8d216a1ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56107b3f-2d96-4391-9e01-cad0f06c9a56",
        "cursor": {
          "ref": "3dbe6a19-385e-4fc8-8652-fb2a6aea78e1",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "02d13aef-03ae-4f5a-a5d4-3894519d66e6"
        },
        "item": {
          "id": "56107b3f-2d96-4391-9e01-cad0f06c9a56",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "351e1fb5-5ebe-4d95-8577-09c8d216a1ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36699ab-9591-4f69-8518-4ac006093513",
        "cursor": {
          "ref": "a8a5d5dc-f7cf-43c4-a12a-c4699049ac92",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "8a4618a3-56be-450a-8977-d14438f3c6a1"
        },
        "item": {
          "id": "b36699ab-9591-4f69-8518-4ac006093513",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "acfc4397-ca14-4a55-8edb-5cdc355a6f76",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417e2b9b-bcce-4cbb-b4c5-a5d66ffdb711",
        "cursor": {
          "ref": "0ace988a-595a-47d3-b8d1-1de90989b038",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "1e86adf5-ac46-4eef-b551-b392f82195a1"
        },
        "item": {
          "id": "417e2b9b-bcce-4cbb-b4c5-a5d66ffdb711",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "83690fe7-6b0a-4064-a331-8359c6a3cbfd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}