{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c0aff708-c560-4f95-bd6b-51e6cb11d994",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e10c4161-7896-4b98-acbf-c32f913b2aff",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4c77ede5-4172-44d9-9d1a-afcea1d0439d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b5044a31-828a-42b9-8538-c286a4e7d2a3"
                }
              }
            ]
          },
          {
            "id": "6ea52c0c-9bd7-4b84-8f2f-10693af1d48b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "446ddf90-b769-4a18-854c-b607e9d44182",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "46bf9524-3690-4096-b0f1-a70015eb6b1f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c8422bbe-f970-4dde-845b-e6ab3eafd052",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ec5cd12c-aaea-4361-9abd-f73175143a6d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "876d8a6b-c938-4e3f-9cad-e7a1b7b2394f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3d6833a-38f7-4842-b94f-c6b31ec7e1b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "75366563-3b34-4e5e-9898-97b5b625526e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0c4faeae-f5b9-49cb-8cab-96c797968564",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6544e648-8f1e-4698-a1bc-6a9caa5be252"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7dff28ce-1000-4049-92ea-70b7fff9221f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "27be45c8-325d-43fa-b425-18b2a06b7e5c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3573fd78-0d8d-48aa-bc9c-7724513cd830",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b23e7fb4-6a73-4ea3-ad20-a5701a0370b5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8fa81646-5090-4ee4-b06c-b8e2707cdd69",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fef103f2-8686-4f2e-933b-1dd255b2175d"
            }
          }
        ]
      },
      {
        "id": "7e967137-c27d-4f5b-bc92-cb4f972b3e96",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a4e80350-f4cc-4aa1-9c21-223f3f47dd1b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9429cc9c-d409-43a7-9dcf-eb79f17f4e5b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1cdda85c-e294-40f5-bef3-89cb8b6251ea",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d923582-bf1a-4c6d-bbc8-f6077f833b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d87652a-b33a-4c2c-83b0-9a34c1179ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f92397ee-3011-4497-9551-763f2e4849ea",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f717acfa-7148-4298-a3ab-ab717c6e8ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "714fa070-8da8-4435-96d3-be07e57f19a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d99ad1a-2d1a-4140-a0c4-b5bacee02ae3",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f171733b-b050-449c-a7a7-bfa7212fa62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7153689-d149-4ecd-8714-ef22510189fc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "673a523c-ee4c-4598-9db3-526d00708af5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9e0f2658-8cf5-45bc-978a-7587434a4e55",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c26539af-6069-424f-a5a1-6978d202fd56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80fa1307-6272-4220-884f-724c65b6fe6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c4427d-9a85-4935-8821-6ad32fa6d0f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34c2e340-bf45-49a0-8e82-0ee06ba18f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d87fa38-b234-4088-9741-8a2768ea04dc",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d5a472e-5545-4a8e-82a0-4415627415da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d55c2716-d598-4fd6-8ed8-fcbb9ce5c100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326d7eda-2fc7-4760-9d0d-adf80f72257a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "97f08276-3d54-4079-8333-61c280cba269"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9f32720e-18d4-4ea9-9428-ebf38f170b3b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "82183607-13ed-4840-9de7-0d5a5fa2524f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4b8d560-5677-4417-bdea-a1abee7e2599",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "967bf07e-4cd5-4dce-8799-74245f77d03f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4ac4b85d-684e-4fab-946c-abec36498641",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "9380fb0b-6028-4e09-b9e5-d70cda06416a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b0e0b89-e057-4144-ba29-de543be8ce83",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0aa5e482-62b3-4488-9adf-5fd283f7e70e"
            }
          }
        ]
      },
      {
        "id": "d39b69d5-c930-4928-82f3-c865a8c7e0da",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ac76a7b8-a8d7-45fb-864e-382c56f1b035",
            "name": "Negative Testing",
            "item": [
              {
                "id": "54997473-3f07-483d-adfc-bb0e8b0f5da5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "03728ec6-50f8-44b1-91c9-58e44e81f0c3",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96209d4d-d179-455b-9a01-a4ccf41b64ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a011d5fd-c869-4db9-8c0a-bf83eada02f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72773cdd-1e8f-476a-a72b-106402a0ddf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06c397f3-b4ec-4a88-b428-5d5bef52498d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f5e942-f39f-45a2-b3b6-6529771a3473",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d75227-357e-4770-8b79-31894052c2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57254546-ff65-40b2-8a3e-0a673160845d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e90189-6e81-4cb2-b0d4-cd5875919a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5cf8e37b-0bd5-41a3-a56f-09e0e7190460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6731ede-2efc-4873-bc14-5ec4ab993b54",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c94d94c-37f4-474c-af95-1f1df967ee61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d604aed-ab7e-4407-a8c9-54b66a3177f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8cfaec-286d-4add-bec3-139a9ef250d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18540d83-bb63-48fb-9f76-642861ed2bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823ae476-c631-43b1-8f1f-f68965d88bf2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21399ab0-7d4b-4b96-a6fc-a7779ac8c0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d1ddd9f-4db1-412f-968d-c5fc1e624ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b37356-8a42-4c8e-9e79-947489dd56d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5524c991-b843-41cf-af62-5c47e1da670c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac1af4e-b4f0-4de6-a195-0c88f08d475f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba577aff-1a0a-41d8-9dfd-fe5dbaf9e556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70829d8f-cad8-4571-b02d-988cf548cdb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e5f05c-63c6-4175-845f-746e21422508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac17c423-6e75-41d4-bc55-ca4985aaf80a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bedc118-73cf-4281-86b5-874eeb1bc268",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270ce7c3-aca7-4256-975d-2c58de88c5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbc9301d-dff9-4a20-ac38-15b6b45f59bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7594081-2247-4fd5-aff8-9a5fceae12ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e54c1dad-4852-458d-9a73-1da4dd6c71fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59cd8e9c-6ba1-44eb-93d6-08dd287d3c94",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd89853-f597-4510-8614-81b9e987ed56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10fe60c1-5cab-47c6-a3b4-8ec319c21f49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69931941-d649-4fee-ab3d-658d12bbee76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2aeaecee-fed9-43d2-b101-ae14974e82bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0852ae-f178-44f1-944f-ba52085567bc",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a2cbb8-8676-442c-9687-bb1e02dbeb68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a9e623a-317e-4bef-b755-bfc1299afa5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6a4798-2c50-4047-9c04-03a684e09e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb9dc808-2987-4978-8fa4-2a020a081786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8a0c20-6e26-45e5-8716-46615820f0eb",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b47e99-175b-4863-9041-3ec8a6ce28ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e22094dc-e107-48f3-b652-380ec07cc65c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df92b142-a081-455a-926a-71331fd6a059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5ab7a64-acd2-410d-9930-410f40daf031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0daabc68-4358-4f03-9dab-1bb38f6c478f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "690d85c0-e21a-421c-89b0-24b451cf34e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e2a8a72-563b-42f6-85bc-1f1af7902b4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f118a5-bdc4-465d-bc1b-ac84e17fa333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a0cbada-7b23-4c58-995f-384499206321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57328c02-d4e4-4748-a024-bd4373834cdd",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0a7a96-eb55-47c3-a4cb-93881310402c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35944484-c48a-43b3-acc1-58da7e72f552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c958b5-8c46-4004-bd29-c32de1f4f112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0c379df-6715-45e7-acaa-656be4bcb6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ade593-82a5-44c5-b5b0-d958a1a8d266",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "138b695c-8296-4ea7-8318-99c9dd7afb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3edc10aa-20bf-43ac-97ee-90f12596d3f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e87f1d-0b61-48c5-9d0f-7dc975bb9fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d438dab-97ce-475f-ae8f-15bf67a0b3d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3cf339-2c63-4581-b870-dc08f46e992c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64dabcc7-2937-4ef3-a10a-7b9fdb21df2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96c50504-e462-44f2-9b23-4e70b7558cec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f6e480-e308-4c3c-983e-64319559f55b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82a1a97b-aad7-45af-83fb-cc893a5b609a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25b9078-8d9c-464c-b428-0590aec61212",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5842954f-35be-43ee-a3ea-703bcf571a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb1bf92-afe2-494f-8e73-3f0db14feb3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f969e07f-4ce7-44cb-b670-e26227bb4b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86f6dec8-d061-4ba8-ad0e-a805c02b7a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86927582-f0a5-4ec9-84b4-0fc870f0c79e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3510475-8ab5-4da6-aa4f-bf7973848b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14e31b9f-3988-45d3-b08b-e2ba64774c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "343225ae-31ec-43e2-a264-e352bd3f7cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b51d322-a61f-4a03-9438-d2917901813a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a8bcf4-2614-410b-950c-2c4f3dcce9ac",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b598286-cdeb-4ca6-86d0-049be7f29c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b9002e8-3f00-40a3-90b4-8a99bf7741be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ca7024-a409-4f5d-bf3b-a09c487ad4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c956442-e6dd-44dc-9923-325f89e4c609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3f87da-3284-46a7-b879-10d49a47ea25",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d8e262-4d9d-4612-bdd3-ac00a405e475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca4a6490-14b9-4a19-80a7-5112eec47f95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6dc25d-fc1d-40cc-a199-49a2490a9759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa7a2c4a-3bfe-44bf-8b33-c8d4d3845fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaeafe6e-b56a-4580-ab25-808122fe04d3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b769c7a-3661-4402-a78d-796874a5976f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61d6d6e0-3341-45e0-a5a2-5e3e60c331a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242057fd-5dd4-4920-af61-c8828096fb9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2da30dc8-c6fd-4dc9-8a5f-0c15b024dd12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e42a9de9-bf2f-4186-857a-aa55d15cb817",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f9fa96-2fe8-4963-85c5-a96306e21451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7ae8ea-d9f5-4178-a4de-a5804a53ff5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec74241b-d243-4ad6-bf3c-10ca57baba13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e653adbc-eb9e-4ede-852b-acb02494fc8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feff9f8d-785a-4711-86cc-bcd9a5c69f1e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2fa36e-7e8f-4e4c-9d08-ef481fc7ff97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "319f78ac-5aad-4a42-b022-4cf0c1be0281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65027632-8503-4ceb-989b-2b849e23d3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6294a6f8-e02b-4398-8207-f3cf0a009fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc91618d-0450-429f-bc47-27f4c2c54ee2",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "317e40c5-73fa-49c0-97c5-cad856ee6ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0404478f-3ee5-4705-91cc-70059a5b597c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82585cda-7ed3-4134-8683-dfb53e3c3d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c2c7f84-41f9-4552-befb-296fe250ab44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c4654a-640e-40e1-bf08-0f9d71ea43ed",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09516dec-183c-4f1b-adbe-fe63c50640ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f532c8e-e0ac-4dae-baf8-44c4c826d328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8e2d23-22c7-4568-80aa-61e657d3a336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "30e76877-853d-4c9b-9b90-276e342c1fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6819a8-5994-4dcd-a811-aa376db5ebbe",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4fc7175-6204-43c2-a233-01c4afa9b59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e0ff86d-289f-4639-9ea3-574d28e4ca8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9419bf8e-edda-4a8c-bc35-01041e396120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b3e313af-9b1a-42cf-9d97-7a5f5a00301a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae42683e-3325-4043-b96a-ed06c56173a7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db57d90-3323-4d93-bacc-8d8d9938426e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf678fa-149a-4f22-983a-658a6ac0e44c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aacc9b84-ea86-471d-9a0a-40e20e09116c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a45701b6-3759-46cf-b23f-9e42b941ca4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7825ef2f-41be-48aa-977f-5bec8bf6ca39",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a5b6ff-f953-40df-8c2f-4be6ac7c9b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be910f69-d4ff-4571-95d0-352ad1b3b3c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1163a1-e7f5-463d-b89e-5546efd5ddc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "49a4f464-8991-4725-b5a7-da537ffdd2e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4083ead1-0628-474c-b8f7-4a25a2f1d956",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9feb5b60-a7c7-40de-a610-9f5e2210fd6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e0d089-3889-4715-af50-e15dc976c12a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473f6c83-8c96-4509-a857-2a419e027251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c148313-2593-4a3f-bc23-1cebb0763006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb71b22-a7e1-4376-b694-9427290f90aa",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ebc172-5df1-4eb0-bcd1-ef1f9662bbd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b2bb145-72d0-4301-95c6-bbdf813d57ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb93a84e-5093-44b8-85bf-51c0b1a0301a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9d4d653-7939-4988-8310-b5377b301d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "323820b6-9ee8-4c21-80f6-8b639560b93f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71fade68-3948-4a01-b9fb-a306ac8b666b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac958af-c7a6-4e3a-bb93-b8192496a5ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa694f1-5c2d-4da7-8fb8-c6e3ff499bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd7323fd-179c-4975-a53b-6e3eb517b596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99ccfa5-9ab6-4d71-bd15-a23f00a52966",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "604f6d17-3c15-4d7e-a0d7-66fc96f79d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee5e9fe6-d593-4b17-a77b-a61ae7e26b83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b11c077-e22b-41ab-a92e-61c13b27c14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4aae2773-d6c9-46f5-8401-6fc2095a8d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afde5eda-71f4-4152-abb9-85940bea0173",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52fa9252-9390-4c06-982d-8b62f553d192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30dca040-fa57-4dfe-bfcc-ecd8b907255c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfaa8f14-9cf7-4d45-846d-569cecad7054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "779549ef-98c2-47e3-9e64-47fd42969bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49ad4a7-cb18-4e23-b3e0-a23ad19faae6",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a03dc80-65ab-4ff7-a547-b305e022a9e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56df7647-6d04-4988-8b79-b107de4e768f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1592333f-e2bd-4119-9ed9-694c789e9380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "636a97ed-67b4-4b00-99c4-2ff4b2be374a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0294fc8f-4b13-4d7b-96c0-fc6b3e67e0e7",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ade0d4-a5e8-4131-bb15-15310fa97a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5a41a0a-b687-43c7-ba0f-c38b39409f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c674cb57-09ea-4853-be53-4a0a2a3f1512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2428a00c-a7d6-4c53-ada4-2b925b10369f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3ac1d6-b606-4925-8e35-e113a083f04f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1176de7c-4c56-486c-99e1-ed8b83fb0153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "072f5194-6dc4-41c0-a5d4-e14217b2eeaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8c17bb-42db-49fd-9695-ea7f92fe38c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "38d993ff-7cbe-4332-9a3e-abcc55809db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a40a437-f138-490a-9ef6-3d29e7723930",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "885c5907-ff58-48b3-abb1-781ca27f4e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a382d0a-6cea-4bcf-b274-21851a65cc68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3cc449-f26b-43c1-81f1-ab2de7c703e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f5dd9e5-e7e3-4dcc-87bf-7a17f35f8fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db1e13e-daf9-4f19-99f8-b86b5dafddd0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18e3fc4-d494-4c0f-92d0-d267d96919d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b46dfb36-0d1f-4382-8e7c-eebb26a46cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b145de73-6b5c-440e-9e37-1128d744f813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "047651a9-27c1-49b5-af26-c1aa043b850f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8214066-e179-4a12-9dd8-a19840d0ec55",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3f6c83-a855-4539-b3a6-4aafbcda9d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32b2cc04-c538-4d5f-95d2-badeccba5433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460c33bb-6546-4f18-a1b7-e0e8f637288f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e787dfb4-f7c1-4a56-89e1-8e99b1f816e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41148601-2c6a-4861-9c5e-9e727186dfbd",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51acf87-2fb0-4bc1-bfb5-7543cbef3c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a361478-72b9-46d1-80e9-68e7fa83f217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d11a8f-2342-467a-b1f8-2f48df484f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d61792c8-a2ba-46b6-8140-a9a657d37fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add81196-5fc2-4671-bab3-f4b6d51d3679",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63787841-e1ed-4442-b9eb-2e8eef290c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e39b9298-b11a-47e7-bf63-d8d24eb31e08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d5c102-13b4-4176-b2c3-ba2156033b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "430b0e35-4f0e-4049-9b16-54d9cbe6fe80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "875e4c3b-87a8-465b-b960-14dcbbaf224a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90885027-666d-44c1-bddf-cf908cd25b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb907305-30bb-41b3-8aa3-311a675172bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42cdd380-dd5e-4d96-9ca5-aec0cacd45b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "657358a1-e409-4332-be78-141e7f9e2b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49575f3-4009-48b4-8a6b-af816e68bd9f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0ca569-5761-43d8-ab20-f93f887f08e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0abd58cb-ae9a-498f-8415-db979a1ee1de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7f7ab8-b42d-4d47-9681-f5b40c6dba06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc14636-5831-460e-81ea-d427cc7677c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad4f530-4177-490a-b9c6-ce21c6414b66",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50fc5291-b71b-4909-ae9a-4e8c0f179310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8eb746e-110d-4cb0-b2c7-e915eea51d21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f036dea-0adc-43e7-a786-cf572c75c053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4feac7b-5b6d-4140-8b5c-6bd2110150e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aad474b-298d-46ec-928e-dc620601d0c8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "271a7d6b-691b-48ae-ae8b-844355cf37f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49942e96-023a-4df9-8d93-4e81be729176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf6dcab-9c27-4661-9e6b-1233fbcb340b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "09cca09c-4694-4690-9d65-3402808e8848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a55394-36c7-4c83-a407-5e31b3feb47e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1170759-a9ab-48c3-8e01-f600207c520b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ef6655-5d89-43b1-9924-1186d68d4bf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf49e09-0c9c-443d-9041-657ef275445f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc228e5-406c-4070-a422-2800c6ac30f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8749f33-ffb9-404b-938d-50374a1a42a3",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39facaf-12d7-4e6b-bbfc-a46d4c94cd43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2086315c-bf96-4d73-8bef-2d4cbcdd08f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba29e2e-4a82-44f4-9878-84b48e6bb0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "02d4895a-736d-4d8a-8d51-69e9e337375a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f82a987-3b98-4270-9ce2-987229a24db2",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "428eca03-5d69-4013-8131-bb071b924252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b09f8e0c-8fdc-4926-9290-2489ed2cf37b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ca0885-3ddf-4288-932b-b5d0cc95090c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "919101e1-6964-4b1b-b33d-a1ee0bd24792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca90209-ccbc-4eb5-afb8-a4068bcadcc9",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29add924-201a-4df8-904b-5c9e8a62ca8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff903eef-2975-4921-8c00-9db009303d54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e41253-27e3-4e00-9a1e-36808e6e676a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0548fa2-f0da-42cc-8bdb-fd5ae7a912f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f92c4c-6a0d-46b1-85de-36439b677ae2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e35b28-cbc5-40c3-901e-05b4e267f2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "534fe5b1-a397-4df0-836b-4553eb23ec3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de1b285-2c4a-46f5-88e7-653319af0e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "430e5d20-ee67-4ab4-a27d-ba2dc7779186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb48fb59-a49b-4b73-8771-33e75fbdcf6c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebc4765-a4f7-477f-a2e3-3b33ea981115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b24d1d13-fd02-4328-8b5a-1f993daf139c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09e3641-b581-4a2f-b139-45161971482f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61c2797f-626d-4322-9dc2-b628159500bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c45112e0-17d7-4f61-a2d5-bf444e5661ec",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf12345-cb83-4102-9c31-4ff8368c0a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dce48bba-16af-46c2-b61c-39eb3d90984b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff75efa-cd41-40f3-a964-3948e51e46a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "20a094b1-62bd-40ce-9a9a-e8805a3733d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b4aeec8-2c7d-4fe6-b0e8-71fc23b09a50",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7302269e-871a-4d29-ab0b-af4c7bc6cde7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d02b92-1f21-4d9a-9f30-af49a8b9788b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03943e2e-5782-4537-b271-a77c468888bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "33bac3ca-9a00-49d9-a251-0ed77c01ba8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb802ed1-d563-41b0-a362-c26303040221",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "323b0515-0cd1-4ceb-833e-ca667f046a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62f45c65-a026-459f-ad64-1fb775f6edeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0179d0b-dd42-4d1b-a057-dfd94234e348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "559930d0-1e8d-466e-843b-273d454aed46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac55b6f1-12f4-45c7-b9b0-7149f2d67f6f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f34eea-b21a-4b3a-a6d2-0084280017a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a053d9f-dbe1-4963-b755-45b81fe82883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd8b612-9c6b-41a2-b36c-b30efdaf12db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1edaeaeb-0c85-4bbf-8e76-6f6b5c84c78b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0003c0a5-6b10-41bb-a5b2-8d19439a6b6f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9751ea-82ff-4d7c-8070-c3f83159341b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8d16c9c-daa2-402e-8290-8c294d29c2d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3173c54-4224-4baf-8c25-1edcdf36af72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b8c7102-a1cc-429a-a3f4-0be68095ccae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5afec957-b336-45e4-96ec-e9fc0935eea4",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa01cfb7-02ab-4412-9dbe-1a7476d8ec6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27c22136-3333-44d3-a287-fdb7b96320cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c041ea65-468e-415a-998f-a5a8899d5339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c24b0c33-a001-4a42-ba9b-931c476aba19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8b26d7-d44a-4ceb-8360-21eae67b9da4",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d575d2-4fd4-4847-9c80-f809c682488c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af18e25-6c75-4dee-9b87-5fae40caaa08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e18e80-d8c9-485e-8840-fb1e1c60d8e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6b9e149-ce95-4fcc-9052-15b25c92d791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f1fb27-a5f7-447e-a617-859d5b52f4c1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6b03dc-8245-4e94-b10d-2b39834fb80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a391da50-d9a7-4ac0-9f27-402ee6a9acc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc88068-3b0b-493e-8512-0a66bfec1836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "50c4ac58-5010-4527-ab91-d5a84dddf70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1bde021-af2a-44e5-af9f-352440b2f9d4",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a87192d-9d4c-4674-bf80-9553b772bbff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ef7f0f-6167-4cb9-91c0-35e293e2c03d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e61f91-b1fc-4197-8fd7-7daae623d4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c90a7709-4ea1-4e94-95c0-5fc55449e84c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737e4ad9-15f8-4478-a2c9-af0df3db4378",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a222e487-16d7-45ff-acf2-22cb8164b208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f899011-0529-486f-ad8b-3d42005111b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c14b93-c1c3-462f-b7c7-2280f31bfec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1ae05a9-b901-43c0-92e1-89121b22e410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6147cd0b-1375-4181-93f3-e5abbd368dcb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa925135-012e-425d-b885-9fe6f4afe537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7f492c0-767b-4706-9e44-89a429a767b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad24cd3-5c8c-40a4-98fd-2507c7447ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "95f2c533-31fd-48a7-887f-fd1f7277e336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5193df73-c237-4c82-9bab-30292cece6c5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a24ef52-3d90-4988-9ae4-cb307c486b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ca0e772-2709-4185-a519-f4363763cab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec30feb3-9632-49d7-85a9-23f4769c4e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5df39f39-acf8-4e09-8cb8-f1ba7a1489f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb05ae2-fab8-4c52-adfc-d4ffc17befc6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df220ca3-07a2-45ba-aa99-e3ff72171a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "009312d8-9235-4cad-a563-3b05314a3924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2007e4b3-3dda-48f3-bfa8-0421f4a1d624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b158cc3-c495-4767-a256-9e72e06c0ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ce18d6-cf68-49dd-acac-84d2e573f8a0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61990522-6374-4b30-b5fb-15026ef6b7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a6493fd-67bc-4b45-8015-26eb17f20af4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc465cb3-1534-4b30-80a0-634b07370c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "22e6a1e6-aa3e-4a76-80e0-241783957bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d06ade-ecdc-4b4b-9af8-8a292892ed02",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c655e7ab-4943-4acf-bf86-e76a5b5b17dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b344e76a-f5e2-41a0-a37b-809ddd0279f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b01ac3f-4111-448e-994f-50b579c99572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "04afaafa-4908-4202-aa14-d1b579a5e804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e615e07-263b-4cca-8f78-0173ce1fea3f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf84c15b-de6d-4bad-bc35-e042af12b54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83082d72-7338-4b5d-89fa-236f30c7aac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc0ec5a-e956-40d5-b0f4-6c30167c2c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46b5aa17-6f87-42e5-8b86-0d233ac8accd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4c7e8f-ca45-43f3-92b4-c31ceb5bd8be",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2134f594-2dc5-4e3c-9e96-1fa70cd21962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a116ace9-9a9d-4967-a32f-7c315cd5d2eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a49c41a-5240-4145-9125-4410dfe848b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7389a0d1-5a5d-4629-94fd-0721e92133fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "920b7997-e91a-411e-925b-8727306437ad",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "989ffba7-6b9d-4adb-b28a-6643412dcd15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ab4d7cd-fb8c-4fc1-8c28-4cea8e1fe106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e995e04-010a-427a-8c7f-a1140ef2f6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dee0e3c-1db1-4a3d-9bb1-afc931ef227b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7facff5f-da1f-4603-bf51-84075311c544",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f5f24a-180a-4894-8b5e-4ea21cb2410e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc953378-5cd3-4734-8bf4-0c7e9e2852a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2598bb3b-f1fa-4214-b6fd-5735fe7c947b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4b317254-5f50-4423-b980-0f4d18c62367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38249932-c5db-4763-be35-f7ecd9179104",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7df10d-2416-4227-83d4-3be2137cd3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69d36dba-942d-4ae5-92d1-500dd9280c24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2314a6-05e2-419e-8492-053a3d4b48e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe93ab19-a740-4eba-b8f4-d596eae724ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f9fbcc-84b6-4ad3-b76f-97cb5f167989",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2ebcc0-b766-4669-a1af-60facc46bb63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "418c33b6-d6f5-4562-adb4-583a7afbfbb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92bc90a5-c09d-48ad-a951-dc87318f0ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1868c573-748e-4877-b1c3-0dec422c3b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0a6332-ec83-4bff-b58c-de5bccd37f8f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df60f1ab-9a32-4039-a8f7-25d2a07f53f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f73213-f5f4-4b98-9db1-93f77bc2af5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d7ad30-a693-4c84-8e05-45e9f91e8ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14e0ad96-136c-4f18-8a17-df6f28c6a6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc6090b-5f86-4f39-8b34-2aace9b49f47",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a98e80-ef92-4bd5-ae2a-13bb84ac2ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "664fc612-e19d-4f24-8462-557e27e5e667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a04ea2-eec8-4f96-80c7-e63d55101bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6148187-6dc1-4c77-bd2c-2c9a3506d7c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cabe8b4-0f75-488d-be70-7bc4b0b3e65e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6820d16a-480c-405c-b3e0-81239c55797c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a89b2df-eb9d-4ca5-96e5-c4388247f6a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b670c293-ea3f-43fe-a0c6-fd59cc6a791f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c410f95c-f230-4bda-9d8e-d77a0d07d4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d68525-1441-4f5a-9e33-713c3ccb9bb8",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a455efe4-faaf-426a-9467-c635449744a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "159ed28f-d1f5-4ac8-bfb4-9503b0c7ea35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b563d7d-4093-4333-a743-3e4dc837cc77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "561bdd01-3131-4cda-9f1b-b6ef904713d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbff112f-c191-4a56-8892-3cd1f414eeca",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a448e4c0-44af-4db3-b9e8-53d6317ee0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d326ac-63fd-495f-a5b6-a9ee1176ae4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9084c9-12ca-4558-a5c2-46a7d9615fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0529167d-09b5-46a2-a924-5b1db58c0ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4dd8db-b2d6-4f67-989d-07b35a4cacdf",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e919d1fd-0b41-4962-bd10-228c1e2396ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef9aba28-48b8-47c7-9697-6898a7ff122a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99b11e1-61c9-48ce-b65f-a8676216daa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "52ad107b-2c71-4ed2-aafa-b62573079e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4289892-f84e-4505-bb8b-c26eaacc3393",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50292468-582a-49d4-a784-2279bb2fa7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2f3b0e3-2bd2-413a-8250-384cc09da644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69d26b6-001e-4bc5-880c-a4e8a6e9ff70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "33eadc92-a863-4219-951d-b99c6ef44ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4743c817-ba94-4c98-8e0b-4f158d401d08",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "255236c4-68ab-4db2-aebb-e9c5a7aa7224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40094a56-f1c9-4a80-b3a8-93f63fada307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451387d4-6583-4bcc-93b7-1f550c47deb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "858702aa-3a75-4731-b08c-3423a86118a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ecaead3-7883-4648-9f61-ddbe0b44b1e8",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "583d00f9-b9e7-4a46-813b-550957e5df75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02bb529b-38bc-4641-8e96-63ce49148177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a9a48a-4011-4782-8e9f-a5a9a2c2f8bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1105898-5128-42c4-acad-229b06f55565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa89eab1-7c16-4d7f-a7ad-ddf105145cc7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da53604-207a-483a-8b61-d8a0766ed438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "010b5dbe-4b17-4fb5-a96b-3f1c4d8d4359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66e95073-4f88-4a00-a6f9-2f3b820b0379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea150a92-3423-46cb-b4eb-30de81464f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869ee77a-03a0-4f5c-896b-0d4fc2f58bf1",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c93cf03-2361-421b-8620-3b8c918c44b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc96c42f-f7ea-4fc8-ac58-2caa7f3431e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c7089af-0f6a-4724-b754-27d87e01927c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "69fef38e-e566-4693-bf88-98b8d1911f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f7597ad-85da-4eea-add5-c096073e3713",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3958ed-4576-4e53-a356-ff4b2c07c571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36c0f18b-43e1-4cf4-8bf8-9aba82bab4bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e192a0ae-0a6b-4569-ba43-a826c0629923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "27396d1d-6227-406c-89ff-0a8f3f77a239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ce64d3-c24e-4ce5-aef6-67c42d785d3c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97bfb475-40a6-43d8-81d6-41db9a0270cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb417608-82d8-483d-8400-5cc86035621a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc74c26e-8bd1-4f45-a9d4-bad6910743a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "907f28c2-4a96-431d-8798-9fee6a7c374b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f690cb-dd8d-45ed-b7e2-0bbe097e0ccc",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "943d5638-7b52-4956-bf54-b0f3096acbb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db346059-1f81-4cf5-9ffa-bbe37c3310e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0779310e-c1e7-497a-9415-cf5a963a00a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "daaffc51-74e5-43e7-9653-3b43a30c5dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19eb565c-8629-4d38-847a-ad0049c6ba1e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5d30ae-47a7-4fce-a870-5e72c8860a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae26e83f-0ba4-4fc1-8c0c-3a054306b4a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1037e9d1-6dc5-490a-b690-3192a6e1670a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "516ba4f7-86b4-46b6-ad58-fb4dcc7df80a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2c3b81-594d-41c8-9d8b-c3e70b711219",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d9235f-bf2a-485b-af29-444126f7c14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1379118-2df7-4e51-adc3-3a7eb35356f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4131367-bbde-4ff5-af9e-8f5319751ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "67fbd759-cf5e-4399-be6d-7427ed837a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6abdfa0d-eb26-4294-91ab-fd3f1d1a91b9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22c5c99-11a6-413b-90ef-e416b144b65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e29719e-fb19-4cdc-bd7a-c11cc4dd42d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea26841-324a-425f-bce3-1b808383aaff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "37d0ab60-33db-45dc-ba65-6bed7e363e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a8dfeb0-ea67-4068-8e2b-555e0e273549",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac3b84d-cae5-4887-9395-28fcbed6ec3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b335ded6-af53-4372-8138-fb6201cbf45b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716fa677-d7a3-40f5-be37-f90f1eccb5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd24e43b-6ba9-48fe-a5fd-cce332586bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee28adb5-3c5a-4782-beaa-80df445808f4",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a1811e-c09f-407e-bc35-d8ca7ca497d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7abf34b-1c71-4831-b6b4-b2b3a48caa72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b90cd34d-e0c2-4028-a7d6-4e57e5268bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "628a5193-05cc-44d2-958d-04c25d67746b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34aa118-ab65-4835-9390-707b057e3bbe",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46fbd52-d3e0-4f39-85fd-690b1d14ecb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59c51fed-aab4-4ea0-b189-a229779d59b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164632fa-c2e2-4dea-a13e-371dd17a6d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e54431-bcd0-44c9-a22d-f714945d12b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965e21dc-48ba-4713-b099-d54b3742d02a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a6712b-716e-48e1-bd03-67c15d28d704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec3bb23d-3b3b-4a7d-aee0-5bf43b432ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb89d7d-7f2c-4799-8244-d15a46b0df8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5743f8dc-6bef-4e1b-867d-3e796b988bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d43718f-af28-46e8-8f3e-797fc7ea8a99",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "403b0106-8281-4654-b6fb-a3301541193c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e519751-4492-4162-b1bd-f958b556d4cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c60ac13-6429-441c-94f5-875c50bbee54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "708eb02e-14f6-469e-bb98-56ddb252ac2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1a87f4-dc5e-4f80-9cfc-704c62451c8b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a61f686-4871-42d7-91fb-abe762165d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "eac4809d-2fa1-4d24-8158-fde74c975764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a32a703c-59ab-42ab-a30c-03d1e768508c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "eea0f0ce-56c9-4c5e-8df7-78422615e81a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ed50889c-fad6-44bb-9523-6143ee50f66d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1f282c3c-26ed-4db1-bff3-e64f91ce53f2",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef753eb9-3b97-4c17-bf4d-c38f7441b65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "14f1f748-8fdf-4922-a21e-480a66a67b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490e9808-d78a-4def-b9a8-d899ad084977",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "a046746c-b32f-4aab-949b-325c837b7dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd91a7d-dd83-4257-8cdb-ed75411ce5b0",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74906b18-6ba4-4057-88f4-82d26e0e0ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e1c2aeb-ccb4-4324-9bc2-03256954fb7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8c1d30-f6c9-4717-83e1-67bf77d71047",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "5636ca51-6a5e-447a-826d-d9939d7e30f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "801d6771-1d0c-4152-9e96-e579b76c501a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "604b5caf-c2f1-4b15-b20e-94a1f1977b48"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e559b312-46c2-4503-a505-04fe6be8a4ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36e3dd97-863b-4ecb-97ce-de4210055a2f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "71df87da-be14-4d52-b5f9-fdec5dd1588e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "12a3b27f-7b3f-4067-bad6-57b3df3b5b24"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d9030be3-547e-4484-b594-7860a6ca5b99",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e5bb6cf7-1f9b-4e94-a21a-74de5903c874"
                }
              }
            ]
          },
          {
            "id": "238eb09d-e146-4e6b-aaf0-792692265d66",
            "name": "Positive Testing",
            "item": [
              {
                "id": "07272ba8-7eff-4129-adbf-097f3e434bf8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "66e57a46-438d-4817-8dc9-608430294664",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4bb103c1-8353-401c-bb24-2938a1e92e85"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "500ed1cf-abc8-4d9c-915d-ab63f00ff3e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2c66ae15-1eb5-4e32-a792-f3ed3e8d8d5d"
                    }
                  }
                ]
              },
              {
                "id": "1260ae1c-cea6-4d3a-a200-5b945252ccb5",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ae31ecf-b25b-4649-92bd-5535bf73665b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f595846b-fecf-4b53-839a-dfef95de23cb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ce58f7a-4fe8-4c61-af78-70e874a98304",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "af912571-5c25-4db3-a9fb-437e8bb4b24c"
                    }
                  }
                ]
              },
              {
                "id": "936747cc-2bce-4bb9-9d6d-b7a70eaf816f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "33bbf2f2-eb94-4e4b-a82e-ccbde287f0e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f8e253c6-57d5-4eb7-8f86-26386e43deb8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "648dd68b-b574-4285-b530-e27b54cdb1b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "23218c41-38f6-493f-be63-4516e24e1c85"
                    }
                  }
                ]
              },
              {
                "id": "f6420ba4-447b-44f9-b3c2-33c10db6f9a4",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d74a43d-32f1-4fb4-a113-3d493689e98f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e634d584-4659-4fb0-bc1f-03e409ce0dd7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "834860f6-3cc9-4c30-a8f6-775cbd8d699a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8ebb0318-f7a3-4e2c-ba4e-0e2687507253"
                    }
                  }
                ]
              },
              {
                "id": "515238bb-1542-4af6-8c2e-239be4956b8a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae5b0180-d898-408d-ae3d-f73d678bd4ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5a312b5e-d6bc-4ab4-b311-1b0f38617856"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52d59e4e-3520-4910-8505-54bd9d58f462",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2c55591a-4a61-4e20-ab44-f85956edd0ea"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ab124112-07d3-43d8-8bf6-2a855fc20033",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b7d8ce01-6355-48f4-ba3e-49387dfe4fc7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7e929993-7d10-4f7c-a158-6fef1435a33c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9e48d026-067a-428f-9206-2d5ec336dfe8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a939017-a6b6-4fa8-8f6e-b7475084e50d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "fed74ffa-ff12-4689-9461-175c8996789f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b16d046-cc43-4602-be59-752189750344",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ffa55fb9-0542-4037-a88c-63ca5694ecc9"
            }
          }
        ]
      },
      {
        "id": "f6522678-208b-4c49-b757-94b9fb4bac83",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5a940d18-fb40-4064-b2d3-6bb8a46a7de3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4c576df5-7aa1-4ebc-b0e6-6230742b7207",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "80f4d200-3ef1-4e87-aa8e-dcc6f516ab84",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6844bee0-0234-482f-badc-9024a6cdb2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f5f213-a2c8-49e9-b270-cce8f47c8af5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3b146e-fc66-4984-a60b-f498de404d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e23b5cf-5397-4eda-b28b-8aef3baa8c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3ee578-1498-4347-8dfa-89f395d307a2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03dcd43f-f4e8-4ac7-afe2-f50f54a4958c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "290f37c4-06fb-4efc-97ef-dd2ba1f60599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049b1d1e-6fd6-44bb-baa5-802101fc885d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9066ccaa-9edb-4b75-8f51-caccbefa2a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "890b9c5e-4908-4145-8239-ca00fcb0a1d8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94db0911-39cf-4f88-922e-a2b12f29944c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "895cd8c1-9288-4c67-bdaf-c25c7c204266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9b82ad-71e6-4410-8d4f-5ea076d456ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7771640-b450-4a1e-97d4-e812359d741c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd00f8f9-2d57-4c05-abc8-81b44facdf56",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b77cf23-731c-4f66-81d6-dd9427ae006f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3bd4118-0e4f-4cac-b6ef-7bd3b0714010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806c00be-12fa-4189-8f78-6658b810a737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "978a7576-483a-4c57-9ab7-b3da4c54ebda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a67d94-5d63-46cc-8889-27da46ac2899",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1130690-b8ca-467e-8b8f-169827f59214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "786f8e24-27c4-4bb4-9f18-8b90f09c1e3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c333d25f-108c-452c-95f3-551505a53fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35e4599f-fa8e-401e-a6e6-2c73b3637f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c20290-af23-4922-b128-0a293ee3120e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f4f2d9-9391-4143-936c-470154fe4681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4360286-4d47-444b-8328-1c835192e61d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be93830-6877-4ac4-82ee-f0a3b79e9cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "11666a55-65be-44c1-90a8-684cf399a26e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9baf6bd7-8ad5-4c65-95d7-81f6e633461c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e438829-32b1-41ee-a7c3-2a8a05b9060a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52427a2d-eea4-496c-949d-7d12e1c38c5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4ee9ee-dc30-43e2-a79d-4dc8f9fd55c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5491da12-19be-4e4c-b299-43792dc32d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7acb8d4e-5a49-4f72-916f-9633e913bae3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed2e325-d53a-438e-b6de-dde79f442357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5103cc0d-fe90-47f0-91e7-b1dd4788585f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcea2090-77ca-4c36-95f8-957962cb1e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "391c0305-52cf-424b-808c-7f3fd2e2c2c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66bd6cae-58be-4f83-95a0-366c0390fa6b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "305942f5-8ff8-43cc-b868-a846e3f59fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be1549b6-1f1c-4df5-9d1a-66c552ee20ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd8c62f-8982-4328-90be-d31f4e4683d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01394ca4-1ca8-41a3-84d5-14ed9ba13106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2517252-2ffa-41d8-8329-fb2710a29e9b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f4f63f-ff03-4a76-a6b3-17590b56adac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05e14649-04b0-40b5-b963-fbb7165d2c34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72f356d-95ac-4fdc-9f55-f0cc13ea9457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc1e1030-5821-4be7-b8f4-b7b050be0952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c231b600-9c63-4b03-abe0-085f315fbf7f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64f5cb1-5640-44ef-bbce-6004c121d248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4c32174-2b43-4a12-928c-e7129e06c75d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2484e9-f1d9-499e-ae4b-4565a462311c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "edc43c3f-bb28-4db3-9cf3-0d9070720a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31440b4-61fd-45ce-b754-dd30b7380d40",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6397979c-bb1f-405a-8a90-e9b07295cd65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49cf52fd-cf4e-4dc0-b72e-2c1b978fb664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313dae60-a8cb-4033-8e23-3d12495987b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e66dac79-2bac-4b4e-9137-7cdf0bfc8141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282f89ed-aaa5-4e3f-9d4d-b9656d51504e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f251d5f5-0cdb-4f08-bbfa-7241e1684d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd98144d-0527-466b-834c-2199e905bf86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874c26de-4c5c-4363-8243-2317580a43e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a18516c4-c6c5-4d21-a947-e5d829028f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c15ecd-80c9-47e3-bf52-836ef009ddbb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9236295a-dafe-4cee-99ba-57c1f4177622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2732d2a-ca84-40c3-8d95-632bc19c0e38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8845b072-876d-472d-8d47-6445ced190d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d53e7f6d-5524-4ac1-90e6-b95bb5a78036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37fbeb8f-6ffb-4f26-ae20-dcee4105a30e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "803dad43-d05d-4cf8-bc40-8847bb917dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8486da0-ef6f-4967-8819-2b313e9a5283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0065ba-235f-4b5d-a2f0-b719bec3a102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e08f711-2369-4602-8f03-adcbfe0cad9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050fc71a-30d6-4969-9e8d-ad787a5de58f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b97a576-59e5-445c-af3d-cf9d7d36afb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a5bbe2-df74-416b-ae9a-10b7870ef4d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c352227-c75d-4b87-88a3-93185b472d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "916ab75f-f6a5-4855-9121-592da33fab7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdeffbca-672c-41db-8228-a8bf253efd0d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24653208-aa88-463a-946b-c2ad4150a1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e89130-1fd2-4aac-aa0f-b774d735ee6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d648f9-aa1d-4ae2-a000-e147f25a68dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf13370b-cbcc-4fc8-90c8-cdd01c7370d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d95ae540-2965-41eb-a00e-74770e7da46f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8539e51d-fef0-4f72-8947-cc9b2dff4bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbff35ca-b5fb-467f-9fbb-67b36661f323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1154133a-60e4-42e1-90ff-9919e1d04483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fe6d88d-6f84-4a88-846b-0f237243e0f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e29a898-ceb3-400e-96df-ec298491249f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79feaf90-679a-4ef6-8382-69d26ffd63b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4f0acff-b782-4d49-8e37-e21e98a0e64d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f42ba82-6e32-4aac-84a5-176c81d0c58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3f4437a-c808-4a32-a6b9-ff364e5854de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6faa72-81da-43b6-835a-bb9f3b6b7862",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "935dd4e5-ed8b-4ebc-aeac-a3b0a747e27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d233c133-0d5a-48fc-92ae-abc6dade9de7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a950a5-50fe-42b3-be87-341b26b1fe37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b457d51-2320-4101-b753-41b7c800244d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef846b1-f41d-42c7-91dc-778b83613e68",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c7f9ae-df1b-4fee-99fe-097ebb1cc44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "decdcb2d-caee-4eaa-b741-bddfbf88c945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55e0278-dd0b-401e-95f2-1f97efd41986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "649a578b-3726-4eca-80d8-0e95f5934e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d3ee39-0bd9-4b08-8f20-193d32537703",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca354fc5-258f-459f-a6cf-033243a078af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a86b7922-d50d-4ed3-9be9-9581cc1b5eb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608340dc-ea89-40d3-a11f-1f42185fc6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "deed1d75-a636-4924-b69c-b198d97498f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6387f7c3-2f49-4dde-9ffd-1b50bd099d43",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3f79be-a862-4b11-b633-0bc08b9aee27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5326689f-864d-4dbd-98de-710fb57daec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136bcddb-4d10-41f3-aaa9-5829e3723db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b976522-fdf2-4836-b60f-619a12287c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e737a90-ec32-4f2e-9a19-73cc5753e5d2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8b81db-98c5-416f-8052-da533b3467ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9879f1cd-fbf3-402e-9126-b99c126d56b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2161462-9c28-41a4-8fb4-67c1ff4ef3e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bf9784c-70f6-47c5-92b1-567e9454041b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e25f05-5888-4cee-93aa-54468094199b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "819296b3-e9c0-4aaa-880d-be535087f361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a4d4a33-2246-46d2-a767-37af7af1d4d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb9aeea-c116-4ff1-8107-14c1e75d8c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b88617e-3a14-476f-997e-c473b317cee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592497a4-739b-42c7-823f-7bf382a3c77e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e90056-be72-4484-8245-b8633d8932c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fada1da-5b9e-4786-b06b-8946beba0937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455dc4e1-83a7-43a8-b986-b949a4f54515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a932a5f-9997-4588-9cdd-3903d3c1019b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b15842-8ae3-4a78-a56f-5635414e5ca2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f640240d-11a0-4231-8fb9-488ba87f41e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88f14e25-d5c6-4ad9-87a2-72bda3d728b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556a40b3-1c2b-4fbf-9851-7cc041206bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "892dbcdc-2179-4b19-a153-502d8bba1127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a030e78f-54ff-4111-8b01-e05d3b261cc2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10097da-e0b7-4e18-acef-9c100b5d87d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f412ecc7-e9b4-456d-8292-d3bdceb6440e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f1d8bd-e397-49ca-a910-ae17cbc6e43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05c9886d-2e33-4ded-8ade-962454aa5304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec8a3964-3d60-4ac4-aa1e-4c03cd3d12ea",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc394bc-f1a9-4aa5-b367-3a21a80be8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1bb22a6-3529-404d-8b4e-1a46e38ac54d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a32f6a54-76f0-45d5-a1bc-6f27b5ca9f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c4408fc-0006-47e0-b859-2b89cb9741ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7304a88a-ed15-464c-ae8e-adbc38c8f456",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf56764-6eae-4dc5-8efc-31c0fae08c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57bf4d71-7a15-4579-9e6a-c69c9aa4c891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4178f284-280c-43ae-90a5-bdb9af250a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc0f559d-0629-4326-b0d5-94fe93f6b86b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed967ff0-a35c-4c56-8b2f-e155b01345e1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea60a4c4-da6d-40cc-ba07-96a32ff9555d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c9b373-cb96-4ede-a709-09932f8ed009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6beffe28-82b7-4cf5-8df2-d1d6fb72d7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2ba490b-51ab-425c-b9d9-db747c9836f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce342504-c675-43b1-94a4-e89d7ab92ce6",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8886f66-39fb-4ebe-a2a2-5c597b413295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a3dcf6d-93e4-481a-9525-1ef8d08c0d4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97c1b23-3ee6-4733-abc5-dd3fef53d911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d879ed2d-751f-48fb-8888-b0ceb347c533"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2dd3952d-b27c-492c-a5f2-1823d1ba69bc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "66f4c562-505d-4d42-8f56-b35bc4750109",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3bfd6ca-c4c0-4d68-859e-b34f1ee9d3fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08da0a51-2271-46bb-b6f4-0a6b72fc8a10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a89aef-61bf-4052-9a9b-fabb08ce35a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf4e1dad-0cfe-4c09-afd1-58831951bfb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2c5baf-3717-43c5-bb94-ad3ba1f2a2c9",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65a76d6-011f-4ae2-8db4-6d7502bed27f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "082b412c-ba62-4152-b231-6a0433a7d4c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c3ab53-a161-400e-ba54-2d49741a9083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d98a142-bcba-44aa-8556-36ab8c0554ea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3c7ef5d-e69f-45b1-bdbf-21ca286041c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "928c533e-4ea8-4533-a732-40888edf19ba"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c8f4e8a-4118-4af7-874e-25b0dc2eb295",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b162c16-7fbc-42e3-924f-40391465e7ba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b502b0ca-27fd-4a0a-8204-2b59fdf462f2",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4bcde9b6-9878-4264-9f90-dd83d16452c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77eb5b17-7957-4c7d-9bfe-affbfc9efecc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cde9bf66-f5ea-4723-af40-e6edd330e448"
            }
          }
        ]
      },
      {
        "id": "081a6642-ab48-4b56-b01a-8e9211ca572f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "39b8a7e1-c187-4781-8512-e6c5bf41dfd7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a2b7d06e-65a9-4616-bc57-03c55577c166",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "482e29ed-c23d-493c-bbdd-16728b5952a7",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a25c5e-ddac-43e7-952a-f90a5def4558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0394d43-d58c-4bf9-a073-0031242ce455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9dcce4-146b-4fbf-a80c-670a250e3fb3",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9e8031-c570-48e8-867a-ff054e53281d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d6f3d0-01aa-421e-8518-392460188c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5173e0f7-6b8d-4890-9b5c-a73cdde04af4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1dfcff-e345-4572-b35f-31f09b77a303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb5e21da-5a78-4057-ab71-5b915f109bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a712cab9-1409-441f-91d1-2bdcf3292f41",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "875cbb8f-0208-4631-82d2-7f6539895194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b89bccb-10e7-4c53-a356-76d44b1e296c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd20ab8-398d-428f-9548-17d8b8b498d6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4104412-51c9-4d78-b299-6f0a3f567278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "396b9d9f-7536-413f-b5c6-cfd593c6d59b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d13588-90cd-4327-8cb4-a31e0224b2f8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852effc8-2728-48e6-908a-e5648554dfbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc4d2a3-a6c0-4ab2-bad7-83eb04eb1626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f9183c-5e15-4a4d-b452-1136fb79ffd4",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd4f73d-c466-4e84-bcc2-2aa0c0d87f07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c855675-d6ac-4ef2-bd12-6aae133d9fbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e6e502-43a5-40ff-ac7b-9051d7ab8064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "795b03ce-1721-444c-936a-9c46ee458247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1fbc22-5f34-4dbf-b984-0466dca8d732",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b887f015-2de7-487d-b757-ebdda8a882d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1edc3648-c0a4-401c-b7b1-ebe4190f96ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7b8787-f8fe-4baa-bbba-4b2f984a7c71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7820c71d-b695-4861-aa30-67925254c060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9614279f-8b83-4124-8a5a-d92fb0d37339",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b025452-6cce-4d92-be24-ab744456e05e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4b1a602-0625-4862-81b2-895e86fc561b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3569cba9-bf6f-4d8e-b0ed-0ad7e67e62d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c99c968-810d-474d-822b-d826f73010a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a08fe1b-fb7c-4bc6-9f44-b58089d2326e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9764247-5b1a-43c4-a093-99873f927c07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9668462f-38c5-40f3-9ac8-ee0f343a42ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab44ad5-6b20-4f72-9045-7a572c834142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24a65199-bfc3-4928-9e4a-7da170c7fcf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a2bef9-185d-4d50-880c-716612abd9a3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b3d730-786c-478b-b3e1-f56e2f3af5a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf3c52de-e102-4148-baae-7c6fa1fca067"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c5aea1-fb93-4977-985b-436058ea5e02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20c8b102-9f7d-4819-852b-8d0c3edaaff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6bb9bfc-9a6f-4612-abdd-16b86fc4b688",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2302f9bb-1275-47a7-a72d-a838782d4bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "954c5347-caf8-4c92-835c-28893314d543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "574a6166-d7c5-49ab-b655-1691f2956fa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf7e992-ab6a-4682-85bd-4aab875192a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7854927-a928-4d0a-9fdd-9eaef1b493ef",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c11d7ec-d519-439e-aefb-7b2e66a0c4ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e571bf81-419a-4325-912f-e2783cd71d71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4ea334-153e-4b39-ac50-41a9384a7920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6bc6483-4502-4764-ac4c-75a4743e8698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc819606-0588-446f-beba-83baaaec76af",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ef125e-e481-4edd-af7c-acd3c6707afe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0758471d-d1e0-49f8-9aaf-fffeee9d1368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "079d900e-640b-475c-8fed-de604bd8cfc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79437d76-eb77-4772-88ef-20f8ad883c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e161d1d-8f69-454f-bcd9-eb66459e549b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "888e0e66-f17b-4be4-b192-bc9a6de365b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7389b3ed-71d0-4a19-a426-f4ea1854830e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41229340-cfce-4bb4-adfe-b9730ab3d718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc4fe41-6c33-42c6-b958-20bdab7545a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549e106b-6e8b-4a81-8405-72898719bbb5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2031aff2-a83c-4605-af1e-72490a85a5d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "200e0fed-12d0-46e8-a8e5-ab95eaca1eaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f80f086-8eae-44b4-9ea7-c49eafd0dacb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f1d62a-5323-4caf-8159-3faa97be6ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc3720c-566d-4715-ab8b-2206c89b4342",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe5ef0e-50a2-40b4-91c6-01e15e337d05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a065154-9e12-4964-bd32-cf3b718a30da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e27b967-3788-4e94-a79c-e903a14687b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80cf50ad-2e39-4e82-bde5-9d15090a9bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8afd190-3604-46bd-a5aa-ced054aeec7a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc6176d-62e1-4783-9587-22c423782738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f674892-4a3d-41a7-af6b-9158029f72a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b22f15-9d3d-4659-9253-69f6d0ef23a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1896082-0b0e-4081-968d-c7bfdbc695b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93606e70-2110-4586-ac79-14b5e86b435f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ee9783-07ee-4bc3-b505-f415fe8f8f91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "188bb84b-7acf-45e0-b7d6-2c5460631c1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e712c01-9bec-4766-a771-5daaa39c2c26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1247329a-2194-471e-a145-0e2f8053d329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e8769cc-4874-4abe-8373-d332c5d89437",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2673373c-243e-45f2-945e-96af27c404b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b38e6c8-7135-4ffd-9182-ebea61191e5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "988c427c-2ecb-4579-8d7c-ede7852ddb21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b48ba433-b2ce-4977-a5ee-0c8eacef579e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342adfd1-2310-4b09-8167-ac2665272de2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbebe2c7-e15f-4b4d-be0b-c8b60e63b1be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b2fd322-76ae-43ca-b24b-d6ac847a0fc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e898300-e6ce-42ae-b93a-667c463b61c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de3de665-d589-4d21-b8eb-97ebb852888e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d994e5-0264-407e-9258-fc3af1bfa03d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7dd471-0846-49d9-b6f6-496e9051d263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb9f569-0bd7-4a02-a4fc-bd6c1bf749a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "099c1ac6-b426-4afe-8a63-53cd6f29828b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba7e2584-6005-4240-96ab-ae5d57bea3d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71233475-4bfd-4970-9d85-8b69132fa9ed",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914eecb4-fc03-45d1-ad3d-79e6017d328f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "650419bf-27dc-4548-8996-446988ffbe1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2c5379-be9f-4b77-b6b2-021b19f9ea7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e49e1a1-0896-454e-b8cd-1fbf6586a939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9091bf77-0000-4ab0-9a57-94ec4a98fd58",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03800745-c2d0-497c-a82d-1e97a59003e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f8f6686-e78b-4153-9dc0-30da48a41da5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "600b2edb-5c72-423e-86cb-09558f454413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51148065-a6de-410e-9217-def81adb5c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7cfb5e-1918-4d95-8970-c4e4a7255c2e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "471100a8-7ba5-4b10-bbc1-f46cf99af671",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29f529fe-a6e0-45b5-b0d9-9ca6589f8bbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2032967c-13c8-4a4e-b4d4-b2060cbc2c39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97320045-8540-42e4-9403-8b32ee9785b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a5af21-9503-4c86-a2ae-f47c04b143df",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb2a34c-4575-4e3b-9854-d1a3df2a169f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32714b4b-c37f-4220-979e-debffe451b24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ee422b-f75e-47ce-8d59-0f8f2eb43c61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d916caf4-9e48-480b-a235-fce65387773e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71fdc99-657d-4486-b80c-d8d4cfeb632e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b331bfa0-772d-46f4-a6d6-15eb7e71081a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d38e624-e6e0-4e4e-8e3c-5cf9cc9e9513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9db2f2f-0f09-46e7-b7e9-4f57e1594552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93ce7ca0-edc6-4126-b08d-836b0a4a9ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d014102-b0a5-4163-866b-0785d4695c24",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b20019-5e22-43a7-8019-40696da7b8fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8257e3a3-3ab8-49a7-9116-1d293b115e0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be43e20a-ac46-495b-b4b7-c1672c6e38bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39ca4161-d681-4805-ac44-2f9dd240d748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1bb4ff-739d-44c4-9953-057376517d7e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f9cf10f-0323-458b-b1a9-c0ad7d165b2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a842afb-1ffd-4778-928d-ae51a12620a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "000428e3-6863-4a28-9864-e18f6cacc15e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49d40bde-cfd3-4580-979f-3a209c1d1642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a2eb20-43b3-4b86-801c-442b7c2b4a69",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647ffebb-de8f-4aea-a078-accbb8a9a7ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8733973-a544-4268-bc9e-274396afdbe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db55eff-672b-493e-bf96-179372415573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e5888d-db8a-45b2-840e-17b3de3c4213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766c00f8-67ce-4e1e-9b0f-a8ee9301bd66",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5e909b-f818-4985-8605-718b1402f080",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e429e731-22d7-4e0a-8381-6c9340a91962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3228e46-8bbe-4015-b407-296e400dcafc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f415a4-9d86-45d3-82fc-b5a4dc19ea1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95498b9-3333-4861-83f1-44f1d11e4e72",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df10f4ca-f98d-42bd-9521-ca2ccce93df0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34f2fb62-05e7-4f04-a99b-5d4c90b79d6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9523cff-a802-4dab-b476-91d37ab7ae77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ba6e34-8b63-42d4-9be1-50611d12534d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c45137-d86a-47d4-837c-35300d931349",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356780cf-18fb-4365-a17c-8bed807a2b26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74bbb2e8-5f80-49da-a104-5b024c72653a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada6c9bb-277e-434c-bc25-edfece68f56f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2ab0458-4253-4571-9f1e-e01c847e78cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c9d967-4b7b-4801-be30-08c0e36e5046",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f53f8860-2be1-4f2b-9d1f-852ffe6f7c74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e615cb66-aebf-47e6-964f-a00f42f4ed05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeba3da6-c5d4-4ba8-8580-842b0efc62cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e393a0d-4e33-4bdb-8cc1-c452cc066317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053d29eb-c90c-4c61-b53a-2d780c04bafd",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6cc2426-a81d-452f-9922-2e060071eba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa6fd3e-b028-42e1-b825-b52df93d0b92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "951d50ab-525b-4daf-8fd3-72c225e81803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21e67ec4-a97a-4b92-9603-7b88e2f36ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67010d54-c2b2-4c0c-9ef7-6f48565cc448",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d954371-d1f6-4874-be29-2f5ec42e849c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b041c9f-8a2d-46da-b1dd-b5d5cde0ea45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ef9a4b-2896-465b-8f6f-4cb40107feb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "761f73d8-be50-40f7-bf33-8bf1ff41de1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801c3bde-0404-434d-9d5c-652d3aa6d2de",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e57d95-9039-40cb-8892-4509a4b255fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0119d30c-ef75-4923-8006-519943e0e4c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06035ed-6fae-4ede-be15-5d3a81a510ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11deef41-7f29-4d89-b7df-47727159077a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9667d0b6-d9c3-4c03-8fdf-b6a7e487d375",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b3eda7-01be-4cf5-891b-c79256598977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c4b3832-f1bf-4f69-865e-3be443b27f32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be56b70-3a47-4fcd-a77d-477050185a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d9472e6-c784-423a-af50-e27eb62e6ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de6c0f0-8bd4-4a8d-b149-5d8eb6a0b8f7",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00fdcd1b-fee5-4ba5-b947-318253f35c16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02ed62c5-bb0a-47c8-b879-cad7031b1921"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd966fd9-bedb-4064-b536-19875632a6fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67feac24-f5ec-41c9-a97b-76d3f45cc7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e7eb02-93d3-4ae0-a4b1-f38783dca072",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000c01cb-6653-4ebd-8656-d24a40e4e316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c6c26df-fa77-43bc-96f7-0084828f18d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1308cb0-6cb7-4983-95d0-cf3a14167c68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a40e38e6-339a-4598-b97e-247fb5179c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e541bf83-2e55-42c3-832f-00245f95d56a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4afb126-cc85-426b-8710-79e8492458ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "788bd079-c729-409a-ae4d-0a548cb0429d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da87a7c2-5fb6-4558-acee-fbeb8ca0d6de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df0acf11-8ed7-4700-aec9-0a9f38126f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ae1625-9308-45c3-907b-8bb9221bd325",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86ed57e-b7df-4d16-9555-a5f42b5388e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "554760f7-d23c-4ef3-9b5d-687b51641040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f91f8d-dd09-416b-93a2-ecc8c575cc8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "851bc6ec-9ec5-4c4a-8292-536f6a928973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97ec8cb-4acd-4138-acb4-276734056ea4",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516a0056-f0b3-42c8-a5d2-46fc138daf70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ad7521-c2c6-4c5d-8fda-d5270df4dafa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d76e63-5080-43e2-a02b-a9b1cfd100dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d23c520e-9a76-49a2-b5f9-f2f8d180c68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0471a48-4eb1-4409-8555-74e2444d9b0b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc96d62-fd87-4926-b79a-fec5a21f4bd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b8761a4-e8cd-4b26-aa66-85f5b6cb5792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1593c023-adb4-4b79-9a84-fcbad6da31d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e679ab2-dff2-4d72-8c3a-b32c5c9f5fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea56384-3e5c-4944-93fd-56ac35e21eaa",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ce7fe1-7b11-4e88-9d43-4b4d07119353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de40fe25-70fb-4d85-a862-7f849712c663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d81e1e9-b20d-4f95-9567-ac084cdeaaaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc6c8e65-8c28-4460-ae20-a034a8c07768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24f0c61-1449-4c41-9310-8ee8eeb7cfba",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46621af5-5577-48f2-9104-5ac5fd85e799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb0d0f66-a3db-4a95-93a5-d5b4603b35a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0651792-76f9-403f-a4f5-44649c8d50a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "141d9621-baca-4868-b9d3-c8d0498fcd68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85edf87-3d7e-40fd-aedf-885096345b8a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bbe9fd9-ec68-48d6-b8b6-f54dd11636d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91013652-0527-47d0-aac7-a969b239c9c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e988ea-3149-490d-970a-1973966ea47d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b9161f6-104f-401a-951f-6065df62c880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9811986a-167d-468a-959f-6c8bf9baf38a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd93c9b-b0ea-41f0-9f9d-24345fc08270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f50c0d9-818f-47c5-92ca-8c3b9182de9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af9d428d-5b1a-4437-98cc-d6be0c42ae5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1abb8624-c7d4-4879-bb60-50774aa92a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7796b54-ae26-474b-b8f9-73240f6c7465",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c823d81-5f5d-4c87-8d4c-8128fc88c497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e99dbef2-627c-4bb3-9011-480f1e6d29cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee365142-aa0e-4bce-8b58-de9fbe1eff9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d45391-583d-4a70-aade-8cdb08b41e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "472413f8-db5a-4c49-9e26-938af767dcf3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea01ee6-ae76-4a2e-99b3-7a8db551c267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8c7bb69-221f-4325-a092-844e00b8a227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "606787f5-d1ba-4287-ac1a-5fc4899aff4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "621249c8-1146-4976-8c42-e059d48c8c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a24072-e0fb-40d5-acd8-024a6f48c96a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e967ed-d363-4e00-b992-f9adc7127552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab302d84-1400-4631-bf70-56a51315046c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29f7eb7-d9a7-4376-983d-063f96f9af27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c27a8d8-290c-4df5-8299-99283009eeb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e6c00a-2ea3-469a-869b-7761c0653a54",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386504e8-3036-441e-9227-eb7af2a7106f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ea71dca-fbbd-4688-ac10-ed88f837c009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc0b9fc-ee16-42b2-aba9-faf34e8391d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11914b1d-dc03-4385-b266-1aaa56d0f2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c11280-1d91-4e02-9782-3443097bdd76",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d1149b-27cf-4acd-98e6-e3d49bec9a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be256dfa-b866-4f1d-ada9-56910cb39c27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f72c0d-acbc-4e94-add4-6eed32d7bbe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23dc93a4-d273-4e95-b51b-e3b334000f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf98e6a-84d1-4839-9c5d-3036c9d2f5f6",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca546f7-8d6e-40a1-b1d9-f758e1e29a13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9ce72e5-2b3a-4289-8231-4ffa9faa8357"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3dfcbe-fa08-4f1e-bc0f-deef4c71baea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a905aca2-4a88-4886-9fc3-aecee159bd78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02dc8d6e-3a25-469e-afc0-bbc0d4bfa2e0",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61660037-61b3-4547-80dd-846dc6b50e37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c8c36f3-66c6-4de3-b8eb-2d05edac04f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f397e7-684c-42c3-b7a5-a7bd848f7b6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73eb8c88-acdf-4243-8587-a11b4205c2d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbbba79-519c-42fd-89fc-baee1301df3e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84eb0ee5-0fd9-4209-8027-e70e9f87e4e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed6a4def-a150-45b0-91d1-7c372d995390"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56b88d1-d2a2-4a3e-a881-5b011060aca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "400c8bc0-c29c-444e-8505-07dd7a2a7697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ad35da-05be-444d-87f4-d19e2a6fbaa5",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573920f2-0e3c-4bf4-9b91-e596efa48fb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e96afa9b-c1b4-4242-b456-38eba4b0dbab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bcd1aa3-e14f-46a4-9a68-48a883be57f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95c55848-811e-4454-8b2f-70a9020add7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2fe1ac3-af03-4e36-a8e2-eb2952124cb0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cbcffd4-a018-4b8b-a364-88a075114ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0a2d7ea-16bf-4ec6-a447-df918a55588c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d24086-a1c2-4f80-ac94-e982378f6396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f7572d7-6dc2-4aca-bf1d-02b880b05c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257a5afe-4dda-4423-ae8e-58181818865b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff75e573-31a1-4248-9faf-82198edbaf83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90356935-b34a-4182-b4d6-b4a9f90ca2df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f440fac3-9f97-4bd3-8688-dffe16036b19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4b13a32-36a5-4882-8c17-8f9ffbaafce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb5ee32-acb6-404f-bd93-3de4a3307753",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "094cd3a0-eb31-440f-ad02-260b093fe64a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9759618-4cfa-46d3-a2a2-c15c2556a8d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e98f2cf-5e3a-4218-9792-c454893a1d6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ed32d9-f32f-43d3-8949-a84a98f44f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e1b87b-ed35-4784-80ed-650df6cdd894",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d834a4bb-fbba-48c2-bfb6-6ddf4515ece8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df75595c-ada8-431b-a823-5e9cdc7f9023"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d58815-5b10-45b9-baa0-2256a811ce50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cefe6ba-d0e5-45e0-9067-c74fa15a7141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf66267-b522-41c9-8ddd-6826bc9f0915",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69bb7202-fcf8-4726-ac08-181f3658718a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37f0b2f6-d090-4c94-b6ae-528b6a8c9559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70ba88f-e6ab-4741-bcc4-8b90e1406596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb472c58-8e7f-4938-8052-dbe6e265f1d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac0181c-263f-47a9-bf1f-19aee8822d1d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05480aca-acc9-4039-b262-4900e922ee64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcef6ef5-c13e-4ec8-a630-b58138ba7668"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1090928f-5430-4255-9b8e-797f1db89d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e449af4-1d1b-4212-a225-dc44c5eb1c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c82d0c-42d0-413c-8c4a-b2131559c929",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986ecde1-a0d9-49c3-b4e3-7cf17e9d40b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd5f4c38-4cbb-470f-ab59-2b78be8a6c6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b40839-d48b-49bf-b100-2972f4073b67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f643941-625e-4cc4-a0ae-e6c281578b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1109e780-3eda-4a61-bf81-371536ac5f5b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ea0d55-6075-482c-bcdb-637ada203164",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe3126cb-1a88-4a32-a949-b4277044e9dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb49ee92-9b02-4465-8cea-c1c94cbbd614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b89f2f0c-ac0b-42e6-90d7-6f815c366597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d052f0-aa1b-4609-a748-8b57c44e0ee0",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac0f067-8dae-4497-ad25-48fdf28ba66e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec712102-7035-4b5c-88fa-885eeaf62d7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "485aacaa-f2e0-4b5f-bcc8-e033b626536b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d1e5489-f19a-46dc-a87c-cf988a3b23da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8728dd3-e3cb-4e55-b096-9a52ae44ba1f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e78e145-269d-4922-8889-674afeb15d52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfb9a62e-4a05-404d-a7cc-06c4cdbef0db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e973a36-89f9-4d54-8bcc-0f11d52c59d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c1de6e-70a6-4c9c-be44-0b06a43a8f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c13d3b-3e88-4102-97d0-8da26dba6454",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95309173-ae7b-4fc5-b9a5-768eb727a20e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a17baa1-672a-4fb5-a526-6cacda50539a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f4a681-e6bd-4281-b3f0-4cc94ed029dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6ad9c03-4b08-47d6-9941-10b34db43e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2604c094-c4e4-4d69-8c2e-fad1ea9746cd",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c1f6ca-0f18-4eda-897e-d6ad407a8cad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c63272c-7f05-4df5-b465-8fd1fca21711"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae9927c-fa2f-4135-9521-275d481aadf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9cfb055-128a-46fd-8204-afdf1e09317c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2dcbdb9-0016-4d77-8932-6965c082f194",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ad4240-7c20-4088-9537-16530b03bbce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52820e2d-2275-41e4-905d-f19282520947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8123b25d-8361-421f-92d6-62d0a5cce461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8336160-716f-4677-9bae-b7a6d2c9ca88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee79fac-0b0d-4731-a070-534e3430749c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4bab79-358e-4e1c-b74d-de9aafb90e98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e428f038-e8aa-4e95-83b1-8b656b7ba404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "850a490e-5b09-4c69-a8bd-7ba930e0c9af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "386c90a7-a73d-4107-9daa-c8c3b3e05473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c45ab4c5-6528-4d69-b8af-ae55d7c68144",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7edcc1bb-801e-4451-9431-d4aed2fdd750",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "101d0c01-39bf-4e60-8346-cad51d60713e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9340bdf2-38bd-4e61-8f4f-42168dc627a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "702685fc-ad70-4661-90ca-3a010a020a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bae4719-af6c-4819-ba94-deed67cc3501",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7d79b0-2f6e-4f13-81cd-234157390fa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33aaff2e-9cee-40eb-b2cf-d8dbb7087ac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f8d299-05b2-4e6b-a90b-11f9a466be9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3f8afea-3516-43ea-8a38-48838a148ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efe54853-dab1-4de7-8f85-b47d7a127540",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0215e51-537b-4e89-9fb5-b9299bd9becc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83e43fb0-4ef8-4891-876f-ba265e9fb63a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9344b4d0-ae10-40ea-ae37-06da1e99e0f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "184d960f-1c53-40a0-9817-2838f5d7bf06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e50ab1c-1772-43dd-89bb-0546a0c89d67",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33ef512-4369-48cf-ac92-ec598ca85e10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c757659-f0f4-4959-8d1c-4abb056d9477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c55d914-d7b7-4173-8834-fdcf9307ba4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6f18c45-e86b-4066-bfdb-ec67579f3218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f67ce81-8955-49f0-9ed8-46580c893b51",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4ae48b-4fb1-4d73-8cd1-c759b6d9963b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11ffa845-b715-4b55-8529-115cfb855b4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd62108b-1ae0-4714-b0db-f7014c0d782a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "077cc3f6-45d2-46be-b36b-02b5559fcfdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917efe69-418b-4390-b014-444e50ea70e1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9431effc-aa7e-4ad1-9a1e-66e2f7ccefd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58de96ed-cd00-4a52-b98e-586ac6e9b09c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6251526-98df-47fd-8103-5cc001719052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9638cdf4-72de-4405-99c0-25d0f60ab22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639878c5-9ce5-4809-9d10-72d485a861d5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed03e32-dfca-4ee9-8c14-f605d16aa9c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "774015ff-f3b1-4095-b70d-5d76fdc52749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be74fa75-5c96-4098-99c7-fbf9b9fa2899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6cd5010-6894-4290-bb4e-75f9cab22dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c45a40-37b8-4991-a688-cb56a75fdc0f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf339c6-9960-4a67-b272-dbdadb004d60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcc0d045-ca60-46d7-b4f4-bfb7f65cf588"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c784a4-fe98-41f0-a810-43d4ffb8143e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf05c963-c9af-44a1-9942-cdde763333e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1e0a3c-6f35-4c53-8fbc-018886139d45",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a7e0fc-cb0a-4d25-966d-8f5f3222f474",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bba575c0-0909-460a-bb64-483310a7af39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d41904-77c8-421a-b1a4-cc3164deda4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5151d46-0d3b-49bc-b152-096b07c3ef4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc17ddf-01a1-4f83-89b3-a94f5ec8d77b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5075d67-c475-474e-9ece-ed9b0474d06d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19ad8dcd-a87b-4c33-b7f3-765a5cd35498"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb36ed5-922e-4e7a-98ca-b50e4e905b95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57319070-6a79-470f-8dcf-18e5fe2fbf9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "095a0ef2-3e2a-439c-bbb4-95f4dc310264",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5242496-1dcf-41c0-89f7-b879b25478f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07787308-470b-4612-a188-55eb12fc1968"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b37b7d-7a42-44a8-835d-4037ae380332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15f39b29-be03-4f3c-888d-a87ba245deca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3627fcb-4cd7-43db-8026-0ecac988a938",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a87371c-dae2-48d9-a30a-f758538d0f3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da8228f8-b2fd-4935-a093-f3b964bc8703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5870c5-a2ef-41c6-a389-5c893cbb8043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b68858-51ff-4b03-ae2b-e2c37fe1b2d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71436137-f5e4-48f2-a631-17cea90f49ca",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9301e508-d45d-4a07-9ae8-9387b837038c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5abbc8fc-f655-4231-9b80-e3865d4b0247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d7b83d-f888-4718-b8f6-90abe616670c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee1a2775-e7c0-4389-baf3-38aed0cb877c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2546f92a-935b-443b-b392-4d53160a499a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455c0edf-96ee-49c4-bd28-a5ff973f244c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c457775-ff80-45c9-b2d8-86b9ee6beeb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c1fd0b-df70-4e47-84a6-6817004f4996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d4fe982-501a-476a-87bc-4c4d00b7ded6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a93dc0-89b0-46d1-8102-58d43f164f26",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568d46e1-4127-4f63-aebd-f22682d271fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23445e04-bf54-40c7-b431-3d5183ef2744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ad687a-c0c3-4449-9919-298d88a216cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2105582-f5bb-4c51-9fba-bf2a5e11b067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a0d69d7-6845-4eea-b51e-565ee894de72",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a9df156-a0b7-4639-9c8a-5656819050a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f043b5f-86bf-42d4-b643-ace262da3f47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acff005b-d3da-4dfe-bfba-068c29cb2db5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1106b99-84a7-47b4-905e-74d435235257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbdbd7ce-a438-420e-94d2-340bbaee1f87",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cdcda27-3e0b-4f24-b899-a961666013ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a3ded1a-1c35-4dff-af71-93d25ec0a131"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eaa3fbb-8dda-4a91-ab4c-fe6a6ad75a6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b92aab-d6fb-47a2-80d9-6c7648778e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2635458e-c42d-4591-9703-f8f4df37dfa2",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14986203-f130-46bc-9c29-dea305895d70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73c14121-5315-4da4-b8a0-e377c4769775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "554f99dc-b7e2-4a7c-8f70-7e018867531b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca0efa81-6cbd-4b34-aa89-239947ad32d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16219559-bff2-4e38-a255-f59154a921f0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95665802-266f-465a-980b-a7c2a477b04e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44394b66-e2dc-4534-a116-4860ceeaba0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbfabd4-eac2-4cde-9b6a-865403e53435",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd32cd9-5673-4353-b7d1-e421c4c126d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865e1d72-c904-42fe-be4b-2110263d7157",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a276fd-8f5c-429f-a873-42c1baef2929",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eeaf3f6d-b62c-40d2-befb-ff5a5ca8a97c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "853bd9e8-42d9-4c1d-a84d-e4a50cad7fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c1c9034-9be4-43e7-b10b-e8309d9710da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0727a0-c78d-4c56-aba9-d8a4e2f6100f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20fe3049-9a81-43fd-b21e-84b6aa44f1b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f23c877-9ac0-489d-82ce-34d5426d671c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "475be3cb-69bf-4e0a-912d-8d23a79fc6d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a845649-4fe8-4060-a522-a8430e2a637c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d139c1a-0c2d-4c5f-a326-3f8431be28bd",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318c2454-20fe-44ad-92cd-49cee4b9bf03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0fd5e8c-6bed-48cc-9523-0187c9ea085f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfdeef0-5c14-468c-b795-191643adf6ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "983ce39e-5ff1-4173-a373-b284cf385d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9686e759-4a8a-4f05-b9cc-6d2c313bdf82",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4981375c-b69a-422d-8fb2-4d7402ccc00a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a193f695-dc1f-4e88-917c-3e4cbd71b319"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43451edc-edfc-454e-b444-385102df7ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cf77709-0670-42ff-a7b5-e296f62b64f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f21217-0e03-426e-b72f-397bad0f367d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73bb40a3-1a28-4f84-9a40-7605ab45d99c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89e64f28-4ec6-4198-9cc7-a1c5d7cbf9c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d0a5e2-1201-4e3d-996b-8894f8c98848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7b86e74-c3f8-4eb3-8646-b38dc5da7a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711a56e0-40b0-4061-bf72-1589fff6ff01",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7eb88c1-7f74-4481-8e4f-752c36f94b98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ea010cf-00df-4702-86a8-e05d6449a34a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5030947a-a884-4643-b4ab-00b5018f3c87",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93307b1c-cc2b-4cf5-8e1a-9aad3af5d884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a84f7d2-6558-4811-8cdb-5987fba15213",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b30c56c-13ef-4351-b369-e7649ca22116",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0d45a79-b2b4-4a67-8893-e5e518184414"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69cf5608-47a1-4655-8443-e91c7c75ba0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d00c855c-f333-4662-a87e-8beee1adeca9"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0bf63765-c939-4edd-8bf6-0715e4d507af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7f747cc-a1db-464b-9ffb-a1d3337a95a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a75bdff6-62c8-4b77-a2f5-d11735d9444a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "935cb43e-9d3b-4b45-9b03-abae6541243d"
                    }
                  }
                ]
              },
              {
                "id": "8f927e03-861a-474b-b9f9-70b6bef60a39",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e81bf756-a88f-4726-b41f-5ff71ae2b378",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8857033-3f07-40e5-a41d-1a31a364fa9b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "50cadb15-a8de-44cc-907f-a78f909ce9fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd2a1b88-ba12-4a12-944a-acb74a42b47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30b514df-64cd-4729-8013-df8996facc4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b32eb55-5d19-464b-bad6-28e68030c91a",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b46dd2-52ab-4582-8002-76e5e3fe7f94",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "abea70e5-4ce0-4588-8b0f-c09420396293"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e09b0e-5dc0-49ff-bf4f-be77e42e6f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "445109be-214d-4116-b03d-4d2db48b299e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3f374d2-fe33-4654-aa52-44aa01672db9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01a4c571-2b4e-4c6d-b35f-b077af07c3ba"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d00f9355-905b-4d88-82b8-5788412d33cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de5fb7bd-35d3-4013-90cb-7dab532467a3"
                    }
                  }
                ]
              },
              {
                "id": "9dc4533a-ae3e-4d21-a5ef-26cd525cb2c8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6a4c206f-3b64-4035-92f1-2bb99e4bc5c9",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3178004-b105-4764-9e89-0a7d201ecec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e08d50f4-6a6c-4046-8be0-016ab70661f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ebf94e-1abd-4a2c-b3a9-3263594bf647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b674bdb3-2f48-4f37-bbd9-26443630716b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0cd823bd-ae74-4c00-882b-dd3902371a3e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fbdb0575-c03a-49b6-9324-7afcc6df343a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "50615e9b-08dd-4c7d-a622-f2b8d1bdf75c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8109c9f5-30f0-422c-a6d3-0ad62265b8cb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35535387-b830-4d64-8362-d7886491c29d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "109210a7-3643-4417-9ba1-d9e822aa0a15"
                    }
                  }
                ]
              },
              {
                "id": "c5c979f0-22ad-4f58-bef6-06252758bab5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1245389-f168-4d03-aa4e-4d4ec79f936e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d969179e-dd63-4851-9bf4-5f805b1b12e0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "178726e9-f6c1-4da5-9fe3-3bd04aac9b19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b945b36-c0d5-40d9-b87f-5d2743445270"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e18ceb6b-5fab-43b0-ac27-e677f35fe23e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "16057b29-9123-4e84-9352-6b296dc935e4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5eca0d37-77d9-4669-a548-34745aa1b95c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2d7a8bec-0407-4645-acfb-3032f4e71c87"
            }
          }
        ]
      },
      {
        "id": "0918b464-abe2-4015-a7d1-536d050c6ba2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "492d30cf-dcc5-41f7-9af6-dab59dd369b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "22021142-3de3-43f4-b763-e9cea2499a2b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9c7c64dc-4e52-4d0a-87ba-9bdd5923c3f3",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f78edf0-8181-4c6a-ac60-478e2fb4638c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ad05181e-04bb-44a4-b06d-7c3b4057d255"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e4b1dc-89d3-4373-aaa3-3137850faa6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d38e353f-eaad-4c91-9562-99c69c69958c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2abcefe2-e278-4543-980a-fce5035f2231",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6520f7a-c70f-4ee1-9e04-df63fa6dcbfe",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ebc312c1-e227-4d66-bcd6-d377b21d0a9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "895d54d2-02cc-463c-90cf-60686b3cb2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "965c5235-d240-4ff6-97c4-f9df7c857ddc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40a8c9e5-b992-46bc-8d53-616a8503caed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "99d787ce-9301-4dd5-bdd4-f8de607e441d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "45cebb37-9765-4a58-8864-6f9fc80473a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9436c44b-4d21-445b-9be6-c8d12fbb2273"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fdcc91dc-fe59-4bcd-a558-3fa0c5075220",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e18eb44f-8ad8-486e-af42-e3f72739b9cb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1661374f-a603-4f0c-a17e-1e1abb95a9db",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c0557dd3-09e8-4e63-929d-8b3587ecb306"
            }
          }
        ]
      },
      {
        "id": "b3e96144-f632-4c13-8644-5a7509f047ef",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e3ad29e2-84fb-4b6f-99f2-f357e8a59a06",
            "name": "Negative Testing",
            "item": [
              {
                "id": "162fb55a-2a07-40af-9802-9a3cba6c1a16",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "89080520-0b76-4231-8fb4-58854ce094fb",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35299c64-b198-4b13-955d-8b0d8032a8af",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7a2c2a0f-6e3f-4840-a6da-47c0f9ae6b79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0718c66c-6beb-4e58-955d-397397e85cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc69c263-8cc1-4907-a460-6d8c0b36388d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c92cea4-ae01-4d45-b89e-e836f5b5d1d0",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e50d30-e142-49f6-9c07-ea797e0b2bb3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b32bd64f-09ab-4d8b-8db4-59b47a82d784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dfb595c-3f11-49bc-ad1a-eedcf977b07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6a57084-44d2-477c-ad5e-681a9cb6e852"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e622224f-4ad0-4aab-bc3a-752f43346ef8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e5e0181-5c48-45f8-b608-59034d2264fc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "49ec42be-6c33-47ab-a457-c7aada879d00",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1d127ec-6509-4919-abbd-7e789309f05d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8cbef0ec-be65-4d20-bfab-56dc2deb48fc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b3f44af7-1033-4e84-9edd-5caa99dadaa7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58e2921b-fba3-492c-a4c2-1b2ab0c78c20",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "536a21b2-5e0b-4d5b-9277-f8420cba9997"
            }
          }
        ]
      },
      {
        "id": "7781e408-26f3-44f1-bc9f-891e07970b29",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "82c1c1b4-8bfb-49e8-86b2-20f2b7a6be01",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dc6597cc-0bda-408d-a4cc-91521bfed83f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "009b05e7-f800-4c6b-baa0-d08517904c64",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd2fd13-6999-421c-b6df-414a1010afb1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1a24f52e-a0f6-4851-823d-00e927a6ec81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08327d3-a72a-4bb7-b448-8a7e2a6d2070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d1a2ecf-0bea-44d1-85e8-196da85295e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c92fc7-76c0-421c-a4c1-1c5ca9ba8951",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed4ad06-e2ab-4500-abae-bc420f0d869d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f8608eac-2835-4ac2-84a8-6a6fb3f5913e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ac1258-f565-4f07-abac-f8a9b12524d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5406fbd6-9834-4cb6-bc29-b886a7205666"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e89d96a8-f0ce-4611-a2dd-4bdebde524f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "554bf51e-5f47-4a60-914e-c4b68e56fa4d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cf67459-3567-418d-bc24-b2e6339d7ba1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29217e04-bac9-4686-b7f7-5fed4edb4240"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "57fc772b-6aca-4c24-b91b-048c97e8923c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "cadcc045-6447-49f7-be47-77ffaefcdd72"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "caf78ff0-bcfd-46c2-ba15-d5cd07993307",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fe7a32ac-8e2b-43e9-96cb-af9f0b86a917"
            }
          }
        ]
      },
      {
        "id": "6ae199dd-83cd-4cc9-a3f9-c32b76eb1bf4",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3a5dbf49-6ced-4c2c-96ed-49793cd0deda",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "97479bd5-c92f-4b6a-8768-47a02b6cab99",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "35f6be9c-f94b-4eb4-8d2e-baff58b2850f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81e10476-04d5-445a-a6b5-4926bfb01ceb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "735909bd-8d0e-40ee-8ae1-5e7082a56d7f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 667.6177606177606,
      "responseMin": 19,
      "responseMax": 5329,
      "responseSd": 664.0747886612826,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1677112775477,
      "completed": 1677112958952
    },
    "executions": [
      {
        "id": "e10c4161-7896-4b98-acbf-c32f913b2aff",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "af6dd364-db7b-4617-a086-f7a84d88e41a",
          "httpRequestId": "d94db0e7-b702-4c1b-acd9-4cc955b38b27"
        },
        "item": {
          "id": "e10c4161-7896-4b98-acbf-c32f913b2aff",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6e02438b-53ad-420b-aee8-aa8d2ab78b88",
          "status": "OK",
          "code": 200,
          "responseTime": 117,
          "responseSize": 0
        }
      },
      {
        "id": "6ea52c0c-9bd7-4b84-8f2f-10693af1d48b",
        "cursor": {
          "ref": "ea9480d3-f5e9-4085-a765-2bdfc37a132e",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "51543935-0891-4885-88f9-a8262c17f577"
        },
        "item": {
          "id": "6ea52c0c-9bd7-4b84-8f2f-10693af1d48b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8f7b923f-777f-4375-b916-725a1daa2121",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "876d8a6b-c938-4e3f-9cad-e7a1b7b2394f",
        "cursor": {
          "ref": "ae5595bc-20a7-40c2-a3b8-c8a9679216de",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "70fd931b-24ca-4be6-bb13-f27e5d5220a3"
        },
        "item": {
          "id": "876d8a6b-c938-4e3f-9cad-e7a1b7b2394f",
          "name": "did_json"
        },
        "response": {
          "id": "7c69c1d3-b84d-4761-a351-67ba017feb7e",
          "status": "OK",
          "code": 200,
          "responseTime": 973,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cdda85c-e294-40f5-bef3-89cb8b6251ea",
        "cursor": {
          "ref": "7f387ee3-bb0d-4cb8-a15f-4f83ba69f0f9",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f22baa18-8dc1-4f41-9e95-a58c297e227b"
        },
        "item": {
          "id": "1cdda85c-e294-40f5-bef3-89cb8b6251ea",
          "name": "did:invalid"
        },
        "response": {
          "id": "72e5a6c4-5b0a-4aca-8234-cbbb8128a12f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1324,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cdda85c-e294-40f5-bef3-89cb8b6251ea",
        "cursor": {
          "ref": "7f387ee3-bb0d-4cb8-a15f-4f83ba69f0f9",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f22baa18-8dc1-4f41-9e95-a58c297e227b"
        },
        "item": {
          "id": "1cdda85c-e294-40f5-bef3-89cb8b6251ea",
          "name": "did:invalid"
        },
        "response": {
          "id": "72e5a6c4-5b0a-4aca-8234-cbbb8128a12f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1324,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f92397ee-3011-4497-9551-763f2e4849ea",
        "cursor": {
          "ref": "f80262d0-ba29-48bb-bbfc-be5eb76fe7ec",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ad4bb7e2-e398-4a4a-8b2d-0496323ea91f"
        },
        "item": {
          "id": "f92397ee-3011-4497-9551-763f2e4849ea",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "06ee4f68-f426-41a6-8c22-51d3dbfbd040",
          "status": "Not Found",
          "code": 404,
          "responseTime": 617,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d99ad1a-2d1a-4140-a0c4-b5bacee02ae3",
        "cursor": {
          "ref": "b3e42f58-1996-40e3-8e70-1017fb524e51",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "daf57162-4b14-4b9c-b121-873c32f2db76"
        },
        "item": {
          "id": "4d99ad1a-2d1a-4140-a0c4-b5bacee02ae3",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "226b17ce-6c46-4707-b76a-3a0054278f5e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 554,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0f2658-8cf5-45bc-978a-7587434a4e55",
        "cursor": {
          "ref": "c1acb2e1-c989-4daa-ad6d-46b116c2601c",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "cf759572-1a33-4815-a377-078be4480381"
        },
        "item": {
          "id": "9e0f2658-8cf5-45bc-978a-7587434a4e55",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a0fdc1ab-0c84-47c2-8357-bc3e9eb21132",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d87fa38-b234-4088-9741-8a2768ea04dc",
        "cursor": {
          "ref": "8b322e3d-a1d1-429f-b2ed-10b9bbe70038",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "77c16e91-de32-4b58-a007-4bb969e106a4"
        },
        "item": {
          "id": "4d87fa38-b234-4088-9741-8a2768ea04dc",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "74a91d52-fdc9-46d3-8875-b99367455a44",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 577,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d87fa38-b234-4088-9741-8a2768ea04dc",
        "cursor": {
          "ref": "8b322e3d-a1d1-429f-b2ed-10b9bbe70038",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "77c16e91-de32-4b58-a007-4bb969e106a4"
        },
        "item": {
          "id": "4d87fa38-b234-4088-9741-8a2768ea04dc",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "74a91d52-fdc9-46d3-8875-b99367455a44",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 577,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82183607-13ed-4840-9de7-0d5a5fa2524f",
        "cursor": {
          "ref": "ea771627-a74d-4b37-a69d-7e75d5131f2b",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "05e6106f-35f1-4ddb-b4a1-773836688a66"
        },
        "item": {
          "id": "82183607-13ed-4840-9de7-0d5a5fa2524f",
          "name": "identifiers"
        },
        "response": {
          "id": "c12c6949-4dca-4ae3-b4fc-99c10f0e8198",
          "status": "OK",
          "code": 200,
          "responseTime": 1357,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03728ec6-50f8-44b1-91c9-58e44e81f0c3",
        "cursor": {
          "ref": "7c6546bc-36f3-48c1-a4ba-156929ad960e",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "55124439-e284-48ca-a2dd-8de236b0b004"
        },
        "item": {
          "id": "03728ec6-50f8-44b1-91c9-58e44e81f0c3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "689a84ea-6065-4960-bb56-1ca191ffff16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03728ec6-50f8-44b1-91c9-58e44e81f0c3",
        "cursor": {
          "ref": "7c6546bc-36f3-48c1-a4ba-156929ad960e",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "55124439-e284-48ca-a2dd-8de236b0b004"
        },
        "item": {
          "id": "03728ec6-50f8-44b1-91c9-58e44e81f0c3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "689a84ea-6065-4960-bb56-1ca191ffff16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f5e942-f39f-45a2-b3b6-6529771a3473",
        "cursor": {
          "ref": "1be96fbe-4308-4d7c-bc85-97fe0fe14561",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b04347be-033e-4922-a4aa-025be73fcc76"
        },
        "item": {
          "id": "03f5e942-f39f-45a2-b3b6-6529771a3473",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "dc822b43-e7bb-488a-9d4d-3abc4b1cae90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6731ede-2efc-4873-bc14-5ec4ab993b54",
        "cursor": {
          "ref": "6a1cbf26-3b42-426f-9686-1278cd6a5639",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "28728f03-2d3e-4fee-a6ea-6f5c6fb4f05e"
        },
        "item": {
          "id": "a6731ede-2efc-4873-bc14-5ec4ab993b54",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "05243224-f9ca-4084-880c-0a1f6dd4a2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823ae476-c631-43b1-8f1f-f68965d88bf2",
        "cursor": {
          "ref": "6a02a561-1ccc-4652-84f3-0df6b000cb00",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c9bbfbff-d30e-42d4-aa3b-a5ccf204f79c"
        },
        "item": {
          "id": "823ae476-c631-43b1-8f1f-f68965d88bf2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0eaf8bd8-7fb6-4036-a18a-e4b4f87a3d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac1af4e-b4f0-4de6-a195-0c88f08d475f",
        "cursor": {
          "ref": "d55ff019-c996-43ab-aecb-b8cbcd76bd51",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0dd6bad2-f825-4881-b240-343f91836653"
        },
        "item": {
          "id": "fac1af4e-b4f0-4de6-a195-0c88f08d475f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8296ea71-32f9-4c7b-926d-4047839eb750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bedc118-73cf-4281-86b5-874eeb1bc268",
        "cursor": {
          "ref": "ba867213-4f0a-413c-b915-6f52d659087c",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3545513a-228f-40f3-b359-993c2d2b4051"
        },
        "item": {
          "id": "8bedc118-73cf-4281-86b5-874eeb1bc268",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "fec68fc9-9fd1-4dc2-8076-6a013097fe88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59cd8e9c-6ba1-44eb-93d6-08dd287d3c94",
        "cursor": {
          "ref": "a31f96b7-28cc-44dd-b380-c7fcc4e2cdc8",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "11056dde-4e4a-40ab-b045-bc457c9692b3"
        },
        "item": {
          "id": "59cd8e9c-6ba1-44eb-93d6-08dd287d3c94",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f962ebc3-e305-4ca8-862b-a1fb41154792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0852ae-f178-44f1-944f-ba52085567bc",
        "cursor": {
          "ref": "0dacd90b-4793-4fed-9cc0-b3f1d74e80b1",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b88a2bff-1df1-4f61-99a2-e98eba385a5c"
        },
        "item": {
          "id": "4d0852ae-f178-44f1-944f-ba52085567bc",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a5310b4e-f99f-4c0a-a6a3-7f8543da9581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8a0c20-6e26-45e5-8716-46615820f0eb",
        "cursor": {
          "ref": "2621b5e6-dfff-4bd0-9851-39a625efe87e",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "baba3088-116e-42d7-8d83-925950044a19"
        },
        "item": {
          "id": "7e8a0c20-6e26-45e5-8716-46615820f0eb",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "afb1b02a-07f8-4674-89e9-e38b9dd1964a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0daabc68-4358-4f03-9dab-1bb38f6c478f",
        "cursor": {
          "ref": "d6d50507-d0bc-4a22-9dc6-6ebd73a5dc52",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3550755e-97d9-4aed-89ff-fef15f8418c5"
        },
        "item": {
          "id": "0daabc68-4358-4f03-9dab-1bb38f6c478f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ebcafbb8-4b70-4045-a331-dcdd05bade79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57328c02-d4e4-4748-a024-bd4373834cdd",
        "cursor": {
          "ref": "214c82a0-233f-4eb7-8dc2-c06a7e8dccf6",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6b315d68-5368-4f35-86d7-171754421ee0"
        },
        "item": {
          "id": "57328c02-d4e4-4748-a024-bd4373834cdd",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1f59bd9c-d7d9-4950-8a0a-d84acc2b4a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ade593-82a5-44c5-b5b0-d958a1a8d266",
        "cursor": {
          "ref": "fee07f32-2a87-40c6-b4bd-c361b4bd39db",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3fb76742-a931-4997-b8d4-73a1d69809af"
        },
        "item": {
          "id": "69ade593-82a5-44c5-b5b0-d958a1a8d266",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "bb84f1ea-8b62-40a2-aed7-5e5eedf9fa66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 699
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3cf339-2c63-4581-b870-dc08f46e992c",
        "cursor": {
          "ref": "195b9a97-d317-42dc-9480-ece8e22b0eaa",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "17c991b7-857d-4d83-b5fb-bce7aec08b2f"
        },
        "item": {
          "id": "0e3cf339-2c63-4581-b870-dc08f46e992c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a45352bf-bfc0-405a-a6c0-73e30b48f990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25b9078-8d9c-464c-b428-0590aec61212",
        "cursor": {
          "ref": "fa202243-1349-48d7-bf98-80979f96b046",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8a3213ec-fa43-4d73-9836-1f286e5c3d3f"
        },
        "item": {
          "id": "e25b9078-8d9c-464c-b428-0590aec61212",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "642fcd7f-e045-4ebf-94c2-ecda7b7b47e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86927582-f0a5-4ec9-84b4-0fc870f0c79e",
        "cursor": {
          "ref": "7fffc45c-6657-4db2-9497-48afddaf71d8",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "dc36c9a3-1459-415e-8033-2462dbd1cce3"
        },
        "item": {
          "id": "86927582-f0a5-4ec9-84b4-0fc870f0c79e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "966e1d42-cb5d-4ca8-a076-8dfc9fcbd69c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a8bcf4-2614-410b-950c-2c4f3dcce9ac",
        "cursor": {
          "ref": "142eb976-8d53-4d69-bb74-cda1d5610642",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5bf7c223-138f-43c3-8029-287c8b10d80b"
        },
        "item": {
          "id": "b7a8bcf4-2614-410b-950c-2c4f3dcce9ac",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f8045ff6-25b0-427d-a372-3fc6eb536083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3f87da-3284-46a7-b879-10d49a47ea25",
        "cursor": {
          "ref": "35a7aca7-366d-4ded-8515-13cb5f6f1041",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0b4a9f1a-d54e-4fe9-b34a-a5a075a373fd"
        },
        "item": {
          "id": "8a3f87da-3284-46a7-b879-10d49a47ea25",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "cb248caf-6ab8-4dba-8a68-bd0dcfd51a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaeafe6e-b56a-4580-ab25-808122fe04d3",
        "cursor": {
          "ref": "ec66db26-1bc0-4c25-adbc-609a85bf904b",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "651f900f-ac8e-4e17-9e8c-8d98ceddb5dd"
        },
        "item": {
          "id": "aaeafe6e-b56a-4580-ab25-808122fe04d3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8f30a8a9-4417-42cc-9d93-97d52c238424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e42a9de9-bf2f-4186-857a-aa55d15cb817",
        "cursor": {
          "ref": "3690a847-fd8a-488e-b3a5-2d9705da16dc",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d8057c5c-8fa9-444e-83b6-7da5e0f8b194"
        },
        "item": {
          "id": "e42a9de9-bf2f-4186-857a-aa55d15cb817",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4e682df7-34f3-4fc2-940f-fc8efd4929da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feff9f8d-785a-4711-86cc-bcd9a5c69f1e",
        "cursor": {
          "ref": "e19018dc-9036-4641-a24c-ed4c57bbe21d",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4080c77b-ed49-45d1-b3ec-fe072ec5b137"
        },
        "item": {
          "id": "feff9f8d-785a-4711-86cc-bcd9a5c69f1e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "dff11661-4c00-4693-b838-a67fd51b71fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc91618d-0450-429f-bc47-27f4c2c54ee2",
        "cursor": {
          "ref": "34638e9a-a07f-43d6-8c13-71274dfb3a89",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a46bb8ac-3a1f-47dc-9d2f-f46850b76459"
        },
        "item": {
          "id": "fc91618d-0450-429f-bc47-27f4c2c54ee2",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a5761a57-3101-4ff1-9e8c-b2c210ca7de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c4654a-640e-40e1-bf08-0f9d71ea43ed",
        "cursor": {
          "ref": "d463b8cf-9f4c-4f54-b1a5-3c5cd4934662",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "394c1698-628c-48db-839c-5dc60d957fd0"
        },
        "item": {
          "id": "f2c4654a-640e-40e1-bf08-0f9d71ea43ed",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e2606a81-4df6-4806-9e4a-7f424a7bd465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6819a8-5994-4dcd-a811-aa376db5ebbe",
        "cursor": {
          "ref": "8034a55d-4811-47db-86aa-5a741c5639a3",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "014803ed-cce3-48ee-a951-5bdf408e98d6"
        },
        "item": {
          "id": "ac6819a8-5994-4dcd-a811-aa376db5ebbe",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "25d10ed7-ed1d-4ddd-be22-d06812c220cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae42683e-3325-4043-b96a-ed06c56173a7",
        "cursor": {
          "ref": "4979e457-4a98-4a24-b72f-72f4b63fbf57",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1834ba9b-7536-44c3-99f5-ac9c21026675"
        },
        "item": {
          "id": "ae42683e-3325-4043-b96a-ed06c56173a7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ab0a541a-85ca-4c07-86c8-3343402e6ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7825ef2f-41be-48aa-977f-5bec8bf6ca39",
        "cursor": {
          "ref": "f74c6001-6770-4a23-aefb-13902f96030a",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1d4ddf0c-9fd4-43f7-8dda-e3d84c6bed67"
        },
        "item": {
          "id": "7825ef2f-41be-48aa-977f-5bec8bf6ca39",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "78bf394b-8a35-4239-9d09-dca5db687348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4083ead1-0628-474c-b8f7-4a25a2f1d956",
        "cursor": {
          "ref": "e89f2942-c8f9-4cf4-b139-818d44812cf3",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4451fba7-8e3c-414b-934a-404bc744376a"
        },
        "item": {
          "id": "4083ead1-0628-474c-b8f7-4a25a2f1d956",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5f6ecdce-06af-4c27-b8ab-408908cb5f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb71b22-a7e1-4376-b694-9427290f90aa",
        "cursor": {
          "ref": "c1b960c7-ede4-4b98-9740-fb50cd02c92c",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f14f325e-88e7-426f-97b8-fc4d91351bb4"
        },
        "item": {
          "id": "9eb71b22-a7e1-4376-b694-9427290f90aa",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "15a03fd8-2394-4111-8914-4e704dac75a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323820b6-9ee8-4c21-80f6-8b639560b93f",
        "cursor": {
          "ref": "7dc77346-3125-4144-98eb-e7f21b34c946",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "24148b8c-53e9-480a-9bc0-c0bf6cfa9476"
        },
        "item": {
          "id": "323820b6-9ee8-4c21-80f6-8b639560b93f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "905bb37f-d78f-4152-866a-9ad44d9e8616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99ccfa5-9ab6-4d71-bd15-a23f00a52966",
        "cursor": {
          "ref": "59991fbd-5132-450a-ba24-ca5f3f0fd649",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1f25c0eb-e195-4cd1-9404-6ec67c6fc3fb"
        },
        "item": {
          "id": "e99ccfa5-9ab6-4d71-bd15-a23f00a52966",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0be4ef9f-4257-4586-bced-2f85fe69538b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afde5eda-71f4-4152-abb9-85940bea0173",
        "cursor": {
          "ref": "cf115836-aa6a-4942-874e-7f99a79a8e3d",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3778a039-ce1b-4cfe-8108-c317647c82ba"
        },
        "item": {
          "id": "afde5eda-71f4-4152-abb9-85940bea0173",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "04e5744c-a316-47c7-9370-844dbd360f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49ad4a7-cb18-4e23-b3e0-a23ad19faae6",
        "cursor": {
          "ref": "ce4b8c98-5c94-4bf2-b411-c30c3e4b57e2",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a54c05fe-6b85-4b8f-b025-f975e1883b88"
        },
        "item": {
          "id": "b49ad4a7-cb18-4e23-b3e0-a23ad19faae6",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "dcd7d7f0-1b75-4236-a599-a2a6c9f336c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 869,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0294fc8f-4b13-4d7b-96c0-fc6b3e67e0e7",
        "cursor": {
          "ref": "cc69f00f-27e3-45f8-aeed-0d2b2972114f",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "549ddb3b-22d3-4cdf-9194-9eb8dd295a4b"
        },
        "item": {
          "id": "0294fc8f-4b13-4d7b-96c0-fc6b3e67e0e7",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8375fb20-223e-48c7-9681-f42c5a97caf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 923,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3ac1d6-b606-4925-8e35-e113a083f04f",
        "cursor": {
          "ref": "71ab2897-b455-435c-a9f3-7f4e503c980e",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0d47fdde-ea6b-4644-84fc-486b7374599b"
        },
        "item": {
          "id": "2b3ac1d6-b606-4925-8e35-e113a083f04f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6730eb67-60d4-4860-a0c5-59e303f4f1f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1151,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a40a437-f138-490a-9ef6-3d29e7723930",
        "cursor": {
          "ref": "a863b2ba-05ab-44da-862e-496d7cb94e28",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fd1f1132-8f44-4fa0-ad90-23c036c15116"
        },
        "item": {
          "id": "1a40a437-f138-490a-9ef6-3d29e7723930",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e956201a-f800-4e66-a0a2-cc8aa71040d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1056,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db1e13e-daf9-4f19-99f8-b86b5dafddd0",
        "cursor": {
          "ref": "0d608dce-87fc-406b-8340-bac1e78234e2",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f79f0d0b-dde9-46b7-ba95-4d94d8911621"
        },
        "item": {
          "id": "4db1e13e-daf9-4f19-99f8-b86b5dafddd0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "70f3931f-ebe4-496f-b91a-edde6ab7131c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8214066-e179-4a12-9dd8-a19840d0ec55",
        "cursor": {
          "ref": "d2d6c0e4-5371-4f7f-bc46-7503a0cad324",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "222a4133-613e-49c6-8138-9fb725c3ce04"
        },
        "item": {
          "id": "b8214066-e179-4a12-9dd8-a19840d0ec55",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "51c358a9-a3cc-44aa-8bb2-3e9c75b7382f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1005,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41148601-2c6a-4861-9c5e-9e727186dfbd",
        "cursor": {
          "ref": "b0316a01-e873-497f-ad88-dd237d0581f7",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "842b2417-60b2-424e-be55-df220b0cf67d"
        },
        "item": {
          "id": "41148601-2c6a-4861-9c5e-9e727186dfbd",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f27b2b74-8b3a-41ae-91c4-c90e447805e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 999,
          "responseSize": 1058
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add81196-5fc2-4671-bab3-f4b6d51d3679",
        "cursor": {
          "ref": "08c89144-6939-4932-bdca-db7ea596fa7a",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "66287ca0-c777-45f6-9c19-37b99bc1afb4"
        },
        "item": {
          "id": "add81196-5fc2-4671-bab3-f4b6d51d3679",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c06d025a-c398-45dd-8729-bb1f2fd4f5dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1055,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875e4c3b-87a8-465b-b960-14dcbbaf224a",
        "cursor": {
          "ref": "0d0a5003-662e-4193-a78e-986a3ef80364",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "932ffb38-5875-4f46-9ccc-efa6617d7b2f"
        },
        "item": {
          "id": "875e4c3b-87a8-465b-b960-14dcbbaf224a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8c5fc8fb-eec2-49b7-bc25-877c66bb0a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 786,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49575f3-4009-48b4-8a6b-af816e68bd9f",
        "cursor": {
          "ref": "056f94e2-0611-4d90-b58a-b45d6f167cbd",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f21f506e-42ce-4e6c-9751-70e16b29b49f"
        },
        "item": {
          "id": "f49575f3-4009-48b4-8a6b-af816e68bd9f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "74c5273c-1b4e-4ac1-b93f-113661ee6163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad4f530-4177-490a-b9c6-ce21c6414b66",
        "cursor": {
          "ref": "d2a6dc4d-3038-4902-9e8e-4e62cb1b66ce",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b3396086-1987-46fc-a934-4bae08ee3c97"
        },
        "item": {
          "id": "6ad4f530-4177-490a-b9c6-ce21c6414b66",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0a862a32-7a40-410d-9090-c70ddd6ec196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aad474b-298d-46ec-928e-dc620601d0c8",
        "cursor": {
          "ref": "0ad2088f-47d2-4a9d-a639-d61ace25d300",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "40fb0a5c-a47f-45ec-b6a1-b3317f7297e8"
        },
        "item": {
          "id": "3aad474b-298d-46ec-928e-dc620601d0c8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3ab3de68-016c-475c-958f-5e5a5065f0b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a55394-36c7-4c83-a407-5e31b3feb47e",
        "cursor": {
          "ref": "4684ee77-5fd8-483f-bd86-9f5c3899fa51",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "aa648cf5-4bfa-4b39-b7de-58a10811a76a"
        },
        "item": {
          "id": "03a55394-36c7-4c83-a407-5e31b3feb47e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5cf3d9c0-a802-4ac4-b373-cb7b53c33dcd",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 755,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8749f33-ffb9-404b-938d-50374a1a42a3",
        "cursor": {
          "ref": "1abe6710-e471-482b-a634-e7972cf3a1a3",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c42263de-c8de-4d22-8d2e-5a589265cf16"
        },
        "item": {
          "id": "e8749f33-ffb9-404b-938d-50374a1a42a3",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6968e194-8dfa-47de-8b31-4384895eecd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f82a987-3b98-4270-9ce2-987229a24db2",
        "cursor": {
          "ref": "4cfa2e37-0e27-41b9-a945-7b71e99c7cb5",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8db0cf03-3a7e-4202-9c55-02bf4c47603b"
        },
        "item": {
          "id": "9f82a987-3b98-4270-9ce2-987229a24db2",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c51319fd-6fc2-49d7-8b33-43873bf9bcf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1194,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca90209-ccbc-4eb5-afb8-a4068bcadcc9",
        "cursor": {
          "ref": "ba5fe252-1200-4694-87f1-cc82a9e074ae",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d1a699c1-92c4-4ee0-8aba-de683cf6872c"
        },
        "item": {
          "id": "aca90209-ccbc-4eb5-afb8-a4068bcadcc9",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f29ba004-35dd-4efa-90e2-7e8609a08e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1428,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f92c4c-6a0d-46b1-85de-36439b677ae2",
        "cursor": {
          "ref": "683f092a-b87e-4d2c-95dc-d6f69f858416",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5eb10cf8-3d50-46cf-991d-3c63d828dfcb"
        },
        "item": {
          "id": "27f92c4c-6a0d-46b1-85de-36439b677ae2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "14bb7e0c-eaa7-4f99-a18f-c421a2fb35e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1604,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb48fb59-a49b-4b73-8771-33e75fbdcf6c",
        "cursor": {
          "ref": "e219a689-993b-4e52-bbe7-7fa97db9b656",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ec8410de-e623-49c4-9bdf-767a5fa26b2c"
        },
        "item": {
          "id": "fb48fb59-a49b-4b73-8771-33e75fbdcf6c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "90c254dd-081e-471f-801b-6a2f30043044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1061,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c45112e0-17d7-4f61-a2d5-bf444e5661ec",
        "cursor": {
          "ref": "1ae68ea4-0c25-4b99-aa3c-87ff499a16b5",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "823acff0-a56a-44b8-bd8e-21b2bad4df7e"
        },
        "item": {
          "id": "c45112e0-17d7-4f61-a2d5-bf444e5661ec",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b30af8b9-3624-4314-9a2d-6d8f36164847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 843,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b4aeec8-2c7d-4fe6-b0e8-71fc23b09a50",
        "cursor": {
          "ref": "e3a4bad2-6dd1-46d5-a897-cc88429bc6a4",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ca5982f0-dfcc-4918-bfdf-fc014c6d6bc1"
        },
        "item": {
          "id": "1b4aeec8-2c7d-4fe6-b0e8-71fc23b09a50",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "8bf9522b-b058-4261-9391-80d612a84c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb802ed1-d563-41b0-a362-c26303040221",
        "cursor": {
          "ref": "9026268c-cc97-471e-ab0c-6945e15d3d6b",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5a9f9ecc-d5a5-49c4-90db-18d0c3c5a5aa"
        },
        "item": {
          "id": "eb802ed1-d563-41b0-a362-c26303040221",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "13996d8c-0249-4655-b8a4-482976334eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac55b6f1-12f4-45c7-b9b0-7149f2d67f6f",
        "cursor": {
          "ref": "9b36e3f9-c0b9-4080-a22a-3e73b97d49e4",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ee931ddc-6715-4060-b818-f7425e8d0e38"
        },
        "item": {
          "id": "ac55b6f1-12f4-45c7-b9b0-7149f2d67f6f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "dd15bcbe-988c-4c7f-897f-64885f84963e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0003c0a5-6b10-41bb-a5b2-8d19439a6b6f",
        "cursor": {
          "ref": "63ba678c-1cea-4f29-8301-82a74a3c71f7",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "fee83856-77e7-4284-9bc7-61ce0c77a8b5"
        },
        "item": {
          "id": "0003c0a5-6b10-41bb-a5b2-8d19439a6b6f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "992d4f6f-9681-41c5-bd95-31de530bfbc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5afec957-b336-45e4-96ec-e9fc0935eea4",
        "cursor": {
          "ref": "f993c80e-e5c8-422c-ba1e-3a68f4208cf3",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "93147c2c-cad2-448a-8f9b-8f5a9401d34e"
        },
        "item": {
          "id": "5afec957-b336-45e4-96ec-e9fc0935eea4",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c0ec2ad3-351d-43ab-b7b8-92b8f334849a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8b26d7-d44a-4ceb-8360-21eae67b9da4",
        "cursor": {
          "ref": "ec852450-9f19-4422-aa9e-6e16e853e790",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8a6cb61c-0b2e-48fe-8525-ec94d58d4274"
        },
        "item": {
          "id": "dc8b26d7-d44a-4ceb-8360-21eae67b9da4",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "782c0fe4-2625-4548-9cb3-eed2c8f2a716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f1fb27-a5f7-447e-a617-859d5b52f4c1",
        "cursor": {
          "ref": "de80db99-e419-4ecf-b333-b72a401c2e89",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2ae64f06-c80b-417a-a8f7-ffde7f772ee2"
        },
        "item": {
          "id": "90f1fb27-a5f7-447e-a617-859d5b52f4c1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9681e94e-51bc-4b60-99e0-18d6ecca073c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1bde021-af2a-44e5-af9f-352440b2f9d4",
        "cursor": {
          "ref": "ba48d46d-d16d-4ab1-b95f-bb3f62014cca",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a177c9c8-25f5-4f22-b358-3bfe072cc727"
        },
        "item": {
          "id": "b1bde021-af2a-44e5-af9f-352440b2f9d4",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9f00a89b-0a7f-48a8-a9fb-d14153772da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737e4ad9-15f8-4478-a2c9-af0df3db4378",
        "cursor": {
          "ref": "bf5bd507-0570-4692-a6c3-54d13f8a3d63",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ca3a385b-0f29-49d8-8a82-41e06c2864cd"
        },
        "item": {
          "id": "737e4ad9-15f8-4478-a2c9-af0df3db4378",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "fa58aed1-a90e-41a5-b40a-5cc53998ea82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6147cd0b-1375-4181-93f3-e5abbd368dcb",
        "cursor": {
          "ref": "6c7d6096-caca-4b1e-a7ec-0646f014d0de",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d51f546a-73d1-4e42-984a-583723400f83"
        },
        "item": {
          "id": "6147cd0b-1375-4181-93f3-e5abbd368dcb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "49c42636-31c7-46e8-a243-a09dcf960fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5193df73-c237-4c82-9bab-30292cece6c5",
        "cursor": {
          "ref": "ebefcb83-eec2-4e4c-8050-202a47ee1cff",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "20e10048-c2cc-4e98-b690-fc916ec9b538"
        },
        "item": {
          "id": "5193df73-c237-4c82-9bab-30292cece6c5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "42159fed-f562-4413-aeec-2f42488203be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb05ae2-fab8-4c52-adfc-d4ffc17befc6",
        "cursor": {
          "ref": "687855d4-ca72-435e-8518-770ff2d536f8",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "fd708190-9ad4-4342-9825-3bb104c7cd14"
        },
        "item": {
          "id": "edb05ae2-fab8-4c52-adfc-d4ffc17befc6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4c24189a-b443-470e-b94c-f674e799506e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1087,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ce18d6-cf68-49dd-acac-84d2e573f8a0",
        "cursor": {
          "ref": "1efe7083-d2dc-4d04-b7ec-3db7a8098cbb",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c98f0ead-2652-4b0e-b7db-13feb5fc1ce6"
        },
        "item": {
          "id": "c6ce18d6-cf68-49dd-acac-84d2e573f8a0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b38eeb2d-dce2-48e7-9d75-4a0389aaf361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d06ade-ecdc-4b4b-9af8-8a292892ed02",
        "cursor": {
          "ref": "1a09a814-5d14-4921-b7b0-a9fd248dd153",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "25bb55a7-f1df-4da3-bc88-7930b72050f3"
        },
        "item": {
          "id": "72d06ade-ecdc-4b4b-9af8-8a292892ed02",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4145b76c-8023-458e-a389-8e701acb44bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1024,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e615e07-263b-4cca-8f78-0173ce1fea3f",
        "cursor": {
          "ref": "2b044047-424f-4349-a117-64817bb9488a",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2669d2b2-b14e-4a53-9810-2a54f1e4f29e"
        },
        "item": {
          "id": "8e615e07-263b-4cca-8f78-0173ce1fea3f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "841b8099-4beb-4a98-8351-e57f590751c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 877,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4c7e8f-ca45-43f3-92b4-c31ceb5bd8be",
        "cursor": {
          "ref": "dc056bdc-57bb-4c0e-8864-3d2b2c5bdc06",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5d043d41-17f4-4a8e-8286-6ace8a12f000"
        },
        "item": {
          "id": "ec4c7e8f-ca45-43f3-92b4-c31ceb5bd8be",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "dca4b924-77c3-4f30-a954-3009e3cf3780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1018,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920b7997-e91a-411e-925b-8727306437ad",
        "cursor": {
          "ref": "b7ca7e79-0408-405f-a3a8-6b321813dadb",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3e8c4897-d241-4e3b-ad01-4be16fe4ec93"
        },
        "item": {
          "id": "920b7997-e91a-411e-925b-8727306437ad",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "13898ee4-646f-4628-9efd-3e92d8655ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1052,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7facff5f-da1f-4603-bf51-84075311c544",
        "cursor": {
          "ref": "8b3eb347-36f1-4b28-8dd8-7a3216b2731b",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c4f219b3-482c-415a-ad32-08a1821cd2ca"
        },
        "item": {
          "id": "7facff5f-da1f-4603-bf51-84075311c544",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "03de53b4-d82d-4582-8376-e2b3b13cca85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1095,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38249932-c5db-4763-be35-f7ecd9179104",
        "cursor": {
          "ref": "ba738f11-1b43-490e-9021-1f95d367a528",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9fe33894-df7e-46b4-8328-16f09045be54"
        },
        "item": {
          "id": "38249932-c5db-4763-be35-f7ecd9179104",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "47bc1892-9b63-4c10-8a7b-ce73328d610a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1049,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f9fbcc-84b6-4ad3-b76f-97cb5f167989",
        "cursor": {
          "ref": "c9199b92-fc53-4149-acc9-5bdcfd0e1dab",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9e58a236-4a34-48dd-9301-98a07680a25c"
        },
        "item": {
          "id": "74f9fbcc-84b6-4ad3-b76f-97cb5f167989",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "17cafa79-0ed8-4f73-9fbc-370e64962f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0a6332-ec83-4bff-b58c-de5bccd37f8f",
        "cursor": {
          "ref": "4941f9bc-4a8b-41e0-9118-78cebfea8427",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "886dcc71-695d-44d7-b7ad-5193d77beaec"
        },
        "item": {
          "id": "fd0a6332-ec83-4bff-b58c-de5bccd37f8f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a93ac14b-b432-4265-80ae-0a42282185c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc6090b-5f86-4f39-8b34-2aace9b49f47",
        "cursor": {
          "ref": "5413d9b6-666e-4a99-8267-646d1e80a42b",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9e28f4d6-e29b-4ae8-afdb-4ff5b91f42bf"
        },
        "item": {
          "id": "dfc6090b-5f86-4f39-8b34-2aace9b49f47",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "1326eeaf-33b4-42b2-b543-5f0842512f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cabe8b4-0f75-488d-be70-7bc4b0b3e65e",
        "cursor": {
          "ref": "e6a29d47-eaf2-4541-a2a9-43d21a8e426f",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "648a6f88-5322-43b7-bde1-126dfd180f2a"
        },
        "item": {
          "id": "6cabe8b4-0f75-488d-be70-7bc4b0b3e65e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a959b22e-5edb-4a79-a083-11ef2d31b3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d68525-1441-4f5a-9e33-713c3ccb9bb8",
        "cursor": {
          "ref": "d9e4915e-5d41-48b4-bb76-f5e057f7be0d",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c3293bab-eb96-4015-9e13-5118b82f8ac0"
        },
        "item": {
          "id": "00d68525-1441-4f5a-9e33-713c3ccb9bb8",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "607fc444-d715-4c3c-b02d-e3dce9afd92d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbff112f-c191-4a56-8892-3cd1f414eeca",
        "cursor": {
          "ref": "f137dc39-22a6-473b-82e7-121dfd11b411",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "bd509f22-5530-47e5-9315-76818e876b1e"
        },
        "item": {
          "id": "dbff112f-c191-4a56-8892-3cd1f414eeca",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8161c4c2-f9f1-4b1b-909d-1d3069e56966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4dd8db-b2d6-4f67-989d-07b35a4cacdf",
        "cursor": {
          "ref": "4ea07f59-8e32-4adb-b11d-ebf14d177520",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8fe050f3-d17e-4aa2-883f-92e90fa0ca63"
        },
        "item": {
          "id": "0d4dd8db-b2d6-4f67-989d-07b35a4cacdf",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "194421a3-44f1-4c9d-9d2d-a11d94d1d61f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4289892-f84e-4505-bb8b-c26eaacc3393",
        "cursor": {
          "ref": "cdb8b2db-633a-4efc-8e74-5143b9f4fe8e",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "60180162-a053-4b3a-9cda-7552c8265d00"
        },
        "item": {
          "id": "b4289892-f84e-4505-bb8b-c26eaacc3393",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d7324365-afd2-44db-9df8-72b1089dfa06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4743c817-ba94-4c98-8e0b-4f158d401d08",
        "cursor": {
          "ref": "692880fe-4266-43dc-913d-8ed5d65e9dcf",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "fa6d314b-3434-4739-9a27-a61045f8c3e8"
        },
        "item": {
          "id": "4743c817-ba94-4c98-8e0b-4f158d401d08",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2d321bb8-4cbd-4802-adc6-97ddf741c5c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ecaead3-7883-4648-9f61-ddbe0b44b1e8",
        "cursor": {
          "ref": "4b5bbddb-3ea8-41b6-94bf-5433374a068f",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f2c6dcdb-23d3-4096-85b0-02dad1c63d7e"
        },
        "item": {
          "id": "4ecaead3-7883-4648-9f61-ddbe0b44b1e8",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e601851d-4665-413f-8939-fe45fecd7762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa89eab1-7c16-4d7f-a7ad-ddf105145cc7",
        "cursor": {
          "ref": "287e6822-d722-4613-afb2-254aceb90258",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1542b016-0465-4c1d-9892-5ce440194084"
        },
        "item": {
          "id": "fa89eab1-7c16-4d7f-a7ad-ddf105145cc7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "157a4886-2a1d-44e2-b4e3-cba058d55dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869ee77a-03a0-4f5c-896b-0d4fc2f58bf1",
        "cursor": {
          "ref": "06101f00-43ae-41fb-a67f-106e96222ebe",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "536fa734-3a0b-4a3b-866a-a4de4fd5d2b9"
        },
        "item": {
          "id": "869ee77a-03a0-4f5c-896b-0d4fc2f58bf1",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "3071b60e-52f6-4294-9402-9f2b1f0ec7ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f7597ad-85da-4eea-add5-c096073e3713",
        "cursor": {
          "ref": "06dc16dd-5bb5-446c-86d9-d01ee06455be",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "92659b24-a2ba-4fdf-913d-ad7497248d45"
        },
        "item": {
          "id": "3f7597ad-85da-4eea-add5-c096073e3713",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2668b1a7-94ff-4849-9b0d-d9a4ddb97c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ce64d3-c24e-4ce5-aef6-67c42d785d3c",
        "cursor": {
          "ref": "23fb08dd-6ae5-42ff-9c0d-b934eaf67fe3",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2351b744-c024-4418-8ef4-f361c08687a5"
        },
        "item": {
          "id": "a1ce64d3-c24e-4ce5-aef6-67c42d785d3c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "495eb7b8-3970-4b76-821f-596b89f69d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f690cb-dd8d-45ed-b7e2-0bbe097e0ccc",
        "cursor": {
          "ref": "843d88ff-46aa-4281-8fab-5397278121b3",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a7a9ad07-f180-4ad1-9126-0ae9f1eb7a44"
        },
        "item": {
          "id": "40f690cb-dd8d-45ed-b7e2-0bbe097e0ccc",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0471ee44-7f3d-46b9-aebb-01efcab2bd5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19eb565c-8629-4d38-847a-ad0049c6ba1e",
        "cursor": {
          "ref": "2d6d2e1a-077a-41c1-b361-42e6acd39afe",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "fd7f5c8b-d7a2-4980-a0dc-932d1801ec07"
        },
        "item": {
          "id": "19eb565c-8629-4d38-847a-ad0049c6ba1e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9140fb9d-3bd7-4b08-9c1a-7bd2b2a7adb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2c3b81-594d-41c8-9d8b-c3e70b711219",
        "cursor": {
          "ref": "2e00fedb-11a1-48b3-8a4e-ddb941d5f708",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "13083531-7cc0-42a3-b730-f1a4f0201e80"
        },
        "item": {
          "id": "cd2c3b81-594d-41c8-9d8b-c3e70b711219",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6b7114af-bb40-474e-b511-caca24fc3c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abdfa0d-eb26-4294-91ab-fd3f1d1a91b9",
        "cursor": {
          "ref": "c50fcaa3-2583-447a-a948-199fe6b3be46",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ffe9f312-342f-49a4-85a8-4c913c93d626"
        },
        "item": {
          "id": "6abdfa0d-eb26-4294-91ab-fd3f1d1a91b9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "65c3c53a-5bfc-4d4a-80f5-7d6cb745487d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a8dfeb0-ea67-4068-8e2b-555e0e273549",
        "cursor": {
          "ref": "564ee305-b2df-4bf7-bd16-053c60a0a792",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f790b815-253b-432d-9d0b-74af1b79235d"
        },
        "item": {
          "id": "3a8dfeb0-ea67-4068-8e2b-555e0e273549",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8c7874e1-6acb-403e-b58a-46ce9e0907c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee28adb5-3c5a-4782-beaa-80df445808f4",
        "cursor": {
          "ref": "f0e4b1f7-22d6-43af-b13f-eb8644dc5e3b",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "fa02758b-40b8-44af-9b54-1190d8686b81"
        },
        "item": {
          "id": "ee28adb5-3c5a-4782-beaa-80df445808f4",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d825d585-6586-4b17-adfe-1a4cc25ac1a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34aa118-ab65-4835-9390-707b057e3bbe",
        "cursor": {
          "ref": "c1669f1d-e2da-4b0b-a99f-63c89943da3f",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e41e22af-a92f-48f4-874f-fb4610dce861"
        },
        "item": {
          "id": "e34aa118-ab65-4835-9390-707b057e3bbe",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6f29cd7c-e626-419b-b9fb-174efbeadb14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965e21dc-48ba-4713-b099-d54b3742d02a",
        "cursor": {
          "ref": "d6d7609b-69b6-4854-b113-aae4bb55604b",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "890e42a6-97c4-44ac-a5cc-04d20d6071fb"
        },
        "item": {
          "id": "965e21dc-48ba-4713-b099-d54b3742d02a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b899844e-8ee0-4145-894b-48225c825ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d43718f-af28-46e8-8f3e-797fc7ea8a99",
        "cursor": {
          "ref": "c3951924-6d42-4b22-8c8a-90fc65b8f654",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "327716d2-70a6-45a9-b725-dfd5b375f0bb"
        },
        "item": {
          "id": "3d43718f-af28-46e8-8f3e-797fc7ea8a99",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "191841cc-f384-4072-9afb-7178fa0b5a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1a87f4-dc5e-4f80-9cfc-704c62451c8b",
        "cursor": {
          "ref": "32a35168-3053-4ec1-a698-d425b3b84e10",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "931b57ca-2348-452b-8044-21a4a7306d54"
        },
        "item": {
          "id": "cf1a87f4-dc5e-4f80-9cfc-704c62451c8b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9c9e309f-de7b-4d68-a8aa-adb493205278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f282c3c-26ed-4db1-bff3-e64f91ce53f2",
        "cursor": {
          "ref": "6d435a1c-62ec-4562-a6fd-2305b4c39c1a",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e98b9acd-39ee-4b90-9fcf-ab865f3b2b60"
        },
        "item": {
          "id": "1f282c3c-26ed-4db1-bff3-e64f91ce53f2",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "74fdbe7f-b73c-4a31-bd37-17193304f436",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd91a7d-dd83-4257-8cdb-ed75411ce5b0",
        "cursor": {
          "ref": "b954facb-d6bd-41ad-83e1-e58293d4e7ec",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "40ad4fd3-f692-4a9d-b785-68ee9654a395"
        },
        "item": {
          "id": "ebd91a7d-dd83-4257-8cdb-ed75411ce5b0",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "862387d8-bf64-41db-a0ab-f420c7ba6ab9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 535,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07272ba8-7eff-4129-adbf-097f3e434bf8",
        "cursor": {
          "ref": "c24d58c3-7470-4ae6-b66e-f700fe0413e9",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7bc03c4f-8263-4936-87ff-e34db3fa1c32"
        },
        "item": {
          "id": "07272ba8-7eff-4129-adbf-097f3e434bf8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "bf3b25ed-f8c4-445a-880c-ec8ee6cd0dd6",
          "status": "Created",
          "code": 201,
          "responseTime": 4603,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "1260ae1c-cea6-4d3a-a200-5b945252ccb5",
        "cursor": {
          "ref": "02eea932-a0ea-4072-9822-9a287b0417e3",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a3c4285d-c404-47f9-b03a-3bbd9c857c49"
        },
        "item": {
          "id": "1260ae1c-cea6-4d3a-a200-5b945252ccb5",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ea8454a4-e2c9-4fd0-9257-ec6f08fdfedb",
          "status": "Created",
          "code": 201,
          "responseTime": 3953,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "936747cc-2bce-4bb9-9d6d-b7a70eaf816f",
        "cursor": {
          "ref": "1bb13dd6-007f-4bf3-9840-89d06e97e64c",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d98096db-579f-4932-ae78-2403a5876067"
        },
        "item": {
          "id": "936747cc-2bce-4bb9-9d6d-b7a70eaf816f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7966d650-5212-4396-81e8-62e0d0b3822c",
          "status": "Created",
          "code": 201,
          "responseTime": 4832,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6420ba4-447b-44f9-b3c2-33c10db6f9a4",
        "cursor": {
          "ref": "4edd44c9-3c9a-44da-a13c-d808a114cc01",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6465283f-7b4f-4055-95af-0f34b29645e6"
        },
        "item": {
          "id": "f6420ba4-447b-44f9-b3c2-33c10db6f9a4",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "90bafc4d-323e-4def-85d3-65f55ff5ce3e",
          "status": "Created",
          "code": 201,
          "responseTime": 5197,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "515238bb-1542-4af6-8c2e-239be4956b8a",
        "cursor": {
          "ref": "31ce0d9a-099c-42fb-8f79-daf611d712ae",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ac81765b-2307-453c-ad63-49afe5a36b0b"
        },
        "item": {
          "id": "515238bb-1542-4af6-8c2e-239be4956b8a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "633607f6-2c4c-4817-9db6-5e1678fe3494",
          "status": "Created",
          "code": 201,
          "responseTime": 5329,
          "responseSize": 1088
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f4d200-3ef1-4e87-aa8e-dcc6f516ab84",
        "cursor": {
          "ref": "23e64faf-c677-42bc-a06e-c4e3684483be",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8c7b1dee-02c5-4500-993b-1e447197b7ac"
        },
        "item": {
          "id": "80f4d200-3ef1-4e87-aa8e-dcc6f516ab84",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3432a2e5-4668-44cc-a53c-f1b27681cd1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f4d200-3ef1-4e87-aa8e-dcc6f516ab84",
        "cursor": {
          "ref": "23e64faf-c677-42bc-a06e-c4e3684483be",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8c7b1dee-02c5-4500-993b-1e447197b7ac"
        },
        "item": {
          "id": "80f4d200-3ef1-4e87-aa8e-dcc6f516ab84",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3432a2e5-4668-44cc-a53c-f1b27681cd1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3ee578-1498-4347-8dfa-89f395d307a2",
        "cursor": {
          "ref": "0bcc5420-1093-403d-a041-79ccfb109011",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6e9b3f91-de14-4fc4-b8c6-c0dcd9d081c7"
        },
        "item": {
          "id": "8a3ee578-1498-4347-8dfa-89f395d307a2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8b18a143-be34-4ae8-80bf-05ddc67a261f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "890b9c5e-4908-4145-8239-ca00fcb0a1d8",
        "cursor": {
          "ref": "ace41b80-cdff-4af7-824b-b286d04def3c",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7fb30939-14f3-49ee-87f5-66854ac4d0d8"
        },
        "item": {
          "id": "890b9c5e-4908-4145-8239-ca00fcb0a1d8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d633619a-db92-4b2b-a549-0d312434b47c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd00f8f9-2d57-4c05-abc8-81b44facdf56",
        "cursor": {
          "ref": "4c3e59fc-2c01-48e2-b8c8-cf5ff598399a",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "bd4eff77-4b86-4407-9a31-e537356c06b4"
        },
        "item": {
          "id": "cd00f8f9-2d57-4c05-abc8-81b44facdf56",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "04f860f2-621f-4d3f-bf7f-062896486586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a67d94-5d63-46cc-8889-27da46ac2899",
        "cursor": {
          "ref": "8c73e7c5-88ee-4123-a01b-9de464d90d32",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "048138f6-67e4-4a96-958c-ca4b79ae95fe"
        },
        "item": {
          "id": "49a67d94-5d63-46cc-8889-27da46ac2899",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9b78d572-4cab-4eb0-8514-b2c3f6d6fdb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c20290-af23-4922-b128-0a293ee3120e",
        "cursor": {
          "ref": "bc27cf3d-3716-4681-a09a-22a7c8f4068e",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c1dbecb7-ec4f-4cc9-87d3-e70a3ab68017"
        },
        "item": {
          "id": "43c20290-af23-4922-b128-0a293ee3120e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "70242836-1242-4f0c-85c7-178e9872c48b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9baf6bd7-8ad5-4c65-95d7-81f6e633461c",
        "cursor": {
          "ref": "17264230-676c-413a-8c56-0ff3a951bb75",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "dd6fdae2-d9ec-4de0-8f52-9126930d174a"
        },
        "item": {
          "id": "9baf6bd7-8ad5-4c65-95d7-81f6e633461c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3af8b2e9-9873-4952-ab44-30e698061523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7acb8d4e-5a49-4f72-916f-9633e913bae3",
        "cursor": {
          "ref": "7ede37d6-c69b-492e-af52-302e2774860c",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "bca70dd8-e6b5-4c8a-bebf-6e4988a8e6f9"
        },
        "item": {
          "id": "7acb8d4e-5a49-4f72-916f-9633e913bae3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d719789e-c7c0-4826-bd21-464022c6a84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66bd6cae-58be-4f83-95a0-366c0390fa6b",
        "cursor": {
          "ref": "e96d605a-79d7-426a-adc2-54f1f9078e40",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "32894dcf-8b35-42ad-be02-b1c9e7890124"
        },
        "item": {
          "id": "66bd6cae-58be-4f83-95a0-366c0390fa6b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "89d4b732-af97-416d-9454-239207b17014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2517252-2ffa-41d8-8329-fb2710a29e9b",
        "cursor": {
          "ref": "39b8b037-aa92-4d2d-8129-70ff814fc65f",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2a3fcb4c-05b4-4905-b5ff-8777c36aca03"
        },
        "item": {
          "id": "e2517252-2ffa-41d8-8329-fb2710a29e9b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5ab2e02d-724e-4b62-9dbb-538667ecc71b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c231b600-9c63-4b03-abe0-085f315fbf7f",
        "cursor": {
          "ref": "0abba202-3e38-4db9-8911-4e9b95fabfff",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f363fa45-2376-4d31-b70a-9e236245a922"
        },
        "item": {
          "id": "c231b600-9c63-4b03-abe0-085f315fbf7f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6548c1e5-9513-41ca-b8bc-f8006b199388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31440b4-61fd-45ce-b754-dd30b7380d40",
        "cursor": {
          "ref": "4fc26ad0-bebf-4e49-b327-1f1cbbe26855",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3df29c36-f67d-434b-827a-d6e55d7a5e2c"
        },
        "item": {
          "id": "d31440b4-61fd-45ce-b754-dd30b7380d40",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7c72c849-8ae1-4a06-8876-891b68900a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282f89ed-aaa5-4e3f-9d4d-b9656d51504e",
        "cursor": {
          "ref": "ef750d3c-4cf9-446d-bb8e-8a0ff5c7b113",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "924a979a-b08b-4cbb-99ba-7a5219a8e5e7"
        },
        "item": {
          "id": "282f89ed-aaa5-4e3f-9d4d-b9656d51504e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3ff6930b-b867-4ee2-b600-2e39423f8e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c15ecd-80c9-47e3-bf52-836ef009ddbb",
        "cursor": {
          "ref": "9c3e7d47-cf3a-48c5-827d-db92fa1b4d8f",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "88a27cf7-a09c-4807-8359-1b3258a86b60"
        },
        "item": {
          "id": "e8c15ecd-80c9-47e3-bf52-836ef009ddbb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d8f68e45-0e13-4b44-8b9e-ccd15728e3ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37fbeb8f-6ffb-4f26-ae20-dcee4105a30e",
        "cursor": {
          "ref": "f2506e7d-7ea7-4124-b2bb-4cc8a31b9eb4",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ea9020bb-d5e3-4887-a9fd-a193f2dcea5e"
        },
        "item": {
          "id": "37fbeb8f-6ffb-4f26-ae20-dcee4105a30e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8b5d876b-5d8c-4f0b-827b-34a682bb1394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050fc71a-30d6-4969-9e8d-ad787a5de58f",
        "cursor": {
          "ref": "3df65a80-c16f-400e-88c4-cd9467688a30",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "96375439-a7c1-4c02-a991-6da282590d21"
        },
        "item": {
          "id": "050fc71a-30d6-4969-9e8d-ad787a5de58f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bda7497d-faae-48ac-8dc4-a510e8d704ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdeffbca-672c-41db-8228-a8bf253efd0d",
        "cursor": {
          "ref": "ac627dac-5d0d-4ab5-aab5-df6116344e88",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "eef62b39-03cf-4341-bbfb-a6982daad0fd"
        },
        "item": {
          "id": "fdeffbca-672c-41db-8228-a8bf253efd0d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "98882533-06f1-45a6-b902-85c57a625c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d95ae540-2965-41eb-a00e-74770e7da46f",
        "cursor": {
          "ref": "b927906b-f7c2-46fd-839f-d345bcf7f0e1",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6401bb23-311d-419f-b814-ba0d25f033c0"
        },
        "item": {
          "id": "d95ae540-2965-41eb-a00e-74770e7da46f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9ba858c7-292c-4eaf-ae76-723e71f24f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e29a898-ceb3-400e-96df-ec298491249f",
        "cursor": {
          "ref": "d1af6080-5b2e-4458-b667-923195476eb2",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "89c7c97f-2259-438c-9dd0-18f731639d2d"
        },
        "item": {
          "id": "6e29a898-ceb3-400e-96df-ec298491249f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "99604e51-dda4-4f7a-a257-1be292e95bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6faa72-81da-43b6-835a-bb9f3b6b7862",
        "cursor": {
          "ref": "180c1c38-b37d-4f9a-9f90-f8831b6363b7",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8e737438-401b-4d99-9292-c2237f24e3d3"
        },
        "item": {
          "id": "bf6faa72-81da-43b6-835a-bb9f3b6b7862",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2ffdc8ff-d13a-4b88-8b1d-92f52db21c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef846b1-f41d-42c7-91dc-778b83613e68",
        "cursor": {
          "ref": "64337b3a-1ed2-4ebc-a1fd-3a5f1e8ea82c",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "fdbb99ff-9a6a-46b9-9764-d74c9c81e0ef"
        },
        "item": {
          "id": "0ef846b1-f41d-42c7-91dc-778b83613e68",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b96bea70-412d-4dd4-b859-4174dead8652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d3ee39-0bd9-4b08-8f20-193d32537703",
        "cursor": {
          "ref": "dbdaed2d-fad4-4abe-b124-158d88d9da7e",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d05256c6-d938-40f6-90c1-ed39040cae4c"
        },
        "item": {
          "id": "40d3ee39-0bd9-4b08-8f20-193d32537703",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "eb1b38c9-5d09-4bb0-9a9a-4375d8323da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6387f7c3-2f49-4dde-9ffd-1b50bd099d43",
        "cursor": {
          "ref": "65848a9b-f930-4234-9a01-fe27d1da141a",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "56101403-e4c9-4bce-8465-313bef38f478"
        },
        "item": {
          "id": "6387f7c3-2f49-4dde-9ffd-1b50bd099d43",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ec6a6e42-bc32-4f8a-bf2b-e0e83ad5d4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e737a90-ec32-4f2e-9a19-73cc5753e5d2",
        "cursor": {
          "ref": "f932ed3c-9ba8-4cfd-9358-90a1bd259730",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5051e579-c378-4d77-9e5a-9c4b0808bd0c"
        },
        "item": {
          "id": "1e737a90-ec32-4f2e-9a19-73cc5753e5d2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9db4df6c-5d01-4910-8d30-026e35adfa6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e25f05-5888-4cee-93aa-54468094199b",
        "cursor": {
          "ref": "f6ba5491-90e8-4782-b0b3-8a3aba9cb44e",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "9d5acb16-dc6e-4aea-bddf-3f85868f64ee"
        },
        "item": {
          "id": "89e25f05-5888-4cee-93aa-54468094199b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "46f33d5d-6238-4d94-9519-c7c9d7a12808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592497a4-739b-42c7-823f-7bf382a3c77e",
        "cursor": {
          "ref": "ffcb46ea-4ad2-4c92-9535-547ca91771d7",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f4363d59-cc25-4a19-97fb-efedfe8a3040"
        },
        "item": {
          "id": "592497a4-739b-42c7-823f-7bf382a3c77e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b3d2d67e-f116-4b6e-a203-4038bc59899d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b15842-8ae3-4a78-a56f-5635414e5ca2",
        "cursor": {
          "ref": "fcb02e8a-4180-427c-bfd0-e1f42f93e816",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0a5537e0-dcd5-4268-95d8-fcd9744a2c46"
        },
        "item": {
          "id": "e0b15842-8ae3-4a78-a56f-5635414e5ca2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a7be5957-c173-4e8b-93a4-420c54711e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a030e78f-54ff-4111-8b01-e05d3b261cc2",
        "cursor": {
          "ref": "a7056fcf-5b16-44f8-9fa6-64a3137a9123",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "243a4bd8-1414-497d-9092-e3fd99eb4b1c"
        },
        "item": {
          "id": "a030e78f-54ff-4111-8b01-e05d3b261cc2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6de217e9-bd7a-4aa1-a9ae-5d87e60d6499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 821,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec8a3964-3d60-4ac4-aa1e-4c03cd3d12ea",
        "cursor": {
          "ref": "67434043-7251-4ae5-a18f-3fea1db25505",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b3d870a0-e66c-45dd-ab8d-ac2defbe1337"
        },
        "item": {
          "id": "ec8a3964-3d60-4ac4-aa1e-4c03cd3d12ea",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d9df0bb4-b5af-4231-8a27-8df93f8a549e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7304a88a-ed15-464c-ae8e-adbc38c8f456",
        "cursor": {
          "ref": "cce998e9-dfcd-4b43-82dc-2a71311ba7fc",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e05b4386-f2eb-40fd-89c5-b16d6f985e2f"
        },
        "item": {
          "id": "7304a88a-ed15-464c-ae8e-adbc38c8f456",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cd1174a7-f818-462c-880e-0274acca9b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 882,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed967ff0-a35c-4c56-8b2f-e155b01345e1",
        "cursor": {
          "ref": "921ef6b3-991c-4685-95df-eacf5271ac09",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d0b89844-30ec-4d59-a9f9-e1d03f962101"
        },
        "item": {
          "id": "ed967ff0-a35c-4c56-8b2f-e155b01345e1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4227e961-98be-4d12-801e-d643f9cce6a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 789,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce342504-c675-43b1-94a4-e89d7ab92ce6",
        "cursor": {
          "ref": "88ab3448-ae6a-4a37-9019-9186ae753803",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "19c2e23a-524f-4cd2-9597-67ef2df6c661"
        },
        "item": {
          "id": "ce342504-c675-43b1-94a4-e89d7ab92ce6",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "498ec9c8-f098-4900-8ce9-2e703881a9f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f4c562-505d-4d42-8f56-b35bc4750109",
        "cursor": {
          "ref": "c23b59d5-debe-48f3-b68a-93f485764e02",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "10d2e8b2-f957-4513-8839-303fd540f43a"
        },
        "item": {
          "id": "66f4c562-505d-4d42-8f56-b35bc4750109",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "533c1779-a9d6-48d4-bbfc-e3f16e5b18e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2c5baf-3717-43c5-bb94-ad3ba1f2a2c9",
        "cursor": {
          "ref": "89a89e38-c758-4cdf-8225-66f6f65a5a2d",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "49121a9a-ac1a-40ea-ad35-288bea258b6b"
        },
        "item": {
          "id": "ba2c5baf-3717-43c5-bb94-ad3ba1f2a2c9",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "0a0c7876-cc49-4b61-8422-7ec5080b9ba6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 700,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482e29ed-c23d-493c-bbdd-16728b5952a7",
        "cursor": {
          "ref": "dae04403-4cbb-4dfa-9d99-b1de9b6a5d76",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c55e7c57-5886-4ce0-a9c0-41128f0a5396"
        },
        "item": {
          "id": "482e29ed-c23d-493c-bbdd-16728b5952a7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "220e22d7-b188-4c11-9aac-0cf4334ee006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1130,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482e29ed-c23d-493c-bbdd-16728b5952a7",
        "cursor": {
          "ref": "dae04403-4cbb-4dfa-9d99-b1de9b6a5d76",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c55e7c57-5886-4ce0-a9c0-41128f0a5396"
        },
        "item": {
          "id": "482e29ed-c23d-493c-bbdd-16728b5952a7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "220e22d7-b188-4c11-9aac-0cf4334ee006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1130,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9dcce4-146b-4fbf-a80c-670a250e3fb3",
        "cursor": {
          "ref": "e988d53f-755f-4d44-8914-be50addede6d",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "20e11e3d-8c10-4070-8763-114b48b3cd1e"
        },
        "item": {
          "id": "cb9dcce4-146b-4fbf-a80c-670a250e3fb3",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1894043b-fbbf-4f9f-8590-b1bed9e0aba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1154,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5173e0f7-6b8d-4890-9b5c-a73cdde04af4",
        "cursor": {
          "ref": "6cec4daa-5691-45ec-b2e8-391003289e38",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "49c6b819-96c7-4fdb-aa7b-be67fc5b702e"
        },
        "item": {
          "id": "5173e0f7-6b8d-4890-9b5c-a73cdde04af4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "abd65571-3bf4-45b3-b6c9-731fa7d5c233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1121,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a712cab9-1409-441f-91d1-2bdcf3292f41",
        "cursor": {
          "ref": "4adcc406-7c1d-47c0-9c57-0b6f484fbd00",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ba520cc3-0b21-4196-88ed-0a38b160ae6d"
        },
        "item": {
          "id": "a712cab9-1409-441f-91d1-2bdcf3292f41",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7a816107-bce5-428d-bbe6-6dc5370d94b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1892,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd20ab8-398d-428f-9548-17d8b8b498d6",
        "cursor": {
          "ref": "b451190a-6c43-486f-b7c6-d79277798a73",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2648fc72-fac4-415f-8beb-e21f136eed3d"
        },
        "item": {
          "id": "0fd20ab8-398d-428f-9548-17d8b8b498d6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "78aee241-637f-4702-ad04-ce2d897a6135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2035,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d13588-90cd-4327-8cb4-a31e0224b2f8",
        "cursor": {
          "ref": "ddbe39e6-9725-4147-8710-042d07cbf78d",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "fa4905b3-16b3-49a9-a4df-39218cd22525"
        },
        "item": {
          "id": "b6d13588-90cd-4327-8cb4-a31e0224b2f8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "126174ff-ca46-49b6-af7a-b38e6eb4ab8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1990,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f9183c-5e15-4a4d-b452-1136fb79ffd4",
        "cursor": {
          "ref": "dcf3b25b-4fef-4d11-a8d4-73b8fe6089f0",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "de26033a-8014-4c46-aee6-9aaa73859e0d"
        },
        "item": {
          "id": "d4f9183c-5e15-4a4d-b452-1136fb79ffd4",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "aed41de4-af41-4a9a-8228-cedb96da215a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1641,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1fbc22-5f34-4dbf-b984-0466dca8d732",
        "cursor": {
          "ref": "f55e046f-7ec7-4ac5-bee8-6c7e0a0027c0",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ea5bb96f-626b-467d-b428-05c552fd80ef"
        },
        "item": {
          "id": "ee1fbc22-5f34-4dbf-b984-0466dca8d732",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "acaa99fe-5b95-4a5c-b83b-a88c13ad4de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1269,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9614279f-8b83-4124-8a5a-d92fb0d37339",
        "cursor": {
          "ref": "069989e0-ce34-47e9-8ec4-c1a8c91e6953",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0443b504-0791-477c-b321-2ded26e7de1e"
        },
        "item": {
          "id": "9614279f-8b83-4124-8a5a-d92fb0d37339",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6d3a1b76-3288-420f-a7a2-16e8b783c4c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1052,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a08fe1b-fb7c-4bc6-9f44-b58089d2326e",
        "cursor": {
          "ref": "e40dc19e-836b-4d65-af14-64a4383b6bc6",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "290ce29b-458d-4f9c-8e26-f70ac63377f5"
        },
        "item": {
          "id": "4a08fe1b-fb7c-4bc6-9f44-b58089d2326e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8837dda9-5ae3-4141-8f80-362608da998d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 816,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a2bef9-185d-4d50-880c-716612abd9a3",
        "cursor": {
          "ref": "e93b1cab-badd-4226-9acb-bc73219f652d",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "258a5a7a-4f98-490c-8d1f-538d8aee31a2"
        },
        "item": {
          "id": "85a2bef9-185d-4d50-880c-716612abd9a3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "244b3958-d78b-4606-aca9-e0396a534780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6bb9bfc-9a6f-4612-abdd-16b86fc4b688",
        "cursor": {
          "ref": "25f221e5-3c15-430c-bd73-ee5c50bef15e",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "61aac255-d4f0-46b3-b6b9-c1727dc43121"
        },
        "item": {
          "id": "c6bb9bfc-9a6f-4612-abdd-16b86fc4b688",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0bd2b0aa-64c2-415a-8af3-037af7732a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7854927-a928-4d0a-9fdd-9eaef1b493ef",
        "cursor": {
          "ref": "0f0dd5da-7eee-4928-b943-4d463c2e0452",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "be67625a-a627-4632-886c-d8c28a8c03eb"
        },
        "item": {
          "id": "d7854927-a928-4d0a-9fdd-9eaef1b493ef",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "99b56b0e-dcc6-4b3f-bfdb-b4bb057f396b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc819606-0588-446f-beba-83baaaec76af",
        "cursor": {
          "ref": "bdef3388-32ed-4655-9638-ae805cfa288a",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4353e976-b864-4954-b6b8-e6ba8f70b4dd"
        },
        "item": {
          "id": "bc819606-0588-446f-beba-83baaaec76af",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7dba1322-404a-4298-be2d-fbb3f4dfa8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e161d1d-8f69-454f-bcd9-eb66459e549b",
        "cursor": {
          "ref": "afd7f6fc-e6ac-49c7-a62a-f9b72e397d63",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "759f3a50-014e-438e-ad6d-e18f6d4b4396"
        },
        "item": {
          "id": "0e161d1d-8f69-454f-bcd9-eb66459e549b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4b76051a-d744-46eb-addd-ac8ca405afbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549e106b-6e8b-4a81-8405-72898719bbb5",
        "cursor": {
          "ref": "67c04295-02b2-4daf-9ec8-a5ef5573fea9",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b8549714-a208-4ee5-91ac-7aa6f2e4b285"
        },
        "item": {
          "id": "549e106b-6e8b-4a81-8405-72898719bbb5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "bd92d9ef-2fe4-4311-ad98-82ac4d2c4301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc3720c-566d-4715-ab8b-2206c89b4342",
        "cursor": {
          "ref": "68d584df-664d-48ee-856b-451e020ecf27",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b3edbba7-2164-4c24-909d-880e70a48d98"
        },
        "item": {
          "id": "6bc3720c-566d-4715-ab8b-2206c89b4342",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0f5c33f6-2d47-4510-a411-38d3b647106b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8afd190-3604-46bd-a5aa-ced054aeec7a",
        "cursor": {
          "ref": "0766d3fa-2142-489f-87dc-1fe4fc1987bc",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "428e68ec-d41c-4089-8933-9481f1f7f11f"
        },
        "item": {
          "id": "f8afd190-3604-46bd-a5aa-ced054aeec7a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7ec0dd37-781a-44cf-b041-46dbdbee1b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93606e70-2110-4586-ac79-14b5e86b435f",
        "cursor": {
          "ref": "9acc9885-cc6e-41ec-882b-916beee3fab8",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "463ba999-825a-460d-a5bf-8b2484a3ca42"
        },
        "item": {
          "id": "93606e70-2110-4586-ac79-14b5e86b435f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "885c1012-60f5-45f7-a909-373a29666b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8769cc-4874-4abe-8373-d332c5d89437",
        "cursor": {
          "ref": "ff9c4208-61ea-41a7-904b-38fc6df71ebe",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "44a93058-c746-4b40-92bd-f055864d955e"
        },
        "item": {
          "id": "2e8769cc-4874-4abe-8373-d332c5d89437",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "86757d6e-f5e4-4ebb-aeed-bcf32d92872f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342adfd1-2310-4b09-8167-ac2665272de2",
        "cursor": {
          "ref": "4fd7bfa7-63da-46cb-9bdb-98d2af0af53f",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "29215b26-fc5d-41f0-a572-7ed39f152289"
        },
        "item": {
          "id": "342adfd1-2310-4b09-8167-ac2665272de2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "58ede5c2-be4f-4a9c-a3f2-cf724338e33d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d994e5-0264-407e-9258-fc3af1bfa03d",
        "cursor": {
          "ref": "d7eaad28-38c0-4b7a-95f8-e002024ca62e",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "612f46fc-5542-44d1-b5e7-9170d51afe63"
        },
        "item": {
          "id": "10d994e5-0264-407e-9258-fc3af1bfa03d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "93919e94-6a83-40e2-9c6d-964d2dfc57b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71233475-4bfd-4970-9d85-8b69132fa9ed",
        "cursor": {
          "ref": "b7de9f83-1ec1-4d82-9faf-b58747844291",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b78b0c9a-9371-4c62-b1ae-787eadc6b684"
        },
        "item": {
          "id": "71233475-4bfd-4970-9d85-8b69132fa9ed",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "9379d781-1315-454a-814a-fcb114f12b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9091bf77-0000-4ab0-9a57-94ec4a98fd58",
        "cursor": {
          "ref": "a9af058c-1f7a-4c9b-b471-ffe32a0700e1",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5b68025a-61fe-42e6-a417-5e50d8340e6b"
        },
        "item": {
          "id": "9091bf77-0000-4ab0-9a57-94ec4a98fd58",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ea028604-d39e-4268-b1bc-79f3cda5f469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7cfb5e-1918-4d95-8970-c4e4a7255c2e",
        "cursor": {
          "ref": "c9126844-30d1-4945-8ac4-a235b1b5ca38",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "60bab6f7-40ee-475a-823d-76a8bb2f988c"
        },
        "item": {
          "id": "1d7cfb5e-1918-4d95-8970-c4e4a7255c2e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "565caa2b-eb40-4a8f-aebc-867a1300d288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a5af21-9503-4c86-a2ae-f47c04b143df",
        "cursor": {
          "ref": "b4765358-4c38-476f-9939-c7fe902ba99b",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d94da0fc-3711-4be4-b5e2-10911a4c5b2a"
        },
        "item": {
          "id": "02a5af21-9503-4c86-a2ae-f47c04b143df",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4267a98c-5722-47a5-8100-abc67887e5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71fdc99-657d-4486-b80c-d8d4cfeb632e",
        "cursor": {
          "ref": "d327c204-fc5a-42b6-8306-9f30e6a971c9",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9876c664-d1ef-4462-a5ce-291003ac8573"
        },
        "item": {
          "id": "d71fdc99-657d-4486-b80c-d8d4cfeb632e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f4d86263-c5d9-420a-9a5d-3d8392f30353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d014102-b0a5-4163-866b-0785d4695c24",
        "cursor": {
          "ref": "4113aafa-b760-4c46-8049-2030b190b26f",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "98f85ca7-c3cc-4906-be2c-4913e81e1bbb"
        },
        "item": {
          "id": "2d014102-b0a5-4163-866b-0785d4695c24",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7e10a6a7-f340-434f-b238-e7f07024c316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1bb4ff-739d-44c4-9953-057376517d7e",
        "cursor": {
          "ref": "bcdc126a-2c84-4256-aa04-60aaacc76963",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c45b00b1-ec3b-47aa-8b49-9723c1baf258"
        },
        "item": {
          "id": "1c1bb4ff-739d-44c4-9953-057376517d7e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1d18edfc-498b-42f6-bc2e-1d36ce6e88d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a2eb20-43b3-4b86-801c-442b7c2b4a69",
        "cursor": {
          "ref": "4585d575-0a69-40ff-9d8f-b8125ac309cf",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f4d4c31c-1739-4df2-91b0-b0179ac94819"
        },
        "item": {
          "id": "b3a2eb20-43b3-4b86-801c-442b7c2b4a69",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "922faf8d-89cc-42e3-baa3-bff0d57d6bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766c00f8-67ce-4e1e-9b0f-a8ee9301bd66",
        "cursor": {
          "ref": "e3c40ab6-927e-4ae5-af37-bf0c929dd252",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7b6a896c-6d0c-4b68-ad4e-b096e8e51aa0"
        },
        "item": {
          "id": "766c00f8-67ce-4e1e-9b0f-a8ee9301bd66",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "27a30d2c-6e83-4a7e-a0a6-bb23361e390f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95498b9-3333-4861-83f1-44f1d11e4e72",
        "cursor": {
          "ref": "01fd39ee-3aef-423b-9e13-02231d738e9b",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "26405bf9-f199-4a1a-ace2-f552512a1838"
        },
        "item": {
          "id": "e95498b9-3333-4861-83f1-44f1d11e4e72",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "73817a45-5c55-4715-bb5c-6fecca3e166e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c45137-d86a-47d4-837c-35300d931349",
        "cursor": {
          "ref": "75d15597-2892-488c-85f2-94b01ef318e7",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0fa4401a-7736-4648-ab8f-3f8f0940904c"
        },
        "item": {
          "id": "75c45137-d86a-47d4-837c-35300d931349",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "badcf378-0067-4d6e-965e-a6e8bb8d2463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c9d967-4b7b-4801-be30-08c0e36e5046",
        "cursor": {
          "ref": "7746ea5d-da9c-42f3-98cc-b5585d7cf961",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "aa05c804-af76-4fbb-a439-45effe832442"
        },
        "item": {
          "id": "c9c9d967-4b7b-4801-be30-08c0e36e5046",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "79be552e-1aa1-4809-b27e-8140a587c790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053d29eb-c90c-4c61-b53a-2d780c04bafd",
        "cursor": {
          "ref": "992667aa-415e-4769-8a34-709942534ae0",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4a77d511-0b2a-4ede-8e10-468c65e814e6"
        },
        "item": {
          "id": "053d29eb-c90c-4c61-b53a-2d780c04bafd",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0cd5e427-5e4c-43c4-88c3-40dc3e20a093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67010d54-c2b2-4c0c-9ef7-6f48565cc448",
        "cursor": {
          "ref": "c6579a56-d696-4b50-8510-c49543c35661",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ce82deaa-7a93-4a09-93d6-e25b35cfd8c7"
        },
        "item": {
          "id": "67010d54-c2b2-4c0c-9ef7-6f48565cc448",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "91cfd335-1df1-4a6d-8f6d-05d61a3222f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801c3bde-0404-434d-9d5c-652d3aa6d2de",
        "cursor": {
          "ref": "669e6d2c-ae8c-4373-94d1-992596a7fc93",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8ceb9a43-a538-4d8a-b8bd-2f3bdd0de416"
        },
        "item": {
          "id": "801c3bde-0404-434d-9d5c-652d3aa6d2de",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9aefa0fe-5b12-491b-abdf-ceb3c71a6063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9667d0b6-d9c3-4c03-8fdf-b6a7e487d375",
        "cursor": {
          "ref": "b1442063-aa2f-4f1e-8c2d-a043ff87f0ad",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "3784b366-6f07-47b1-a793-27169a737539"
        },
        "item": {
          "id": "9667d0b6-d9c3-4c03-8fdf-b6a7e487d375",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f39a2d98-f0ca-4be4-97ea-4ed69d7234a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de6c0f0-8bd4-4a8d-b149-5d8eb6a0b8f7",
        "cursor": {
          "ref": "3073faa5-5d5e-4db1-8b71-dcd6cbf2de31",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "db78092d-abef-4847-bd86-7e4650ad6381"
        },
        "item": {
          "id": "3de6c0f0-8bd4-4a8d-b149-5d8eb6a0b8f7",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "16fd9c20-2793-4c3f-8027-4e8ebd5c5fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e7eb02-93d3-4ae0-a4b1-f38783dca072",
        "cursor": {
          "ref": "35573d92-98ba-47fd-abd8-f5a781ead54f",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "884f4ed7-9ac0-41fd-a4a2-b6f073892968"
        },
        "item": {
          "id": "f4e7eb02-93d3-4ae0-a4b1-f38783dca072",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "53a6d877-04f5-4016-a791-e4f85efca757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e541bf83-2e55-42c3-832f-00245f95d56a",
        "cursor": {
          "ref": "efea3cc5-3a29-4e7b-a0c9-9c0674d43b21",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "203ee2b6-400b-4407-9861-71bc24647c9c"
        },
        "item": {
          "id": "e541bf83-2e55-42c3-832f-00245f95d56a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6c693829-5556-4bdd-b633-c4dcff8452e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ae1625-9308-45c3-907b-8bb9221bd325",
        "cursor": {
          "ref": "c6806e13-88c1-49bf-abfe-53a73b5bd6d4",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b1632d32-e6d9-4ff8-ac76-f76a4c38d047"
        },
        "item": {
          "id": "d3ae1625-9308-45c3-907b-8bb9221bd325",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ae5b3f24-aea6-4f00-9ea8-711291bd47d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97ec8cb-4acd-4138-acb4-276734056ea4",
        "cursor": {
          "ref": "65367f87-d38b-4aef-bc71-9a4687e5614f",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "568c7c42-2c2b-4220-8b5b-8149c9890a43"
        },
        "item": {
          "id": "b97ec8cb-4acd-4138-acb4-276734056ea4",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "de03a4b1-4bdf-4407-be37-2bb91212deab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0471a48-4eb1-4409-8555-74e2444d9b0b",
        "cursor": {
          "ref": "c464b333-d2ec-43bc-9e61-f87dd4cfb106",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e2430730-ae1d-4260-8d98-1ba1f05af476"
        },
        "item": {
          "id": "c0471a48-4eb1-4409-8555-74e2444d9b0b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "387d3eb8-80db-497e-b474-ab97c872add7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea56384-3e5c-4944-93fd-56ac35e21eaa",
        "cursor": {
          "ref": "081bba25-c15d-4224-aecf-6b7cd25b6dfe",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "bc110c4b-f8d8-40f8-8091-78eb879c6550"
        },
        "item": {
          "id": "eea56384-3e5c-4944-93fd-56ac35e21eaa",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a6f8a846-d23c-470f-afd8-3f9c1a893155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24f0c61-1449-4c41-9310-8ee8eeb7cfba",
        "cursor": {
          "ref": "70045ff3-676a-45be-a0e7-f6ea757bb789",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "40641860-ede0-4c2b-ab93-cf7cfd06ef4b"
        },
        "item": {
          "id": "f24f0c61-1449-4c41-9310-8ee8eeb7cfba",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3363c13c-d32a-49bd-ade4-d8a94d81feb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85edf87-3d7e-40fd-aedf-885096345b8a",
        "cursor": {
          "ref": "5e7fd5b9-0cb9-445a-9df9-0725ce469010",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0e72070e-9c13-4db3-b937-9e887cdcdb4f"
        },
        "item": {
          "id": "d85edf87-3d7e-40fd-aedf-885096345b8a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5635f7c0-bbf7-4ecb-9b17-cee6e5b99103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9811986a-167d-468a-959f-6c8bf9baf38a",
        "cursor": {
          "ref": "e3eea649-694c-475b-a790-9c9d0879f497",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d0a5cfb0-b27a-4892-9288-a3832d64fc04"
        },
        "item": {
          "id": "9811986a-167d-468a-959f-6c8bf9baf38a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7c065b57-8ee6-4171-b1ac-8022eefd951e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7796b54-ae26-474b-b8f9-73240f6c7465",
        "cursor": {
          "ref": "c9c60d2c-e02d-4760-8c4b-c0fe33b0d9c1",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4c70d856-5749-409f-b208-b379a86b4ba8"
        },
        "item": {
          "id": "b7796b54-ae26-474b-b8f9-73240f6c7465",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "61828ebd-6855-4929-838b-2aea0b1cff30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "472413f8-db5a-4c49-9e26-938af767dcf3",
        "cursor": {
          "ref": "8a168a12-9afa-4826-8883-850793628baf",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "27b5b4dd-d019-4548-924a-55b946d2039e"
        },
        "item": {
          "id": "472413f8-db5a-4c49-9e26-938af767dcf3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "42b80779-b1af-45f5-b1a9-4903467b1c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a24072-e0fb-40d5-acd8-024a6f48c96a",
        "cursor": {
          "ref": "0a448dda-7846-40db-a5fe-15905cb1b79c",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7c07d639-20cb-4880-9fdc-78733360f78b"
        },
        "item": {
          "id": "50a24072-e0fb-40d5-acd8-024a6f48c96a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "23dc1865-7b18-46e5-a628-8e9806ddf7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e6c00a-2ea3-469a-869b-7761c0653a54",
        "cursor": {
          "ref": "672a7c8d-5452-41c2-8d79-c266c33ae197",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "13b4e14d-dcce-429d-a772-6af28bc5e6b3"
        },
        "item": {
          "id": "a0e6c00a-2ea3-469a-869b-7761c0653a54",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8d8a3657-2cfc-4019-9944-d3e47493283e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c11280-1d91-4e02-9782-3443097bdd76",
        "cursor": {
          "ref": "d378cef0-90b4-486b-8b69-2b96ac03603c",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "dc99d6fd-111e-413c-9e9e-fe05a718f443"
        },
        "item": {
          "id": "42c11280-1d91-4e02-9782-3443097bdd76",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a66726c2-9b1a-4789-8750-d16bdf81786f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf98e6a-84d1-4839-9c5d-3036c9d2f5f6",
        "cursor": {
          "ref": "5a267fb1-9ef5-4115-a46c-874dde690ffb",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9ae741d4-318a-42d2-af34-ef0e6c9f7d08"
        },
        "item": {
          "id": "6cf98e6a-84d1-4839-9c5d-3036c9d2f5f6",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "365d38a5-73b1-4f6a-a2b2-f29764266d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02dc8d6e-3a25-469e-afc0-bbc0d4bfa2e0",
        "cursor": {
          "ref": "2860a848-19ed-480d-ba53-ea5ec7352f8d",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "747728c2-7861-4e43-9934-c1d37db482a7"
        },
        "item": {
          "id": "02dc8d6e-3a25-469e-afc0-bbc0d4bfa2e0",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f04909c3-144e-420a-b52d-2d5585b1694d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbbba79-519c-42fd-89fc-baee1301df3e",
        "cursor": {
          "ref": "bc6cce0d-068c-41e8-b8fe-91b2f4958fb0",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0c7f07cb-fc74-454d-bd15-9ec9ae2d6b29"
        },
        "item": {
          "id": "5fbbba79-519c-42fd-89fc-baee1301df3e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "81948271-f79f-4bb4-a352-51d321cd7ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ad35da-05be-444d-87f4-d19e2a6fbaa5",
        "cursor": {
          "ref": "c960c335-c5fb-4623-8fd1-2d20490ccf13",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e5285401-3fe2-40bb-9b39-b1093730430f"
        },
        "item": {
          "id": "17ad35da-05be-444d-87f4-d19e2a6fbaa5",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ccb1c43a-b3d3-42ed-8064-38c956a831f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2fe1ac3-af03-4e36-a8e2-eb2952124cb0",
        "cursor": {
          "ref": "3a83987b-d865-45f9-a8c3-809c43df5fb2",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "61b45dc7-dbb1-409c-9402-54932364469f"
        },
        "item": {
          "id": "b2fe1ac3-af03-4e36-a8e2-eb2952124cb0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "df7e9aa7-8fc2-4df3-b542-6f6566e09526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257a5afe-4dda-4423-ae8e-58181818865b",
        "cursor": {
          "ref": "8e153c34-e1f0-45b8-a84e-1d7d23ad8513",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "249284a0-83ce-4deb-9c64-2523a9ea6ff8"
        },
        "item": {
          "id": "257a5afe-4dda-4423-ae8e-58181818865b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "fc6314ff-104d-4406-a428-0ce2f1ec7b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb5ee32-acb6-404f-bd93-3de4a3307753",
        "cursor": {
          "ref": "9fd5b4b9-92d4-42c6-bae0-3f4aa028ccbe",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7718fca5-196b-4fea-88dc-d6094a066c74"
        },
        "item": {
          "id": "bfb5ee32-acb6-404f-bd93-3de4a3307753",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3709ac18-846d-4ba2-b9d9-c596d299b6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e1b87b-ed35-4784-80ed-650df6cdd894",
        "cursor": {
          "ref": "c405f478-5f7d-45d8-ae06-99a2a869904e",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0dd0d550-0a00-40bb-8f2e-3beb706c0bd7"
        },
        "item": {
          "id": "d8e1b87b-ed35-4784-80ed-650df6cdd894",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b64f59d5-0d2e-4511-b1a6-65b763d203af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf66267-b522-41c9-8ddd-6826bc9f0915",
        "cursor": {
          "ref": "95298c56-b8b4-4c55-b998-b357b9d3a2e2",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4bca79f2-12d2-4f4b-bbb3-1265abadcc82"
        },
        "item": {
          "id": "cdf66267-b522-41c9-8ddd-6826bc9f0915",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "100b579c-52fc-482a-a675-108713b3b7eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac0181c-263f-47a9-bf1f-19aee8822d1d",
        "cursor": {
          "ref": "7d70601d-c864-4811-9641-9eb7cdda8a30",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "515f5baa-96e8-45f3-9280-b06f26c88408"
        },
        "item": {
          "id": "8ac0181c-263f-47a9-bf1f-19aee8822d1d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f4c420b8-1d25-4e7b-91f5-21839625a1ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c82d0c-42d0-413c-8c4a-b2131559c929",
        "cursor": {
          "ref": "8fc98f3f-c14f-44be-aec4-1668c8cea78e",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f2cdf40c-83a8-4361-8493-51eedc0674f0"
        },
        "item": {
          "id": "35c82d0c-42d0-413c-8c4a-b2131559c929",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3d4ab004-1e16-46f4-ba06-2a3ecc90e83d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1109e780-3eda-4a61-bf81-371536ac5f5b",
        "cursor": {
          "ref": "7bf30113-1d4e-4503-a306-3dcfbb06a906",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "079f1447-63f6-46b0-8716-fa81b696f517"
        },
        "item": {
          "id": "1109e780-3eda-4a61-bf81-371536ac5f5b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "34624fd8-4181-4687-938d-a8113d3a13c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d052f0-aa1b-4609-a748-8b57c44e0ee0",
        "cursor": {
          "ref": "07b1cc0a-0b52-4fb0-90bd-cdc1d2a5865d",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "7ee5d19e-21a8-4e33-809d-5ea20a8afdb1"
        },
        "item": {
          "id": "43d052f0-aa1b-4609-a748-8b57c44e0ee0",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "86895fb1-ad26-4b81-9fa1-815458099680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8728dd3-e3cb-4e55-b096-9a52ae44ba1f",
        "cursor": {
          "ref": "2fe44a38-d29c-4b18-b4a6-86c8c73095b2",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a886cbef-f30a-4d0c-a6c3-918da7624b1b"
        },
        "item": {
          "id": "b8728dd3-e3cb-4e55-b096-9a52ae44ba1f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "30366678-c1e6-408a-a0da-c75238dd56c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c13d3b-3e88-4102-97d0-8da26dba6454",
        "cursor": {
          "ref": "08faae87-e4e7-49b8-bca3-d4b5ac65d90d",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "cd72a96e-66aa-4182-bb2b-2da37ae8db47"
        },
        "item": {
          "id": "35c13d3b-3e88-4102-97d0-8da26dba6454",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "95e6bc41-940d-4abc-b95f-751664a6d13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2604c094-c4e4-4d69-8c2e-fad1ea9746cd",
        "cursor": {
          "ref": "219648a7-aa13-4725-ae50-2df57c5d3266",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a3ab5557-0e05-4a8c-b62d-800160ecfca2"
        },
        "item": {
          "id": "2604c094-c4e4-4d69-8c2e-fad1ea9746cd",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "993a099c-01ae-44f8-8766-f5a67b23d42c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2dcbdb9-0016-4d77-8932-6965c082f194",
        "cursor": {
          "ref": "74d55731-ec48-44bd-9967-1082a2622444",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ccb0bf48-22c7-4c28-901d-c64f76368d8f"
        },
        "item": {
          "id": "d2dcbdb9-0016-4d77-8932-6965c082f194",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8c5ba1a2-cdba-4149-9088-6141416c64f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee79fac-0b0d-4731-a070-534e3430749c",
        "cursor": {
          "ref": "e8d32e03-f4e9-46f3-aa8a-754d8df98828",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c3fec2b2-f1d8-42b1-8d1c-b60f63a4a644"
        },
        "item": {
          "id": "dee79fac-0b0d-4731-a070-534e3430749c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6aaa8d9a-75b2-4edd-8270-4c0d86bd44f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c45ab4c5-6528-4d69-b8af-ae55d7c68144",
        "cursor": {
          "ref": "f4ee40b4-01df-4f3b-b1fb-0f41ca57a6da",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c32a62a0-eebe-4e22-bcad-4bb0b56df13f"
        },
        "item": {
          "id": "c45ab4c5-6528-4d69-b8af-ae55d7c68144",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8c800784-f877-4adb-aba5-8871af6b6d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bae4719-af6c-4819-ba94-deed67cc3501",
        "cursor": {
          "ref": "c98609e1-f8ce-4da0-9df7-b01412e06690",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "728c9bd1-3cfa-488d-a3c8-f704398690c8"
        },
        "item": {
          "id": "2bae4719-af6c-4819-ba94-deed67cc3501",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9ff021bb-128e-4987-babb-9b95d717e8e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe54853-dab1-4de7-8f85-b47d7a127540",
        "cursor": {
          "ref": "99e8b35e-0abe-4584-a5b6-664fa79d1d16",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8df88979-9224-4394-bdf7-9cbeae4f0065"
        },
        "item": {
          "id": "efe54853-dab1-4de7-8f85-b47d7a127540",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "41061f8b-87d2-4caf-bc08-9d7f53433a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e50ab1c-1772-43dd-89bb-0546a0c89d67",
        "cursor": {
          "ref": "eeeabdf6-a2c4-454c-b3fd-2acea1fddbfb",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e548a864-9535-4fa4-aa33-251f50fe6350"
        },
        "item": {
          "id": "1e50ab1c-1772-43dd-89bb-0546a0c89d67",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "39fb3136-a343-4d5a-879e-fed80cd8eb71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f67ce81-8955-49f0-9ed8-46580c893b51",
        "cursor": {
          "ref": "6484fc3b-00fe-43cb-9983-d3b455f92fcd",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f446844e-aced-4b52-bde2-e7da02b60a2e"
        },
        "item": {
          "id": "9f67ce81-8955-49f0-9ed8-46580c893b51",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8c84ef02-d5b7-4ef2-9b9a-f00e5440d8fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917efe69-418b-4390-b014-444e50ea70e1",
        "cursor": {
          "ref": "dcae7bb2-9ad5-482c-800a-7d2f39b5f20d",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "812eb94a-cdb9-46cd-b742-c7ccf2077ff5"
        },
        "item": {
          "id": "917efe69-418b-4390-b014-444e50ea70e1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3d566e5f-ef0e-4f7d-8b3b-74c9cea6c4e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639878c5-9ce5-4809-9d10-72d485a861d5",
        "cursor": {
          "ref": "57e6dc5e-c454-4c9a-bccd-1c980e8719e1",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0aef3960-0842-421c-91dc-486105789e8f"
        },
        "item": {
          "id": "639878c5-9ce5-4809-9d10-72d485a861d5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "233954a9-1b9f-45ec-93cf-5cba26f09906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c45a40-37b8-4991-a688-cb56a75fdc0f",
        "cursor": {
          "ref": "f94db67f-a564-4ca2-bbe2-990fb9f24781",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ec64161b-b334-4d59-835d-14b681f1972c"
        },
        "item": {
          "id": "73c45a40-37b8-4991-a688-cb56a75fdc0f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8ab2580d-d1cd-40f8-a1e1-331d8dbd4657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1e0a3c-6f35-4c53-8fbc-018886139d45",
        "cursor": {
          "ref": "621a5407-befc-4327-97a3-b525abdadab0",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9eb64609-3dfe-485d-98d4-7edb9c5b62c8"
        },
        "item": {
          "id": "bc1e0a3c-6f35-4c53-8fbc-018886139d45",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2ed0b890-0471-4190-8828-05d4a8d09e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc17ddf-01a1-4f83-89b3-a94f5ec8d77b",
        "cursor": {
          "ref": "a73afd15-590f-45b2-a1af-31ae097ad421",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6ff74d44-ad7f-4ab8-8a47-5e377efab792"
        },
        "item": {
          "id": "0fc17ddf-01a1-4f83-89b3-a94f5ec8d77b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b298a703-bdef-4ea8-ade4-78d6d2cdfe74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095a0ef2-3e2a-439c-bbb4-95f4dc310264",
        "cursor": {
          "ref": "20208cab-b080-40ff-a869-a445c1070d79",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "72c22f89-ece4-4225-aecb-776831927d76"
        },
        "item": {
          "id": "095a0ef2-3e2a-439c-bbb4-95f4dc310264",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "70417317-9209-4aec-87db-19b6afa79145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3627fcb-4cd7-43db-8026-0ecac988a938",
        "cursor": {
          "ref": "021faa71-bc52-4b99-94f1-923c6b9a423c",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ac7cfb76-3f85-4cb7-9390-85ab3e49f44a"
        },
        "item": {
          "id": "e3627fcb-4cd7-43db-8026-0ecac988a938",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5a1a7fac-0d3f-4ef7-bf72-e93d45ad6b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71436137-f5e4-48f2-a631-17cea90f49ca",
        "cursor": {
          "ref": "b191f974-40b2-4cbe-b86f-9bff025a67b4",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "563accd2-8618-4dc3-b117-6464c2cf3262"
        },
        "item": {
          "id": "71436137-f5e4-48f2-a631-17cea90f49ca",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "bd9292ad-8a6f-499c-a192-2cfbd9913fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2546f92a-935b-443b-b392-4d53160a499a",
        "cursor": {
          "ref": "f4739e5e-eda8-4c0f-a759-9d3beaa23b26",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6e92fc3b-ef58-48ee-8de3-e4f176e55d9b"
        },
        "item": {
          "id": "2546f92a-935b-443b-b392-4d53160a499a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "fd96b7f2-faf6-4605-b237-3c3bc6f38c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a93dc0-89b0-46d1-8102-58d43f164f26",
        "cursor": {
          "ref": "d0a2b97d-16c6-493e-9298-71fcec57c08b",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "eb310016-6481-4774-a3f5-44253f46d891"
        },
        "item": {
          "id": "f9a93dc0-89b0-46d1-8102-58d43f164f26",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8043a1a2-3e35-47fb-bdb7-d69b8842a8d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0d69d7-6845-4eea-b51e-565ee894de72",
        "cursor": {
          "ref": "ebfc2dea-f4de-443b-9ef6-7b6da384d9a0",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "18b9e9e2-72dc-4afb-8527-77a367d9ada1"
        },
        "item": {
          "id": "8a0d69d7-6845-4eea-b51e-565ee894de72",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "edbbe849-0c93-4d80-8d29-c5fe2e7db0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbdbd7ce-a438-420e-94d2-340bbaee1f87",
        "cursor": {
          "ref": "783ece3d-c38d-46d7-b3fa-0c254ecd649c",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b55dba5a-8c66-46c7-b599-b7e884f49a30"
        },
        "item": {
          "id": "fbdbd7ce-a438-420e-94d2-340bbaee1f87",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0d8c62e5-57ed-4f5f-933d-ff492a96411c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2635458e-c42d-4591-9703-f8f4df37dfa2",
        "cursor": {
          "ref": "441ad59a-6bc8-47f0-8633-b2750d407f5f",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "653ea4df-6eb2-44cb-9396-a4069a471f7c"
        },
        "item": {
          "id": "2635458e-c42d-4591-9703-f8f4df37dfa2",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5dd14f47-0880-4b03-871b-28d8cf82ae31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16219559-bff2-4e38-a255-f59154a921f0",
        "cursor": {
          "ref": "e39b2432-17ac-4f82-ac79-e1a996aa2512",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "186aff73-e111-4fd5-9f4c-5aeeb1a6be6e"
        },
        "item": {
          "id": "16219559-bff2-4e38-a255-f59154a921f0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4a7f9372-8ef3-44b3-9732-dffb839795ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865e1d72-c904-42fe-be4b-2110263d7157",
        "cursor": {
          "ref": "f6922d36-807e-4ce4-ba55-a82e584fd2a7",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2ca48e27-27e0-435e-be66-7113acd9991c"
        },
        "item": {
          "id": "865e1d72-c904-42fe-be4b-2110263d7157",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "32bbdd95-c0bb-41ae-b90f-cc4aff4a63f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0727a0-c78d-4c56-aba9-d8a4e2f6100f",
        "cursor": {
          "ref": "2fc7cf0b-99e3-47a4-a920-b1d9977b0cc1",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ced43a3f-b9df-41da-8f05-aaddfefa365a"
        },
        "item": {
          "id": "8d0727a0-c78d-4c56-aba9-d8a4e2f6100f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "869f4700-7114-4561-a09d-466c559a7ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d139c1a-0c2d-4c5f-a326-3f8431be28bd",
        "cursor": {
          "ref": "a28a2879-3401-42b4-9c05-d90a25007b56",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3ed55fb3-0c2d-4d9b-9011-d878a83168df"
        },
        "item": {
          "id": "4d139c1a-0c2d-4c5f-a326-3f8431be28bd",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "90fdf79d-0eb3-4daf-8088-4210ba88d556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9686e759-4a8a-4f05-b9cc-6d2c313bdf82",
        "cursor": {
          "ref": "b21faa1b-ac08-4039-93b7-0a70add5e4d6",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c01c1059-452a-4863-958b-af4802933f53"
        },
        "item": {
          "id": "9686e759-4a8a-4f05-b9cc-6d2c313bdf82",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "23ec923f-186a-4dee-b07c-f5f43f8975ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f21217-0e03-426e-b72f-397bad0f367d",
        "cursor": {
          "ref": "f62a57e0-2814-41af-84d4-0c6f15eb7e9c",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "63a27f50-9a81-493a-bf33-46e6ba3a5f68"
        },
        "item": {
          "id": "82f21217-0e03-426e-b72f-397bad0f367d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "141644c3-3286-4c88-8386-0e489daf2a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711a56e0-40b0-4061-bf72-1589fff6ff01",
        "cursor": {
          "ref": "706a3d31-f69d-4ca0-a7a3-2a45c6617cdb",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "eaefffa6-6aba-42d4-b741-cb520b280e48"
        },
        "item": {
          "id": "711a56e0-40b0-4061-bf72-1589fff6ff01",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ba97a4ce-9673-4dfd-8be8-ace0679683bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a84f7d2-6558-4811-8cdb-5987fba15213",
        "cursor": {
          "ref": "6287a315-ad9a-4245-9afd-df7ea799016f",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8e73c8ed-1d52-4224-b0bf-e77822c63ac5"
        },
        "item": {
          "id": "7a84f7d2-6558-4811-8cdb-5987fba15213",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "70457999-33f6-4d73-9d51-28e865f95f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81bf756-a88f-4726-b41f-5ff71ae2b378",
        "cursor": {
          "ref": "cf42e695-6da1-451f-80e7-1cb652f6ce87",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "40961ecb-7f4b-4d8d-bcf3-1c39b9351a9e"
        },
        "item": {
          "id": "e81bf756-a88f-4726-b41f-5ff71ae2b378",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "127c4eb8-4faa-4ea8-9707-52834507e2e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b32eb55-5d19-464b-bad6-28e68030c91a",
        "cursor": {
          "ref": "c237a0d8-5b8f-487c-b7bd-e68e12dd717b",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7f8dca77-5e40-4168-a470-e2621c1108e0"
        },
        "item": {
          "id": "9b32eb55-5d19-464b-bad6-28e68030c91a",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "a3b68ccf-75b1-4507-ae1f-4d9c80e88d7c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 362,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a4c206f-3b64-4035-92f1-2bb99e4bc5c9",
        "cursor": {
          "ref": "48f3dc7a-ef93-4166-986e-736a87214a09",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "23e59d6a-8d7b-4ba5-a1eb-8435e18950c8"
        },
        "item": {
          "id": "6a4c206f-3b64-4035-92f1-2bb99e4bc5c9",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f27f04b3-acba-4817-abc6-6462b53edb4b",
          "status": "OK",
          "code": 200,
          "responseTime": 463,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbdb0575-c03a-49b6-9324-7afcc6df343a",
        "cursor": {
          "ref": "5f864754-7afa-4bbc-9aa0-a499ff4cdf42",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "063cf231-f1df-4bd3-81b1-dbf3f8c34aae"
        },
        "item": {
          "id": "fbdb0575-c03a-49b6-9324-7afcc6df343a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b48298ee-fbc1-4298-81c3-752c50f02c78",
          "status": "OK",
          "code": 200,
          "responseTime": 1927,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c979f0-22ad-4f58-bef6-06252758bab5",
        "cursor": {
          "ref": "aaf60ad7-9eb7-48e2-9c5c-b4095d6c40d1",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "baf4b3b0-f043-4e14-97da-36b053c3afd6"
        },
        "item": {
          "id": "c5c979f0-22ad-4f58-bef6-06252758bab5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "90199dc7-47f7-4420-ac94-85dc9c217043",
          "status": "OK",
          "code": 200,
          "responseTime": 2192,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7c64dc-4e52-4d0a-87ba-9bdd5923c3f3",
        "cursor": {
          "ref": "52376b71-1a5e-4a81-a385-98e3c6dfee70",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "05afb553-e1ce-4109-9eb7-8a71df296c21"
        },
        "item": {
          "id": "9c7c64dc-4e52-4d0a-87ba-9bdd5923c3f3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b717096a-8726-420c-bf39-b1a91d7b440d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7c64dc-4e52-4d0a-87ba-9bdd5923c3f3",
        "cursor": {
          "ref": "52376b71-1a5e-4a81-a385-98e3c6dfee70",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "05afb553-e1ce-4109-9eb7-8a71df296c21"
        },
        "item": {
          "id": "9c7c64dc-4e52-4d0a-87ba-9bdd5923c3f3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b717096a-8726-420c-bf39-b1a91d7b440d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7c64dc-4e52-4d0a-87ba-9bdd5923c3f3",
        "cursor": {
          "ref": "52376b71-1a5e-4a81-a385-98e3c6dfee70",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "05afb553-e1ce-4109-9eb7-8a71df296c21"
        },
        "item": {
          "id": "9c7c64dc-4e52-4d0a-87ba-9bdd5923c3f3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b717096a-8726-420c-bf39-b1a91d7b440d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2abcefe2-e278-4543-980a-fce5035f2231",
        "cursor": {
          "ref": "6092286d-b9b5-443a-aca4-9aa913d81c33",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ff1de128-72bd-49ca-954f-63e352337125"
        },
        "item": {
          "id": "2abcefe2-e278-4543-980a-fce5035f2231",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "1df1d0bb-6895-411b-bf35-680fbb565f66",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 339,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89080520-0b76-4231-8fb4-58854ce094fb",
        "cursor": {
          "ref": "e70a4809-2c73-4bea-b778-8e74ff43faa6",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9302adaf-fd6a-49e8-9ca4-6d6a18b561d8"
        },
        "item": {
          "id": "89080520-0b76-4231-8fb4-58854ce094fb",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e1b5f8b3-633d-4c87-95e8-2d6cd2edd33c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89080520-0b76-4231-8fb4-58854ce094fb",
        "cursor": {
          "ref": "e70a4809-2c73-4bea-b778-8e74ff43faa6",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9302adaf-fd6a-49e8-9ca4-6d6a18b561d8"
        },
        "item": {
          "id": "89080520-0b76-4231-8fb4-58854ce094fb",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e1b5f8b3-633d-4c87-95e8-2d6cd2edd33c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c92cea4-ae01-4d45-b89e-e836f5b5d1d0",
        "cursor": {
          "ref": "4c3cd66f-6d2f-42b7-b0d0-c26e5b02bf44",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f302a2d8-2ae1-4c24-82b3-cb0af04c79cd"
        },
        "item": {
          "id": "1c92cea4-ae01-4d45-b89e-e836f5b5d1d0",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "39ec4b4a-a751-485d-a604-b27b19b8df53",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 570,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009b05e7-f800-4c6b-baa0-d08517904c64",
        "cursor": {
          "ref": "d49cc18b-598c-489d-88a0-5111a85ba91d",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "85b0d8ed-ba23-4edf-8c3d-85bfca624625"
        },
        "item": {
          "id": "009b05e7-f800-4c6b-baa0-d08517904c64",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0d2ae4cc-2b3f-4333-95d5-711fdf6f087c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009b05e7-f800-4c6b-baa0-d08517904c64",
        "cursor": {
          "ref": "d49cc18b-598c-489d-88a0-5111a85ba91d",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "85b0d8ed-ba23-4edf-8c3d-85bfca624625"
        },
        "item": {
          "id": "009b05e7-f800-4c6b-baa0-d08517904c64",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0d2ae4cc-2b3f-4333-95d5-711fdf6f087c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c92fc7-76c0-421c-a4c1-1c5ca9ba8951",
        "cursor": {
          "ref": "ad4e7174-64cf-46f6-aa28-2c51d18fa728",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d3736c93-63ed-4dad-8b5a-41453b3382cf"
        },
        "item": {
          "id": "82c92fc7-76c0-421c-a4c1-1c5ca9ba8951",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "076c7867-9684-4511-b04d-6f80a30cc8a5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 560,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}