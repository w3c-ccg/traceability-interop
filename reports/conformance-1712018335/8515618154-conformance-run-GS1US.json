{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7534ff72-fa21-4d75-a5a5-4b201cda8d16",
        "name": "Clear Cache",
        "item": [
          {
            "id": "fe034d27-c293-497c-9f17-5526b21cd252",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a6748bae-e8e6-442b-8132-c2b975e0811c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b77e06ce-4475-4553-ab27-756af6427f2f"
                }
              }
            ]
          },
          {
            "id": "cf932963-3ed1-4de3-805e-fcd0c9703dbe",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2e90f8ed-e89d-416a-90a3-310ef16eea36",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5735d0a0-7014-444b-91fb-5beb8a62f442"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1af99dcc-5caa-4f20-a687-03aaf809097d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c9d7c9a3-696b-4250-bff6-e8f807fd818a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "472bbbf5-0530-4e1e-8e82-beb0c6439524",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d20d263-e96d-4185-adaf-b89d95266699",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "07383db6-55cb-41df-b160-38d9538b2016"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cea6c08f-0b64-4b1c-bbfb-da2e191609ca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ebc2c6d6-4f59-4332-820c-964b2ed1f20e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "05aea0c3-7a46-4509-a2b1-4f725b094526",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5c314529-8bc6-4efd-b84a-c51cf7568db0"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca02b951-9926-453d-b78c-eba2b7ad3333",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e053216c-613d-4967-9e71-18a357cbd643"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e215053c-d50a-4627-adf3-495269664949",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f51ffcd-0ed3-45a1-8059-714c525fb3f6"
            }
          }
        ]
      },
      {
        "id": "95a6b8d6-428b-47cc-97fe-633bf157a585",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7cc2908a-6e50-41f6-a0f2-3ad5cd72e66f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9f331486-1ef6-4626-819a-260d54790052",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2838d825-fc13-4944-903a-46fcca0b3331",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ad8f52-e4dd-493a-80fa-b62fd57ca16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d9ae3fe-63af-4d30-879d-3ceca6d16d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a437f09a-0394-460b-824c-3fd9858e4e93",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45de72e9-9130-49f4-8680-dd1bf3398a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "682f628c-04a4-4ae0-9886-d2a083dd9c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a301d6-cb42-494d-9d18-77ba313d7869",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c32ddcf-ce21-42b2-8da4-426d87ca4155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1901519-b6a4-447a-8f7e-8c25dd836ed7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2993dea1-a8b0-4efa-8122-ec5052a00844",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fd45a4cf-5d0f-4595-a246-b21d572c889e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0b6db1-6d7e-4bd2-890e-38920bd07321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef301571-b9d9-4e0a-b6dd-93ad22826fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b1966e-340a-41d3-a9a2-910ba0d1c06d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e44f93f-fe67-421e-acc9-cf56345f0399"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "80d7111f-c267-4552-a3b2-3588ee0d9aeb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "18de8df5-9f36-4764-a126-45ef78e77b49",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f01f24a2-d56f-44a4-bf0b-c4e48bf4173a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d35e4d82-d02c-4709-8e7b-feba28d3e863"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9330e7c6-8c1c-4587-afa8-20d0e1ee515e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "66c8c6a6-3f02-416d-affc-3acf9b3e6949"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a5ea32a6-5418-4a34-968d-8d3eaf17ba43",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "752faba9-b350-4d03-93b2-ad8da56d42ee"
            }
          }
        ]
      },
      {
        "id": "696952fe-fea9-4b46-a7de-693acf0e65ed",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1f5e795e-8eef-48ea-9dd9-707f87544eb4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "06d3ac8d-ebb4-4659-9e88-9e1aaae5922b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f43808d2-4310-4ab8-bae8-aa21055fa925",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4d8c4f-7cf8-42cf-81e2-f430e7736b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e51eb740-b0ee-4199-83f8-9b7cb1de37e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b77c0b-fe24-4593-8a43-c7470c977843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e631420b-b024-43ac-a2f1-c497f5684f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0441c10b-721f-417b-b937-fe63d15ad229",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2169b31a-1fe9-4b57-97d9-c83f9129245e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c3e564-8fd2-4c12-84f8-0cd8f8bc2ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37635d3d-c64d-4005-80ee-277b4c261d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f14bf234-d443-462f-816f-bdb5fb714ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aafd0164-9545-4fe5-ad63-2170aece3f8e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d6d147-5167-4ab5-939c-6dcd74059c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d05ee837-bf96-427f-b021-10f58ea357aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e35b0b-8c6a-4016-906a-0f6d260cb540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "643586bd-e21a-4ff0-8b1c-f958a4803f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d145142-5833-4fc7-8177-c0e3f996bb09",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38e74cd-e53b-426a-99be-d04f52fce537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "760cbefd-f4c0-4745-84ad-102a25b60629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73dcdc65-9887-446b-a889-75a507b518fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f04fd8a-0e8d-4665-87a4-769ecb038de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa88626-a948-4f47-82a4-0fe79eb1012c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a96fa4-9131-4fbb-aa69-579e18fe0e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9707c01-7780-4786-9093-70670f4264e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb8f0eb-f867-4735-a865-26e630593ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d6982af-0a89-47fc-a7be-92317791cc22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9632531a-28e3-4b0e-a729-9110ae9a8cb8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7540aecb-ff32-4426-a0b8-f9a578cb8410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c20e139-6c1d-40ff-ac64-128b4e333fd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3add83fd-895d-42a5-9278-0740f8f34b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cea7693e-d3ec-449e-ad97-e79828b6c94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495336f2-6c63-437d-a68c-770d3d1a1e50",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35fbd34-bc7e-4774-bd0b-dd48371c7376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee0d439-56e4-4c86-b356-2364aac4a622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e441aad5-f787-4a14-89c2-4d1ca447c49f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "494d0a6c-491a-456c-929c-84c7fa072730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6c6a53-f0a4-41bc-8965-f65d0a033ee2",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "156279be-6f61-4737-a6ff-4605777825f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f018096a-74a6-454f-97fe-63523c5d4945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a2468e-86fe-4268-9ec0-20aba934072d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb8325bd-5ef6-477d-88c0-3fc412287f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f7b13b-8b6b-4c56-8ca2-c46ebc3a4410",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d26003-70cb-4973-bb2f-294f5f0768b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "073d0568-afd7-49eb-a97e-53f726489e27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb63a1d-521d-4890-b7ef-47443de4e397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dee53365-e50a-4e6d-b951-f8d6db016388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b648a2-b919-4b34-a3d3-31ff32d053ac",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6349054-49bb-4d56-8e4d-589671a6e3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be72bfd-f2ab-41a2-837c-4d565407d61b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ddee142-1d36-4315-8fa2-79c3116352a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe32f0e9-b1da-42bc-8e32-6458660dbf25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff50041c-e82e-481c-a946-7955295c69d4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b33644c-acc2-44e1-99d0-c002e98e9698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcd1a160-51b2-410a-a819-237a8931c7c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89527536-c496-4b78-ba7c-8af822f3e2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc6d4544-8204-44ae-bcff-ea52b0b3d591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb02f73-4add-405c-bf62-4eb2e544431a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5204ecc1-9644-4064-b1f0-c6f3512999d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab7f809d-55ab-44ac-a1d8-50b5b206bd73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62dc946b-1954-4d13-8061-373b57a122b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "727eb7d2-bd60-40bf-89e9-15e477b5f797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7f057c-9bfe-4e19-9c19-6b512c1ee1c7",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a248619b-f9de-4373-90fb-ae0c4cf4f96c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9e312e7-46a4-495d-83d4-ee5f69982795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d10d64-7a78-40a7-a3cc-d98ee1087469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dea9c302-1b7e-4cb0-b9d6-695294e24ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9827fb83-0cd7-46e3-83e9-ba4b57a381b3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea07d90b-7977-42ab-a9e1-2288f4641246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06db1608-65d9-4140-bf12-ca9b7f5a2986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8372a30b-4283-4480-8a11-cc8d33ba3b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "376bee9f-357a-4391-9c34-4d9602ce5f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269ff1b0-59a3-41fd-97ee-8629211618cf",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07bf69d3-afa7-4699-b516-c4023404d15f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "348e5e61-d4e8-4769-bed5-646831387ec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a46d86-2db0-4a35-9898-dfcca2eda6e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12bc25a3-4228-4f13-95ac-099f82463eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b943c43d-c5e5-48b9-83ad-945565977476",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca32c523-7b02-472c-96e0-83f71dfb63c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99e4cdc4-ed2e-4eb0-99d4-8a752e2f53fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13acc054-1eef-48bc-a39a-59dd71d056a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2e0bde1-c3b0-4a48-a97f-f09f8f25c5f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a603304-460a-49a3-9520-4505f45545e8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795e8e00-18bf-464c-ba59-f6fb16957109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "345279b5-986c-44c6-94e3-deec9d889f8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de814484-355b-4763-8b0f-112442bbd55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b257c58-b0d9-45d3-a084-3a0d4d876065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48b00b5-b6bb-47f6-ae5c-3538410ce259",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a2c687-47b1-4717-8c44-f0b9fcaf4890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "747f5bf5-2bf2-48f9-803f-b1aadb56f88a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64cf4b54-7ea6-4b3f-bddb-14116cf13c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd46032-cf22-4c7e-b754-d3a6115e3d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7abd6b-ab73-4948-a71a-32357fbed870",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4efa895a-a64b-436d-9362-828e30d2ce2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2734f387-c107-43dc-bcff-7ad272035eaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d224e1fa-6fb2-4e68-a345-00c75859f5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a38756d1-0ad5-40c2-a4a8-5966d2c01f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a143ef-69cb-4648-b954-23ca8b25d2b2",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d61f5ee-af52-4822-ab49-fb41cab89dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "418233d1-e77c-4e27-afa5-ed0debe9ce8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d66ba4-f27b-4bac-a7f2-ade488034634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3df9c9a5-da0c-4e6b-870e-97d370407dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69adabc6-1a81-4ff3-82cd-924499902000",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ceaf112-424c-42ca-93ed-21288ce094b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29b9c76b-e604-4569-94a1-169815b31a6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e83b9663-66f0-4bc9-a92f-df7acd9ef0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ab96036-e223-4951-a012-cf1a1cc9c9f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1514e9-4974-4b61-aeee-aaa555308f20",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da819ec3-ee17-48fb-bee4-787f51bb2cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "086aec7c-8bc4-41ec-af1a-184c186231a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8707020-2f78-4611-aba8-7775463c6013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "46aea6e1-cacb-427b-aca0-4633f71da366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609bf2d1-2200-4672-8a84-4df876fe1779",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "487af4ba-a090-4957-a1e9-9d35426427e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "972ce84b-1b0d-475d-a823-67532f3129db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9133a9c6-3e23-40d5-bcaf-299ab35a9e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "73390a53-77b9-4695-886a-8006e1c67a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61364e66-f979-41e9-8be2-f9654bcf1785",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29c88eb-1212-4dc3-9241-b7232d9514ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c42ae5cb-be8b-4844-a12d-0197e752abf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49cbb533-1cd1-4ad6-ac6d-7636b00dca7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e52670ca-39b1-4c5f-a5e7-52cc48b610d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5883d24-1db5-4797-9bf2-484b67670050",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "182a872f-2d79-4600-b649-b74f67905351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01973628-ad02-4523-ab7b-7257200ef846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7427bb-e98b-4d16-9943-88409e7ca90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "486f7098-0927-4497-bc3c-f1ec3f7987b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca92fd9-576f-4d2e-b628-f2d8c448500a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53ea6e8-864a-4f80-86df-717d54bad129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b98ada5e-8a5f-4fa8-9720-d81302e6d81d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271c27af-975a-4ebc-bd74-d4658e9e32d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "00a8a83d-0253-4557-b8c7-892b6ff10d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e513e46-03b2-42c9-b5df-eba14070f708",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7828c3c3-9048-48e0-a5bf-f530c90d7346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45689aea-2b8f-4909-a1d3-8f04a87da01d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e59226-198e-4996-87ff-6636d6541c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "54ed5ac1-d881-4c94-9d7d-4da8cfd82fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5368db7-1a49-45bd-ad6a-d3edca1606a6",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ed092f-b29a-4d3f-9708-7b724e82becf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26ff4d0c-e4c3-4088-90d5-5fb33702426c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2bb734-31bc-4621-9354-d6f632089b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc7ed4c1-3487-4134-aa76-90bbb3ff4963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2d06fe-328b-4377-be37-34da18810708",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "577ca4a0-645b-4178-8c62-df7a6469d035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fd0bb6f-5ac0-4718-a3f8-472a84330f9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f2d601-f420-4ed6-88ef-af7af7939c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3185e832-800e-4a55-bc84-78caf4895dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25a4993-df9f-4221-be99-4b331e6e3f71",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26cc331c-eb04-4adf-b047-4513d15a98fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2787a8bb-80a1-4260-b3df-1830a5497d7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5be99b-dc78-4a4b-a524-e60bea1c7cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc6fcd40-930b-4306-b6a3-9495121119fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df907fea-1563-49d6-8a1e-08bec6ad94c0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "053f49ea-9635-4bba-862e-1a577033049e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8ab69db-abd4-4489-8079-6b0828ff41bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "794200bb-4edb-4d90-9963-515c7fa16c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0528760c-e098-4a58-9a19-67bf86ebf689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a76ad981-faf6-4c15-b4a3-48401166fc6c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fcc1f2f-8d35-43cb-91ac-b8b43b16a631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb5db32-7026-4d25-bd62-18b311d0c746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd12e44f-2d33-4ccb-9b34-026e1aadcfc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b5cd8ff-cc50-4885-8c06-df6ad0725bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255ff2d2-0b9b-45e6-bbf6-4b796e2836ef",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "698d4ec6-2535-48bc-a536-bbad4802e65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9822fa69-946c-4ef6-86d9-1b4311ef8f54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d995454e-2207-4744-a5a1-296d87f82a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72468894-3c7a-4f7b-bcd1-b12f8aed6557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e8078b-cc53-47d9-b96d-2dbffc2eccfb",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d82aa2-683f-4eb9-9027-48f87f159462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2358416b-c761-4916-9ded-8bd9eef733cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab7f646-631a-4bf3-b6a0-f65327062006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0646d4fc-b55a-4d07-8271-f04f3a752dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5cb198-edf8-498d-9a70-6222f1133017",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd3cfd8-3ed9-49e9-b2ac-4e236db69311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab98509-f6e0-4dd9-86d6-4e16867c9876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21c4d47-7b4f-4fc7-a534-a2067047831f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "da23c320-3c96-4b69-903a-14fbad485690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4ab95d-1c34-4d52-9349-5b8f023b56bb",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c119b08-11ba-4992-88ed-b6aa600d5af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a48f2f3-b180-4ed0-83f4-08e875fe62e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972a6186-9f6e-49a0-a736-272ac029eb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca7d29f-4f9f-4d3b-b484-e2b7b87e7630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41d6729-0286-4f92-a74b-015a6fcff277",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2572008e-ff80-4c13-a3df-a7ebf0342d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee0aa00e-0e1a-4308-9ea3-a2a71068ee78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975a19ab-d4a3-4976-ae3a-4a5b1e3377cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "75178f51-99c9-4c2d-9126-4b5fa7688358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a80094-f585-4b94-aa7f-60096181491a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c5e942-0eeb-4577-baa2-06fc60e40c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcfee21a-6116-4264-82a0-80be709b4e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aad1fd7-39bf-4111-8f38-cb9d49d4540a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d082f655-29a5-4f0a-9b33-8f22b49fec1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebdf6efc-d67b-4ef5-8369-a2c44334e22b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "765f5b9c-eefb-4923-9b83-0dd2dc54eaf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4d6d687-a68b-4ad0-85e9-4b40402242db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af564463-3e57-4a1a-b59b-baa36b57fd26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1c31a51-24c9-4ecb-99e6-62eae032d34e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9723e7-93a2-4758-b1fa-89519d7938e3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e40ce0f-3764-423c-b8d6-7df3cf595e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53396bda-8c2f-4db6-840f-5d702d5984e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff624c9-1782-41c8-ba4d-0379f1e328cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dccfffb7-32a0-4d20-9196-3d3879245e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083c7ad4-bd01-4100-a625-e0cdbf92a675",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0043a6fb-49cd-4a93-a315-07bbc9952a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcc5a7bf-7876-4307-b9f1-133ed768049f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0cab4de-37e9-4f28-8ba9-ab729e9616c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "696f5e1d-390a-4487-a6e5-dc4763a9ce73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af6af41-a78c-49cc-924b-399e27c367dd",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ab2fe0-dbf0-4d11-9648-272527c52b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdf65ead-c7f6-4b38-bcb1-56ff63bc1594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb7add9-cd0b-4562-a469-9ec98e2648f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5d97f43f-260a-4829-ba7f-7a696a87a54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e7696a-3936-4195-84e4-7ab42bc414f4",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ef9c8a-e8db-41e0-8164-d4ccdbc588b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c20ee12d-145d-48b1-a1da-5ae93cc924d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6780ec9d-0e2c-40d3-937f-80ac4b4d302e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "191b8b73-4897-4ecf-8930-98f0e5e82c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc30e2ea-2a6a-4928-8867-1a3669373379",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17bc0406-737f-4337-9ada-6bb5bc69b019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4571e24d-c8e5-440c-a6f3-76a9a7714eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba64759-a58e-4ca4-bd63-b86608e5c24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3af6ad2f-5c47-464a-816f-b64a29ebd219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a200678e-41e8-4669-bc0b-662c670d81a5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e90f20d-eb27-418c-9238-55d67d1f8f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d09004b-2b00-4bb3-8697-5071be7ec16a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da47dbb8-4f29-4e53-b613-1f75d6be226c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "30d50797-0d3d-42ba-947b-19b09a07ada9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf4b217-96a1-4b32-b878-b24c05407188",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "251f7bab-4854-4ffc-b764-28819390677e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5188af3-1641-4d99-94e6-88eb3f771172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1920b182-ea01-48c4-8cd1-7ae5dc39e0af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a3d8713-bae6-4a36-82fc-85a0ce048597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2d4981-82fa-4247-991b-fa31a675bfec",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e954b9-2605-4320-97e5-a49b20c499bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b871c76-c887-4c94-b2db-0b1c231daf18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87a7782-f07f-47e6-a32f-dcec2f4707b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cef1571-4fbb-4ec0-a71e-634b2169319b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2851e3-cefa-433a-a80b-ae81364b27fd",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a451340a-21eb-4f3f-acc6-390b400e0532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91a74990-afae-4bb5-a77c-1a809813462f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ba81ca-6004-49ee-a9ce-c7316b59d3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8674b9ab-ac22-4edf-8f69-232aa64b8b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732b5835-366f-45e5-8e57-7f6ec6140b24",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3181c548-f240-4d5e-8755-8871b1a1a81a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e58664-5c3e-4683-941c-a7845711db0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f8273c-261b-45c5-b467-e7e0bd184f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "053c1914-6972-4e75-9e2f-abafce016b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49091e7d-aed4-4b05-83e4-f8c0c06fb35b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38cb1dbe-04e1-4a4d-973c-a375ea67b3ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f84c8a6-4aa2-45d9-9234-d9eb4817e9c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602639e3-e85e-46e6-b9a5-af7615c4d427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5f815bf7-aae4-4933-9aab-f5a7f9674305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908eaa79-87d2-4e12-b5ef-5fec6740e1b3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebba94c6-3a8b-448d-b412-0542148b61d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36ec7912-c0c9-4180-9298-6467319b3f21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee27709-94e8-4260-8564-d66457772328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6726a590-9061-4e5f-a612-5f9631afa680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181c23db-1adb-407c-b522-f719931a098a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d910d4-1146-49f3-b80c-02ce78ce7c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "939629ac-7d13-42c8-820c-1c294edf068a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20ffc73-67e4-4b9e-82e9-865ae4378cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1800e538-40b9-4102-91dd-15c40e1dbe50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f62702-f2ff-4b17-be56-f29a19430a6a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e8b4a1-e120-4c1b-abcb-093985222565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16f07121-0366-42dc-b0a1-be613bf87af5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c67142-3a80-426b-b9c8-594de7499388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b30c1e8-44de-4647-bafa-701c3ad52f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46730c8d-bfe3-4054-a63b-83e71fa805fd",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9026dbf-43ea-44c7-8532-26f63d82d77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1b50c4f-529a-4c24-8c4a-3d8e33fcadd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef34c681-ced6-4906-b8b4-a17310fe0d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45131363-5077-4cf3-bb72-26c87cd1da20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7341467-ab3a-44fd-82aa-68c5f3d03de2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e80e26-62d3-4915-819e-12a10cbc6818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fcec0ca-96bb-4fe1-a3bc-2cb08c91f052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccbd56ba-b011-40ea-b7f0-ff15e99295de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fdff77b-1655-4169-8fd1-b11e09043cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0bdf95-ec88-48c9-8a52-85b78a28d49c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb56519-bf72-42c4-ad4a-fa7843b3ebb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "067f1c32-60c5-496a-8f71-06c6b8eff0bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ffd757-567c-48bc-ba4f-4b86c43ca970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5a1a8108-a45f-49e4-a78d-e59ad6f9aa7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a1ff13-eefb-4848-9ee4-181b9182b3d8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab234a48-fbdd-43a3-a8fa-0ebce8ba148d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c05f4810-69d8-44e9-8b7b-1ebe7764325a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca664be9-5dd8-4e04-a97c-92327b15c1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0d86afb-d378-459f-bdea-c987a200ecf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee819f0-07a5-4364-8c38-a6ea2dc3f0c2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72993c9e-4d87-45ab-9ef5-0592d07e86f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58ccb3de-8f98-4b02-90e3-d7ff33a1d8d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29367398-8712-4571-ae1e-15e43bc88df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "137e7f1b-1f88-4c37-9af5-ca2efbae0962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af42005-560a-4d10-81ee-df4eb52531cb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7558853-1ac6-4c70-a08b-a422db445e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27574eb5-345e-42c8-be83-bcfd7f99427c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeffc44b-7ebb-49ca-aebe-bab2b5abc2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffdf6637-c187-4478-b4fc-b6ae7b896582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af08820-2003-4241-9717-506db09cffe1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "045d1fd1-b235-4085-bbb8-9dca87cc6635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5214952b-fe8e-4778-bbbf-d606989610bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f329844d-269d-466f-ac32-508415a0126e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "75fc464e-081f-4b4e-8221-8ddd008f184d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3154b8-73bc-4264-a204-43af5b9528f0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec36ee1-8585-4e96-9658-b58e094c5fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15bad4b8-3265-4c80-9040-db8742505f98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb42c06-dbad-4dfa-b297-7c262a4acbb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "08dbeeaa-460d-4a13-9794-db24d13fb847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fae37c5-f039-46f7-b58a-278ff48ccebf",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81449eb8-846b-4dea-bafe-5dbce0aacc0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5b3946a-5442-42af-aafb-d66bdf414983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db54838-0cd4-40ee-98e7-4a20e963e5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e91c765-ad53-47cb-8a28-45320ba746c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07bb2417-5a97-4042-ba99-7a8cf6f05747",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce5c23d-4bbd-4e0b-93b9-845732e96458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e404058-c821-4304-9613-3026fc088582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28ea9a1-4e4f-4d1b-a773-c13a545dea62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "019c99d0-0892-48e3-9a8d-04e5de70fa66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b70508-312a-437c-a3db-9af39be05573",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ed8f55-89d5-43d0-b1de-07acb068fc8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f87e18f3-c3cb-4408-be46-ed859b0dfd40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5884275-8f51-493d-9c83-e51c92cf9c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56890ac5-3811-4ee5-9361-b7352b6c85c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923a2e48-35bf-48e5-b373-1517ef72faf0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7d2ba8-4f96-4f5c-8493-2b2b6a7125de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6275e64-287a-49f0-8932-d2d7ce7f67fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397f21a7-11bf-4649-ad7e-f1541e384865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da1c53d8-5529-494c-a108-51c2ad226236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b024f9-dbbc-462a-80b4-1ef0187690db",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf948f5-2f20-4dd5-9915-ce443b93fc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7839e690-dc0e-40a6-b418-3af195470beb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb184a93-9f98-4cb6-b0d4-5fd4193984af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa21f6e8-94eb-4046-90c0-dff66422dddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e4aa83-d618-4198-ba26-3bc69decad35",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41ff91d-8a5a-40b7-b7db-36a502d4fc0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "025909d8-693a-4020-b8f3-582760c7d4a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12049257-f649-40d3-ab68-eb3d351690c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "63aa0225-36a1-4883-991c-9f3c5ac56026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f40e6d-0bd1-408b-98eb-96f20a9ed57e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08061590-1517-48a8-9fb1-7e0d6c04f834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71eb00bb-db22-45ca-a6d8-ecdb4d1c987e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27f4e45-9fba-46ff-aad7-42064be4fa37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "92d2c1ca-d710-4a9a-bb16-705f0aeaffa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e87e32-cf33-47d0-b237-1318e7e87b66",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "173be7b7-a787-4021-9851-727a0f2ba764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6f06066-d9ce-45b8-82fd-f8a371dcf58b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad48ea9f-70e6-4109-bcc1-97cf1acaaba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e17c5bd6-85c1-41da-a20d-b7dac39986e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a89a8c8-c4d1-4c9b-9c9e-4642ba4a27bc",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88f887a-fd37-4c06-acd6-2a105b812bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b88bd562-8613-49f0-b371-c3707113983f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ff79a0-88c1-4753-9d28-26da9c23f9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44e15a59-b9a6-4db5-8065-f2d6abb2e3ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740d81b8-0ac9-449f-9721-5f5b27db89fc",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6279595-3c54-4272-9d74-d393bb7c1ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9658f0e4-f924-40e8-80bf-8d44340a3d26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7536d3-8abc-4e66-aeaf-9bcce263c9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd2dff23-8ddd-40a5-b141-8a409f45a2a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8f3605-b69b-4aec-8649-13f95f3b7b80",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d69c6a-8ba6-4a2d-acb0-ba3051a656e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a3bf543-2731-4443-ba9f-ced0cd629ebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dff2416-c0af-4d4f-9907-a2d5066c706e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "21e0049f-dd29-476a-acc9-3f0bf47de438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff47ae1-781a-441f-8503-c6014177af57",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37af25ab-f28c-4958-b605-904343207a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d21bdd6-5994-4f63-949b-7612b899d1f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e30af4fb-7c39-4c36-948d-c79a6c52966b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "28e5939c-f8a9-4b36-8ae1-b7cf91504186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3fd7a0-f35f-47c9-92f5-99e3406c401e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25acae2-576b-498b-9a9f-c7e06e06e9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e783752b-4ae7-4ca6-b7c8-8bc658a95ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e1faf9-72dc-4447-be63-374d1993cd60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "40836ea8-2692-4d90-8754-394694a55d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a59b34-2bd3-4b58-88c4-e178bbbf1076",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "470f257a-9efc-4987-822f-7b8fbb90ad3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1cc2275-8d67-4f4a-844b-2b855891e34b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dffd8528-c032-44d5-88e0-eb738a43246a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c235c3-cfb0-4c40-b3b4-79584ff39982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b967a83-9150-4d6f-a303-660c214937ee",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6ac919-91fc-4208-ad59-c65d3cb612f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f71f0bb6-84fe-48e7-a8c4-81fed2a62280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5478e7-a495-47c5-8fc6-5495c949fbcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "027962e9-8c10-4014-bda1-15b5010db3cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eac413d-9729-4d47-be64-e8bf7aac8a43",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81598963-8a0f-48a8-9357-8cf5c3aa9f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eae3bd7-c320-408d-bd34-9ea20128c4ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a2d323-d263-48ae-b0c9-89338f18cbb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a9a06a6-70b9-4f71-8ca8-fb32155f0139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7251922f-404d-442d-9a79-2b89fdf79ceb",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f282b9af-ef00-4f50-9011-3172a4a61ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92cfc8b5-e38f-45f1-8493-49f43dad3bd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76fc24a4-ec25-479a-8f23-ebc373b93dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53921686-77a8-4425-a7ed-bcd8f3167011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8fda8e-78d2-4434-9814-b07872587834",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27976fa8-ca74-4b23-a78a-58956e4c40b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e68fb0-7a95-4e9d-b37b-88afbae19ced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d60faa7-b9e4-46ee-a60e-b948d5a51223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2e47a81-d71f-4c87-b896-d4cb3e83ce0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c155e752-f675-4ebb-a1b1-5a4e946929db",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa840c4-17c7-4d8d-92fc-2192c4e22b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91a1f0c5-785a-481d-95df-7f2dd185edc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2f2c25-455d-415f-a664-b2260bf65461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b93d54-6dd8-4c61-8675-bacd4f508dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da910f6-c714-4752-b8ec-89ff88c30be9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0f089c-0b3d-4863-a4b5-50c9c7fa64e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fafc0a6-f6c7-4f64-9692-7cbb73bf93e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94662dcc-b53d-4001-9a34-f4ed67092fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "36ab11b7-d63b-4520-8350-a54bfab94df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7659da35-608e-4140-82b2-150c1ce66d8a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ff72d1-cf1e-4104-b417-e9c49412ec83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "166e9112-469e-4d04-ae75-cf73592f6c8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca90d61f-221a-49ef-b4f6-f831abcbbb4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1645aa0e-c295-43df-b2e0-658355cd4611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e57a3f1-f1f1-4dad-925c-f1f1807bc059",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f630c321-2040-49b1-b351-8dd3f4bf4484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a54a6db1-702c-47a4-92b0-c0c50cdbdb18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6cf94b4-425c-430d-a81d-fb6f7923c21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "32f54198-ee0f-4dc7-a80c-d3fa540c9526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c73ec166-2000-4b1c-a652-77e57483538e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21fd3909-98a6-4449-aa55-12277123fa97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "209f6fe5-41d1-400b-81e8-835dad2e9435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f65980-0a19-451d-95fb-71efb194bb78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae6b5094-7997-48a6-bc53-36c598d66720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95276709-9c25-46ac-bb2a-1f46e1e3eb6b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52d2283-42d2-4503-99e8-da0fb443afac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be58477a-ce40-44a8-9205-5fe3c0e78a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416bf7a7-12e3-464a-a841-a39d6df52835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2d5b8252-6b1a-4dc0-950e-47b66841882f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e58688-4d46-4e54-b6da-bb1dc88cc022",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "653423fb-6e77-4c82-a439-9c1e04804f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beb6ad39-9ebb-4a5f-9a25-143e48276e09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c791adc-47bb-41d6-969f-433a65cf069f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a83f5519-faa1-47a1-9686-483279ec31c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cbbb358-4efb-46cd-bdde-be5d4b0f9a92",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "475eb9bc-8b46-451c-9256-cb65e8f2822c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "649408d7-50e4-4b1a-a516-8c5eb81af917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba23df97-4009-445a-8706-53bd5907aea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "af3e16d2-dd65-4114-983c-59ed0a2522d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e15bc9-49a9-4b5b-8344-2b30ee5ed7cd",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed00fea-79da-4c20-a65f-bdbef4138859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0b7d14a-4f15-488b-a25c-c588c974b7c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110a88e2-82e8-46df-8640-ef9d897a060e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e2d2a36-4c36-4dec-8017-46fd5ca4e5b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b1b6a7-3a1c-4121-a95b-90b7f6c1139a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "394e5cc8-787b-4cba-88f4-2358daf232b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65c74fc6-5b35-4866-92ef-2f90dca91e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ebe4e3-926e-4349-823b-c246bb5a6015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "70b2f6bc-1589-40e8-989e-0c2c25d3f218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3480b92-f36d-4811-95ee-d73644da4ef9",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c67f6ba-b3a4-411b-a416-92f0cce8f3ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "724ac4cc-ce75-45f4-ac3a-9d893bfc3ef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836b8402-ce08-40c7-9401-790fbde02cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e13ccf77-8b59-4929-9161-7e139a7b5525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a84d74-cc71-43d6-82ef-9f9fa3d36a5a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14b7431-4280-43db-aefb-03c52bb2c879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d5a2c8a-3945-4a00-b15d-645bdeea93b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36876d19-55ae-4a1b-b8e3-6bb399b167c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ecdd490-7c6b-4c94-bade-4491ac50af63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f525c9fd-acc4-4bd5-998b-f316e99e87ec",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4fd3e1-3e6b-41f7-aa20-646a7f2d5ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6ea3b0f7-4c9a-4a40-b391-bb66a977a184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acfcdb08-a180-417e-9edb-10e4182bf736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef063aee-f754-4e60-94d0-7726ba9ab8b4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "abedbca9-8100-403a-bc2e-03bb80ca0283",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f0b118c7-2602-49da-8530-066ae081c262",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41dae735-a146-429b-ac7b-888aa040d70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c80a2b3-0c29-4266-9c14-a32f6c4e33c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68021961-472e-41b1-a932-7ed87d5e7f9c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e7cfdbb-b356-45a7-ae08-3f800d6e7772"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b661505-28aa-44fd-8d8a-6e5aed76c200",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22f960f0-cb3a-44c4-9063-14d5c87ef0f8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4a8f3f7-162b-404c-a3fe-9f2a8dafba67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5bb222de-31f0-49f2-9aab-d0bd488ba1e9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ca9edf1a-37c1-410e-8676-41b4fe8bf861",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ecc62c9c-6a85-436d-a02a-02ec35c0d243"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a4988d33-814a-49a0-9794-a65a19625172",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "faa288db-99a9-4530-a819-129cf0060e9a"
                }
              }
            ]
          },
          {
            "id": "cba13a5a-f4b1-469e-b528-b07e8806653e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "83e62c28-50e2-4360-bcce-eaa1bd35b53e",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "4cb2ccf4-5db5-4157-b09d-81cb5bd1af5c",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dcbea86-585c-421b-8993-0faf81287d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "43d2eb68-3d6e-446a-8a9a-5a2f83c9f2e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b615cf-ffa0-4a1d-bea6-7f7e0318dd9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cca25fe3-fd67-43c3-a6b4-d27a3f0c9229"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cd7f823e-a6c7-4373-a716-cee204c14851",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "51a75a3b-d226-4391-ade2-d84d9a02d6b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4af97310-7b96-4642-ae77-01ca6b0571b1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec0bee62-7e43-4d8f-b93f-6097048e9ec9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c1169f9b-4114-4cf6-a33c-c266cae096c9"
                    }
                  }
                ]
              },
              {
                "id": "0a6a1048-fd95-4680-93be-3ca1fa56acd6",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3fff8f2a-9471-4a80-a4e5-5c1d5de1b4dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6311b33f-824b-4ed5-8333-21b5846d241f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef1020b4-447f-4810-8a14-e2b2c1b32ae4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d40cd8fe-01c0-481a-8333-c321eb1fe4a5"
                    }
                  }
                ]
              },
              {
                "id": "91da2e82-b283-4c95-b0c3-ca90d73089cc",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "feb824cd-926c-40a2-ae73-1f2dd6989420",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "39ee9f60-9b03-488f-a82d-1d358a9c5d19"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6d1774d-76bb-498b-bb63-96a040039b94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3fb205b0-151f-4860-9a2d-aa397f13c3dd"
                    }
                  }
                ]
              },
              {
                "id": "d63662f3-66ac-4d01-a1ab-fc70fbb1e86d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c14ce2ff-52fb-40b2-b65b-c4daec8dace8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b84b8a8c-1b5a-48cb-b8d9-3fafbf008fc3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4ecbecd-b1d2-4d64-980a-abc1577fdb1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d1013e99-03dd-4214-9045-0cc81ad583e1"
                    }
                  }
                ]
              },
              {
                "id": "4d4eae82-c4dc-4420-b32f-1a8f4c23fe97",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20a45ac0-5e4e-4780-8cfe-3a80f9e72384",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2cbfdf19-5e26-47eb-87a2-955c654e3282"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8878c2fc-777e-40ee-aa3a-f8303a2258ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "684404a0-780e-4c08-98c1-f075ca957ea1"
                    }
                  }
                ]
              },
              {
                "id": "9a7b6fc6-fff7-4bb0-bb4e-af521e051977",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "612c4542-9519-4af1-a74f-eb3e572064ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "be428f08-b8bf-445e-aec3-376e636cfe4f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a514a617-b0b1-4b09-a521-df404d6334b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "697a5d68-0ae8-43aa-84ed-e10756aff017"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2d4dbf6e-fa24-4542-b95f-aed002897498",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "13db892f-4440-4c09-83e4-a0a3d8df166e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1532c4e4-af25-4bf9-b259-c7dac33523f6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "782cd20c-72d2-4883-b2eb-d15c9d1cb22b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83bebde0-bf95-403c-a889-97beedcd139a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "80c1a11b-1ec9-4b2f-abd1-d8988b23e31e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d1a21b7-d4bb-48bc-8837-e5a584b81463",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c0f81587-74c3-430b-84db-90c145b2d488"
            }
          }
        ]
      },
      {
        "id": "e257e558-3d0e-4198-b6a9-521e0625993f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "34ef9b13-f496-473f-a46f-e08f7c0bdb07",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d257ce1-d01e-4aef-99d4-810643ffdd24",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "03271e33-e6d7-474f-acc3-71a2789aba0f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16848fc6-2ff4-45d1-aa30-f9e9ba16771d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0ecf91a-af77-4e19-892d-61a27a59dd73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682ebafa-44f0-4a71-abf3-7effd1718e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "87a2a4d0-7df6-47bc-9320-6084349ba700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794b516a-befd-4e35-8cc7-92b1cf20500f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76bd4aa0-06c8-484f-a93d-77fb10e1aa13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4500ebc4-c927-49a3-ba6a-9503de4ac574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c09b6c-dd28-4f92-920f-7b1ee1e3000f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bf54732-54ab-4e33-bae6-43e5ef37cfa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845f19cd-8359-4d9c-b58a-fb5c9be188cb",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a404c4-2ae5-4508-b531-b6fc3697d02d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95acdad3-8671-4a61-83a4-14cae9c14912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7003adee-4c70-4a05-853f-ff8248903738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dc14245-fad3-4212-b8c4-1f9dba7e736f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a693ed16-1a9a-4c37-9c22-5edc2f65d257",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f27a951e-7340-41b0-96a8-7dc501972da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "074a892e-bc6a-4722-85d3-6f569f9d6f51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32918440-5869-481e-9f86-f2f174fd3b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2883ed33-4d1e-4182-b6ca-e3b1546729a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f22966-2ded-490b-9730-451e435ccb3d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c46dbd-6620-4d5e-8fd9-9b19c363253b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f8a1c72-bf5c-4b08-a6b6-2428ab9c83c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464bb833-f7ce-4de2-a546-1749d5a0447e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "433c2e18-732b-4ada-8b86-e10612e288b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfdbee5-8a44-4711-b86c-5cbab609d89b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "652cf308-73f9-4e6c-b093-7c97bd08f39c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cac88c0a-a5f6-44a9-9d25-305db0a02187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccbb4706-a04f-4bf9-81ef-663878e049cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c90e85bb-a66e-4fcd-864f-f2a4799ece42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03896f10-7028-4e41-a077-93c05276e8a8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a61cd3-ec08-483f-a350-de154db5a531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "463db39c-95ad-414f-8749-e37f42009ba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9b6869-a6e2-48f5-a6a1-67800d0d8e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9960e6b6-6884-4d2e-b04f-287eb5f2d499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4faaf248-59be-487c-819b-43894d14b660",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca9082f-158c-4dd1-ad5d-c5ea876bb256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b04a68d-77a7-4997-b95c-e60df294c9ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9ff06b-f084-4775-8793-053357b93883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "094b020f-ea6e-4806-b396-469e459fa6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9158968b-c9bf-464f-be87-931c0d4639c5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38eda46-d15d-4c74-b162-3b114a228592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e076048d-bbd8-4c8c-b762-962e7c14b195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d11a099-acd1-4c11-a1fb-4b2d7ebc052f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a690f06-400f-4fdd-b5aa-37f7f67640ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d0d537b-7775-4d9b-80a4-52c26aef6c37",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bcf3ae7-137b-4449-bf0b-954bab50c097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f36a29d-8071-4e3d-b81a-625ec4179851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc18c009-ea64-4a41-8182-290e6dc5c95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c0778d6-067c-47ff-a1ea-0c646188eb20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e46058-79f3-48a0-b9fd-97eb46f34ad6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c67541a-a632-4ced-8669-e3c8605b248e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce58ec7-dd1f-4216-aa8a-911e590ea0ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a28c8c-a999-46c7-9341-7726347d1ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3e48d40f-d29d-4a4e-995c-728b691b0bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6be6de-36a7-476d-b84e-7dd7cd675290",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1beb0ff6-c5b3-426d-89fc-136addc8683b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca6bbd88-833f-4199-9a64-1d3e03c9ac6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934c035b-9f6c-4ffd-9039-37a200a55b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "40ad938e-8627-444e-a706-1faf467dfd0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe36cca-a8a6-407a-87a5-c81f5b68fe34",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d504857-bd86-4d4e-b073-9e1e20e04759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36b0fb91-10d4-48b7-a511-471a3fe5bd24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a9bb23-da99-4002-8f71-18d17137c3ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb28cb89-da1d-48d5-96d0-902ae0d67de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f0d33f-8379-4b98-bb97-12ce8f356dd3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0348bb7e-800b-4a55-9afc-5f3b1bf80710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab786e71-dfa9-4ed1-9f15-0bb37fa858d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22ae84b-dcbc-43cf-9487-65dd4e980941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7f4c357-0023-4aa2-b36b-cf0f167a7fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e678f5-a41a-431b-91df-e84cec5254ce",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1063ce-cf5d-42ea-a73d-81de369fbcc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc3a971-72c8-4699-8b08-7a1347c17dd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231f3735-6e53-421b-9e8c-b7e47365ef3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d36923e-1f6d-4969-a162-8e1e0a815b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ee71cc-44a4-4669-9958-012e7a5f9c5e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81976897-2567-4686-85b0-8434f4eadfec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f645aa3-c600-467e-98ec-5d7f9197b833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8fa56ee-d756-4cc9-90c2-282159058426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ae383e1-be93-4c30-897f-aa28552a9315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9517f20c-f43a-407e-a850-f9dff38c4f0e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76765d13-167b-45bf-9f56-fdc70fb37a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c34e3587-dd4a-4fba-8714-bac9ed7c91b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c915bf-4eb9-477a-bcb9-ac063eced661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0b53a16-bbe5-40a7-845b-3e46807d2716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46494e0-9fbd-47e2-bb18-6d686d1c99a2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81af1baf-f7d1-4f1a-b29e-d4f8118f103a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2cb590a-15e1-41d5-974a-ade5588e0167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1087179-a1a3-49d5-80bc-a34e055c04a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "11c749f1-1afe-44db-a75e-5fb70fcc5a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec55bb52-2651-4299-8c5a-759fc1a1e72d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb9feb9-4b1f-4762-90bd-ba34d04cc6fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f769b49a-7d64-440d-ae36-44b2356780aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c60d41-4671-417e-b804-b7b0540cecc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60fdcf95-f74a-4ab9-b46b-4bdc994bf8c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4d661c-e272-41f9-b003-1209de009987",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2a35bb-dbb6-4062-9f10-4d7e60929e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "accabd0d-c92c-47e9-a2d3-721f155f0a30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3571d541-a013-400a-86fa-48a54febaf6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0d5d777-18b2-4ce8-8868-5ebda9bdb970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8afd636-a600-4978-b725-bb2bef0287f1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b5a93b-1d02-4909-a264-86af5fa006a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d3abde7-6661-46e0-9fe0-327a2c725b77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ccbdfb7-f70d-4164-b435-49a23cce3d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a7746cb-85ea-499f-9b58-e6330cb7c688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2dfb91-20d6-47c3-a0cc-206b0bb4f820",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9059defd-ace8-4cab-b3d7-56ee40414b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73696220-6f62-4d91-94e3-0bc765b8664a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df322f5-4ec2-4645-b60b-95e195ea4bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "813204d4-c734-476b-b24a-73d273a51d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8763527-6f7e-448d-9512-04a6e2877600",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73295b22-f0ba-4f4c-b44b-90f52fe614d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19706dd-2edd-43d3-ba75-0f8a888daaf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5becb226-6ae1-4716-9e96-840fc76fea12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce79d5fb-3840-478f-a335-fff49d648a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82fd2c8-451f-4de1-bec3-529a79599fd4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae71463c-3fe7-43b3-a243-7395b3e4251a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07250ecb-375c-44c9-b667-96e8ed8a57ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732a098b-b024-4446-a7c9-4739abe66d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1661db1c-cfbd-417d-9353-18b34d60d406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde49d5d-088b-48e0-ae5d-3d90c7807548",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f858927c-2093-4716-939a-45ff6b781683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e180ba70-c1f3-4c53-b940-3b22330754da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad7fa81d-ce32-479b-9ae8-1868213bbf01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cab35144-da5b-4eed-903a-7bbca249b403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab48eae-806b-423a-a101-90a6f002d686",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4bfb52c-426b-4afa-8544-acb389b2cae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d7546e1-c925-4436-9d6a-56a96e8db120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d0f381a-68c8-4466-abac-5db2088ea401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f9da088-042c-48ec-bea6-9a5d4c925003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd73fff-839f-43e3-b266-b5b517b9d687",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "348705c1-67ef-4d45-b4af-9c7f274ff205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4dcfa3e-74ba-4e4a-9956-f772d8fc6e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e638c1-887d-4674-8c38-f89cfd63df35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "236a9395-86f1-4c69-a8d2-72b7787996a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79223e4-b8d3-4844-8caa-7e1405d65667",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e269dddf-90c8-401a-809b-c47889f15239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d59b29b-108a-4267-8e32-6ac552d78769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d75f1ba-b61a-4001-8726-a50fbaedcbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ccf95e9-a786-4c38-839b-f181745aaf19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19760eff-d585-4cf8-94c5-fbe7e480de13",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "719fa590-3e8b-4d1d-854c-0f8d13801ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ce27312-94f0-49ac-9671-e7f17c1eabcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8624d64-2652-49ca-bc64-4b15e9dce9c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9af6a9ac-a651-403d-815c-09946eb2e8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9256214d-37de-4e2f-a1e1-99c17be97aa4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8602f3ed-3bc0-4fc8-b240-ed2a6d18a949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3407571-32b8-4300-b61b-9f1620b93e98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553dac6e-0122-4252-babd-0d172f3d8d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9999143-e675-493a-a6b5-4d90b4f36063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c56f8d8-baae-41e0-a2fc-796d1a26ca5b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3840d670-934c-4cbb-933e-30876e3e4446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dd0935c-6c4c-4e44-a7c3-5fde84607a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a3d55a-df0f-4632-a7c2-fc25ce2c15f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95963d5f-5b92-4573-a56c-6f39ce6f7b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e9fbc5-af68-4aa6-aa29-a6a2bf58109b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0631f33-782a-4b7b-9480-70457e2afc0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c845722-ee2d-45ef-9a49-8716683af254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0f0db5-0746-4863-b339-73bd1c735d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9170ee5-2c0d-47c4-8fb6-bfb4b87073c2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5fdb6476-8d20-4e59-99fb-4639ba0055d9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8d50e64c-cf9d-40a0-8364-a367a2129da1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a4e9ca-762f-4096-9a4b-d7f1367b9a99",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fe10bf27-bc6d-4a1b-bca0-8d9a866016cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e9974a1-8ce6-48db-9236-5a7575503bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6795ddba-2cf9-4df2-901b-6bf36c2c565d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33e80cd7-16de-4224-9974-093e73de67f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ec229d3-b5c1-4fe1-aaae-83888d8d61c6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "49057712-7609-4912-a732-3b1211c46ca0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f85fed8-767e-4d96-9e63-666ec6f56993"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d41e52c-2caa-4693-94cc-989ed17e7710",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e49c949b-8cd1-497e-a91c-2721edd6cfa1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a4d4533-188a-40fd-b7b0-add46c5d0d4f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6a08fd8b-3832-4eb1-8f0d-a01b8aab8e21"
            }
          }
        ]
      },
      {
        "id": "4e08c3ac-64d6-4dd5-b12f-5c8896a65a18",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "af11a6d2-5e75-4e3e-9e02-b16f24c89ea0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "19c08c8d-3857-4586-b0ac-f9b77416dfb4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "67a39994-86a6-496c-8dd2-362dcccdf4ce",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5000aaaa-e068-4150-a3f5-a7663e161ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c703c12f-31d9-4db4-8891-607c27100834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b36d9b-7e40-447e-8346-045cf8287c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "146a8ef6-f11e-4cd7-a4d1-9fc33aedca9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77bd14d0-3bf9-4945-8086-e38145a2f02e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b439119-fd35-41ed-97b3-66d70e24849b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11337b8-4afe-43ce-a2ca-1273f65cd5c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf0d2ab-c348-49d3-8731-c1f381ee0b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c81642f-1bdf-4eb2-816a-4c3245c49e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6987abf9-2b7a-4b49-9524-43df9d8ca286",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ced40c-ed05-4cd2-8759-4b85b757f4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "192f50fc-221b-4344-ae1c-2eb9b2fc71d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b29fca6-37f9-4b23-9f2f-e879076331fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12722869-f932-4a63-abf9-ef53992e705f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b9ba7b-46c9-43d9-a501-c506c769128e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "363bd7d5-1e01-4c85-9dae-cbd88a749342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ae15c2-7a65-4b98-9be6-bc638959b0d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7313ed-b0dd-46c7-9f34-c23947da6b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2cbb292-3d9b-459a-8d63-c98b286c4ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1db9f3-0a99-4344-9dd6-db5bd7b177c7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ed9586-9e0a-468c-859a-298697e1c930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2ef8db0-84a5-4a77-806a-8616401e3327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f451526e-6c47-49c4-b566-85c983baf34d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c9436b2-f3f1-4e32-86e1-5df123420fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e86af4-3550-4e5a-b67e-dd0553bd8806",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe8ff02-24e0-4e81-99f8-ed6780ebf0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ee187b-1002-4d1a-aa57-5ccd8d7c670a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8707b7-df9c-4954-9c3f-074ecdc0493f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "652d6d9f-610c-446b-b683-95f8a6cbb9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "580fdaf3-0c0a-41b8-a2f7-04be651e80eb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2956b15a-d579-470e-a32c-52d0a18d2bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dac6ce5-a7a2-4799-a5a0-a41ffeaeaeff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b36495-441f-4cca-9011-1ef189554d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "323a8fb7-a6b4-46d9-9b95-84a3f4166094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b582376b-9eaa-43b7-a7c2-2cadca77927c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb58272-4a6b-4598-b8cb-9d4b0ec4bf3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "431f38e9-62b0-4bc5-900d-dc1797c1455f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40acc26b-6036-4cfb-ba83-aedbcaccba78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "67a5b5a9-553f-4d8f-8031-7b5a890fccfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797ca5df-5a22-4b03-875c-0c65542e96eb",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e1d40d-5add-48c5-9038-c902042c1c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae008ed1-9893-4fcf-9aa4-dc071a6bf311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d19af1a-5064-4fbc-9f43-ad2916024877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c952b59-90d9-4d80-8f62-078461e2ca6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64dbc2d7-99c1-4da6-b0de-d4a9471ed305",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c026d7f-e8e2-417b-a0c3-38c4b34ed6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "097c28d4-8aa0-478e-be0d-d09db57fc6f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43672d3-6ffa-4185-891e-d1afb5650214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93eeead8-78b2-4639-8e0b-b981b137f1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3352239-3fe4-48cb-9cf5-9a621adf2e96",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e291fc-5cfd-4f5d-8ca4-636ce4b11b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12408f5c-52fe-41af-b6eb-5e03304e7e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758fb90a-4f5e-4c3f-8e68-4526d53d318f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d4737c8c-ea68-4528-8f21-7917a153ab60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1e93b5-f503-4c2d-98cf-cd48e5af38f3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f1a048-a476-497a-9511-219f56f05e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef84dd1-f69b-43d2-acc9-11c6b44c606a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f0cfe0-64fd-4b30-880a-2c97790e38f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a3c74428-c1a9-4e74-8a72-c5b3809ce990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b6858e-568c-4970-9df4-9e1581fd8eb4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84248c2d-d214-4d98-8b18-e2a25693a401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc31ed78-5b2f-4edd-bbe1-d04974bd01a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dfbb33b-3851-45a6-9071-68620b4d0a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "662d616c-26c0-415b-bd54-0d77f1eed01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09024d4-b093-4c50-a935-09a12dfb4496",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6ba4a9-f013-4b21-8e54-24f74cdb0b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b476b0c9-cc75-4961-8557-82fbc41be926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09d75c8-f9a2-4e89-ad06-56bf711ce6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "861c0879-3a8f-4af4-a1d5-0064da615497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac7d2347-c6dc-4f1b-9fdb-306806c45cc0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d6eee6-387b-4b6f-9269-5cff878559f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9742bc1a-d02a-42e4-90a2-cd5ed223b958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b029383-1c84-4d26-8565-4b5d1584bb59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1a7abb0-eb7e-469e-b3e2-91820923cc37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f83860b-414a-4f69-a6da-74f5006feda4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edefcfe8-5fc7-4050-b269-e162046c651d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c23358b0-4446-44da-a4a6-8ae9acadb99b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b404437-cc4c-4a08-ae26-6d1c7b428922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "320554e6-0a0c-47cd-8169-d772936320b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e27db17-f54d-4d80-9a65-82fced8e1fb7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "685f1cb0-4bb8-493b-be3f-9114b5b7c338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d582d11d-07ba-496d-8f3d-10ff9de536ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cadbbc8-bf0b-45e1-aeb4-05976f557dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ccd944d-0569-4774-9a00-69fb9d1f6d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e0427e-15cd-4aea-bb6a-bb3a0edabfdb",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96496ed-fadc-4962-b336-28cd5e0fe9b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccbf369d-5df6-4bd9-b54a-40305ad70f56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a335c1d-59ec-450b-9c0c-f3ea6116945c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "755aa652-3f7c-45e2-8342-9279b4a531b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0615e9-9e01-4f35-9643-b349a5861542",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12def704-56bf-4849-ab88-a243ece5cddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1dda26b-f338-4061-a90e-c4199dd336e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938231ba-cc15-40ec-98af-81a76a1d64dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "237062f2-b587-467f-a4bb-73e344a1b7a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d1078c-47e3-4b21-951e-b6b9bdde9373",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec10d347-2467-4cf2-b36b-715da40bfdec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4b66241-cc6d-42f9-b9ba-171f00034edb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2e3924-e234-4788-8e87-b17fc4b728ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eaad8202-45f3-4e56-a931-5d3f564bbbf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb35970d-753c-4288-b839-b4a567409d84",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "404b9c75-80f2-4e4f-bd69-bb618323dbd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fac4b5d0-396c-480f-bc70-fafebd0a9497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8cc0b4-fa11-4d02-b723-8005683f57bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46322cad-7934-4ebe-b4c4-8a7422cb95a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2aa7ad-549d-484b-be69-85d032e0531e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "091036ba-54ff-4a92-b2d8-6cd0acea3849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "492f7576-025d-4240-807b-aa6cbaf9f62b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19560454-b8dc-4965-aa21-9c193c63e04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83883669-a292-453b-8944-c3a1aacee2fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b7ab30-a6cb-43c9-813c-81f7f6115229",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4bbdf7-85dc-4ca4-a1d7-5f881dd4df52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e14210f-c1b7-4dcf-810f-4133a4ad4c0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466c19ed-b8e9-414f-a747-b3471be55f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd28cbce-d013-4220-9a38-a1e6fb32aafe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc7ba12-5e74-4f91-95c4-1863e68dea9b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b31db29-15ee-4b2e-b378-413dbf19e8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "529d4e27-04ad-4e0f-8016-003e9fe560c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d83ccb-e357-41f0-9999-9c45e0b97c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bbe5901-b198-4edd-a72e-f76e2ba53abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a05208-9253-4be0-9e6e-703bead1c76b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cadd22ff-a329-4922-a066-dfd0820ac344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a50d6c7f-d4a4-4984-a85d-c8579d409a28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d12bdd-2a23-4e4f-9ad4-9e7ec4449fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f89f93da-07c8-4bde-bfa6-ad39813ff760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cfea072-5963-4838-bfec-4f16b2227a57",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a812649-1555-472b-8b2b-93eb9c771d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ebcf56b-c5a3-4707-acc9-267763a196d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "739d85c3-e223-4ff3-a6c5-3b90a27fab18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44da57ba-9c6b-457d-91b8-527d482d5517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b20ab7-d04b-4093-be47-9711d81ae8da",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef693788-58ea-42bb-bf1e-a707e09aaeb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ad9c1a-a31c-489a-bc1a-d358a9ed291f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89983009-7599-47cb-b8da-8442b46b21ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eaa5b450-4255-4d12-8dad-bd6f97892609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed5a7d5-6097-42c4-8017-a34830b3895b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "469f4d04-4ae7-4e6a-9c84-f6cd18d8b954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c07e93-24f2-4f15-a951-ab68ec5976a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3e84b9-5f65-4b45-9ef6-4b42376778ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd61f025-e644-4a9f-9622-dbdcd6aa3b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78caa78-36c1-4f7b-834d-503bfee8cb43",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b43fd1-94b2-4fd6-ac7f-4286355e9f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71e2a3cb-d2f9-4a05-bf5a-48cfe12c9333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87abfbc-499e-4943-8211-c75e01c044bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b051e5e6-6139-4ebe-ad26-5f558be74b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3201f573-d8a0-4967-bdfc-a664b423c9f0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "483b1006-8ab7-4f6b-bb1e-577fab583be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c53cc8a-38b3-497c-8ffc-5e078cfd4bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75bf81b8-82b6-419a-a312-b43b78c6d548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b098fb-699f-4be5-a409-5b260a56f884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "115ddeef-9ab8-4299-ade6-7029ca89c8e9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7c15f0-e9e3-460c-a8ac-9ee70bacc766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "551a296f-f0ba-476b-a8b3-ac2adba1bfbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7e972a-d794-4007-a9d5-d3611abd6940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efe111c3-6439-4dc1-b462-7b5ca3ed6b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18fac71-2e02-4da1-b9c3-59e9fcfdef27",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd1f48d-f50b-4ac4-a23c-bb34b03d4c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e76b2089-be13-43c2-a608-9739b6356e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8223f3fc-e3c4-43f9-af75-e3d27da4f2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f29b2f1e-1620-452e-bba9-e3bdcfbf6aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf132927-ab11-422a-8ff7-44d8cec9f4e1",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91704b7-9bff-4801-a47e-638e5ec7adcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "520e6c87-5b27-43b0-ab7a-fe70352e6599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8310fba-ff8a-43c2-be4c-c3b9b6e32a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ce809f3-0944-4319-9049-81776557fc4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746e4669-3c6e-4156-9363-f5696ab5e49a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b174892-fe9e-4156-bae0-0bacbb01e57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "253077e6-1839-4286-86b3-24daae3cc513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2004637-6219-40f8-9edd-6bdb36827b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b37e848c-e9a0-41ef-b1a9-4831b652ece7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880471be-78c3-4f22-b191-0dea43d7925c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee79c0a5-177a-4c3c-95c3-ee4a9a94641c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ea2dca0-53c4-46c2-88b0-27eaf35027a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c057dc6-fd62-47bc-ba67-cc72168871b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddbd06f2-a30d-462d-812d-7ec7d9eba693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1323003d-3454-4622-b540-aa917055cd1a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3063c607-b786-40da-bb12-f2c227e1b43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b84adcc-9175-4130-8651-42d863b2380c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1fc13d-8591-4627-87d2-454be9a10b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c23afee7-86da-4ab3-8eaa-111160dc99cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e25de72-6151-4950-8e27-29d19c66cb6b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d182be42-1be5-4677-9512-d5546f58daf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7567b951-413a-4f0b-80ba-362c5ae32c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05809c38-3ad6-436a-bc88-f92fcb840615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d28d639d-86b4-4f67-a269-24105dcad78a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a244a7fd-3fb3-431c-83e5-5bd78aa6b6ff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "44fe6bc3-791a-4b63-a8e7-11d87a10f2bb",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfaa5e10-2ed1-4715-8ce1-e45d6e26c3f3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3f49da47-98d8-4177-bbcc-15448e9aa28b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82ed930-a852-48a1-9981-d133eefe495a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb2a85ff-da06-40db-bcb3-7b58688e7617"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6fa33e3d-56af-4f11-9cff-9da1f6b35e6b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a3de923-00eb-4b05-adc2-b225dd82c045"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "989027ad-7859-44d7-98af-ed31bb8eeff6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e75e73d3-e431-4612-8c13-f491929c9ff3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "836ec49f-973e-4d03-96f7-b2461a09970c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e57419b9-14bf-4385-b97f-c4747375dc8c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bbdf32a4-ad53-4f1a-aaa3-2dbfe8085d6b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cfbd7651-98fa-4bc8-b145-d3cb8d01d6dd"
            }
          }
        ]
      },
      {
        "id": "30cd238c-6980-4fe7-929a-fa242d3dabe8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c9ea67a7-d374-45c5-a8e6-31ac93a646dc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6c40cba1-d4f6-474e-afbf-4e2dc23a0af3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7ff31276-090e-4d52-9e73-d52f5b24d043",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd3f173-fc51-4c36-81e4-55c5b1ede6e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e50b1b5-027a-4666-b1a0-f44b7a150c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed41a50f-a6e8-438e-b790-e12c799e670a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "976eca2f-9a4d-435d-bbf8-b3d6eef804eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b07a68a-4fb7-4551-8ea2-ed86f2bc913f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e380893f-d645-4ec2-af23-859e248a282d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67af5c14-3ad1-4075-8787-8b1f267da9c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1830f41-717d-47be-a427-c5e5101e571a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a30e66-2132-4228-ae6d-64da0280d476",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e511d39a-9b96-4295-8e83-68054e3e8383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3af3acf-869a-4447-99d3-8f0025c9f71f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5da592-6a3c-42de-80e1-0696298a5d92",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71032b30-6c33-459b-9c9c-5624d8017093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd414c66-3e71-45a5-88f6-a66723062ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de867551-9639-4bd7-b371-56108eadf47c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e501224d-299e-469d-8fea-09207af9500e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5da8efc1-ff70-464c-835a-5f9274c60d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468c0c7b-66c1-4cbd-a590-f58a857519cc",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "705c2276-41f9-4b58-9b8e-dbc107acf0fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fa822cb-8b18-48ce-9466-e7c605f1b8bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2787c54f-7b5a-4ca2-977b-14705f390c7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78501443-cc3a-4b63-aa8b-b2a0e672cd6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123df031-8c66-4ae1-845e-90b5e3af4753",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e94382-e55d-47a7-af1e-aedb9c76485d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0554ab1f-7c5e-45ef-b858-bc4c8744394b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7feb002a-05c6-4975-921c-7848a722c862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99cdab7e-24ac-4e8c-9eb9-77da9381c428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6ea753-419f-4ef7-921a-3d7dda64f3de",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c1e66d-37dc-41ab-8dac-ef8c64c71e7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b8ceb12-292b-49f9-bf0b-d3874f07e40b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d5128a-d00e-46ea-ae4e-5313db381bc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e080d56-67a7-494f-b118-761ab5696455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1129d1-bf5b-437e-8a95-14d1847466b8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3983592-1511-4310-9d56-3370d8f814dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c2042a0-5cd1-4d8a-a237-51e8b95e530d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0237ba4e-fc29-42ea-84fb-ebf8a731786a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f67e1e3d-fc3f-444b-8aae-07b5425a01bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f255d8-67f1-42fd-9d96-b342e193111e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4aec0c-c205-4d06-b847-a749979b124b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47a125fd-42c1-4dd7-b336-6309ba7a8052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29649fa7-0fa4-40a7-8df9-12835fec6f39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "016706bc-79a8-4e97-9430-f64ba43ac67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e26b5c7-b686-43b8-bdb5-eb284a298566",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0bc74cc-dc67-4e67-84ab-0280b292293c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "449bcfb8-c590-4d27-8037-e3633bb1e674"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9490e00c-e043-4ac9-9ad3-5d831af207c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "187d3164-b7a6-4390-a9b2-dd5d559d4480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa8d97a-721e-4880-b442-a203fcedb989",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46bae021-1ac7-47c4-b84d-12659f2319f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3583bccb-7c58-46eb-a185-6adb97ca7e2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1044c97-4656-46c4-9e0f-a7d20953b07e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45d1dc00-5573-486a-8bd6-a1dc449ac8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924eb8a8-f216-4c3f-92e9-e6e997b3010e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c225570-ecec-4f41-8f3e-71180c254869",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8777bd71-b755-4e46-b4c7-393a9aabcad8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9428b3-e17c-4b47-acaf-bdfe7072d9df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74ea7a4c-4d4a-41b0-a9cc-1ed0688f0885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60bc4574-d37f-47cf-b779-64dcbf429e7c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53cd3954-67b1-47e7-96dc-a9663b44d7ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daef3ed1-fa38-4444-8a1a-697ce2b66e6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ac0d38-9bbb-462e-b77e-63d9cd00f0d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75fbe925-1c61-44f5-8e29-740d0e2d90f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19abc21c-f604-42aa-8831-125e1c8199f4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa453ce-67c0-49ed-8b06-3381286f867e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "beafcb00-b096-4eb9-b60a-13d64799219e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69f27a6-240d-4e5f-a85c-d5f459dc6768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7fbb117-e17a-4602-bd3e-083a02a2418e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4312360-cc1b-4bb5-b509-59efad4ccc84",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6767570-d18a-4057-9022-e50240dccb73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5364989-13b2-4b9e-81c5-b806daea672e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "170764c4-c965-4931-aec0-c7d957c5dd59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c08d2ff1-52d9-4fed-82fc-c43a63ee1c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217cacbd-6799-485c-82e1-78652cb052cd",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c47480d-64d5-4e1f-8de6-791b350ae80f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35217651-c5f5-4c93-b109-b5f8bece7fba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6eac05a-68b9-4ff7-962a-11f80b97dd9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86cf3f95-2bb0-45f0-9374-af62887cd6d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bbb529f-6af2-4ac0-8f4e-c6b2083f6701",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0037af97-c896-4efb-8e73-d10ff4bbe931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c3d1881-3e26-4e56-95ed-8847cae52342"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b76c39-bfd8-4520-8bbb-0d54033809e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7b36d53-b748-4b0c-a500-324111dfaf1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ea351b-ce32-4e27-96fb-b461204153c7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ce1134-1ce3-4192-a2a4-9e003ac46ad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff534a0a-2b3c-4ca1-895e-e19b7e6f19af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a602e0f-1e90-4ae2-a006-625db42b8017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be9cfc74-74fb-402e-b443-34063d2008dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81467e15-6180-4a93-8c60-4a6699064c07",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76433bf6-5cf1-46c7-b7e3-71e008d3a136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ecfbae5-0330-4662-aa96-7d8601ec12d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f439537-bfb3-4c0d-914e-f3c959e4db56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c7d22b4-9b94-4cc8-ae43-9e2f1aa7eb9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c078b32d-4de5-412f-9d1f-137a12f3b32c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5156a438-1bb7-42d3-bc91-48b4caba8ee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be2ba5dc-0183-47d2-9f99-58890f2ba2a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c8120fb-d436-4da4-96f9-656d4c4fc43a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e03e9bfc-e8da-4646-8435-a644805f8a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0029d261-17c0-4a53-8f61-0b125b96ba9f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c53e4dc-e47c-4486-a6b5-aa6892c6ba7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa1fa78a-59be-44ff-9ee1-66745297bcd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5702863f-2b0c-4e7f-a1c7-7ebb2f2c31ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6677fa53-3d63-495b-838f-13faac3ae889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2fc3e61-5f0b-4c92-a873-ba79591afb39",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b771da9d-d130-46c3-93bd-62c0e6d1556a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41a4c2f4-ad61-4ddd-ac92-250730b32a1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "573fc719-b275-443e-a523-6588c7b4c555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c04ec76-9457-475e-80bb-112a071e12eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b5f0f6-bd9d-4ff0-a337-071d4ec9aab1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37fc95aa-9836-4953-98c3-2da1540811b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3324460-ec8f-4997-bfae-690d2bffb935"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda6f4f1-33c8-446a-997e-3b9284f801b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cfbd336-e11c-4ee7-a93a-23bcb355c59a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79efad5-34c1-457e-abac-162d21ed2580",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c1d676c-ff79-4f17-9787-fe99997d40d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d906be01-d597-4657-8f96-d865c8178f5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84e6541-670a-4242-a68d-b7365d4957a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8de78f25-bede-45d3-ba26-a58e02cfe2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2154f029-7b6f-40ec-a6f2-a865eaac1afa",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ca9d10-affb-4e0c-907c-e13c46710938",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaa58ff9-42f5-4a2b-8823-ecc6e6fb0906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4930615-4a15-4b36-a6a6-351923baf8c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64c5aab4-47fc-4590-93ca-b166339a1b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc31e55-0018-45ce-bc65-2a4ae18bfbd1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b54e8c4-a56e-4ce8-8fc5-4f271c70b935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa4a18ca-ad60-4bba-acf6-a4e92ce5a9d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c77a6b-108c-44c5-99c4-109ade2d0707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10e69c2c-09eb-44b8-8cbf-aa8d55dea058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885c3bd2-77a4-4ea4-b17a-66f491027314",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ed3729-a777-4467-ba02-ae8ecd2d61a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f3416bc-8c6a-4d25-947c-dcb66069f0d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a092bc6-2da8-46f0-9df7-2834cdb3d13f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e53880-f844-491b-8ca5-7eee6c0f323d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72cc3b2c-d8e0-41bb-9273-50008baa5e74",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53051162-ffb0-4d31-a2d4-a7d8663b7d54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69af310c-a994-42dc-9c38-f4a7eaff8c0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f7c2b4-22a7-4e93-baf3-4d5acc25ae56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb1c7f7-5e86-4a16-b771-5806bd229566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d885d605-99c7-43a8-8ebf-736b8a84a1ee",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17376c57-634c-455f-a148-a965e42cf65d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "793aadb6-460e-4789-ab8a-73730d5f67c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20597d1e-e682-4f9c-ac2f-2d8e2de4785d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be8fb1e-d0be-4391-a531-00f1cf8bdda5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56bb7b28-2a91-41f1-8b37-1de2e0f45b8a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efdd9774-bbff-4edd-a691-1d44bb1a8884",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5ce643e-67f9-4f25-955d-de57519b0586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c8e09f-3a30-42c6-ae2c-3f98d0532ac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad0b6d8a-6c5f-456f-9204-e288bc30f2cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4abd9b-526e-4677-8353-ea72e5a81d96",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1f2a5e-d466-48be-b583-5683a9a181e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08bd946d-fffa-40d4-a2c7-730eb7e53bc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7411737-6955-4284-820c-0dfb774f216c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0743d8a-e8fe-45dc-93b5-6b71dac079b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6eaa3e-2743-4453-b67f-b003f97753c5",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af7afda-5d95-420c-a65a-586a8ade107b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acae811b-c967-491a-8dfa-740fbf931c40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0623b69d-470f-4495-b036-63dbed0eef2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77cf5802-a662-465e-8aad-69a1ddc78210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fce91ec-fe38-4681-937e-f39f0e3a58a2",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ddc2ab-21cb-4773-9e0a-05d140c74aa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7459f816-05e3-4a62-807e-158215732b4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e9eea7-80ec-48d6-adb6-5278ad0862d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb774402-b727-4793-bceb-de328f4c7ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a63d21-743d-4b84-88ff-673bad9dd5d8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d8f0ed-1fc5-4708-803d-688323ce89e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f4916b1-df41-4c82-91f0-4370a39ab0f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecec3027-7fc0-454e-b3de-1939c3069066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdabf891-e668-436a-94e4-5c7ef4cdfda3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e525b9d8-911b-4089-a0b1-f95eaed93a14",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eecfa6e8-9849-4a3d-b398-22d7fcf3fae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e67abe4b-1800-43b8-bd2a-cdcb4154f7ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a866aa-4e5b-4fe0-89f3-d79058faa1d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "614dc10d-83b4-489d-a9bf-0517e066c7e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6453cfb5-0b9f-48ba-a684-9e2285e7c306",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3095ecce-e738-4780-8add-f5700d5bd1f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcfb02b6-e138-404b-acad-423a42dc77a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d2ff06-deb7-46ac-8032-0592b0099561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abc54dfd-4434-441b-9bd5-824011870b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef47f35b-a906-408d-934a-5777acc53c19",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d31ffa-3b4d-4e70-8a46-c4e366dc974e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3069933-ae91-4013-8ea8-be98c563e50d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "790f40fc-deb2-4097-a22c-36baeb3e4a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f41b7b5-658f-4542-972d-e12bf4ad33b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471051ea-03e4-4673-b5e3-0df9c5b74722",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66b5ab7-03bc-4fe1-8ec0-873fbd65271d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70a45260-70c5-4a51-9e3b-5d4d9cebfea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4828d6-323e-439d-8b99-6afa99f758dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a439988-7372-4dfe-b2e0-f44531efb3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f585dbfb-f1a3-474e-b3d4-a23780991882",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0745cb7-cadb-484a-8de1-6d93dd3743f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f9e1b3-a8be-4198-9b90-133fbffbfb6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b19256-8778-4bec-b46d-5b7aaa0889d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73596b0e-fa1f-4cca-b2bf-dfbdd1bbda55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d60c77-5914-423a-ac4d-e3ded9eb67cf",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9961a0d3-b50d-4a8e-9b35-a33562918c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea5fab1e-e5f3-42a6-8280-5a09e4cacd8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ef9d2e-5f83-475e-b230-160bedfd6b64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea005d6f-b3c3-4f3e-8769-4b3a7c9f3a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e86f14c3-17c4-469a-8f68-18f3a0673f65",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6ef146-262c-4ecc-b51f-3c43bae1f110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bce3d93-65dc-4408-b60e-c420626da8be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd166a9d-65e0-4b3f-8360-e7df699b45e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34395db4-2f59-46f6-938f-94ede8df9581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e621d0e-0cc6-44a5-af30-834b37a1d14a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a459fa94-c139-4114-84c7-1822f164f05e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f6fdf8c-3a24-44db-8b24-d0d95cdd7a96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ad14a0-af2f-4cd9-839a-3a8957030a51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf06b765-874d-4ce5-8d43-8f83eb20da2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc688936-9645-4cfa-901e-3dbda2ba8d5e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8536953a-55b2-4898-bc43-d71815dc9795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c4e32c7-f3f9-4ec3-84ba-c7cd2ab78838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5425773-3d8d-4ebd-90b9-bd4f83fd153c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4509fb52-501d-48e3-be60-22dbf02b8d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96af80d3-9e57-4610-b29e-70751263d63b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82dc667-6e8b-4be5-aaf3-a822b23f8b1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffbefc3d-14f1-4977-933f-9d598f609813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a54ae3a-2a8f-40df-9b8b-9985592782ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74bebdb6-f4e6-47cc-a325-4509a4df0764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871628ef-3bd7-4be2-9b50-8c8a4f212375",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202324aa-03ea-4164-923c-020822606dd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "402ea71a-65fd-477f-9997-78311d96d491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b64c441-ae41-43de-9f3f-7780a6082662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "586ef000-3fbd-4fa9-ae9b-ed0dcca6d106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ddab54-9192-44c3-8172-135c0da9ab3c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b0fdab-9b28-4569-aff4-0be1c2cdf014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5c23f5a-5de4-4843-9fa6-167d1cbb3e6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d03534f-be1b-40e2-baaf-479510db63cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42dec6c1-209f-49c6-bfca-358d9feda0d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48a3a54-62f9-4e05-b762-8c099f645f6f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59bea7ca-4896-49b0-8116-41abab05ba9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19890945-2a02-4d30-836c-a78396df0146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1539f6b8-40e4-4734-9912-9911d4ce1bbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4066cc5c-9c76-4b3f-aacd-7879568344ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eef4d20-0b7f-4add-8e20-fc3b6cdd0a5f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8403c7fd-86f2-4a28-bbff-31ae65b2bd1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f1cce7c-e812-4ac4-948d-8991d1c607e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3182ba93-b297-44e2-8dc7-ddd355a798c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fe1fa07-7594-49fe-90ed-6b6cb2a8425b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84c3907-4356-4aa5-9344-0e9f3954c7f0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b6c0c0-08e5-42b9-842d-aafae7032076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7baa1fe-4dea-493e-b2a0-667880ad730f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f7b94ed-6ce2-47db-a60a-8410ec1b0801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e910340-04ff-4212-86ca-ac2eb5c784ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41395c21-5f4e-41f2-934f-118e55e0f203",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c123b41-be8f-4d6d-9d41-2bf74d6aeb12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5a9ab95-2e49-454e-b900-f42a637ac33f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbff043-585c-43a3-a545-252cde81653b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9540013e-2840-4d34-b8cc-94471021078d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef358fa8-63be-4905-a7e7-3b2c9272149b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c00811-994a-409a-a3bb-dcb7cd324acf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53eb44a3-222c-4f21-b789-e01d8a9aefba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79120448-1b1b-48a4-acfb-b31c9b72ed54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e150b4e7-e3e2-4fc9-8415-f0d04fabbadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca93a88c-fdd8-4226-b19e-3f64fb67c10a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379fd9df-eef1-490a-8d8e-1ed11b6439c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b55d8fc-bc0c-41d1-9897-c477e46760f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5cf328-ef09-4cd7-abc0-bb440a00edab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c8ccfa6-a9f5-4dfa-adc9-35b44cf08a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94395928-d5ad-4858-8922-5e347d254bd7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b816a890-7bbc-4189-b6a8-169e9fbab511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde885c0-e031-4025-975d-96d2665214d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09fc99d7-5866-402b-8db5-854dc64df5c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4b5297d-579e-4e89-92e8-6b2acc6008be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952584db-5476-489e-bb68-6237102cd192",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e98243e-baa1-4f81-9957-b9fc3b34fcd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5acf13f-dd1a-47c3-8468-27edcb01abc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5fb5246-614a-4aca-9732-8d47b59b74cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b47d3b1-fb79-4c0b-ab96-091d0549a761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6fdd74d-528a-460a-b999-a55e0915737f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b66cbf-5875-4560-acf8-dee397a31ee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "866d8a62-59fb-41dc-9531-806531dc8b9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0430f791-7e35-46fb-8eb4-bdf8445d3e4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c24c483f-d004-4002-a20b-e53d65d7ad0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307c9f0c-1d4a-4fa4-86ed-1ebb97ecd796",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e59729-e727-4d6e-a485-49057e38482f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01b7399d-249a-4b4d-8482-89788e54d3c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57ce983-2fc8-4c46-9ccf-c5124736f4d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46de8990-467b-40af-961e-4ac08accb1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c3b1a5-a51d-40db-b8e7-1527e585fcca",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f61cc03-9438-430f-8c15-589cfd72259b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec56253-e3e6-43f4-b300-056e5eb8a618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e059f6fe-8b76-4e3e-9bd9-a52e56d2c8d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce2fc043-a65c-49a9-a14b-55e64e92d6e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0a4dfe-b89d-43dd-ac90-179721358bad",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6634cc7-05aa-495c-b6fd-09ebfa757d22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd455b44-fea7-42a0-8725-52494ec23c7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c6447a-1d49-4227-a2e1-91f02bbd5c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ed2e2c1-f240-4731-9b7c-430673d5cbc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a3df5f2-f492-48d8-8cd8-b15c6d1f65bd",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad52ea89-a666-4da3-a4bd-eada88756f0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24dc91a0-9dbb-4423-95b1-926dcba8673e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64df4dc-b504-4452-8b3c-7ef25c658f9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b293dde4-33b6-423a-ad35-032a8a963ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999967e6-e056-49b2-8b47-c8f00ff3d886",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e11959f-5e54-4ce8-b7d3-6bdeac89b6b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "641f5260-5594-4bf5-a0e8-3a8782656beb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3668d6d4-498a-40e8-b82c-0f18aa8d1631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35094480-ea4f-42d8-82b2-176bc428a126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92396295-01e6-4e91-8632-7be9de4ee2ff",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1db4421-da28-46f4-bc91-4bd81fd5e447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54daa983-bac2-46f6-b026-4f4d89b1868c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18517fef-5ef5-4c5a-b01b-37526a0badcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c36f691-654c-4399-9915-709ba18441af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38369132-714b-4f5d-8ad2-e9b78a3bc583",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a095ba3-80cb-44a0-9b86-8d57a21d5037",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21c8eab7-29de-4f2f-8619-3e20f848928b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ede871-5ce1-4b32-bafb-0d34ef97c7ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3e5dd0b-1501-4728-9eb2-59237654e0b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9b5a75-636c-447b-858d-7d0e5f8963fd",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "908c2593-a794-4e1e-a3bc-c7d88db573ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f10ec5ee-9b1a-484d-adf6-411803726ebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc4fbb2-0be1-4b42-9633-eb24a4a9bfd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c1c6910-1f91-4ce0-b08b-ca00687aa8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4efcbae-6860-48ae-a56b-e03c9a64d3d3",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc43900-9906-479d-a32a-efd4e217ee38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "726f51ea-c373-4d62-8112-fa3d828f5311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4889c23d-f04e-482a-806e-94ee0e314774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dca18de2-c41e-4ff7-bb2c-ec02156fbc4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ab6cb9-c8b6-473b-8ce1-6eab17b5efd4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc53d0a-11b7-41b3-ada2-753d6f3b77cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c875b174-ba14-468f-87b5-8ad81e40d28d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0810718a-2de8-4fde-a81f-408a81ce12c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "415a2cff-23be-417e-930a-c9a95a5bf099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd6ed9a-1622-4288-a343-a734cd8a9f9a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f7bcea-eb63-4abd-82b4-b916349fb996",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a51cc518-f635-42e3-bfba-4b481457081e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8974217-ac2d-4b13-827a-63ef96f49ddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3de6f050-1f5c-40f9-99d2-02c16d78ab7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c177a2-9f28-47c0-a102-e50b2e9f8236",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "058866b0-17da-4ee0-a8ef-952d9ec40da0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa3fe629-9954-40ee-af21-644a4d39a004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14133edf-6d87-477b-b6e8-59fc217d46fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d9dd02-a13e-48c0-bc2a-ba901f6f35b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb50c21-5d03-4df9-b4ec-7904d2eb1e3e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c319921-ee8a-4f33-adb3-a705361a7b4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0dc6354-6b18-4059-8b49-bb64297bf42d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2d14f5-48f5-4e7d-98ee-f349274b2986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7cfecc8-d7ff-4308-8201-5792002d2115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a0cd2a1-87da-4770-b57a-2605b1c17237",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79fcf7a2-a8c2-437a-b737-ff52946d1fe2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79227593-3b80-45a6-af0e-214186938d8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "966ffd68-048a-4d52-9135-55df96213dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "422b2315-1add-4546-acf8-c16a7e54f9ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8502d9cc-cf9e-4438-a9f3-c0c10ca73479",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75fc275-25fa-4b15-93ec-31db2a17f4cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddef2035-90d1-42c8-8328-5c41464a51e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d7e9bd-6f5a-4dfc-8bba-6b5fed3ba18b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec37cbc-8acf-4152-93e9-3bfbc286884d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b6b445-9fdd-4590-beb7-2c219a085727",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf6c975-8361-48aa-b7a5-b925679a7f02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "509bbfb1-8523-4309-838b-80cbdf5f54e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eeffd37-5b31-45f6-b0b7-dffa94440c0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3697bca3-f352-4b06-bd0a-032aa0a02b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b502ee-6ab2-4fad-9a0d-488c5953c176",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af66fb8d-8042-4424-b6ec-520a7ca7abfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c149284-ba47-423e-9740-22f32acc6a88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a193718-41af-482d-9275-519638a4c276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b539a3b-f193-4b27-ac80-b52fea9e0130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a375924f-a8dd-493d-924c-5c938050a224",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82769dc4-3371-479c-b7a7-e36c85df8967",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dca0fab9-add1-4a5f-8d14-4871c1268373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c2b119-6fcc-4349-a038-59d76e96c5fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92ea5db0-9f46-44bc-80e0-ded631e068c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7205ac10-1e92-4ed5-a70c-7b3a60b61116",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f86377-101d-47cf-a898-06b7a7a39313",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2432258b-a013-4c0c-b14a-0f9907ef79ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32848c8-76a7-4d85-af8f-2edcdc15f102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d09be2e5-473b-453a-ba04-27131a0673f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16dbf115-c813-4013-9b4e-84dae37b787a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e94bd990-5fea-420b-90b6-59219a371988",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcda0b6b-da76-497b-881a-aeade7e28de4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f85a4f-1b6b-48d0-9e8f-532701702492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d0e69e1-0a88-4dfd-95a9-9fa70caa5362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2dd611e-98dd-4b19-b0a5-b8542377bae0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae5f28c-947e-49c4-97e9-024c28350d27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2838dd6-c684-475f-bd47-e1396e2eb5b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e146219f-d69e-4109-b700-6f3fcf43fee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95479491-4a33-4af7-9494-caf55038bdb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79eecbb1-f7b1-449d-a1a1-a90d74fc9176",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3851e8e0-bc9c-4c52-ad42-c4968655b705",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bac8bf94-0042-481e-9114-3df619ce8212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3661cc57-6b0d-48c1-b222-b65c0a179343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "555cfdf7-7dbe-40bc-9467-29cf86f37ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a535e736-114b-4387-9c76-02b4848d9e26",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac8ec75a-2cde-48cb-9cc4-9cd634ea14ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "822729e9-84bb-43ca-9e40-04cefa4d7b2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ce40d2-22a6-4217-883c-dbe98a9aafec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fd555fa-e339-4fb2-9d7c-684333a69608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6b15cc-6c78-46e7-a421-285e26c5b66e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d81563a-8efa-4f44-9dfa-735db98a3360",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aeb3618e-ab03-4827-9537-58480b43fa26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "079ce22b-1b1b-4eb7-8038-25f1304eed86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b8826af-cff8-48cc-862a-2abb4d409a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11074423-9567-45eb-927c-dc7a7e8ac141",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a489db5a-460a-42f1-b6ff-28dab7bdf700",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddb3cb16-e336-440b-a566-66769c42a086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1835e43-6df7-4868-a715-5c512ab9f467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9638d2d-412e-4b5f-b6c7-075b9ec232f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7cbf7e6-2734-47cd-b77c-d4c51db72917",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e6c410-7233-4e01-8bc6-c60dbe3a715d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52efab13-d15d-40b7-882b-eef3301b1c91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ecb194-0cbe-496d-9b6e-219bff33396e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1355ad67-9f65-4bb0-86fd-3a1cbed36060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67779fe2-feac-4ad7-a548-d6ebd893b86f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a9afae-ac1b-4550-bc9b-04afffaa67d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2db5e51e-5554-4725-8189-25541d9f9048"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c51b80-2c3f-4b4b-9201-516147fc826c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b665c519-07d5-4104-9b15-c504704c3500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec054b2-d833-4349-9d0d-f3ef6abab3b1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd9c133-3025-4240-b124-6d5dcb34d0c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14f7a968-8fd5-4543-a5bc-28bd71e0ed5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7728b7be-a292-4750-a4d0-5bca9a0b3732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a9d63d6-db78-47b2-8527-7bf266521aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8f89aa-0e1f-46be-98db-537065f707b1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176ac53d-f708-456f-9cce-5576ae9ec76a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaa78a57-6102-4035-b3b3-c8890ba03373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6edbe6-f5a7-42fa-87ab-efd1a8f8eeea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7311cf3-dd50-40e0-a5b7-58832e75f4e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf02954-d80e-4437-9cba-81faaedb82f0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa21ccbc-9200-4c37-b6fb-547275d1da37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09500f73-fbd1-4214-bbfb-eae5b07fd6c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aba06c4-a1d6-4fab-ac4d-ba57340efca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9449776f-5bbe-4baf-bdc0-c7a6e6536d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af8ea50-f1e0-420a-a3b3-318459686c5d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a80f4b0a-a5b9-4782-ad64-4b61d25d9ae8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "863da75f-8990-489c-bf8c-95a53ffee77b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b24b5e-d113-46c6-b53d-0c243a12208b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60a6ecdd-89c8-4170-82e6-2ce581300983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c92491-5de2-4a56-bc7a-83807407f54c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559da5b5-fcc6-49ca-8b65-6935f3f10308",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44c79183-3577-4f78-b058-d5708de8103a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "175e7fa0-3de3-405a-8fde-0fec166beac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c5229c-a0ff-4033-b68c-72b560d9ac6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594f5c5c-ecac-4714-8a86-be6d061e601c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c408fa-cc39-460b-964a-f3654afcffec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b2e614c-2ba1-458c-b805-f12698b75394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69571291-1163-4096-b795-9cbfb2ee3dfc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dc67de2-c7f7-406c-9a4e-181e17423777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709c68ab-1a58-46b7-b1c2-7cad0d6c7263",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5e15e7-e68a-435d-9367-525594c668c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95e4bb90-4b01-48d4-8c34-21f48a4204b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a6d959-7ce1-438e-8806-80e3143f7ada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9e8f1c9-1052-421b-9a91-f0a9317c0e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c69573-e726-4e79-a17e-a938cfeb6751",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c042611-46c7-42a2-ab88-8d731598926c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b12d560-9102-4021-942b-95bcc0abfdce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d757d379-9df8-4e66-b098-0f27a29e04fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffc92210-5b45-4548-9760-de614c860065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9272eeca-2ea6-4a49-8345-fad08dfdabb3",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814fd1b0-b864-45ce-889d-7f1ad2cfe123",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32869ce0-14fe-4f8f-9a21-2438cb0b21a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c23d83-d0fe-4e7e-820a-c2296ea92cc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e2237d0-32b4-4816-a166-77496985ce13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e4ef65-e501-475b-bb88-bf57db763f6e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c699f7ad-1820-4be1-9831-9e410b0773a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c424024d-d6f6-4624-a0fd-99df9fba4bda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bafa16ab-fcfa-4c20-9a60-692eda5a6529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9b5c227-45f0-4730-8a61-6bf486fcb2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b24c92-fc50-4693-a190-b0a27febc8d2",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e0db22-fbc4-421e-b987-fd9a48cb9d67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dafaa7f-2ddb-4305-a140-3537407524f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "964def15-c57c-4f96-9179-7e41e40bae3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "534dfe2a-47f3-41d3-bfc9-19e737945f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc9fb9f-433d-4cdb-9355-4591ef090c8f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444fdec9-d238-4f86-9f28-5b4734915f69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43f0b649-3762-4fcf-beb1-db3bca9c14ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f61645f-41af-4a22-b950-6c81506910a1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d196e07-8280-4294-8fa4-c214041cbb83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9f106a-170c-4516-9a12-33626acf1550",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53ab1f1-1ed0-453b-9a75-aac230dd6d86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f6d5cb4-ca13-4996-b68d-9fa21e253236"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "445e4c01-f5fe-4a70-91ad-e44383755406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc9c554b-5da7-4dfe-84a8-e77bcecb2b35"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d8113f4-aaf4-428c-9851-55b4247aa9e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9fc4c510-d88b-484d-8c0a-01cd7a280255"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f47c8fdb-4042-4fbc-ab87-d760b7b2a23c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "66e8177d-c53c-4266-b8c4-01de61d62a84"
                    }
                  }
                ]
              },
              {
                "id": "255966d0-5482-4868-9463-bc8e8d128279",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "99cfbf57-4be3-41e3-a3ca-4b9f798aa419",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f269ad1a-3807-42bb-aa54-c6e97947222a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a4b3bb64-20ed-43ee-b7ee-89be7e730dad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66496a12-dff6-4de1-9c46-5686739fdf7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6724f448-c040-4a46-b853-1a216c983359"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee59664e-03f3-4069-a714-9fba06319035",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d654fc98-50f7-406f-b974-02535cc34299"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ec9365f-5fbc-4c21-939a-d76e32eb574d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15140261-6f38-4d50-82d4-82dee25baaa5"
                    }
                  }
                ]
              },
              {
                "id": "bd5d17ea-5dc0-4414-b6d4-f1e35aee18c0",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a20697ae-6905-4fc7-a630-2175c35721db",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6c310e-f5c4-41c3-8caf-4fdc31a2068e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2865a618-bc36-4563-8cf8-30537a88340f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748d3cd2-82e8-44ea-beb0-22a2d375f78f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5693bc9f-e470-4d64-899d-82c8cbcb50be"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6a5117e0-e761-4c7b-97b1-08a7ee048302",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2579d72a-c947-408b-a2a6-903c986710de",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6085457d-da66-4681-b1e0-d7bd72a80415",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3eac55a9-9233-4273-9ba7-b6418e009833"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db44cc56-d625-44f5-ac0e-e072d9643e5c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "693f65c2-a89a-46a1-b8c8-f6443bd56028"
                    }
                  }
                ]
              },
              {
                "id": "2cf32cac-b4d2-495e-8767-59243e502f0c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "365d709c-2e61-4034-abc8-c971d92310e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f99b6688-0ec5-4ee6-96d6-4cd03b42de02"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27ccad03-0c98-4490-8959-d48ac6320841",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73919f56-6296-4b9b-9105-76e9a550c4f4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b404530-42eb-4fd2-87c8-6acedddb89d2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f475b936-a341-4b66-ad09-5f3d3e411c51"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eb4dc669-828f-448c-b0de-d7783019d16e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33661316-688d-4ab5-aacb-8e6bb365c19b"
            }
          }
        ]
      },
      {
        "id": "f64f527e-07be-4ae4-b35d-997fedc2a850",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "5c2c7f41-b583-4729-a273-c0b1b7315342",
            "name": "Negative Testing",
            "item": [
              {
                "id": "494148a5-99af-4c70-abf7-3300d48a823d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8b4f69e6-072a-4ee0-9e6b-e22ad0b11c6c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6651f7b5-8677-4657-85fe-7c4e6036764f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "dcdcdf44-397b-4ee5-b651-82795e68ac85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3392cc27-0793-485c-a341-ab0fc1044d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e56db429-40da-4919-88ea-20bf57c8bf3a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0af4eb3e-13e9-4341-9f48-71210bfa81b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86677d39-b43c-4093-ab7e-89cc3d524071"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6388c86e-1b6f-493b-a31c-38274b27030e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad3f3017-6398-4498-bc86-6733b9e55337"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f7965aa-f9e5-437c-bd9b-0ce21fe02e5e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8dabcc54-ad55-407c-bbde-4fb046631181"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "73439b41-faab-4295-b1e4-c0af9b74c74e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "73d56089-131c-4ac4-b402-e2980f61cd92"
            }
          }
        ]
      },
      {
        "id": "c02c67b9-3b37-41c8-82cf-254c2ac03a4b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c0ca04ca-0dcd-4898-ba50-0348299e3849",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c711ad85-9eed-4377-91b2-00f2f0dd6136",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "516d531a-1e5b-415d-ab92-776dfb88b1a1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63e621b-9676-4c6f-ba5f-b635e860e99f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec5a5630-130d-4a0a-a53c-25f724a6da60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52bfa37-732b-4837-80a0-15c2b62dbeac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c2b81ac-25ab-44ba-81ef-30033975ce2b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "114cfd65-ac2d-408c-87d6-c84c4278ee15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a61c231-c800-4b68-bbba-1250d60c6553"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b347a83-f7c7-422d-85d6-e2c37a9b12c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a81b09e-e761-43b9-9a11-8cbda6d1a0f0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b0cced1-c675-4b8b-9d23-a3bc1ccd93ba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8d28bc6a-26b7-4ee3-b12e-2bd70603df7a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "363a9fd2-652e-43c7-918c-885148c75581",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13d57152-a90c-4fcd-9bfe-ecd0105b0f98"
            }
          }
        ]
      },
      {
        "id": "a7e3db86-1fa0-4939-8d31-507c658d84ed",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ba5d0a64-1a65-41df-82db-9b72904c8bc7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e3626961-450c-4deb-959e-3726bce544e1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c5335bb4-635d-4484-aaf3-f03e32d52d58",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8b199a-fd54-484d-b4e0-2d1606242fed",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d691aa5-491c-430e-8b0f-88e890804d62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d244d244-4bb0-405f-9256-e0e154a0a41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af03833f-c7ec-4c8d-9f34-cb989384fffe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8eaa50a5-8d66-4498-aad8-06bc2deef5b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aaddbb74-ed26-4108-8876-c8677b5d53d9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2da3b04d-f8db-40ee-9120-9799bc95283b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7981f630-943b-4e60-94c7-6776c07f7e7b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "463b9a11-1445-4805-bae8-4477ca57239f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8116d14e-9af1-4fd9-9452-c96976323294"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3e407570-759b-43db-8e90-e4862414fe98",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d376732f-86de-4a76-94c3-5536c7ad8e0d"
            }
          }
        ]
      },
      {
        "id": "3746fa2e-a3de-42b1-9990-00f165984eb1",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c1854199-4a9f-4cbd-ae0b-2bcf5dace454",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "378f78f1-2c38-432a-8d9e-55984f5ae2f9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "37ed56bb-962a-44c2-af61-a9c3f52b465f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "47eb5644-5d52-487c-873c-bbb6a3668993",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "18178fda-38c8-49cb-857f-92165acd2dea",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 87.91578947368424,
      "responseMin": 5,
      "responseMax": 8386,
      "responseSd": 534.9938906978516,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1712018111504,
      "completed": 1712018145611
    },
    "executions": [
      {
        "id": "fe034d27-c293-497c-9f17-5526b21cd252",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2903413b-1386-48e9-9759-32a1d3bb5363",
          "httpRequestId": "3bc69900-0a3b-4c73-86d5-79f7e18559a7"
        },
        "item": {
          "id": "fe034d27-c293-497c-9f17-5526b21cd252",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3f9a3d69-a5a7-4d64-987a-f5959360afeb",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 0
        }
      },
      {
        "id": "cf932963-3ed1-4de3-805e-fcd0c9703dbe",
        "cursor": {
          "ref": "6a49df6b-d54d-4779-8c34-e05efa13df67",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1470c7e4-7d69-47e7-94c4-9ed49761e54c"
        },
        "item": {
          "id": "cf932963-3ed1-4de3-805e-fcd0c9703dbe",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0c38c358-d435-428d-80fe-b69cbe98afe5",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "472bbbf5-0530-4e1e-8e82-beb0c6439524",
        "cursor": {
          "ref": "680f5e6d-ef5c-4e0f-adcf-5f6f0c5e7e53",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "72c74f0e-1c5b-43d5-9381-1f5a50647b89"
        },
        "item": {
          "id": "472bbbf5-0530-4e1e-8e82-beb0c6439524",
          "name": "did_json"
        },
        "response": {
          "id": "f83326ee-37da-4da2-9759-5dec87fab103",
          "status": "OK",
          "code": 200,
          "responseTime": 283,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2838d825-fc13-4944-903a-46fcca0b3331",
        "cursor": {
          "ref": "2043df64-d896-41cd-952b-ed8472d5cfbe",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9ff64c6f-9b8c-4f56-aa69-d6a884ce35ea"
        },
        "item": {
          "id": "2838d825-fc13-4944-903a-46fcca0b3331",
          "name": "did:invalid"
        },
        "response": {
          "id": "f66103da-81fa-4192-9aff-34db35ee7b85",
          "status": "Not Found",
          "code": 404,
          "responseTime": 254,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2838d825-fc13-4944-903a-46fcca0b3331",
        "cursor": {
          "ref": "2043df64-d896-41cd-952b-ed8472d5cfbe",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9ff64c6f-9b8c-4f56-aa69-d6a884ce35ea"
        },
        "item": {
          "id": "2838d825-fc13-4944-903a-46fcca0b3331",
          "name": "did:invalid"
        },
        "response": {
          "id": "f66103da-81fa-4192-9aff-34db35ee7b85",
          "status": "Not Found",
          "code": 404,
          "responseTime": 254,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a437f09a-0394-460b-824c-3fd9858e4e93",
        "cursor": {
          "ref": "275668b4-7734-4fa2-8703-04334cf3d3fa",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ed554863-e6de-463e-ade7-73a27c55d0a5"
        },
        "item": {
          "id": "a437f09a-0394-460b-824c-3fd9858e4e93",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1eb080dc-c3ed-4012-ac6e-a70a57f2ba6c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 37,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a301d6-cb42-494d-9d18-77ba313d7869",
        "cursor": {
          "ref": "1bdb79b4-f0ff-4be6-9326-d2acf3e37eff",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1c455a63-183a-4ee5-8a24-7d0c9fefda00"
        },
        "item": {
          "id": "51a301d6-cb42-494d-9d18-77ba313d7869",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9de0b7b5-0256-4c3f-b8ab-f360befc328a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 35,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd45a4cf-5d0f-4595-a246-b21d572c889e",
        "cursor": {
          "ref": "8ace516e-8043-4709-8779-1a8077767d30",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "fb387dbc-7943-435a-add9-89452f2cf2cb"
        },
        "item": {
          "id": "fd45a4cf-5d0f-4595-a246-b21d572c889e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d113a0b7-8327-4014-aceb-49543ed8a6bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18de8df5-9f36-4764-a126-45ef78e77b49",
        "cursor": {
          "ref": "6794fe28-2cfc-4120-8c4a-5cf66f62a00d",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5a3d4f7e-6364-4417-8186-1d7ce388765d"
        },
        "item": {
          "id": "18de8df5-9f36-4764-a126-45ef78e77b49",
          "name": "identifiers"
        },
        "response": {
          "id": "3ed2b55d-526f-4937-a19d-0dde9643c9f7",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43808d2-4310-4ab8-bae8-aa21055fa925",
        "cursor": {
          "ref": "1a559526-b741-4058-8fe3-2d22c97cd3a6",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1bb222d7-2554-4720-ab18-a7ddf677ffdf"
        },
        "item": {
          "id": "f43808d2-4310-4ab8-bae8-aa21055fa925",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8d13dba1-0f0f-47a2-bbe3-2f8cb202948c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0441c10b-721f-417b-b937-fe63d15ad229",
        "cursor": {
          "ref": "6657939c-e675-44e1-81b2-02c3b06c5e90",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a1f325fb-b84a-4d78-af78-db47f4e12b47"
        },
        "item": {
          "id": "0441c10b-721f-417b-b937-fe63d15ad229",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "76feedfd-109e-442f-9fce-b3d9aacd9b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aafd0164-9545-4fe5-ad63-2170aece3f8e",
        "cursor": {
          "ref": "cc5ffcc4-73f1-4602-a99d-6032501d1651",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7b6ed30a-a523-4963-8713-d9587c6e57c4"
        },
        "item": {
          "id": "aafd0164-9545-4fe5-ad63-2170aece3f8e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5f6e865c-8591-4e5b-ae97-9b5a481ab4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d145142-5833-4fc7-8177-c0e3f996bb09",
        "cursor": {
          "ref": "97930d93-5578-491c-b413-d6c6043ac8e8",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b5e7f9f4-5b0a-4012-bbab-5374a9445e45"
        },
        "item": {
          "id": "5d145142-5833-4fc7-8177-c0e3f996bb09",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "43cbaba6-de13-4e3a-9f76-1d815729fc1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa88626-a948-4f47-82a4-0fe79eb1012c",
        "cursor": {
          "ref": "7fc0ac49-08eb-4278-96eb-9cd6cdd9fb0d",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "68b632e0-7037-438e-893b-0cd6c6f6ee54"
        },
        "item": {
          "id": "cfa88626-a948-4f47-82a4-0fe79eb1012c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d9204c8a-7db3-4b39-a61a-baa87c32b636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9632531a-28e3-4b0e-a729-9110ae9a8cb8",
        "cursor": {
          "ref": "44d88889-c97a-4b28-9a99-5e03c202122d",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6992ff59-bd4f-41a3-b5c6-69ac37c66f74"
        },
        "item": {
          "id": "9632531a-28e3-4b0e-a729-9110ae9a8cb8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "3f932dc1-943e-4c34-9840-e95ebc3e9c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495336f2-6c63-437d-a68c-770d3d1a1e50",
        "cursor": {
          "ref": "23b4b952-27a1-493d-a1c2-7049f194992c",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c16e238d-002e-4547-8531-e46493a845cc"
        },
        "item": {
          "id": "495336f2-6c63-437d-a68c-770d3d1a1e50",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4172032f-0286-4fbe-9e01-cd4d64cde5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6c6a53-f0a4-41bc-8965-f65d0a033ee2",
        "cursor": {
          "ref": "50bdd916-29fb-4851-bc2f-91098e7da38f",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0d8de811-d30a-426c-b9db-eb7dad6dbd40"
        },
        "item": {
          "id": "5e6c6a53-f0a4-41bc-8965-f65d0a033ee2",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f92fa5a4-3e20-4703-8ff2-2042820031a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f7b13b-8b6b-4c56-8ca2-c46ebc3a4410",
        "cursor": {
          "ref": "343d46c1-e091-4a41-b65b-97963714ae1c",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0f253c53-94c4-4ec8-a03c-18280d72e2fb"
        },
        "item": {
          "id": "f5f7b13b-8b6b-4c56-8ca2-c46ebc3a4410",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a9d712c5-ecf1-423b-be20-21a198fcf243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b648a2-b919-4b34-a3d3-31ff32d053ac",
        "cursor": {
          "ref": "87218d30-993b-42ee-9b03-3875583b654a",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ca275ef0-1e20-4fe1-9db2-f359c349e5d9"
        },
        "item": {
          "id": "a2b648a2-b919-4b34-a3d3-31ff32d053ac",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "fd3a85ed-3d49-4252-a4d7-788108bf3f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff50041c-e82e-481c-a946-7955295c69d4",
        "cursor": {
          "ref": "a96acac8-abee-4899-816a-0490614d0e99",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "958a58ba-2beb-4149-b519-5007037f0e41"
        },
        "item": {
          "id": "ff50041c-e82e-481c-a946-7955295c69d4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "661de2d3-0ccc-4d99-bbe2-4cc63add0c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb02f73-4add-405c-bf62-4eb2e544431a",
        "cursor": {
          "ref": "566325c4-6398-4191-afa6-9a5088b9b7dc",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "551449a2-48ab-464e-a907-33968e6f5de6"
        },
        "item": {
          "id": "ceb02f73-4add-405c-bf62-4eb2e544431a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7ca12529-8431-46ba-a5ff-fb34fef020ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7f057c-9bfe-4e19-9c19-6b512c1ee1c7",
        "cursor": {
          "ref": "adcf7463-be99-45a5-935f-2ba544d7f505",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4d15ee11-765a-4828-930f-584e7fac2beb"
        },
        "item": {
          "id": "4a7f057c-9bfe-4e19-9c19-6b512c1ee1c7",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "56f73ba9-c00b-409a-971c-c7d2fbc6302d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9827fb83-0cd7-46e3-83e9-ba4b57a381b3",
        "cursor": {
          "ref": "abf1644f-bba3-4d4c-8cdf-10b542cc2428",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "427a519f-6c86-4d50-9ad6-bf3ea9bd4921"
        },
        "item": {
          "id": "9827fb83-0cd7-46e3-83e9-ba4b57a381b3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9d9fa685-1134-4894-b59d-5070669aed83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269ff1b0-59a3-41fd-97ee-8629211618cf",
        "cursor": {
          "ref": "599f4758-001b-48b8-98a8-cc4e103b72fa",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "bb02bc72-0351-4414-a44f-148ca4234284"
        },
        "item": {
          "id": "269ff1b0-59a3-41fd-97ee-8629211618cf",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "95160730-389b-4d3e-8a6a-2bb813aac679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b943c43d-c5e5-48b9-83ad-945565977476",
        "cursor": {
          "ref": "4430bc9c-decf-40a8-bd8c-2f0e6df7dc01",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "78db8eec-4811-4a06-8be3-80f9b75a49b8"
        },
        "item": {
          "id": "b943c43d-c5e5-48b9-83ad-945565977476",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a0818521-1ba4-454c-9f36-b4bde43d1ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a603304-460a-49a3-9520-4505f45545e8",
        "cursor": {
          "ref": "05aba247-a8d8-46e5-b03c-1a16db1370c0",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7cd9f4e4-05cf-44df-88e7-8474f2b127d1"
        },
        "item": {
          "id": "5a603304-460a-49a3-9520-4505f45545e8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c3005b68-d756-4ba0-8a37-d58462293cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48b00b5-b6bb-47f6-ae5c-3538410ce259",
        "cursor": {
          "ref": "81600226-7d3d-4b81-a738-9383e17a9898",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c6c31ce9-5776-47c7-a8ee-08cb3548e476"
        },
        "item": {
          "id": "e48b00b5-b6bb-47f6-ae5c-3538410ce259",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "df5a50a2-a34c-4da0-88c6-2f40ad8db4c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7abd6b-ab73-4948-a71a-32357fbed870",
        "cursor": {
          "ref": "769f4002-8c66-4c0e-9818-f0a12e8f4ef2",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f009a12a-3c00-4784-aeb1-e0c28143fa8d"
        },
        "item": {
          "id": "0e7abd6b-ab73-4948-a71a-32357fbed870",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "83c6a21d-2ab9-40a0-9ca1-de8a08e94fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a143ef-69cb-4648-b954-23ca8b25d2b2",
        "cursor": {
          "ref": "440995b4-9666-426c-af6d-feb277dad434",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c3f89d45-cf92-4573-9af0-cd33adb29c91"
        },
        "item": {
          "id": "e4a143ef-69cb-4648-b954-23ca8b25d2b2",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b72bdec9-b8e3-4585-a8d7-ce6d60d3fba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69adabc6-1a81-4ff3-82cd-924499902000",
        "cursor": {
          "ref": "ea22097f-a2c1-4776-8ee7-dd849c152522",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "47b1e9a8-38e2-435b-ba64-9ddd8e991dac"
        },
        "item": {
          "id": "69adabc6-1a81-4ff3-82cd-924499902000",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7cd90f7f-37a9-453d-ad7e-aaacf28e03ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1514e9-4974-4b61-aeee-aaa555308f20",
        "cursor": {
          "ref": "24134634-7711-4651-abdc-a2a2e453c9fa",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "826c8c0e-07eb-49b3-bf73-1dff7ba88c6d"
        },
        "item": {
          "id": "af1514e9-4974-4b61-aeee-aaa555308f20",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6a95f734-d613-4234-86d5-8dba20606a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609bf2d1-2200-4672-8a84-4df876fe1779",
        "cursor": {
          "ref": "0203f3c3-77bc-4334-ab9c-125b1e8560f3",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "84964112-994f-4096-a5f0-fb39482a8db2"
        },
        "item": {
          "id": "609bf2d1-2200-4672-8a84-4df876fe1779",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "810ebd65-4a1e-4600-90eb-0615df527cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61364e66-f979-41e9-8be2-f9654bcf1785",
        "cursor": {
          "ref": "54619f92-8baa-4a00-ae1c-5ade7917097f",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "42a75e42-68a0-4c7a-9217-f22160d9f1b4"
        },
        "item": {
          "id": "61364e66-f979-41e9-8be2-f9654bcf1785",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c8354441-e61e-4eda-9c8f-9ad888504117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5883d24-1db5-4797-9bf2-484b67670050",
        "cursor": {
          "ref": "ccf31883-991f-4663-8c4c-840aa96d6e2b",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b80f9144-82e8-470c-929a-950251509118"
        },
        "item": {
          "id": "e5883d24-1db5-4797-9bf2-484b67670050",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "05a26d9f-6e6e-4923-8953-7b045b1b0b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca92fd9-576f-4d2e-b628-f2d8c448500a",
        "cursor": {
          "ref": "5edaa93f-6798-48d4-b1c9-472adcc24462",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "612f438d-deda-4391-8a63-582c5f0e4099"
        },
        "item": {
          "id": "1ca92fd9-576f-4d2e-b628-f2d8c448500a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "230744b9-cccd-438a-b7c0-33b7913b441c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e513e46-03b2-42c9-b5df-eba14070f708",
        "cursor": {
          "ref": "db9f66b8-ef36-48d3-b5ae-c70298bfd71e",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "cc690d0d-25a0-497f-acb2-2c2bdee893a4"
        },
        "item": {
          "id": "1e513e46-03b2-42c9-b5df-eba14070f708",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "84117254-f279-4b56-b7c2-366aabe666bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5368db7-1a49-45bd-ad6a-d3edca1606a6",
        "cursor": {
          "ref": "5f6a07ca-f9ed-48e3-b656-3e6bc11bdc24",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3382bceb-d5d8-4dad-9e4f-be1ec5019db3"
        },
        "item": {
          "id": "b5368db7-1a49-45bd-ad6a-d3edca1606a6",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "df54deb4-0db1-45f5-8d47-a2c0344338d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2d06fe-328b-4377-be37-34da18810708",
        "cursor": {
          "ref": "2fc23fa3-b93c-473c-bc96-9aea50afb90e",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "de814c2c-0d57-4bf2-aa87-7ffbc8b8d25a"
        },
        "item": {
          "id": "ee2d06fe-328b-4377-be37-34da18810708",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "975a7c30-c698-4ebc-b470-c9ce41089691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25a4993-df9f-4221-be99-4b331e6e3f71",
        "cursor": {
          "ref": "0890b08c-dcc9-4111-b0e0-e77a0a5f4b8c",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7f2d004d-2ec8-41f6-861b-f3cdaab45b4d"
        },
        "item": {
          "id": "d25a4993-df9f-4221-be99-4b331e6e3f71",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "30518691-3b4d-469c-a3bc-cb22ee004076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df907fea-1563-49d6-8a1e-08bec6ad94c0",
        "cursor": {
          "ref": "a617d0c6-ef2e-4dfd-8ec8-177094df58aa",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "29c9f07b-42ba-43fd-85e0-00e6f5eab4bc"
        },
        "item": {
          "id": "df907fea-1563-49d6-8a1e-08bec6ad94c0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7bddcb0b-0a4a-4fda-b578-18ed196e9ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76ad981-faf6-4c15-b4a3-48401166fc6c",
        "cursor": {
          "ref": "3129fd2a-149c-496a-97fe-d5487a9f18f2",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1abb080e-7e14-4d41-a9c6-e7e27ef29210"
        },
        "item": {
          "id": "a76ad981-faf6-4c15-b4a3-48401166fc6c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4533542b-9d4e-4bed-9e3c-3d3a238cae9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255ff2d2-0b9b-45e6-bbf6-4b796e2836ef",
        "cursor": {
          "ref": "266c06bd-04d1-48a2-ad63-bd2bfb33094c",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9d4e48c2-959d-480a-8147-8be937b567de"
        },
        "item": {
          "id": "255ff2d2-0b9b-45e6-bbf6-4b796e2836ef",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "815de4e6-db3a-40d7-839d-a1492889d78b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e8078b-cc53-47d9-b96d-2dbffc2eccfb",
        "cursor": {
          "ref": "7206f644-8db7-4b67-9efc-73d1229e044e",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2732447e-b648-44bf-a3c3-2889ce90853b"
        },
        "item": {
          "id": "66e8078b-cc53-47d9-b96d-2dbffc2eccfb",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a23584eb-3009-4e1e-8f80-c3720356c07c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5cb198-edf8-498d-9a70-6222f1133017",
        "cursor": {
          "ref": "153c2b5e-2887-4dd0-8344-375d782a5bd3",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f7bf8566-bb25-4eb7-9b15-6573ef601138"
        },
        "item": {
          "id": "ca5cb198-edf8-498d-9a70-6222f1133017",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8c63c3d1-5e91-492a-ad90-c4752e0f877d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4ab95d-1c34-4d52-9349-5b8f023b56bb",
        "cursor": {
          "ref": "70f1a6fe-07d1-4969-b83c-7aced61d4d75",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e996ab27-a835-4d98-9a75-2fa4b8aa3dfa"
        },
        "item": {
          "id": "af4ab95d-1c34-4d52-9349-5b8f023b56bb",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d11e4792-4ae4-411a-90a6-1f34706c9b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41d6729-0286-4f92-a74b-015a6fcff277",
        "cursor": {
          "ref": "1013f75a-ff73-479c-bf6b-ea742eb8cb44",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "410f5dd2-1da7-4c5b-9555-1c24860d95ff"
        },
        "item": {
          "id": "e41d6729-0286-4f92-a74b-015a6fcff277",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "40e11db4-bd08-4326-b107-b44976b16570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a80094-f585-4b94-aa7f-60096181491a",
        "cursor": {
          "ref": "ecce44e8-bc03-4085-a7c1-9af823da07f9",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "81086526-1416-4a79-8850-30d0bca909db"
        },
        "item": {
          "id": "f2a80094-f585-4b94-aa7f-60096181491a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3b853440-967f-4a0c-a5f9-8e8085c08b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebdf6efc-d67b-4ef5-8369-a2c44334e22b",
        "cursor": {
          "ref": "658cb487-7c8b-4221-9724-5e3e1b41fa5d",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e9d96bbd-80f0-440b-bf21-66ae34710d78"
        },
        "item": {
          "id": "ebdf6efc-d67b-4ef5-8369-a2c44334e22b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2c9227d1-2aeb-4e30-907d-6c4fa9abf161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9723e7-93a2-4758-b1fa-89519d7938e3",
        "cursor": {
          "ref": "de08a319-a4a1-4c3d-8e80-c29e82e89108",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5eb6d2c3-2faa-4870-987a-436a87fd56d5"
        },
        "item": {
          "id": "bb9723e7-93a2-4758-b1fa-89519d7938e3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f8ed9610-bd0d-4cdf-832e-0489073c6660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083c7ad4-bd01-4100-a625-e0cdbf92a675",
        "cursor": {
          "ref": "13009fa2-da09-4654-99a1-007223534f3a",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "df76f56d-1010-476d-b0ca-bac8e47d18c5"
        },
        "item": {
          "id": "083c7ad4-bd01-4100-a625-e0cdbf92a675",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f12491c1-eaa5-4988-b919-e66f2f8b9b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af6af41-a78c-49cc-924b-399e27c367dd",
        "cursor": {
          "ref": "a83f26d6-0f4d-4a9f-99f7-4e7af19e7303",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "be51b80f-9fe0-4ef8-9835-e1a773ed47e0"
        },
        "item": {
          "id": "3af6af41-a78c-49cc-924b-399e27c367dd",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7726baa0-e5c3-457f-ae33-788dfa6568d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e7696a-3936-4195-84e4-7ab42bc414f4",
        "cursor": {
          "ref": "d9a00c51-5fd4-4d86-8893-dbfad41e0d8f",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "31ab1856-0750-4182-b6cb-73c61f42bdcc"
        },
        "item": {
          "id": "49e7696a-3936-4195-84e4-7ab42bc414f4",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9dea2cec-ca06-481f-8135-e2e5cb68f7d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc30e2ea-2a6a-4928-8867-1a3669373379",
        "cursor": {
          "ref": "933c6cff-95f3-4e42-b0a7-2aec85467e21",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "12659baa-44ab-47c4-86f8-e530d9addea6"
        },
        "item": {
          "id": "bc30e2ea-2a6a-4928-8867-1a3669373379",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8bf7e07a-1f19-41c2-b054-fe5e3aa3a321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a200678e-41e8-4669-bc0b-662c670d81a5",
        "cursor": {
          "ref": "c9c98bd1-cfc0-4a62-b5de-3b643c64b759",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b43d5476-247b-435b-b5f4-3056a9b4b2bd"
        },
        "item": {
          "id": "a200678e-41e8-4669-bc0b-662c670d81a5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a9232493-576c-4abe-a487-14f7692ec205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf4b217-96a1-4b32-b878-b24c05407188",
        "cursor": {
          "ref": "7faa33e5-8ccd-4ec4-bc30-039f8aae992e",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0682ec16-3999-4f66-93f7-e5430f0f5414"
        },
        "item": {
          "id": "9cf4b217-96a1-4b32-b878-b24c05407188",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "049cafc8-f863-445c-9b8e-5b0e18520c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2d4981-82fa-4247-991b-fa31a675bfec",
        "cursor": {
          "ref": "fd11bb73-e71e-4be6-bc77-713960a6394f",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "98a85f56-419b-45c4-b095-7e83e329447c"
        },
        "item": {
          "id": "7d2d4981-82fa-4247-991b-fa31a675bfec",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9039493f-68fe-4312-b5bd-48584ba4db75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2851e3-cefa-433a-a80b-ae81364b27fd",
        "cursor": {
          "ref": "fb2e6abb-9a83-4e06-ae1c-57ca5002925c",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7b7e939f-cce7-4fd4-a5b6-30de457b39c9"
        },
        "item": {
          "id": "3c2851e3-cefa-433a-a80b-ae81364b27fd",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "51b4acd1-a1dd-4b42-94d2-7b1a51062148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732b5835-366f-45e5-8e57-7f6ec6140b24",
        "cursor": {
          "ref": "a0500555-c0ef-416e-b4ba-9e3009407eb2",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9102b859-a6ce-47fd-bf7b-7dc7b9093c6b"
        },
        "item": {
          "id": "732b5835-366f-45e5-8e57-7f6ec6140b24",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0fb0199e-1565-4b69-96c6-9b230918a10a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49091e7d-aed4-4b05-83e4-f8c0c06fb35b",
        "cursor": {
          "ref": "f2ebd940-8d29-40b4-8a22-781905ac4917",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1fe4de2b-160d-4739-9aff-6bc69b3be7e6"
        },
        "item": {
          "id": "49091e7d-aed4-4b05-83e4-f8c0c06fb35b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "43be2bae-3dc8-4a7c-b23c-5b479ef67644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908eaa79-87d2-4e12-b5ef-5fec6740e1b3",
        "cursor": {
          "ref": "b8c09271-0f16-406f-acc4-4ff9a00c4c56",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "657989f8-166f-411e-9d72-7beec2b55613"
        },
        "item": {
          "id": "908eaa79-87d2-4e12-b5ef-5fec6740e1b3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a0ae51b4-ff8f-4b5f-adee-79d8002ff3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181c23db-1adb-407c-b522-f719931a098a",
        "cursor": {
          "ref": "e8878836-0cd2-438b-b456-d08a46d10563",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ed928034-597c-4c4a-a70a-a99282f42c08"
        },
        "item": {
          "id": "181c23db-1adb-407c-b522-f719931a098a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "06b5e2e1-0041-4a0f-8686-13e6498595dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f62702-f2ff-4b17-be56-f29a19430a6a",
        "cursor": {
          "ref": "28d80226-374d-4a67-8ba3-8a0dc45735aa",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "802e83da-50de-453e-a104-c7d7edaf4af5"
        },
        "item": {
          "id": "11f62702-f2ff-4b17-be56-f29a19430a6a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3cbb11a9-1336-4acd-858c-52d8805e752a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46730c8d-bfe3-4054-a63b-83e71fa805fd",
        "cursor": {
          "ref": "34c06b03-224e-4929-af4f-2db1048a9215",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5f20bb06-1d43-436b-b32e-9a3175ead718"
        },
        "item": {
          "id": "46730c8d-bfe3-4054-a63b-83e71fa805fd",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "981c652d-fc9a-4d59-9c81-e735bcff7f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7341467-ab3a-44fd-82aa-68c5f3d03de2",
        "cursor": {
          "ref": "faa1f02a-8c7a-4710-aff3-397c56eba278",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "8b09d9f8-bc1d-4106-9114-f8659f6c838a"
        },
        "item": {
          "id": "a7341467-ab3a-44fd-82aa-68c5f3d03de2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "81ab9f58-808d-4e41-a613-dc68e9b04be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0bdf95-ec88-48c9-8a52-85b78a28d49c",
        "cursor": {
          "ref": "ccc8d08d-514a-4b52-8734-061e1bcb5f28",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d3742c88-aa50-4c16-98a9-ecbbbb5a605c"
        },
        "item": {
          "id": "3e0bdf95-ec88-48c9-8a52-85b78a28d49c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "cde29422-4ed9-44cb-acbd-4b59591146a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a1ff13-eefb-4848-9ee4-181b9182b3d8",
        "cursor": {
          "ref": "30f466b3-cb24-4162-a9c0-7690fe0ababc",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f33fa4e9-b56c-430c-9d8f-24029926ad18"
        },
        "item": {
          "id": "78a1ff13-eefb-4848-9ee4-181b9182b3d8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "59fc0a76-9737-4194-9378-0a87d9c54f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee819f0-07a5-4364-8c38-a6ea2dc3f0c2",
        "cursor": {
          "ref": "bdce59b1-dcac-43c9-b454-88f44cbb0775",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f0b20d5b-180a-4080-8957-2c6b2ac43f60"
        },
        "item": {
          "id": "bee819f0-07a5-4364-8c38-a6ea2dc3f0c2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "869658bc-5b12-4979-8a50-30afcddd0fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af42005-560a-4d10-81ee-df4eb52531cb",
        "cursor": {
          "ref": "7b27a583-da10-40d3-a606-3df47875391b",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e1d6f541-00f6-4ebc-a963-a4f6fd094576"
        },
        "item": {
          "id": "2af42005-560a-4d10-81ee-df4eb52531cb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b840adcf-8ce2-4d71-b20f-6a16f3508ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af08820-2003-4241-9717-506db09cffe1",
        "cursor": {
          "ref": "ba5131cd-dcde-43eb-a66e-3a48bca8cec8",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a1a8f21a-08d7-48c5-afdc-0477fd29faf8"
        },
        "item": {
          "id": "7af08820-2003-4241-9717-506db09cffe1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "78e80708-7346-4792-b1df-da3ba9e3d0f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3154b8-73bc-4264-a204-43af5b9528f0",
        "cursor": {
          "ref": "5265bb0e-0fab-4c74-81ac-08886fdb959b",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e2c1309d-9938-4d65-9099-0c11bdb3b8d2"
        },
        "item": {
          "id": "da3154b8-73bc-4264-a204-43af5b9528f0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9863dd85-f10d-40a6-9505-62e610fd346a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fae37c5-f039-46f7-b58a-278ff48ccebf",
        "cursor": {
          "ref": "56d89d2f-5102-4b1b-8514-93f6b9dc3603",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f3fa78ca-9366-4c23-bec2-aa417690c027"
        },
        "item": {
          "id": "3fae37c5-f039-46f7-b58a-278ff48ccebf",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5ea12fd0-a061-46f6-a396-a8787853b1ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07bb2417-5a97-4042-ba99-7a8cf6f05747",
        "cursor": {
          "ref": "20bdb9ed-ee26-4871-947c-c20f55cbf409",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ac2c0c32-00e9-4903-99fb-d550744e0ca0"
        },
        "item": {
          "id": "07bb2417-5a97-4042-ba99-7a8cf6f05747",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a5b9f689-113b-4414-9b1d-6248d71bc77a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b70508-312a-437c-a3db-9af39be05573",
        "cursor": {
          "ref": "2ef5ad10-8a0c-41a6-9454-c2ae9afe88bb",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e0a0c1a9-ebb6-44e4-abc7-874479bbcaaa"
        },
        "item": {
          "id": "f6b70508-312a-437c-a3db-9af39be05573",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "1ff9a5d5-f1cf-43be-9cee-a70437321aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923a2e48-35bf-48e5-b373-1517ef72faf0",
        "cursor": {
          "ref": "46996d2f-607c-4265-96d0-9eb2eb69c833",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "df4521f8-1df5-4e04-9bbd-0a4b2387ccd2"
        },
        "item": {
          "id": "923a2e48-35bf-48e5-b373-1517ef72faf0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "337802aa-1ad1-47a4-9c35-316df947b14a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b024f9-dbbc-462a-80b4-1ef0187690db",
        "cursor": {
          "ref": "b357af59-bff0-47ae-aec3-e3e841df9d42",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "162eeb8a-117c-42c7-818e-37bf2e3b3762"
        },
        "item": {
          "id": "76b024f9-dbbc-462a-80b4-1ef0187690db",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d3fdd14e-6b0e-437e-9f20-930da440d0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e4aa83-d618-4198-ba26-3bc69decad35",
        "cursor": {
          "ref": "5a88e33d-6657-4680-b484-3113bbdf70f3",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "67e16b3e-d61a-4a7d-8b82-ea1edece9ed3"
        },
        "item": {
          "id": "73e4aa83-d618-4198-ba26-3bc69decad35",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7450dcf5-4b9c-435e-a7f0-c9ca728a2fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f40e6d-0bd1-408b-98eb-96f20a9ed57e",
        "cursor": {
          "ref": "2973254f-89b5-4182-9625-9edb542e83a2",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1b4af115-0adb-4d5f-9c56-f133481b70a9"
        },
        "item": {
          "id": "79f40e6d-0bd1-408b-98eb-96f20a9ed57e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "eed93714-8493-4a84-8137-797741bb23e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e87e32-cf33-47d0-b237-1318e7e87b66",
        "cursor": {
          "ref": "ecfed0bf-e8d4-46e5-b3ff-ad7d79e582b5",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7db20e3f-8c24-47e4-9042-e9decae7b705"
        },
        "item": {
          "id": "74e87e32-cf33-47d0-b237-1318e7e87b66",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2e70e12e-8e44-42b0-979d-b2c1377816cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a89a8c8-c4d1-4c9b-9c9e-4642ba4a27bc",
        "cursor": {
          "ref": "850245cc-b774-46d0-b05e-cc982e9faabf",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7e6eaf8f-31f8-4edb-9516-cc9e0bcc8d17"
        },
        "item": {
          "id": "0a89a8c8-c4d1-4c9b-9c9e-4642ba4a27bc",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "07e7ee28-504d-4b92-ad42-28def75e8ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740d81b8-0ac9-449f-9721-5f5b27db89fc",
        "cursor": {
          "ref": "2cc925c7-6fe8-40ff-8087-8a9f276b4d34",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b65a578f-43e6-4d53-90c4-adf423e97d49"
        },
        "item": {
          "id": "740d81b8-0ac9-449f-9721-5f5b27db89fc",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9e78355d-59e9-4676-b2be-e7bf36916ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8f3605-b69b-4aec-8649-13f95f3b7b80",
        "cursor": {
          "ref": "bff30a31-29f1-44d9-bcee-32b25638a00d",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e13453a5-c592-4532-9eb6-af51cc215c0e"
        },
        "item": {
          "id": "4d8f3605-b69b-4aec-8649-13f95f3b7b80",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "65286105-aee1-46f2-8b1f-127bed4033bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff47ae1-781a-441f-8503-c6014177af57",
        "cursor": {
          "ref": "d961f6bd-c893-41a3-8b12-63d51c28211f",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "56495bf5-de9f-4adb-b575-0243622a89fb"
        },
        "item": {
          "id": "5ff47ae1-781a-441f-8503-c6014177af57",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "41cac260-2608-4844-a7f6-6eb483c99f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3fd7a0-f35f-47c9-92f5-99e3406c401e",
        "cursor": {
          "ref": "b10d3d06-9b10-44f9-8b79-a889e7e17e08",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "cd7fec72-9db6-4400-91d1-885a921bc071"
        },
        "item": {
          "id": "6b3fd7a0-f35f-47c9-92f5-99e3406c401e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6f94ec2c-a912-4b0b-bdbc-41c66ad8e973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a59b34-2bd3-4b58-88c4-e178bbbf1076",
        "cursor": {
          "ref": "2ecf0442-74fa-45d6-8807-57e755014c73",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d5f90123-1224-42d4-b5d4-979acb1894fe"
        },
        "item": {
          "id": "10a59b34-2bd3-4b58-88c4-e178bbbf1076",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2df6e28f-733e-4981-ac10-8ad71b836fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b967a83-9150-4d6f-a303-660c214937ee",
        "cursor": {
          "ref": "e55fee98-888b-4b61-aecd-37e8d308f8ae",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ad456028-b46a-4331-ad8c-69644c4dc032"
        },
        "item": {
          "id": "0b967a83-9150-4d6f-a303-660c214937ee",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d9efc1b1-cd52-4fdd-af5d-b80ed2ef16a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eac413d-9729-4d47-be64-e8bf7aac8a43",
        "cursor": {
          "ref": "67caf5c9-a2ab-4568-ab30-0f0b77f2fdde",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f5491b71-b98f-480e-8a09-e9c5dad3969f"
        },
        "item": {
          "id": "7eac413d-9729-4d47-be64-e8bf7aac8a43",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1e38caa7-bab2-449e-80a7-b5b802b402e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7251922f-404d-442d-9a79-2b89fdf79ceb",
        "cursor": {
          "ref": "623edeab-c985-4268-aa57-ccf0fe2033c3",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "19b6ea23-42ca-479c-af4e-9a1cab61ffc2"
        },
        "item": {
          "id": "7251922f-404d-442d-9a79-2b89fdf79ceb",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "700cbf34-3515-4d2d-8525-0909c7160b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8fda8e-78d2-4434-9814-b07872587834",
        "cursor": {
          "ref": "aade335e-6927-40f5-9cfe-d18a808cb0f7",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4581dd77-4b8f-432c-b3a3-f542fd869360"
        },
        "item": {
          "id": "5b8fda8e-78d2-4434-9814-b07872587834",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "3c678fb6-c9aa-45bd-986a-09432cf33cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c155e752-f675-4ebb-a1b1-5a4e946929db",
        "cursor": {
          "ref": "c8b9e4c6-06c9-4191-b9f4-1d109f1c39a1",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "164d0912-78d7-4ef2-b56f-cf159e387317"
        },
        "item": {
          "id": "c155e752-f675-4ebb-a1b1-5a4e946929db",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "703f2925-0ac8-428e-84c2-5a67966b397a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da910f6-c714-4752-b8ec-89ff88c30be9",
        "cursor": {
          "ref": "c783b8cb-89b0-4cb7-8670-7482edb26eab",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d559534b-fa40-4933-97a0-93f6289fcc09"
        },
        "item": {
          "id": "7da910f6-c714-4752-b8ec-89ff88c30be9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7a2a74f7-f973-43e8-9f2f-9423fd461e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7659da35-608e-4140-82b2-150c1ce66d8a",
        "cursor": {
          "ref": "abc5f5be-c6ad-442a-b32c-1ae8631b0d5c",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4760bd7c-3b31-414a-abe1-99481ee0537d"
        },
        "item": {
          "id": "7659da35-608e-4140-82b2-150c1ce66d8a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1941d10a-7cff-4902-be77-f3815dd67178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e57a3f1-f1f1-4dad-925c-f1f1807bc059",
        "cursor": {
          "ref": "de39e920-7fde-4e8b-9ee2-7a61ffb455c2",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "abba08e9-86c5-4733-8a98-dce653731e73"
        },
        "item": {
          "id": "9e57a3f1-f1f1-4dad-925c-f1f1807bc059",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "afa0302c-88fa-42e7-b0c6-e9a9fc5c10e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c73ec166-2000-4b1c-a652-77e57483538e",
        "cursor": {
          "ref": "fe594e55-11f1-4146-955b-d22c9faa4b3b",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1c456ebc-8a77-4e1f-88c0-74fa1bd11002"
        },
        "item": {
          "id": "c73ec166-2000-4b1c-a652-77e57483538e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "bf92f970-35d1-4fa3-9a85-8c590610d077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95276709-9c25-46ac-bb2a-1f46e1e3eb6b",
        "cursor": {
          "ref": "c20c3303-e9d4-4076-bec0-5810f4fb6ff4",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e8230084-dfcd-42d7-a39c-4881076143ac"
        },
        "item": {
          "id": "95276709-9c25-46ac-bb2a-1f46e1e3eb6b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "563b0f36-4cb4-4164-ba5e-d2192222db8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e58688-4d46-4e54-b6da-bb1dc88cc022",
        "cursor": {
          "ref": "5bfc52d9-cfc5-4e7d-a1f9-64cf1e189291",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "3aa2b3c8-59d7-4681-9471-83b7a076c27f"
        },
        "item": {
          "id": "f8e58688-4d46-4e54-b6da-bb1dc88cc022",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "26fcd438-e428-489f-9617-42e8ead0813d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cbbb358-4efb-46cd-bdde-be5d4b0f9a92",
        "cursor": {
          "ref": "e6844dd5-48f4-4f29-baf1-08278b14d02b",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b882c29a-0ff2-4742-8e42-0ae7098bc010"
        },
        "item": {
          "id": "5cbbb358-4efb-46cd-bdde-be5d4b0f9a92",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b770aee8-8aed-4361-9110-bb3bc660b8d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e15bc9-49a9-4b5b-8344-2b30ee5ed7cd",
        "cursor": {
          "ref": "68c136dc-d456-4efc-bdaa-7d6a713327fc",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "49e0c751-2c18-4d2a-9413-2a1c6e4feade"
        },
        "item": {
          "id": "42e15bc9-49a9-4b5b-8344-2b30ee5ed7cd",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6fe8ff64-8e6f-4d19-951a-95422d4de33d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b1b6a7-3a1c-4121-a95b-90b7f6c1139a",
        "cursor": {
          "ref": "c68979b0-5382-47ae-9ec3-5230f9224cf3",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "42003d13-4e29-4d13-a50a-d482964bc5ce"
        },
        "item": {
          "id": "04b1b6a7-3a1c-4121-a95b-90b7f6c1139a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9733e80a-a872-46ef-adbd-7a4d2a84425c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3480b92-f36d-4811-95ee-d73644da4ef9",
        "cursor": {
          "ref": "a6b25d67-1140-438b-a2d2-05a31e6edfdf",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3846d155-0aa0-4d2b-92ce-aadb9736e5bb"
        },
        "item": {
          "id": "b3480b92-f36d-4811-95ee-d73644da4ef9",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b5f67f2b-0202-4aa3-9eb2-3e587d885391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a84d74-cc71-43d6-82ef-9f9fa3d36a5a",
        "cursor": {
          "ref": "bdeb9285-a285-425c-9561-c736beffb6b6",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "522a0657-9950-4237-b0d5-1f9272a8c7e0"
        },
        "item": {
          "id": "52a84d74-cc71-43d6-82ef-9f9fa3d36a5a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "92271f79-3947-4415-9d23-f7e52d75498b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f525c9fd-acc4-4bd5-998b-f316e99e87ec",
        "cursor": {
          "ref": "8a5a2556-86f5-422c-b77a-44cf9655e504",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "05619f02-a51f-4d4a-a6b2-b50a8461415a"
        },
        "item": {
          "id": "f525c9fd-acc4-4bd5-998b-f316e99e87ec",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "013c612d-c305-45fa-ac5d-033860198916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b118c7-2602-49da-8530-066ae081c262",
        "cursor": {
          "ref": "dbf6354b-b990-4c5e-b673-f5002f79fe4e",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1f2431f5-9308-4ca3-8797-9505e40d494c"
        },
        "item": {
          "id": "f0b118c7-2602-49da-8530-066ae081c262",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "080eef2b-1ba9-42c9-8fe1-46fcb36210a4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb2ccf4-5db5-4157-b09d-81cb5bd1af5c",
        "cursor": {
          "ref": "dc810366-cec5-4842-81f2-26d8890e5989",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b1bdf2a4-b18a-4034-a67c-e8670edfa880"
        },
        "item": {
          "id": "4cb2ccf4-5db5-4157-b09d-81cb5bd1af5c",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "1035be31-64d3-4754-8255-a80e4d323e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "cd7f823e-a6c7-4373-a716-cee204c14851",
        "cursor": {
          "ref": "4855ea70-243e-4f6d-9541-826fe85d14af",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c8ca82b4-c277-40ab-bd3c-ba010c02e55a"
        },
        "item": {
          "id": "cd7f823e-a6c7-4373-a716-cee204c14851",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ec079683-15b9-4664-b332-60dd5655240a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "0a6a1048-fd95-4680-93be-3ca1fa56acd6",
        "cursor": {
          "ref": "1ed7d394-b147-4274-8c72-7040439788bf",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "291ba0f4-63f7-4b82-b128-32fa58f7713a"
        },
        "item": {
          "id": "0a6a1048-fd95-4680-93be-3ca1fa56acd6",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "493adcac-0e50-4629-9eba-56023d066f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "91da2e82-b283-4c95-b0c3-ca90d73089cc",
        "cursor": {
          "ref": "e393f79f-2e0a-41a0-87cd-fd6fd03c6eef",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a07d3d28-9d4a-4c83-9252-88ac81206291"
        },
        "item": {
          "id": "91da2e82-b283-4c95-b0c3-ca90d73089cc",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "caf39e1f-4771-4757-90f6-b4b36cfd8bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "d63662f3-66ac-4d01-a1ab-fc70fbb1e86d",
        "cursor": {
          "ref": "398ac1f8-7891-45a2-bd78-09e45d321e2e",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1a8dba9e-5648-4cbc-b3ce-0f3884d0cae7"
        },
        "item": {
          "id": "d63662f3-66ac-4d01-a1ab-fc70fbb1e86d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7e0686f2-f2cd-4863-a0d4-4680d6ec8d7e",
          "status": "Created",
          "code": 201,
          "responseTime": 8386,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4eae82-c4dc-4420-b32f-1a8f4c23fe97",
        "cursor": {
          "ref": "8bdf51fd-1676-41c0-be50-9c2e6f66bb43",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "04ded7c8-5c8f-485a-a5af-b096671649f8"
        },
        "item": {
          "id": "4d4eae82-c4dc-4420-b32f-1a8f4c23fe97",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "97e0815e-b339-4d51-b4ab-816cc985b4d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "9a7b6fc6-fff7-4bb0-bb4e-af521e051977",
        "cursor": {
          "ref": "1055a9de-d803-4feb-9267-9fb93a9e2710",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "31f540b8-488a-451a-86d0-4c561cd0c3c6"
        },
        "item": {
          "id": "9a7b6fc6-fff7-4bb0-bb4e-af521e051977",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "636a3650-cac1-41d8-a0ac-717235b08de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "03271e33-e6d7-474f-acc3-71a2789aba0f",
        "cursor": {
          "ref": "49a13d3f-eec8-43c0-b818-9a2ce4b52221",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b1c17cfa-1c70-4f03-942d-b8dc868e3992"
        },
        "item": {
          "id": "03271e33-e6d7-474f-acc3-71a2789aba0f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2bf241b9-162c-4246-9bcb-5342ced63b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794b516a-befd-4e35-8cc7-92b1cf20500f",
        "cursor": {
          "ref": "1e3a3756-96ad-4fc7-920e-c830c0e573c2",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fa796e73-b545-431b-a44b-cbac94331a87"
        },
        "item": {
          "id": "794b516a-befd-4e35-8cc7-92b1cf20500f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "efa05e7d-ae7e-4a6b-add8-65d93a740085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845f19cd-8359-4d9c-b58a-fb5c9be188cb",
        "cursor": {
          "ref": "54ea56bb-c299-4a3e-81e0-62952501becd",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3382f4f4-cf32-4d81-ad27-7851117d9fa5"
        },
        "item": {
          "id": "845f19cd-8359-4d9c-b58a-fb5c9be188cb",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "04b12df1-d9d0-4d36-ad15-3922133cfeb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a693ed16-1a9a-4c37-9c22-5edc2f65d257",
        "cursor": {
          "ref": "baa0e7ee-0a14-4013-bd12-94b9888c1c2e",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "959cd0eb-7122-4cf9-9bf0-b9a82f07e2f8"
        },
        "item": {
          "id": "a693ed16-1a9a-4c37-9c22-5edc2f65d257",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2b392b10-0bf3-4941-abe2-7e8755b64373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f22966-2ded-490b-9730-451e435ccb3d",
        "cursor": {
          "ref": "9295175c-e657-420d-9acb-054423d95567",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "91a8e160-4076-4881-8d7a-80602e6f37de"
        },
        "item": {
          "id": "f0f22966-2ded-490b-9730-451e435ccb3d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "02f6cc09-48d6-411c-acdc-1e82b1c114f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfdbee5-8a44-4711-b86c-5cbab609d89b",
        "cursor": {
          "ref": "cecb9090-4583-4736-9d2e-d541952f23ba",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "58e0332a-f9b5-46ac-8c99-d194c12c92bb"
        },
        "item": {
          "id": "fdfdbee5-8a44-4711-b86c-5cbab609d89b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a6a37018-4d36-4bfb-9029-214da4181cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03896f10-7028-4e41-a077-93c05276e8a8",
        "cursor": {
          "ref": "6fbb08a7-21a0-42b8-8d6f-e15995748cdf",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "32a5351b-5e44-44c3-8820-d6bc7bdaf408"
        },
        "item": {
          "id": "03896f10-7028-4e41-a077-93c05276e8a8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a0b1b677-58b1-4d19-a2b2-9cdc5a1e56cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4faaf248-59be-487c-819b-43894d14b660",
        "cursor": {
          "ref": "f6b092ff-0425-47b7-bc30-8715a9421471",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "912abd19-65bb-48db-8013-b8f270084458"
        },
        "item": {
          "id": "4faaf248-59be-487c-819b-43894d14b660",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b5ffe365-5ca5-48fa-b9a6-3203ec87e77f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9158968b-c9bf-464f-be87-931c0d4639c5",
        "cursor": {
          "ref": "f03b78bb-5e19-4ca6-93ba-a3721e1fb549",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6901edf3-c76e-48c8-9d5a-8ace3482044f"
        },
        "item": {
          "id": "9158968b-c9bf-464f-be87-931c0d4639c5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "af8852c5-52cb-440c-a99e-8618fc4d0c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d0d537b-7775-4d9b-80a4-52c26aef6c37",
        "cursor": {
          "ref": "fef34a88-147a-4860-b89d-9c37eafc7c98",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "38cf1185-61a9-4b4d-be28-aa239b87bf39"
        },
        "item": {
          "id": "1d0d537b-7775-4d9b-80a4-52c26aef6c37",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4e29b674-fa12-49a4-8462-c7a7952d613f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e46058-79f3-48a0-b9fd-97eb46f34ad6",
        "cursor": {
          "ref": "b6a3a251-2687-441d-8b32-479bf317e467",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b3965b4c-f2f7-4254-a1b0-7b8f81d4537a"
        },
        "item": {
          "id": "54e46058-79f3-48a0-b9fd-97eb46f34ad6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6fa0d34f-2168-4985-bfb4-34b4d6ee9bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6be6de-36a7-476d-b84e-7dd7cd675290",
        "cursor": {
          "ref": "6dd9ec2d-7f8b-4c19-92e7-ef231120a889",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6eb33b8d-95b8-4799-bfd6-d03f6e547c59"
        },
        "item": {
          "id": "ad6be6de-36a7-476d-b84e-7dd7cd675290",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bc68fd37-d697-4a00-8b60-0b73aa4f42db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe36cca-a8a6-407a-87a5-c81f5b68fe34",
        "cursor": {
          "ref": "38532944-a651-46e5-96bf-76f38481df99",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "19b3f918-2a4d-4f1b-9bb4-05d807d34998"
        },
        "item": {
          "id": "8fe36cca-a8a6-407a-87a5-c81f5b68fe34",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "11e86133-453a-488d-8e80-6b2117eac180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f0d33f-8379-4b98-bb97-12ce8f356dd3",
        "cursor": {
          "ref": "aee1827f-0731-462c-a427-32265536f679",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b1995460-8f35-4a9f-bc81-ea0f6fe8f099"
        },
        "item": {
          "id": "e0f0d33f-8379-4b98-bb97-12ce8f356dd3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5d469753-4460-48d1-ac72-b9353f13b9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e678f5-a41a-431b-91df-e84cec5254ce",
        "cursor": {
          "ref": "574f1789-4723-4973-802b-23afb470d4ff",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "78185d8b-dc02-4e07-92ef-d6e91ec28f66"
        },
        "item": {
          "id": "04e678f5-a41a-431b-91df-e84cec5254ce",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4f1a94dd-8ed6-4a72-ad89-1a7a032c23d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ee71cc-44a4-4669-9958-012e7a5f9c5e",
        "cursor": {
          "ref": "53836fad-19eb-4ce4-9f81-94e2adfa480f",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5eed9833-5034-4ac9-8a7c-b7e9c57ddf78"
        },
        "item": {
          "id": "24ee71cc-44a4-4669-9958-012e7a5f9c5e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "16c4b693-a935-49c1-8145-2c8f01a6c767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9517f20c-f43a-407e-a850-f9dff38c4f0e",
        "cursor": {
          "ref": "0c81b3cf-098f-4e3f-8f28-4aceed9de2d5",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "bc34f263-e997-42e6-85ed-f1065372130c"
        },
        "item": {
          "id": "9517f20c-f43a-407e-a850-f9dff38c4f0e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "87c31546-f06d-4dff-bf1e-806ea31eccca",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "f46494e0-9fbd-47e2-bb18-6d686d1c99a2",
        "cursor": {
          "ref": "c8cd3e71-889d-440b-97f9-ed8ac136491d",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "fd35cfe4-49f8-4a80-852c-f9128e4b8f42"
        },
        "item": {
          "id": "f46494e0-9fbd-47e2-bb18-6d686d1c99a2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "adf269fa-962b-4bae-83c9-e00640336988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec55bb52-2651-4299-8c5a-759fc1a1e72d",
        "cursor": {
          "ref": "7c74aad5-b2c9-4620-b111-820801d0f195",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ba6e59d6-683c-4eb7-b40a-000e19faca53"
        },
        "item": {
          "id": "ec55bb52-2651-4299-8c5a-759fc1a1e72d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "96829aa4-3792-446b-834d-7cd5d1880832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4d661c-e272-41f9-b003-1209de009987",
        "cursor": {
          "ref": "283aea6f-1d2f-4a58-8a36-a1c7496e2d80",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7f512533-76b3-4638-9315-1262d0d358ec"
        },
        "item": {
          "id": "0a4d661c-e272-41f9-b003-1209de009987",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "adb4ee60-a75d-437f-a772-93260e0bea26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8afd636-a600-4978-b725-bb2bef0287f1",
        "cursor": {
          "ref": "68e48f54-7879-484b-893f-8bcbcda42877",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6d6cd136-4037-4f19-acca-f8fb1f8eb7c6"
        },
        "item": {
          "id": "c8afd636-a600-4978-b725-bb2bef0287f1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9c7187c2-6901-4ddd-80b4-808bbf2ca4b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2dfb91-20d6-47c3-a0cc-206b0bb4f820",
        "cursor": {
          "ref": "4937ec40-f4f5-4cb2-b602-7e92ff5d7a41",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f03cf6b7-d398-4ccd-ad98-7a46a8ff055f"
        },
        "item": {
          "id": "ce2dfb91-20d6-47c3-a0cc-206b0bb4f820",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ae7e2703-a2db-4830-8201-7bb9b8e8558a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8763527-6f7e-448d-9512-04a6e2877600",
        "cursor": {
          "ref": "e0139748-0d88-460c-9d2e-32d7c6927696",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "45a49cdb-95f1-479d-8619-a4a1fa0b630a"
        },
        "item": {
          "id": "c8763527-6f7e-448d-9512-04a6e2877600",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "29c5f3cf-e394-4e2f-b68f-045cd305d4ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82fd2c8-451f-4de1-bec3-529a79599fd4",
        "cursor": {
          "ref": "11e52948-b54a-40b6-8567-98b7f1a1b006",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9dbbb28e-cd89-4efe-ac75-f3170c63eb38"
        },
        "item": {
          "id": "c82fd2c8-451f-4de1-bec3-529a79599fd4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e4688cc4-d1aa-4ffa-8a2a-f7531e1c3174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde49d5d-088b-48e0-ae5d-3d90c7807548",
        "cursor": {
          "ref": "72c9c6b8-5dc8-4c85-af2f-9445b563a54e",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "66428f07-f35f-4be0-bbcd-cd329c4ac344"
        },
        "item": {
          "id": "cde49d5d-088b-48e0-ae5d-3d90c7807548",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3c211694-0e51-4cd1-aa26-74bedd7964ff",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "2ab48eae-806b-423a-a101-90a6f002d686",
        "cursor": {
          "ref": "19ff742f-a051-4c35-be1e-b261478d305a",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4edc0c51-d42d-4b66-9007-8b7175fa9abe"
        },
        "item": {
          "id": "2ab48eae-806b-423a-a101-90a6f002d686",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "db29abdd-3f10-47d9-af3a-e0f9120ecc4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd73fff-839f-43e3-b266-b5b517b9d687",
        "cursor": {
          "ref": "ba6601c5-5454-4b14-80a3-109c3521d5b8",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3ff4ca14-9897-4c8e-9179-c47ef41558e8"
        },
        "item": {
          "id": "afd73fff-839f-43e3-b266-b5b517b9d687",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4daa4076-7be3-4b22-870a-4e2e9f3b4571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79223e4-b8d3-4844-8caa-7e1405d65667",
        "cursor": {
          "ref": "804d449d-7451-4851-854c-29d93f7fb774",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "470fa966-9903-4ab0-b093-ebdcde5441ad"
        },
        "item": {
          "id": "c79223e4-b8d3-4844-8caa-7e1405d65667",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "39df03b5-ea05-4506-83ef-6599eeb0723e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19760eff-d585-4cf8-94c5-fbe7e480de13",
        "cursor": {
          "ref": "0d4e6e36-6ba3-4f08-a91e-73ac56b9dceb",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e0b7deb9-9f12-42b9-9caf-922caa1afa75"
        },
        "item": {
          "id": "19760eff-d585-4cf8-94c5-fbe7e480de13",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "12c889be-7d6c-4c24-ac65-10b55f2abe4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9256214d-37de-4e2f-a1e1-99c17be97aa4",
        "cursor": {
          "ref": "49ff93a7-ea82-45a1-8cd1-b1149945c9b8",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "cffa3f10-68f9-474d-a70b-1220597b6720"
        },
        "item": {
          "id": "9256214d-37de-4e2f-a1e1-99c17be97aa4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bbf49055-b47c-45ea-8656-63d4258cb93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c56f8d8-baae-41e0-a2fc-796d1a26ca5b",
        "cursor": {
          "ref": "6b44ec82-fff7-4c8c-b191-e9c145aa6356",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1f5c9c35-5d98-44ac-a575-01b084944f07"
        },
        "item": {
          "id": "9c56f8d8-baae-41e0-a2fc-796d1a26ca5b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6ef3ac26-f570-4670-b5de-2e39b948707e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e9fbc5-af68-4aa6-aa29-a6a2bf58109b",
        "cursor": {
          "ref": "d1039fd9-0064-4483-90ed-fd97b6bf291c",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "670ab4b4-0e7f-4dd6-85a9-47e25be6ed8e"
        },
        "item": {
          "id": "23e9fbc5-af68-4aa6-aa29-a6a2bf58109b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "4cc6fdd7-4d45-4d42-9bd0-69a520f50967",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 81,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "8d50e64c-cf9d-40a0-8364-a367a2129da1",
        "cursor": {
          "ref": "ef6ac78e-37f2-44b5-b3cd-ef5c49af555e",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ad4bdbb8-208e-428c-9e76-50524b9cb7f1"
        },
        "item": {
          "id": "8d50e64c-cf9d-40a0-8364-a367a2129da1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "caf53e92-e667-4c9e-a446-c2b8eb02eadc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a39994-86a6-496c-8dd2-362dcccdf4ce",
        "cursor": {
          "ref": "5cec9053-4854-406b-858f-c7cfa01cfa4f",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f5892433-18eb-4407-8b2f-59fbb41764f3"
        },
        "item": {
          "id": "67a39994-86a6-496c-8dd2-362dcccdf4ce",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "fa30faa4-5976-43ae-8386-499d7aeccca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77bd14d0-3bf9-4945-8086-e38145a2f02e",
        "cursor": {
          "ref": "dfb50c09-d933-4187-b1d5-589f9ab423e8",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8c35ff7b-4d54-48ca-a149-a8437e51405f"
        },
        "item": {
          "id": "77bd14d0-3bf9-4945-8086-e38145a2f02e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "04f99d2c-6a11-4492-826f-c8ed8fab6ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6987abf9-2b7a-4b49-9524-43df9d8ca286",
        "cursor": {
          "ref": "56158618-82dc-4e10-830f-30e03cf48b0a",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b0030c3d-0f7f-4e08-b02b-663baf2b8797"
        },
        "item": {
          "id": "6987abf9-2b7a-4b49-9524-43df9d8ca286",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9f6b0acd-104f-411d-9ffd-63538a6f50d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b9ba7b-46c9-43d9-a501-c506c769128e",
        "cursor": {
          "ref": "4402260e-3edd-4ed3-b363-4bbde967cdf2",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "28f4429a-9633-46b9-9c4d-816bbbd1f474"
        },
        "item": {
          "id": "d6b9ba7b-46c9-43d9-a501-c506c769128e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7e584ed8-d435-43a2-aee0-e341819d2661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1db9f3-0a99-4344-9dd6-db5bd7b177c7",
        "cursor": {
          "ref": "f2403dec-3326-4d49-83f9-f1f24d69f7a3",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "205355f7-a634-40a1-aec1-f5406d2dc6e5"
        },
        "item": {
          "id": "0b1db9f3-0a99-4344-9dd6-db5bd7b177c7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "494866c5-83cf-46b4-a0d5-cd16c646c74a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e86af4-3550-4e5a-b67e-dd0553bd8806",
        "cursor": {
          "ref": "4f983440-a1d6-412f-a6c4-e48a5b1f0694",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4ce281ce-9f6b-4d75-8186-53281c4ee650"
        },
        "item": {
          "id": "61e86af4-3550-4e5a-b67e-dd0553bd8806",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b263146f-686f-4b94-9bb0-9d82ab086b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580fdaf3-0c0a-41b8-a2f7-04be651e80eb",
        "cursor": {
          "ref": "03741a86-a741-4af0-aea2-e46b1d225501",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d888f9f1-de17-4e95-857d-89639434b228"
        },
        "item": {
          "id": "580fdaf3-0c0a-41b8-a2f7-04be651e80eb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9c14b235-f3c2-45b4-bdbb-ce3852df48cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b582376b-9eaa-43b7-a7c2-2cadca77927c",
        "cursor": {
          "ref": "b32dc590-c940-4dfe-aea7-3426e2632c9d",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "89112a8e-df5a-41b9-88fa-10f025b16370"
        },
        "item": {
          "id": "b582376b-9eaa-43b7-a7c2-2cadca77927c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5610fbda-9b0c-4321-bae0-7e8cfa001ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797ca5df-5a22-4b03-875c-0c65542e96eb",
        "cursor": {
          "ref": "9b87b0a4-edd4-4e2b-a951-b70e19c91b20",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "abed7d44-0eb0-4ad7-92f8-a640b4079f35"
        },
        "item": {
          "id": "797ca5df-5a22-4b03-875c-0c65542e96eb",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "35ce5a51-8adc-4d46-9d98-cf2e50703f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64dbc2d7-99c1-4da6-b0de-d4a9471ed305",
        "cursor": {
          "ref": "dd50e44c-24b4-4722-8774-916d03599477",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d85ebae7-b2c2-4f82-afaa-0ec731f1bb19"
        },
        "item": {
          "id": "64dbc2d7-99c1-4da6-b0de-d4a9471ed305",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6542e993-3d8e-4cf1-916c-303f3def5026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3352239-3fe4-48cb-9cf5-9a621adf2e96",
        "cursor": {
          "ref": "fc4307c7-0bb4-4482-ad2e-1ceafa976e2d",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "dcde66cf-cae3-4aa2-8eed-cc4e2ea69835"
        },
        "item": {
          "id": "d3352239-3fe4-48cb-9cf5-9a621adf2e96",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e79532e6-2fef-4ae6-bf19-1f5d6738bea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1e93b5-f503-4c2d-98cf-cd48e5af38f3",
        "cursor": {
          "ref": "260c0b8e-4ac8-4825-8265-a927127531d7",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "201c8f32-d64c-4d5e-858b-825ff5cbc837"
        },
        "item": {
          "id": "eb1e93b5-f503-4c2d-98cf-cd48e5af38f3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d40919b8-5d85-45eb-8e58-583b0367d74b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b6858e-568c-4970-9df4-9e1581fd8eb4",
        "cursor": {
          "ref": "1bacac22-91b6-4fa7-8bff-45ab0019f4a2",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "30134829-3108-4a01-8e85-162db702d702"
        },
        "item": {
          "id": "10b6858e-568c-4970-9df4-9e1581fd8eb4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5a304aa4-55f0-4f06-a292-bb91f56e1eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09024d4-b093-4c50-a935-09a12dfb4496",
        "cursor": {
          "ref": "78778885-90ea-490d-a168-47289f63d37f",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5281f8a0-2a66-46f2-8c5b-a515e38eed03"
        },
        "item": {
          "id": "e09024d4-b093-4c50-a935-09a12dfb4496",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ba7fecf3-ce9d-43e4-9a8f-976ba7e4d21c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac7d2347-c6dc-4f1b-9fdb-306806c45cc0",
        "cursor": {
          "ref": "97ccfd4f-ebf2-4568-a84b-b48165400927",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c9227e76-664a-4c72-8950-b93b7cc51617"
        },
        "item": {
          "id": "ac7d2347-c6dc-4f1b-9fdb-306806c45cc0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "06d3d61a-a212-467d-81b3-63c320f4d336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f83860b-414a-4f69-a6da-74f5006feda4",
        "cursor": {
          "ref": "ca5a0386-c976-43fb-ae34-d02819c3b7e6",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "521ea8e6-cc53-43c6-a6ef-3996d988ef05"
        },
        "item": {
          "id": "6f83860b-414a-4f69-a6da-74f5006feda4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cf04f786-cdd7-4e22-be88-028d5f039e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e27db17-f54d-4d80-9a65-82fced8e1fb7",
        "cursor": {
          "ref": "22aabae1-1f0d-4811-bf7f-97628eb27d5e",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e2e91aa1-2cf9-48dc-adc8-589bb9aff28b"
        },
        "item": {
          "id": "7e27db17-f54d-4d80-9a65-82fced8e1fb7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "54a52452-673f-4f9d-b743-c485aa4a1f1b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 48,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "41e0427e-15cd-4aea-bb6a-bb3a0edabfdb",
        "cursor": {
          "ref": "69116eda-c8e3-47f3-bedb-c3656dd68a4c",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7f5f07f2-cc14-46ad-a615-491c7e44625e"
        },
        "item": {
          "id": "41e0427e-15cd-4aea-bb6a-bb3a0edabfdb",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6622bb4b-c058-44e9-b5d0-1bcbbd5be0b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0615e9-9e01-4f35-9643-b349a5861542",
        "cursor": {
          "ref": "7217bf01-b183-46db-9314-842a932dbff9",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ee706348-a861-4005-90f2-fc551cf9528a"
        },
        "item": {
          "id": "1a0615e9-9e01-4f35-9643-b349a5861542",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b87c9987-13b8-4424-9f72-a0bac67ad138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d1078c-47e3-4b21-951e-b6b9bdde9373",
        "cursor": {
          "ref": "790afacc-4a6a-4d6f-85ef-1241cdaf387e",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "75042ef8-1b0c-4abf-97b4-0f2a9a82266e"
        },
        "item": {
          "id": "11d1078c-47e3-4b21-951e-b6b9bdde9373",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ee83a1ee-b7aa-49a7-9f1d-5c80a572661a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb35970d-753c-4288-b839-b4a567409d84",
        "cursor": {
          "ref": "b9a49725-3df7-4c4a-a2b9-afe8111efcd1",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "00c98792-39c5-413f-bbb9-5f5722e004df"
        },
        "item": {
          "id": "cb35970d-753c-4288-b839-b4a567409d84",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4c5433af-6ec1-4355-8e0e-78c83ebdd342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2aa7ad-549d-484b-be69-85d032e0531e",
        "cursor": {
          "ref": "5f822768-3cc8-4726-8b21-929be4c407e7",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "399c7d0b-8a32-4020-8faf-69cf8d90fb4e"
        },
        "item": {
          "id": "8d2aa7ad-549d-484b-be69-85d032e0531e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6640f8cf-a98e-4d4b-a542-8ad15e94c087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b7ab30-a6cb-43c9-813c-81f7f6115229",
        "cursor": {
          "ref": "11f14eba-310a-43ff-b44f-ecea5ddcbed3",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "af9a5da7-6fb6-4f7d-bdd0-aa96bfeb8aa8"
        },
        "item": {
          "id": "81b7ab30-a6cb-43c9-813c-81f7f6115229",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "35243511-18e8-46f7-9cf9-be37be78378e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc7ba12-5e74-4f91-95c4-1863e68dea9b",
        "cursor": {
          "ref": "2cbd36cb-5017-4cb9-804d-adc8fb9c2be0",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0c00e50a-6fb2-4dd4-a7d8-ecf6e353791b"
        },
        "item": {
          "id": "7dc7ba12-5e74-4f91-95c4-1863e68dea9b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ff42d5a9-d01d-4d4f-8e2e-754314e9883c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a05208-9253-4be0-9e6e-703bead1c76b",
        "cursor": {
          "ref": "6288e0a6-c208-48f6-868f-ac4fa4750030",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c9c07cb1-6f7a-4a4b-b75e-4160d839c600"
        },
        "item": {
          "id": "06a05208-9253-4be0-9e6e-703bead1c76b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fcbcf1df-a3fa-41df-81f6-a757650d2669",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 32,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "5cfea072-5963-4838-bfec-4f16b2227a57",
        "cursor": {
          "ref": "113a674b-4f0e-48bd-979d-4f6c465cf4b3",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3025ada4-ceaf-4460-bc5c-4f7bc19461b5"
        },
        "item": {
          "id": "5cfea072-5963-4838-bfec-4f16b2227a57",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4efba184-8951-4975-8c25-2830fdf0397d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b20ab7-d04b-4093-be47-9711d81ae8da",
        "cursor": {
          "ref": "ff9b3fc1-f4a0-4c3c-9b1a-f229a15aaa68",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a1ca284d-7bc8-46e1-b902-0cc58e0976bb"
        },
        "item": {
          "id": "54b20ab7-d04b-4093-be47-9711d81ae8da",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7f2d2b44-1e71-410e-a660-383ab1a20773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed5a7d5-6097-42c4-8017-a34830b3895b",
        "cursor": {
          "ref": "8e94ae5c-ae7e-4eb8-b99c-48a99df2cbe0",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "db3051e7-9da3-489e-ada9-004c2331acc9"
        },
        "item": {
          "id": "3ed5a7d5-6097-42c4-8017-a34830b3895b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "705eeb3a-ca3d-4870-b803-cda13589f80e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78caa78-36c1-4f7b-834d-503bfee8cb43",
        "cursor": {
          "ref": "063e1227-acaa-43bb-83bb-b6153b22ab65",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e673a232-81a2-4f33-bc09-b0ab4be8f7ab"
        },
        "item": {
          "id": "b78caa78-36c1-4f7b-834d-503bfee8cb43",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d9f52edb-1c7b-4a97-af92-0636c38c4ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3201f573-d8a0-4967-bdfc-a664b423c9f0",
        "cursor": {
          "ref": "bb201363-82c9-4975-8ae7-22814f542122",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "80f9c2cb-6caf-44aa-98af-caea96a2f406"
        },
        "item": {
          "id": "3201f573-d8a0-4967-bdfc-a664b423c9f0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5007759c-df71-433f-9d91-0615513a7567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "115ddeef-9ab8-4299-ade6-7029ca89c8e9",
        "cursor": {
          "ref": "4aab2672-460c-438e-9665-c2762983c8bf",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6325f4ca-7e83-4893-93d3-5c0ce13c7263"
        },
        "item": {
          "id": "115ddeef-9ab8-4299-ade6-7029ca89c8e9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7f93e035-0ada-4fcb-ad34-6f670d6d7962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18fac71-2e02-4da1-b9c3-59e9fcfdef27",
        "cursor": {
          "ref": "1bd24298-51e7-4bb7-8f1f-06ec6b23faa1",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1161bc75-f927-4158-b926-83730a167f86"
        },
        "item": {
          "id": "a18fac71-2e02-4da1-b9c3-59e9fcfdef27",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "bdad93e0-a3bb-4729-9fc7-cc6cab0f27e4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "bf132927-ab11-422a-8ff7-44d8cec9f4e1",
        "cursor": {
          "ref": "9c038ff8-28f9-4bd4-ad78-24a55e0fc3c9",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "51f7b159-ac10-473b-9589-60d4f5c524ad"
        },
        "item": {
          "id": "bf132927-ab11-422a-8ff7-44d8cec9f4e1",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "eb6ab3c6-7dfa-49ae-85e1-b985eab37198",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 92,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "746e4669-3c6e-4156-9363-f5696ab5e49a",
        "cursor": {
          "ref": "1c288815-51f0-41fd-801b-e8b466463fe2",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "49d7820f-5b71-4a57-88d2-c21086474a27"
        },
        "item": {
          "id": "746e4669-3c6e-4156-9363-f5696ab5e49a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ebd42552-8bd9-4b96-9877-a4d05b50af35",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "880471be-78c3-4f22-b191-0dea43d7925c",
        "cursor": {
          "ref": "b74c8fb2-a805-47de-adab-142acfd73390",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "795ec807-f53b-472e-a750-ac941a6b3271"
        },
        "item": {
          "id": "880471be-78c3-4f22-b191-0dea43d7925c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "bc0f94cb-86db-47b8-9caa-146f267ae15d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "1323003d-3454-4622-b540-aa917055cd1a",
        "cursor": {
          "ref": "b56b1f6d-c898-46fa-b54c-b6fe4b4f1bdc",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "82630b9e-e161-4206-a2a9-afa8ad3e2c08"
        },
        "item": {
          "id": "1323003d-3454-4622-b540-aa917055cd1a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "dd18d3f3-181e-415c-8bed-c42300f919dc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "8e25de72-6151-4950-8e27-29d19c66cb6b",
        "cursor": {
          "ref": "094a0a64-ca7e-483e-891f-9de2bb2a594c",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a38211b6-eaef-4dea-a2d5-1ca05b58f782"
        },
        "item": {
          "id": "8e25de72-6151-4950-8e27-29d19c66cb6b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "6cca5c5d-022e-4e58-936a-8ebc40d59532",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 32,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "44fe6bc3-791a-4b63-a8e7-11d87a10f2bb",
        "cursor": {
          "ref": "6c3d4b4f-c890-420c-953f-507dfd2cec72",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1b97e230-87cb-42cf-aa44-1a1d1af70534"
        },
        "item": {
          "id": "44fe6bc3-791a-4b63-a8e7-11d87a10f2bb",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bde2b2cc-0197-4e4a-b383-62e95409c0d1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff31276-090e-4d52-9e73-d52f5b24d043",
        "cursor": {
          "ref": "e7d9b344-74eb-493b-b12a-3c0eb8f4fd4c",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "17fcff31-ed70-47c2-8271-56ca06b67687"
        },
        "item": {
          "id": "7ff31276-090e-4d52-9e73-d52f5b24d043",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9a0a38e9-91b6-4ce2-a0b2-8814a04bfcec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed41a50f-a6e8-438e-b790-e12c799e670a",
        "cursor": {
          "ref": "299b4bb6-63be-4c3b-8ac0-f038c2462c99",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4eb6a435-47f5-4854-9269-e6527055535c"
        },
        "item": {
          "id": "ed41a50f-a6e8-438e-b790-e12c799e670a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2f2c8927-ff40-4d10-9709-5036006b16e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e380893f-d645-4ec2-af23-859e248a282d",
        "cursor": {
          "ref": "61ac06fd-772c-46e5-a324-ef050926587a",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "214df0d4-1c1b-4ac2-8cbd-fe50847a0b0c"
        },
        "item": {
          "id": "e380893f-d645-4ec2-af23-859e248a282d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "da9bbe04-16a9-45ae-a908-5042edc8586d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a30e66-2132-4228-ae6d-64da0280d476",
        "cursor": {
          "ref": "7a56992e-f48f-4c04-b528-3babc5085fbe",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9d1b1451-599c-4fe8-824e-b44f46b892c2"
        },
        "item": {
          "id": "c2a30e66-2132-4228-ae6d-64da0280d476",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "dec39eed-6d31-4d38-a618-4b70ec987d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5da592-6a3c-42de-80e1-0696298a5d92",
        "cursor": {
          "ref": "d5498501-9c36-44a0-a164-eed90a32c98f",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1f7ddcd9-0e1c-48af-8e62-24f38acb551d"
        },
        "item": {
          "id": "cb5da592-6a3c-42de-80e1-0696298a5d92",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ed60a139-c713-4147-bd65-fdb57334adf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de867551-9639-4bd7-b371-56108eadf47c",
        "cursor": {
          "ref": "eeee294c-8b32-41e5-b6c9-c9eda3ad4d4d",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "74176c1d-c6b9-4f2c-bf57-323deabfe172"
        },
        "item": {
          "id": "de867551-9639-4bd7-b371-56108eadf47c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9f7731e4-cb3e-45a3-b2c2-5e8101548a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468c0c7b-66c1-4cbd-a590-f58a857519cc",
        "cursor": {
          "ref": "7ad70951-eed5-4a55-af3b-a7341945ae9d",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1b3999f9-0e31-48f8-97e6-12efa7fbf4d9"
        },
        "item": {
          "id": "468c0c7b-66c1-4cbd-a590-f58a857519cc",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7be4f949-c309-431d-9c7f-7c2c8d7abed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123df031-8c66-4ae1-845e-90b5e3af4753",
        "cursor": {
          "ref": "b7d4c387-7d84-4b1b-ac8e-dec62ed99426",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "14605cea-d0d3-446a-9f5d-57a991e5c7bb"
        },
        "item": {
          "id": "123df031-8c66-4ae1-845e-90b5e3af4753",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "01f877ee-ea15-4d3f-851c-8a7ce9c32be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6ea753-419f-4ef7-921a-3d7dda64f3de",
        "cursor": {
          "ref": "5e045f80-0c7a-4ece-929b-c55e32438e9c",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8d1facff-167a-4e86-9de6-4c7f4e612c60"
        },
        "item": {
          "id": "0a6ea753-419f-4ef7-921a-3d7dda64f3de",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a794099b-94f1-4eba-972e-97011fd4ff74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1129d1-bf5b-437e-8a95-14d1847466b8",
        "cursor": {
          "ref": "59fb5e1a-98a0-42da-ba8c-0793053db5fa",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6aa30f72-9086-43d5-b40b-0c1d948899a4"
        },
        "item": {
          "id": "cb1129d1-bf5b-437e-8a95-14d1847466b8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c4327463-37c0-4095-9631-e8094c24a874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f255d8-67f1-42fd-9d96-b342e193111e",
        "cursor": {
          "ref": "7cea2a20-8970-45a6-8c77-450037b724a5",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "08ac4318-567d-483d-9d35-46da2a4b06d6"
        },
        "item": {
          "id": "77f255d8-67f1-42fd-9d96-b342e193111e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e743b573-af3f-4aa7-b569-0a6ab2af1702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e26b5c7-b686-43b8-bdb5-eb284a298566",
        "cursor": {
          "ref": "ccf22a80-c8b5-4893-98ac-00ad7acd2089",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "dd39bcc6-6f7b-4b0a-8278-5e2306a2135d"
        },
        "item": {
          "id": "8e26b5c7-b686-43b8-bdb5-eb284a298566",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "aadde250-829b-4418-bd4c-c5ecbed1a5dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa8d97a-721e-4880-b442-a203fcedb989",
        "cursor": {
          "ref": "5ca0a143-611d-480b-a17e-a8aa564f37ff",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "55daeabd-4490-4001-8483-9f6ed8027c4c"
        },
        "item": {
          "id": "7aa8d97a-721e-4880-b442-a203fcedb989",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "bc945917-39e0-40fb-9923-07665bfa2ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924eb8a8-f216-4c3f-92e9-e6e997b3010e",
        "cursor": {
          "ref": "54ff1ee9-38eb-4701-a7f0-682a03946b52",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "df5bb6a5-5f3c-4f40-9594-868e07a22ab7"
        },
        "item": {
          "id": "924eb8a8-f216-4c3f-92e9-e6e997b3010e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3df14ed5-5cf9-4910-ad7a-e133b56c2499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60bc4574-d37f-47cf-b779-64dcbf429e7c",
        "cursor": {
          "ref": "badcf0c8-24e4-488b-8fb5-953f2a644a32",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6ac5afec-6e73-4f27-9566-37f60d61873e"
        },
        "item": {
          "id": "60bc4574-d37f-47cf-b779-64dcbf429e7c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "38568b6d-1aed-4b79-9706-afa05e77dfd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19abc21c-f604-42aa-8831-125e1c8199f4",
        "cursor": {
          "ref": "d93ccc3b-51f3-4c52-8f6a-4bb6f2d97670",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2980e98d-a54e-45d9-b24a-c778afbe4241"
        },
        "item": {
          "id": "19abc21c-f604-42aa-8831-125e1c8199f4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6675cd1f-2eb5-4ba0-a8e0-3eea45e9721e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4312360-cc1b-4bb5-b509-59efad4ccc84",
        "cursor": {
          "ref": "9c13d4d1-86ba-47e1-8596-2f1f12b00bb2",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c392f2a8-98ff-4b8a-be92-9beb2dfe5ee6"
        },
        "item": {
          "id": "d4312360-cc1b-4bb5-b509-59efad4ccc84",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "da1d92f5-1dda-444c-b428-7293a8b6cea4",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "217cacbd-6799-485c-82e1-78652cb052cd",
        "cursor": {
          "ref": "fe4d72cf-22e9-4692-89f9-f2cf66e7ddff",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "df2c14a6-1314-41d9-a03d-1e659e347998"
        },
        "item": {
          "id": "217cacbd-6799-485c-82e1-78652cb052cd",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b467ceb7-aeeb-4cae-aa6f-3a2497205733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bbb529f-6af2-4ac0-8f4e-c6b2083f6701",
        "cursor": {
          "ref": "c0fa92b9-9a28-4cb1-9026-1b7533e9340c",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "056de893-5404-4341-967e-7095a987966e"
        },
        "item": {
          "id": "1bbb529f-6af2-4ac0-8f4e-c6b2083f6701",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "16aa0c2e-4f14-48d7-9ec3-bd90075e3cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ea351b-ce32-4e27-96fb-b461204153c7",
        "cursor": {
          "ref": "9110fce9-69c8-4be8-bcba-5281349b5621",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5ecd4c81-9e1f-4430-b46b-3177bb06a074"
        },
        "item": {
          "id": "84ea351b-ce32-4e27-96fb-b461204153c7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f71ee609-e64c-428d-83de-e85b42d7e759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81467e15-6180-4a93-8c60-4a6699064c07",
        "cursor": {
          "ref": "5e1f6cae-bfc4-40a2-88f1-3cc8118825f9",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "229b348b-6af9-44b9-9560-6c871cce5d69"
        },
        "item": {
          "id": "81467e15-6180-4a93-8c60-4a6699064c07",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2beb713f-1a26-4424-987a-ee635c972859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c078b32d-4de5-412f-9d1f-137a12f3b32c",
        "cursor": {
          "ref": "ed8e0174-2278-46e6-b564-d092e71695c5",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e92ded63-5058-4d84-a111-50dc0e67601e"
        },
        "item": {
          "id": "c078b32d-4de5-412f-9d1f-137a12f3b32c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c2cf5e31-e548-4c46-a9af-3ef60291890d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0029d261-17c0-4a53-8f61-0b125b96ba9f",
        "cursor": {
          "ref": "90377be8-d63c-49c7-b894-c49d7707f51a",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c5bcc462-7809-48bf-8913-ff70153643b7"
        },
        "item": {
          "id": "0029d261-17c0-4a53-8f61-0b125b96ba9f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "af1aaa00-0c40-482e-9cdd-ce75ff8ec547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2fc3e61-5f0b-4c92-a873-ba79591afb39",
        "cursor": {
          "ref": "41b2d028-a675-4dcc-a5cf-a605da55cea4",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "fd339e12-7a18-42af-a926-a97a9fe06bb5"
        },
        "item": {
          "id": "f2fc3e61-5f0b-4c92-a873-ba79591afb39",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0e4eda42-399d-4ee1-993f-a0559ab43a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b5f0f6-bd9d-4ff0-a337-071d4ec9aab1",
        "cursor": {
          "ref": "592a2b9b-8f84-405c-ab66-fff314b77d3d",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "bab9362c-f8e6-4529-8f9f-357efa32d1c8"
        },
        "item": {
          "id": "21b5f0f6-bd9d-4ff0-a337-071d4ec9aab1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "470259c9-021e-4375-a125-277f6fe0e800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79efad5-34c1-457e-abac-162d21ed2580",
        "cursor": {
          "ref": "127b00f2-597b-4e83-a4c2-7588ebd07814",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9ec57b02-78f9-45a3-bf63-dbb46305b349"
        },
        "item": {
          "id": "c79efad5-34c1-457e-abac-162d21ed2580",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d9ddd94c-d4a9-4b4d-8118-5ec37c48824d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2154f029-7b6f-40ec-a6f2-a865eaac1afa",
        "cursor": {
          "ref": "edb71f29-a753-4bda-9ee7-f69b2bd446b9",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b89da502-cf59-468e-8250-08b9c9d9203b"
        },
        "item": {
          "id": "2154f029-7b6f-40ec-a6f2-a865eaac1afa",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e87f1129-d155-4cdf-a49d-f356c805b3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc31e55-0018-45ce-bc65-2a4ae18bfbd1",
        "cursor": {
          "ref": "5e56863f-c9f5-47dc-a07d-45c16356986a",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "469947b5-2018-46ee-a3f9-9c1916871ec6"
        },
        "item": {
          "id": "2dc31e55-0018-45ce-bc65-2a4ae18bfbd1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "82844426-3220-4e12-bd1c-79b68e2990c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885c3bd2-77a4-4ea4-b17a-66f491027314",
        "cursor": {
          "ref": "729fb31d-c6e8-482b-bb9a-e685f941f459",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8ff5f30b-b276-4335-b93d-e110dcaee0cb"
        },
        "item": {
          "id": "885c3bd2-77a4-4ea4-b17a-66f491027314",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d071092e-f41a-4f06-9d7b-93bf4e5aec4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72cc3b2c-d8e0-41bb-9273-50008baa5e74",
        "cursor": {
          "ref": "21e9ddec-b964-43e3-8064-206e6e73b77d",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f2e1b692-b2ea-41ae-ad80-83ff84e9a4a1"
        },
        "item": {
          "id": "72cc3b2c-d8e0-41bb-9273-50008baa5e74",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a6544d8d-5070-424c-af8d-3f3399a176d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d885d605-99c7-43a8-8ebf-736b8a84a1ee",
        "cursor": {
          "ref": "78989477-6d9f-491a-aa04-cffe6822fa34",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "bf79f878-34c2-4200-9069-2319323a7153"
        },
        "item": {
          "id": "d885d605-99c7-43a8-8ebf-736b8a84a1ee",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "afcd95ae-c34c-49f8-a74e-ac00eec3e2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56bb7b28-2a91-41f1-8b37-1de2e0f45b8a",
        "cursor": {
          "ref": "19a99603-4991-4fe1-9fb2-362c7710b394",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f7095f12-4953-4f95-99b7-364dbc2937dc"
        },
        "item": {
          "id": "56bb7b28-2a91-41f1-8b37-1de2e0f45b8a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e890da57-6e3c-4120-a362-943376624a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4abd9b-526e-4677-8353-ea72e5a81d96",
        "cursor": {
          "ref": "dfe87048-4b9d-41c3-9891-27fecf380099",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ef3cdab8-03c1-4492-b504-0b5b5546e931"
        },
        "item": {
          "id": "5c4abd9b-526e-4677-8353-ea72e5a81d96",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "40fb4370-2046-4b0b-b9ac-90d99498d79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6eaa3e-2743-4453-b67f-b003f97753c5",
        "cursor": {
          "ref": "eaa9f896-d84d-4f3b-bc18-5bbaf6c082ce",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d3abeed1-310d-4340-8c74-a30ec5a0424a"
        },
        "item": {
          "id": "cc6eaa3e-2743-4453-b67f-b003f97753c5",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "002e6e4b-121b-4bdf-ab26-8bebe0ac5b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fce91ec-fe38-4681-937e-f39f0e3a58a2",
        "cursor": {
          "ref": "369abccf-261d-4d9d-8a45-e8f9c0f0874f",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "475163eb-bf22-4a3b-a32c-adb804bd8732"
        },
        "item": {
          "id": "5fce91ec-fe38-4681-937e-f39f0e3a58a2",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e938cad1-beb1-43ef-80c5-6efc0f96d8f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a63d21-743d-4b84-88ff-673bad9dd5d8",
        "cursor": {
          "ref": "6d5bc76a-9873-4afe-8be6-0776d227fcd5",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e69b32cb-aa79-4419-9786-1718613a46c5"
        },
        "item": {
          "id": "39a63d21-743d-4b84-88ff-673bad9dd5d8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d0d4b374-4c8f-429f-9af9-790f42909a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e525b9d8-911b-4089-a0b1-f95eaed93a14",
        "cursor": {
          "ref": "3a9bb23e-6b87-4c60-9f2e-61f3aa2a117a",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5382f8a8-5e2c-49d9-b6d0-1fcc123f369c"
        },
        "item": {
          "id": "e525b9d8-911b-4089-a0b1-f95eaed93a14",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8ae169bd-0b34-4d00-b00d-784cbbbc522a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6453cfb5-0b9f-48ba-a684-9e2285e7c306",
        "cursor": {
          "ref": "00059836-ce2c-4ee9-9f8a-8695e31c1b4e",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "958a1c2b-71a4-4c0d-82ac-7d64cdba4f1d"
        },
        "item": {
          "id": "6453cfb5-0b9f-48ba-a684-9e2285e7c306",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c0d50898-a2b2-43ed-8c4a-c0a0ab5edfc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef47f35b-a906-408d-934a-5777acc53c19",
        "cursor": {
          "ref": "4db683cf-0d04-410a-849f-63ce16f076f9",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "26665a8a-0140-4f54-a82c-15c1ac016415"
        },
        "item": {
          "id": "ef47f35b-a906-408d-934a-5777acc53c19",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7c5d0a31-9d0d-45da-8fc2-b3707975aaa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471051ea-03e4-4673-b5e3-0df9c5b74722",
        "cursor": {
          "ref": "2a77b5a5-66a1-479e-8aa2-8af390278d06",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e86b6ea2-3624-4438-a73c-022dd0ec6e26"
        },
        "item": {
          "id": "471051ea-03e4-4673-b5e3-0df9c5b74722",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7a517e82-ac0e-46a1-b3e2-9fbbd6b558b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f585dbfb-f1a3-474e-b3d4-a23780991882",
        "cursor": {
          "ref": "f08b648c-c92b-4f4d-9370-e13f0c89a619",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6cb0a8d0-ff2f-42b0-b594-79e9487844ff"
        },
        "item": {
          "id": "f585dbfb-f1a3-474e-b3d4-a23780991882",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a134a24e-d963-436a-894b-636d64648e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d60c77-5914-423a-ac4d-e3ded9eb67cf",
        "cursor": {
          "ref": "01c2902d-4a97-4295-b876-c4ce7bb7dfd4",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7bf9cb67-8c7a-45eb-9ca6-8dcb05daea64"
        },
        "item": {
          "id": "e1d60c77-5914-423a-ac4d-e3ded9eb67cf",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1ea46308-47db-4c53-a3e7-298a766afd60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86f14c3-17c4-469a-8f68-18f3a0673f65",
        "cursor": {
          "ref": "5383dc53-6339-4ef4-b2f5-f11437a6d6cd",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5ecb3403-2b6a-4945-9aa4-af55c8addf61"
        },
        "item": {
          "id": "e86f14c3-17c4-469a-8f68-18f3a0673f65",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "80c59aee-4f73-4de1-aedd-7c5c5f67e25e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e621d0e-0cc6-44a5-af30-834b37a1d14a",
        "cursor": {
          "ref": "cf828bad-d6fc-4934-b0d4-36758315ff2e",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "40951a66-31bf-4201-bbcd-13226c1cb066"
        },
        "item": {
          "id": "9e621d0e-0cc6-44a5-af30-834b37a1d14a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "dd8ba106-9fa7-49c6-a6a6-651bfc448a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc688936-9645-4cfa-901e-3dbda2ba8d5e",
        "cursor": {
          "ref": "62a19214-70de-492b-acda-227333f59d5b",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "bb0d90e0-5332-469c-8445-b0805d772aa7"
        },
        "item": {
          "id": "fc688936-9645-4cfa-901e-3dbda2ba8d5e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "79094226-4ec5-427c-a76e-90034e76c0fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96af80d3-9e57-4610-b29e-70751263d63b",
        "cursor": {
          "ref": "8529759f-ef06-4d7f-99d0-2586dc058920",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "42884206-a337-4abc-b24f-51db03934eed"
        },
        "item": {
          "id": "96af80d3-9e57-4610-b29e-70751263d63b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ec9690e6-bfc6-42db-9485-bd4748f88d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871628ef-3bd7-4be2-9b50-8c8a4f212375",
        "cursor": {
          "ref": "611144a3-f862-43d6-a324-8fb8d488dbe3",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "29a868eb-cccd-4594-a2e0-9fc1fc9676dc"
        },
        "item": {
          "id": "871628ef-3bd7-4be2-9b50-8c8a4f212375",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1e2155bd-c6d0-45d4-96bf-76056cfa6b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ddab54-9192-44c3-8172-135c0da9ab3c",
        "cursor": {
          "ref": "53a9d5cb-086c-4a16-b3b3-37fea402ed96",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f76e84f4-e672-4983-872a-5f2f72129702"
        },
        "item": {
          "id": "f7ddab54-9192-44c3-8172-135c0da9ab3c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "68964fce-67da-44ce-b2ae-e100ee00932d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48a3a54-62f9-4e05-b762-8c099f645f6f",
        "cursor": {
          "ref": "32f85166-ccd2-4f84-b51f-2737bcd94d11",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "30183252-a980-4f75-a820-cd610451eefb"
        },
        "item": {
          "id": "f48a3a54-62f9-4e05-b762-8c099f645f6f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6bd0e35f-475e-49e9-84af-f94a6681847b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eef4d20-0b7f-4add-8e20-fc3b6cdd0a5f",
        "cursor": {
          "ref": "ccb02372-283c-4a15-a0a4-b2b33b5a7a5b",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "995dce11-2705-4d78-9afd-6c504375136e"
        },
        "item": {
          "id": "3eef4d20-0b7f-4add-8e20-fc3b6cdd0a5f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9f8786fb-afda-45d8-bba4-49b108924251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84c3907-4356-4aa5-9344-0e9f3954c7f0",
        "cursor": {
          "ref": "fe952df4-754b-4981-955d-078f7328b309",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4ba2fba3-54d9-4aca-8604-18aae59cd2c3"
        },
        "item": {
          "id": "a84c3907-4356-4aa5-9344-0e9f3954c7f0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8b205a8e-6691-47f3-af2a-b1b42a222650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41395c21-5f4e-41f2-934f-118e55e0f203",
        "cursor": {
          "ref": "59781a65-41e8-4c7e-96e5-1062cc4fa6cc",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "36cfcb53-9a39-4365-89b0-4a97fb5ea940"
        },
        "item": {
          "id": "41395c21-5f4e-41f2-934f-118e55e0f203",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0183a093-d036-40ee-bd14-6174e531206b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef358fa8-63be-4905-a7e7-3b2c9272149b",
        "cursor": {
          "ref": "d1ba37ba-f4c9-4516-b0d1-e02babd516cc",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9313e278-267c-4a8a-96ca-c237f8306da1"
        },
        "item": {
          "id": "ef358fa8-63be-4905-a7e7-3b2c9272149b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "6688b412-8873-4767-96ec-e12cb06c67a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca93a88c-fdd8-4226-b19e-3f64fb67c10a",
        "cursor": {
          "ref": "6eb0bfca-0394-4edb-897b-7b029f727711",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b608f626-f983-43d4-a750-2f641146bf0a"
        },
        "item": {
          "id": "ca93a88c-fdd8-4226-b19e-3f64fb67c10a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e57ccf83-9f9e-47f2-aa2c-abfed33023ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94395928-d5ad-4858-8922-5e347d254bd7",
        "cursor": {
          "ref": "8f1e2554-66d0-4e9a-9c51-2a2692e41f1b",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1868dec9-436d-407b-ac9b-826f4712005c"
        },
        "item": {
          "id": "94395928-d5ad-4858-8922-5e347d254bd7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2abb2f34-b363-48c9-9b71-44d8fde49d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952584db-5476-489e-bb68-6237102cd192",
        "cursor": {
          "ref": "c89ef3db-68fe-465f-873a-5b6386769874",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "077fb5b0-55c1-4ad9-aeeb-e57521ece3d4"
        },
        "item": {
          "id": "952584db-5476-489e-bb68-6237102cd192",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "36499109-de1e-437f-b65c-eff5bf5a80ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6fdd74d-528a-460a-b999-a55e0915737f",
        "cursor": {
          "ref": "8a66b910-b95a-4ae8-a8a9-b1508b40cf30",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5438ba1b-a7d4-4781-b44b-60cac64349c5"
        },
        "item": {
          "id": "e6fdd74d-528a-460a-b999-a55e0915737f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0d864d45-342d-4a16-ba74-b283ab3fc1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307c9f0c-1d4a-4fa4-86ed-1ebb97ecd796",
        "cursor": {
          "ref": "f195f9f6-97ca-4dd4-8e75-678fd38fdd55",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "29b6cf3a-5b00-498d-8ff9-e36b42d42f80"
        },
        "item": {
          "id": "307c9f0c-1d4a-4fa4-86ed-1ebb97ecd796",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "05bc6a50-94a8-4367-ae4a-b650e1d44095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c3b1a5-a51d-40db-b8e7-1527e585fcca",
        "cursor": {
          "ref": "f8134037-1d6a-4940-8049-032bf8c7406b",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b5b5a09f-b196-4859-be49-ed6851ecbcc0"
        },
        "item": {
          "id": "b5c3b1a5-a51d-40db-b8e7-1527e585fcca",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "815bff29-1373-4d4c-9b30-c09a5f53ba76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0a4dfe-b89d-43dd-ac90-179721358bad",
        "cursor": {
          "ref": "57961c1c-b91e-4609-9e58-67d3d7a51ab9",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "42906996-d028-4c70-9f16-7d6a8a3c9ebe"
        },
        "item": {
          "id": "7d0a4dfe-b89d-43dd-ac90-179721358bad",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3b8ad5a7-9cf4-477c-b7a1-d25e682cce4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3df5f2-f492-48d8-8cd8-b15c6d1f65bd",
        "cursor": {
          "ref": "69a0e851-c708-4430-a8f7-1d0592bc70d5",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "244498b8-845a-4f15-a6b2-e6183e82e997"
        },
        "item": {
          "id": "7a3df5f2-f492-48d8-8cd8-b15c6d1f65bd",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e3d4d035-5e43-4bf9-8257-27dc8f3ab90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999967e6-e056-49b2-8b47-c8f00ff3d886",
        "cursor": {
          "ref": "faaf4271-ac81-41c6-9fe9-de9d4ac19525",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1e26cc88-3d58-443c-903e-0fc2a2f6f2f1"
        },
        "item": {
          "id": "999967e6-e056-49b2-8b47-c8f00ff3d886",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9bcc52be-a113-4d88-8b10-f6caa91fe501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92396295-01e6-4e91-8632-7be9de4ee2ff",
        "cursor": {
          "ref": "f504da0d-db9a-4dca-9731-0494ee60ff3b",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "fdf67d67-a825-4727-8789-fbca05e7cf63"
        },
        "item": {
          "id": "92396295-01e6-4e91-8632-7be9de4ee2ff",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "6156cc0d-be63-4be8-ba77-805f72c60338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38369132-714b-4f5d-8ad2-e9b78a3bc583",
        "cursor": {
          "ref": "9a93b256-6719-482b-a556-e8583e632139",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8bcc3a6c-166b-4c2c-a163-d98e57dfe532"
        },
        "item": {
          "id": "38369132-714b-4f5d-8ad2-e9b78a3bc583",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "87c38fe9-4c1f-405b-b287-1e6ee454d9d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9b5a75-636c-447b-858d-7d0e5f8963fd",
        "cursor": {
          "ref": "cb373a4c-6a2c-4da4-9c81-35cb690ab065",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0e0fc513-dd0a-44eb-8bc8-c0fea64cc842"
        },
        "item": {
          "id": "4d9b5a75-636c-447b-858d-7d0e5f8963fd",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6e6959b5-4603-4d75-a804-beba66512f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4efcbae-6860-48ae-a56b-e03c9a64d3d3",
        "cursor": {
          "ref": "060d4bf8-c52e-46a5-b392-5d0e0cc9119d",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "75aeccb6-ee6e-4113-938a-a4d95420fcdd"
        },
        "item": {
          "id": "b4efcbae-6860-48ae-a56b-e03c9a64d3d3",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4c500f5b-b9df-4084-a6bc-748afc1185a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ab6cb9-c8b6-473b-8ce1-6eab17b5efd4",
        "cursor": {
          "ref": "273ce255-3be9-4b6e-ad80-ede16886e3e8",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "dcbb8f55-6c20-4102-b5df-b211ffe62774"
        },
        "item": {
          "id": "46ab6cb9-c8b6-473b-8ce1-6eab17b5efd4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b9d6aa55-a4f8-41ac-9e29-d8ed235c7cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd6ed9a-1622-4288-a343-a734cd8a9f9a",
        "cursor": {
          "ref": "5ffbd523-77d2-4809-84b5-e57abab357af",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5c14733f-4035-408b-bd16-ae6817544ace"
        },
        "item": {
          "id": "1cd6ed9a-1622-4288-a343-a734cd8a9f9a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "65e9ae88-9a09-47cc-8f4b-04cea54fff3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c177a2-9f28-47c0-a102-e50b2e9f8236",
        "cursor": {
          "ref": "f6b3bf60-7cac-4309-a114-d777edf7ed01",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fe39e1a6-df2a-4f32-b4da-9c168e0603bf"
        },
        "item": {
          "id": "31c177a2-9f28-47c0-a102-e50b2e9f8236",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4898842b-a8ef-4647-9ee6-d82ecf5b2b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb50c21-5d03-4df9-b4ec-7904d2eb1e3e",
        "cursor": {
          "ref": "c8193570-5329-4e83-8f28-a28ea15cff9f",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "0796ea4b-0822-469e-b010-ee9c030b13a8"
        },
        "item": {
          "id": "8cb50c21-5d03-4df9-b4ec-7904d2eb1e3e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a42f75ee-1dd5-49bd-a9ea-fca5622c05f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0cd2a1-87da-4770-b57a-2605b1c17237",
        "cursor": {
          "ref": "a01aa775-128f-40ab-9aad-3088819d4591",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "51aa3b86-5cc8-41f5-a7f6-122170d23b6e"
        },
        "item": {
          "id": "8a0cd2a1-87da-4770-b57a-2605b1c17237",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "92c6c92c-1097-43f1-bdd3-ae1757ebb80c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8502d9cc-cf9e-4438-a9f3-c0c10ca73479",
        "cursor": {
          "ref": "f719e3a7-0744-4b79-9955-e31cc81a81ee",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "7d59465d-4891-4b25-8023-3bc49ee40275"
        },
        "item": {
          "id": "8502d9cc-cf9e-4438-a9f3-c0c10ca73479",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4ac2b63f-a2ba-49fd-a4df-7601b6eb4162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b6b445-9fdd-4590-beb7-2c219a085727",
        "cursor": {
          "ref": "2663d130-13ae-4592-919d-7c160a180fda",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "307ded7b-b983-421b-a1c1-e3925c226dac"
        },
        "item": {
          "id": "33b6b445-9fdd-4590-beb7-2c219a085727",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0e63dbdf-be4a-4d2d-8f30-a6f13a2ae1a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b502ee-6ab2-4fad-9a0d-488c5953c176",
        "cursor": {
          "ref": "adfeae69-49ab-43dd-93a9-a21d50fd4fbc",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "ae03a96f-2308-4b58-9b5b-75a5535cee64"
        },
        "item": {
          "id": "36b502ee-6ab2-4fad-9a0d-488c5953c176",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "dc837d74-0360-489e-8c8f-59957f8a98b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a375924f-a8dd-493d-924c-5c938050a224",
        "cursor": {
          "ref": "ee95f28e-8b67-4fc8-9558-44727a44ef0a",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "2718cc15-4449-4856-a98f-4550a4216d01"
        },
        "item": {
          "id": "a375924f-a8dd-493d-924c-5c938050a224",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "848656ac-aa4b-4a98-a8d1-fcf640981280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7205ac10-1e92-4ed5-a70c-7b3a60b61116",
        "cursor": {
          "ref": "8f51ebf9-f696-44f4-8f6b-51875f4ad95b",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "4bb9635e-b914-4928-b1f2-0f6d75a756d5"
        },
        "item": {
          "id": "7205ac10-1e92-4ed5-a70c-7b3a60b61116",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f5dd9ab5-830c-4654-9e4d-374ce639cead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16dbf115-c813-4013-9b4e-84dae37b787a",
        "cursor": {
          "ref": "e74a31a1-d99f-445d-b885-3c51d583bdd8",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "765a1929-7c43-47d1-afff-09540d3b5bbb"
        },
        "item": {
          "id": "16dbf115-c813-4013-9b4e-84dae37b787a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e0f39117-0b78-49e3-9cf0-8a23f747c716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2dd611e-98dd-4b19-b0a5-b8542377bae0",
        "cursor": {
          "ref": "b4ba59af-97da-447d-af21-6dce0210063c",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "f4c488e4-6f20-4e45-beb5-b903a31f19ff"
        },
        "item": {
          "id": "b2dd611e-98dd-4b19-b0a5-b8542377bae0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a1298e10-6d49-4d5e-8d74-09289c94af60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79eecbb1-f7b1-449d-a1a1-a90d74fc9176",
        "cursor": {
          "ref": "eeed8917-6dfe-4456-8699-94d240109b1a",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "a5dd3da4-2ce2-4387-b899-617dbfb62694"
        },
        "item": {
          "id": "79eecbb1-f7b1-449d-a1a1-a90d74fc9176",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "27a33f27-4b86-4f78-a2b1-984b6d391109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a535e736-114b-4387-9c76-02b4848d9e26",
        "cursor": {
          "ref": "9a484135-a0ae-4532-9117-902a6105317a",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "ee2f89e7-2582-408c-b2c1-a682c80d1a0a"
        },
        "item": {
          "id": "a535e736-114b-4387-9c76-02b4848d9e26",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "598aafba-6a58-4644-9c92-e51ba7f227b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6b15cc-6c78-46e7-a421-285e26c5b66e",
        "cursor": {
          "ref": "f1ee45e8-16f4-4286-8582-03c4326b4262",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "b3e9f6c2-a3f3-42f3-a114-0b5982f47514"
        },
        "item": {
          "id": "1e6b15cc-6c78-46e7-a421-285e26c5b66e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "04f8a856-2877-4872-bcfa-0f30d3fe9840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11074423-9567-45eb-927c-dc7a7e8ac141",
        "cursor": {
          "ref": "fa958067-84b1-463e-a7f8-179027f863a0",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "4ebc9984-dad6-4f11-b5b8-fb3739d95da4"
        },
        "item": {
          "id": "11074423-9567-45eb-927c-dc7a7e8ac141",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f1cfd1e3-98f2-4bef-986b-7a95432d0b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7cbf7e6-2734-47cd-b77c-d4c51db72917",
        "cursor": {
          "ref": "94ebe616-5bf7-42cd-8d2d-01d809d9958d",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "775b659b-0105-4693-ad2e-91dd5e9a8e49"
        },
        "item": {
          "id": "c7cbf7e6-2734-47cd-b77c-d4c51db72917",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9fa14968-72d9-4160-afbd-2a7e3639a1ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67779fe2-feac-4ad7-a548-d6ebd893b86f",
        "cursor": {
          "ref": "ac637893-ceae-45a2-bb72-72c285a69c04",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "6563df2a-b386-4ec3-870f-0cf76ff77a93"
        },
        "item": {
          "id": "67779fe2-feac-4ad7-a548-d6ebd893b86f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b64eeec3-52ee-4ac1-9c63-66a3dc04e505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec054b2-d833-4349-9d0d-f3ef6abab3b1",
        "cursor": {
          "ref": "d18eda2f-72a0-47ff-92c1-95fe9c52f518",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "4172365d-c1c4-43de-862f-06f3630869bb"
        },
        "item": {
          "id": "1ec054b2-d833-4349-9d0d-f3ef6abab3b1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6ddd5d00-450b-471a-94e1-819b34358c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8f89aa-0e1f-46be-98db-537065f707b1",
        "cursor": {
          "ref": "aabfffae-6409-40f1-9970-21b628c2754c",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "34e87b2a-7d3a-4fa9-923d-cbc07fbb1ec1"
        },
        "item": {
          "id": "6b8f89aa-0e1f-46be-98db-537065f707b1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "eea7ae42-c0b6-4bf5-8fbb-d9576e28ee15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf02954-d80e-4437-9cba-81faaedb82f0",
        "cursor": {
          "ref": "8ae9307a-5cfa-486b-af39-91eca163c0b4",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "862c89d3-9337-4631-8a9c-39bc11321866"
        },
        "item": {
          "id": "dbf02954-d80e-4437-9cba-81faaedb82f0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "934a2924-11ca-4a89-9904-2286cd10b324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af8ea50-f1e0-420a-a3b3-318459686c5d",
        "cursor": {
          "ref": "99da79c1-40b9-4ce1-819a-de2ec4a8d8c2",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "6fc8a4b2-cd8b-4fce-97ba-414e33284c80"
        },
        "item": {
          "id": "6af8ea50-f1e0-420a-a3b3-318459686c5d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "37c7b380-3ae2-4999-b8f7-182f9cbef172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c92491-5de2-4a56-bc7a-83807407f54c",
        "cursor": {
          "ref": "0f00eed5-1185-44d2-8b23-d33ced36cb1f",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "5722cb22-a780-47eb-bd36-0e77c5555974"
        },
        "item": {
          "id": "69c92491-5de2-4a56-bc7a-83807407f54c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4c156fc5-c009-48d3-bca9-1fe257218110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594f5c5c-ecac-4714-8a86-be6d061e601c",
        "cursor": {
          "ref": "25a5f4f3-58a5-4de0-a95a-0bb450556b07",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "732c5ca9-91c1-4cce-a87b-9f5b15207f93"
        },
        "item": {
          "id": "594f5c5c-ecac-4714-8a86-be6d061e601c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "147890a9-8c1b-4a5a-a527-be4353f7685f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709c68ab-1a58-46b7-b1c2-7cad0d6c7263",
        "cursor": {
          "ref": "8b268646-1e66-4c8e-acfa-52e9fec317f3",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "4a08deb7-ee5b-46ad-a88f-a4d6ebb88d47"
        },
        "item": {
          "id": "709c68ab-1a58-46b7-b1c2-7cad0d6c7263",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "929a6813-71be-4aa4-ba67-2ae183c0f106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c69573-e726-4e79-a17e-a938cfeb6751",
        "cursor": {
          "ref": "a169c3fb-d5e6-4b0b-ad7c-b697fefe1cbe",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "dfaeb22c-ec56-49b2-8ef8-cd69dc8882cb"
        },
        "item": {
          "id": "03c69573-e726-4e79-a17e-a938cfeb6751",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9c3c18d5-985a-4feb-bb9e-88d6be6b5e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9272eeca-2ea6-4a49-8345-fad08dfdabb3",
        "cursor": {
          "ref": "2a7e01ed-ef40-474b-8faa-7a7296a43fd9",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "eddd83da-82be-441f-9c6e-2d72e8918579"
        },
        "item": {
          "id": "9272eeca-2ea6-4a49-8345-fad08dfdabb3",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4646959a-092f-48e7-8751-e46026bb1ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e4ef65-e501-475b-bb88-bf57db763f6e",
        "cursor": {
          "ref": "b7a09415-54da-42f7-b44d-e57ca8ad9090",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "9ef89a2c-e0bf-443c-a074-3a9b83ca9d09"
        },
        "item": {
          "id": "a8e4ef65-e501-475b-bb88-bf57db763f6e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ea7d457e-f8d1-45f6-8886-dea95b9eb116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b24c92-fc50-4693-a190-b0a27febc8d2",
        "cursor": {
          "ref": "2892704d-b5f6-42a1-a7cd-adfff637ab71",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "eaab0009-f3bb-4a50-9304-0b3453ad7cb6"
        },
        "item": {
          "id": "49b24c92-fc50-4693-a190-b0a27febc8d2",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a165bbae-7a87-4ec4-ab67-41f90d15f500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc9fb9f-433d-4cdb-9355-4591ef090c8f",
        "cursor": {
          "ref": "434bc4a7-ddd5-4f31-b355-61478993329a",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "c49dbb8c-9741-4262-b501-464092a976e6"
        },
        "item": {
          "id": "0dc9fb9f-433d-4cdb-9355-4591ef090c8f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "93638bfc-6bc6-40cd-993a-72fa521fe213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9f106a-170c-4516-9a12-33626acf1550",
        "cursor": {
          "ref": "46a82bf3-b0ca-43fa-bd07-c786783b1f56",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "5766a8cb-f55d-44e7-bb8d-ad4e3adcc648"
        },
        "item": {
          "id": "4c9f106a-170c-4516-9a12-33626acf1550",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1d2a7ac3-696c-450e-b583-a355dce67abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99cfbf57-4be3-41e3-a3ca-4b9f798aa419",
        "cursor": {
          "ref": "05e200e6-7b88-4863-b97c-b6ae1a7eb738",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "fbaa7dd6-9904-4141-a1b6-b712f209ef7c"
        },
        "item": {
          "id": "99cfbf57-4be3-41e3-a3ca-4b9f798aa419",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b431927e-504b-4b82-8d7c-719c0ec3a696",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20697ae-6905-4fc7-a630-2175c35721db",
        "cursor": {
          "ref": "12a665d5-8125-4bc8-98c6-3c515e45b1f7",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "f5db3e7f-f749-4263-8578-3c5fcda6d871"
        },
        "item": {
          "id": "a20697ae-6905-4fc7-a630-2175c35721db",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2c95f690-cf1c-48ac-bc30-58a2e436a23a",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2579d72a-c947-408b-a2a6-903c986710de",
        "cursor": {
          "ref": "6862c963-48fb-4477-a987-e9601edee7b1",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "2614eda9-4ca0-4e24-9389-64cd71540988"
        },
        "item": {
          "id": "2579d72a-c947-408b-a2a6-903c986710de",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e05fe04d-e857-4234-93c8-5665d7e8dae6",
          "status": "OK",
          "code": 200,
          "responseTime": 2410,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf32cac-b4d2-495e-8767-59243e502f0c",
        "cursor": {
          "ref": "861494af-973e-4bbb-8b71-ed6f21c5bf8c",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "858033e5-4ca6-40f7-be1d-e1b82f182b23"
        },
        "item": {
          "id": "2cf32cac-b4d2-495e-8767-59243e502f0c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e5d0de82-f86d-46d1-96c2-e216d2d0a083",
          "status": "OK",
          "code": 200,
          "responseTime": 2458,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4f69e6-072a-4ee0-9e6b-e22ad0b11c6c",
        "cursor": {
          "ref": "2b8338ad-d050-4eb9-8f87-f6581249d0cb",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2cd66f15-8370-4dc2-8cf8-ab50abe87e3e"
        },
        "item": {
          "id": "8b4f69e6-072a-4ee0-9e6b-e22ad0b11c6c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "280d7f30-5a97-441d-878b-0a8ccdb57ca8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4f69e6-072a-4ee0-9e6b-e22ad0b11c6c",
        "cursor": {
          "ref": "2b8338ad-d050-4eb9-8f87-f6581249d0cb",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2cd66f15-8370-4dc2-8cf8-ab50abe87e3e"
        },
        "item": {
          "id": "8b4f69e6-072a-4ee0-9e6b-e22ad0b11c6c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "280d7f30-5a97-441d-878b-0a8ccdb57ca8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516d531a-1e5b-415d-ab92-776dfb88b1a1",
        "cursor": {
          "ref": "977ee2a8-2884-47b3-a04f-9ddd9b09fbec",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "dd0e95f2-010a-43a8-a407-b22d2039f117"
        },
        "item": {
          "id": "516d531a-1e5b-415d-ab92-776dfb88b1a1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f65044a3-84e4-4222-a644-2c064529a316",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5335bb4-635d-4484-aaf3-f03e32d52d58",
        "cursor": {
          "ref": "bafce2a3-dd70-4a8f-bec4-addace8df49c",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "17477fa6-de72-47c9-ba32-7c119f2e13d8"
        },
        "item": {
          "id": "c5335bb4-635d-4484-aaf3-f03e32d52d58",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "dd2a0e80-ec12-42c4-96fb-949eb8e0fac3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}